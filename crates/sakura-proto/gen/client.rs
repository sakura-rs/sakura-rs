// This file is @generated by prost-build.
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jnopbdmemon {
    #[prost(uint32, tag = "5")]
    pub avatar_id: u32,
    #[prost(uint32, repeated, tag = "9")]
    pub ilkgefdhpfi: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "13")]
    pub eneldmchonk: ::prost::alloc::vec::Vec<Jmhipejjpkg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29878)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cnkcloeoedk {
    #[prost(uint64, repeated, tag = "9")]
    pub jbpmefjklcn: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint32, tag = "2")]
    pub dlaancahjko: u32,
    #[prost(uint32, tag = "5")]
    pub config_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cpajafhanak {
    #[prost(uint32, tag = "2")]
    pub fjamcdjdjoa: u32,
    #[prost(uint32, tag = "6")]
    pub hikkhmhikgd: u32,
    #[prost(uint32, tag = "9")]
    pub ffhpdcibkod: u32,
    #[prost(uint32, tag = "11")]
    pub jlgckbfjkgi: u32,
    #[prost(uint32, tag = "13")]
    pub ldnkcljncbf: u32,
    #[prost(enumeration = "Lfjlgojmkeh", tag = "14")]
    pub imiogmdokcb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4843)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nokondkpcdg {
    #[prost(uint32, tag = "10")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20762)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Epamehnembe {
    #[prost(uint32, repeated, tag = "5")]
    pub boipgiofmlg: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Amjcdjnjkoi {
    #[prost(uint32, tag = "1")]
    pub eaipgemknpo: u32,
    #[prost(bool, tag = "3")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(219)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hnkkgplenbf {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4343)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mjljdnekeab {
    #[prost(message, repeated, tag = "7")]
    pub kbgdfdeemji: ::prost::alloc::vec::Vec<Jpmfmbpmdfn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25707)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Diofhogbdak {
    #[prost(uint32, tag = "1")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7183)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cjikoiigobo {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dgbkpbinnje {
    #[prost(bool, tag = "1")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "6")]
    pub eaipgemknpo: u32,
    #[prost(message, repeated, tag = "7")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Eoabcgeojhi>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23561)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dldignomfmo {
    #[prost(uint32, tag = "2")]
    pub duration: u32,
    #[prost(uint32, repeated, tag = "12")]
    pub kjandmiadcl: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "14")]
    pub gbpipbcjchj: u32,
    #[prost(uint32, repeated, tag = "15")]
    pub param_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(531)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ompbpjhibjm {
    #[prost(bool, tag = "15")]
    pub ednnnddpaij: bool,
    #[prost(uint64, tag = "7")]
    pub mcppeknbhfk: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25760)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aklbggdkfpg {
    #[prost(uint32, tag = "4")]
    pub jnfdnflbejo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AbilityAppliedAbility {
    #[prost(message, optional, tag = "1")]
    pub ability_name: ::core::option::Option<AbilityString>,
    #[prost(message, optional, tag = "2")]
    pub ability_override: ::core::option::Option<AbilityString>,
    #[prost(message, repeated, tag = "3")]
    pub override_map: ::prost::alloc::vec::Vec<AbilityScalarValueEntry>,
    #[prost(uint32, tag = "4")]
    pub instanced_ability_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pdmembbflgb {
    #[prost(bool, tag = "1")]
    pub is_finish: bool,
    #[prost(uint32, tag = "2")]
    pub level_id: u32,
    #[prost(bool, tag = "3")]
    pub glkngddnocn: bool,
    #[prost(message, repeated, tag = "5")]
    pub hkecpnikbif: ::prost::alloc::vec::Vec<Djfnbcgcgcp>,
    #[prost(uint32, tag = "7")]
    pub mkcgmmganlk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24187)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hdlgchkfnio {
    #[prost(uint32, tag = "2")]
    pub poecpaaaloe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2875)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct WearEquipRsp {
    #[prost(uint64, tag = "1")]
    pub avatar_guid: u64,
    #[prost(uint64, tag = "8")]
    pub equip_guid: u64,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28696)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kbomeldkjgk {
    #[prost(uint32, repeated, tag = "10")]
    pub avatar_id: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4915)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fjnnpemjkpk {
    #[prost(bool, tag = "1")]
    pub iemkaeegimb: bool,
    #[prost(uint32, tag = "2")]
    pub dodiblnpneh: u32,
    #[prost(bool, tag = "3")]
    pub odcgiedjaoj: bool,
    #[prost(bool, tag = "4")]
    pub noaeeiibcgn: bool,
    #[prost(message, repeated, tag = "6")]
    pub heminfgmgip: ::prost::alloc::vec::Vec<Hgnidagejpm>,
    #[prost(uint32, tag = "7")]
    pub ppbikoaeohd: u32,
    #[prost(bool, tag = "8")]
    pub hmlcbldfije: bool,
    #[prost(uint32, tag = "9")]
    pub fjpdhpeabnl: u32,
    #[prost(bool, tag = "10")]
    pub fkiiekkokff: bool,
    #[prost(uint32, tag = "11")]
    pub jmehmgcpfbo: u32,
    #[prost(uint32, tag = "12")]
    pub pabjjaeknfd: u32,
    #[prost(uint32, tag = "13")]
    pub fbfdaklpefb: u32,
    #[prost(bool, tag = "14")]
    pub mccgabfjpbp: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26609)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MarkMapRsp {
    #[prost(message, repeated, tag = "5")]
    pub mark_list: ::prost::alloc::vec::Vec<MapMarkPoint>,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26931)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gnemonnkhef {
    #[prost(uint32, tag = "3")]
    pub kngjhmllcnp: u32,
    #[prost(bool, tag = "5")]
    pub omeniamedce: bool,
    #[prost(bool, tag = "9")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "15")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6927)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ghkkndlnene {
    #[prost(message, optional, tag = "6")]
    pub lmpchdebeal: ::core::option::Option<Mpmgngljgjp>,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5605)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ahiffkgiehj {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cbiagekfjbb {
    #[prost(message, repeated, tag = "12")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Cepgfgmpkmk>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ibcbpjieaaf {
    #[prost(bool, tag = "6")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "9")]
    pub kngjhmllcnp: u32,
    #[prost(uint32, tag = "14")]
    pub bodiejclgmb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26030)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mkkaoaceekc {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(message, optional, tag = "7")]
    pub hohokjcaokb: ::core::option::Option<Clekknmlmcd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4456)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lpifpjgjgco {
    #[prost(message, optional, tag = "5")]
    pub caepgnafcck: ::core::option::Option<Ldcechmbpfh>,
    #[prost(uint64, tag = "3")]
    pub guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9439)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jnmfpgofloi {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3032)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aemfmofkggj {
    #[prost(uint64, tag = "4")]
    pub guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23803)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pmgblphijnc {
    #[prost(message, optional, tag = "8")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(enumeration = "StoreType", tag = "9")]
    pub store_type: i32,
    #[prost(uint32, tag = "11")]
    pub count: u32,
    #[prost(uint64, tag = "14")]
    pub guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Onhifehkkbc {
    #[prost(message, optional, tag = "9")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "12")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "14")]
    pub room_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7671)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Beachegggel {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(uint32, tag = "8")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SceneEntityAiInfo {
    #[prost(map = "uint32, uint32", tag = "3")]
    pub skill_cd_map: ::std::collections::HashMap<u32, u32>,
    #[prost(message, optional, tag = "4")]
    pub servant_info: ::core::option::Option<ServantInfo>,
    #[prost(map = "uint32, uint32", tag = "5")]
    pub ai_threat_map: ::std::collections::HashMap<u32, u32>,
    #[prost(map = "uint32, uint32", tag = "6")]
    pub skill_group_cd_map: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "7")]
    pub cur_tactic: u32,
    #[prost(bool, tag = "8")]
    pub is_entered_combat: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28990)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iclddlhomdj {
    #[prost(enumeration = "Bjikpodamda", tag = "14")]
    pub cabgiffbcnc: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3697)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iojdckbmihh {
    #[prost(uint32, tag = "12")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lbmjmdnoobo {
    #[prost(uint32, tag = "1")]
    pub eaipgemknpo: u32,
    #[prost(bool, tag = "4")]
    pub dobllloglck: bool,
    #[prost(bool, tag = "8")]
    pub mhhjgnfjoke: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jgcgfhpeijm {
    #[prost(uint32, tag = "15")]
    pub target_entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kipkgcacpbk {
    #[prost(bool, tag = "6")]
    pub gdfoebgclhc: bool,
    #[prost(uint64, tag = "12")]
    pub avatar_id: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2490)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hkocmpceoaj {
    #[prost(message, optional, tag = "7")]
    pub ndfemakibbn: ::core::option::Option<Bngcifikllo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4651)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Injilcjecok {
    #[prost(uint32, tag = "14")]
    pub city_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22583)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Deeholdfdha {
    #[prost(bool, tag = "6")]
    pub cdcdppmmcjl: bool,
    #[prost(uint32, tag = "12")]
    pub score: u32,
    #[prost(uint32, tag = "13")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7130)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Efkngbjkcgd {
    #[prost(uint32, tag = "3")]
    pub level_id: u32,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25565)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct EnterSceneDoneRsp {
    #[prost(int32, tag = "11")]
    pub retcode: i32,
    #[prost(uint32, tag = "15")]
    pub enter_scene_token: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Djmoiaaeiem {
    #[prost(uint32, repeated, tag = "6")]
    pub fjgfpgaacaa: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "7")]
    pub lddeidalmbo: bool,
    #[prost(uint32, tag = "9")]
    pub pamjcgbnofe: u32,
    #[prost(uint32, repeated, tag = "11")]
    pub mnchcggmlpa: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "12")]
    pub player_uid: u32,
    #[prost(uint32, repeated, tag = "13")]
    pub pdjklfbofaa: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5972)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gjglngifakj {
    #[prost(uint32, repeated, tag = "7")]
    pub bmnfjbhklhj: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "9")]
    pub index: u32,
    #[prost(uint32, tag = "11")]
    pub gdcoffhmcfj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5010)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Appmgolilfd {
    #[prost(enumeration = "Klmhegdblpj", tag = "6")]
    pub lplcopemgof: i32,
    #[prost(uint32, tag = "1")]
    pub ipobngihicn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jhkpmjjllof {
    #[prost(uint32, tag = "2")]
    pub oajoobghagm: u32,
    #[prost(uint32, tag = "5")]
    pub jcmchgnnlmj: u32,
    #[prost(bool, tag = "13")]
    pub mjadamhjpcm: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22184)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cpoghgipbjc {
    #[prost(uint64, repeated, tag = "4")]
    pub avatar_team_guid_list: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint64, tag = "14")]
    pub cur_avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3569)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Clkghdfpjno {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(message, optional, tag = "7")]
    pub kgopoiphlam: ::core::option::Option<Oncdplgelhg>,
    #[prost(uint32, tag = "9")]
    pub city_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8617)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Amjhflcckbm {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub jobhfghalgd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Deeeiegakad {
    #[prost(uint32, tag = "1")]
    pub lchbeahgheo: u32,
    #[prost(uint32, repeated, tag = "2")]
    pub mnchcggmlpa: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "5")]
    pub gckfokidohk: u32,
    #[prost(uint32, tag = "7")]
    pub bikoakjlpbe: u32,
    #[prost(uint32, tag = "9")]
    pub start_time: u32,
    #[prost(enumeration = "Chdgojipkbe", tag = "10")]
    pub state: i32,
    #[prost(uint32, tag = "11")]
    pub idolojjnlob: u32,
    #[prost(float, tag = "12")]
    pub bgmhdglceig: f32,
    #[prost(uint32, tag = "14")]
    pub dbamdfejmfg: u32,
    #[prost(uint32, tag = "15")]
    pub bkpgncldgck: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23326)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SyncScenePlayTeamEntityNotify {
    #[prost(message, repeated, tag = "6")]
    pub entity_info_list: ::prost::alloc::vec::Vec<PlayTeamEntityInfo>,
    #[prost(uint32, tag = "9")]
    pub scene_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21707)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Agmndckocjl {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22363)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Offlmfildmc {
    #[prost(uint32, tag = "6")]
    pub najdgkjkpdp: u32,
    #[prost(enumeration = "Hdmdabcdahk", tag = "10")]
    pub imiogmdokcb: i32,
    #[prost(enumeration = "Ckleegmpdgn", tag = "13")]
    pub agmhmdhefkd: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(379)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hmiggnhlfib {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22557)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bofjnnmlpip {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "15")]
    pub gndolombflg: ::prost::alloc::vec::Vec<Hnjaocfekno>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hnjaocfekno {
    #[prost(uint32, tag = "1")]
    pub jnhdkjdbicl: u32,
    #[prost(uint32, tag = "3")]
    pub lchhfcembal: u32,
    #[prost(uint32, tag = "5")]
    pub cngmmoimfao: u32,
    #[prost(fixed32, tag = "7")]
    pub hgbbglkplfi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29017)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ngfnoabgaed {
    #[prost(uint32, tag = "11")]
    pub opcgoapbjha: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Egekcoijoln {
    #[prost(bool, tag = "1")]
    pub hecclopgdmp: bool,
    #[prost(bool, tag = "3")]
    pub ealafdpgnpn: bool,
    #[prost(uint32, tag = "4")]
    pub fkcmfhkpgha: u32,
    #[prost(bool, tag = "6")]
    pub lnfkcefiabm: bool,
    #[prost(uint32, tag = "7")]
    pub nhlalbgdkam: u32,
    #[prost(bool, tag = "8")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "9")]
    pub pddbkmcnoge: u32,
    #[prost(message, optional, tag = "10")]
    pub bkelpgjljci: ::core::option::Option<Jhncnpcidbe>,
    #[prost(uint32, tag = "11")]
    pub pflhclgnkof: u32,
    #[prost(uint32, tag = "12")]
    pub nkgdgkcidjj: u32,
    #[prost(message, repeated, tag = "13")]
    pub pkhpcjogdbb: ::prost::alloc::vec::Vec<Ddiakffcpdh>,
    #[prost(bool, tag = "14")]
    pub gfjokboegnb: bool,
    #[prost(uint32, tag = "15")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "1336")]
    pub khihkmmncmo: u32,
    #[prost(uint32, tag = "1472")]
    pub kanclmecaig: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pkkladnalib {
    #[prost(uint32, repeated, tag = "4")]
    pub accdkgeoicn: ::prost::alloc::vec::Vec<u32>,
    #[prost(enumeration = "Kbaiomioccp", tag = "7")]
    pub jfcofclpeoe: i32,
    #[prost(uint32, repeated, tag = "8")]
    pub cdgikfolbgh: ::prost::alloc::vec::Vec<u32>,
    #[prost(enumeration = "Kbaiomioccp", tag = "9")]
    pub lkpboeinogn: i32,
    #[prost(enumeration = "Cmgooomlaia", tag = "11")]
    pub imiogmdokcb: i32,
    #[prost(uint32, tag = "15")]
    pub ooipgfedjmn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Njcgaclkogo {
    #[prost(uint32, tag = "4")]
    pub pemggkiikih: u32,
    #[prost(uint32, tag = "5")]
    pub meegobegckf: u32,
    #[prost(float, tag = "14")]
    pub lfplhjaodod: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2574)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gfnnbabomdh {
    #[prost(uint32, tag = "1")]
    pub lbcdfbdmcjn: u32,
    #[prost(bool, tag = "4")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "7")]
    pub phgedmbnpmp: u32,
    #[prost(uint32, repeated, tag = "8")]
    pub lpfcmmjcibp: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "11")]
    pub jhbcbieobep: ::prost::alloc::vec::Vec<Jickppdlohc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hjpeiaodcbk {
    #[prost(message, optional, tag = "1")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
    #[prost(uint32, repeated, tag = "3")]
    pub oaopaoomipb: ::prost::alloc::vec::Vec<u32>,
    #[prost(map = "uint32, uint32", tag = "4")]
    pub gjabnfpkmeb: ::std::collections::HashMap<u32, u32>,
    #[prost(string, tag = "5")]
    pub ijlhlcllene: ::prost::alloc::string::String,
    #[prost(uint32, tag = "7")]
    pub uid: u32,
    #[prost(uint32, tag = "9")]
    pub ooipgfedjmn: u32,
    #[prost(string, tag = "12")]
    pub mhpfnlkcfom: ::prost::alloc::string::String,
    #[prost(string, tag = "13")]
    pub efajihmnobk: ::prost::alloc::string::String,
    #[prost(string, tag = "14")]
    pub nick_name: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mifdfaihdda {
    #[prost(uint32, tag = "5")]
    pub ogjoojgjenj: u32,
    #[prost(uint32, tag = "13")]
    pub epfcidiklkg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bmkcgeinekp {
    #[prost(message, repeated, tag = "2")]
    pub pndpnmbdokf: ::prost::alloc::vec::Vec<Nkhbdlcjpgm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24794)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gfhcpkkjbbm {
    #[prost(uint32, tag = "1")]
    pub cnaifgicldh: u32,
    #[prost(uint32, tag = "2")]
    pub bpappfhmkmk: u32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25054)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Caclpgfcpkh {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6099)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ajfimmmklfl {
    #[prost(bool, tag = "2")]
    pub ldcnpdkabal: bool,
    #[prost(message, optional, tag = "10")]
    pub jeaofagmkof: ::core::option::Option<Lccnnipfkne>,
    #[prost(bool, tag = "15")]
    pub is_reconnect: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dgolkhnihbm {
    #[prost(map = "uint32, uint32", tag = "3")]
    pub lhnaahbgehe: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "4")]
    pub end_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8396)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bmfeolfapji {
    #[prost(uint32, tag = "1")]
    pub target_uid: u32,
    #[prost(enumeration = "Phfcnlmknfn", tag = "10")]
    pub kfkehgpmbpb: i32,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7724)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gegcjhanjcf {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25051)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mdemlcgmkie {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hljfhhikken {
    #[prost(enumeration = "Nmbnhiogajk", tag = "2")]
    pub lpnkammefcb: i32,
    #[prost(uint64, repeated, tag = "3")]
    pub avatar_guid_list: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint32, tag = "4")]
    pub fcpecpmogoj: u32,
    #[prost(bool, tag = "5")]
    pub iobnfndneal: bool,
    #[prost(uint64, repeated, tag = "8")]
    pub idbadjonfoj: ::prost::alloc::vec::Vec<u64>,
    #[prost(message, repeated, tag = "9")]
    pub nefmgjidaak: ::prost::alloc::vec::Vec<Bgdcpbegank>,
    #[prost(bool, tag = "11")]
    pub abhdemelcdn: bool,
    #[prost(message, optional, tag = "13")]
    pub ldiajbokphb: ::core::option::Option<Nnlfbhcelog>,
    #[prost(uint32, tag = "14")]
    pub monejdbpolb: u32,
    #[prost(uint32, repeated, tag = "15")]
    pub ionmdbjfhcn: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29642)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lgknclhnjke {
    #[prost(uint32, tag = "12")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5840)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ddnigacminn {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7148)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eachmidifnn {
    #[prost(uint32, tag = "3")]
    pub index: u32,
    #[prost(bool, tag = "8")]
    pub ppeeolnaobo: bool,
    #[prost(uint32, tag = "14")]
    pub miolbjepfgp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29603)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hmpkkjaobgn {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(uint64, tag = "8")]
    pub ihgjlfcgfin: u64,
    #[prost(enumeration = "Kpfoblalblc", tag = "15")]
    pub daakpcoabep: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7264)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ipngdlgoejh {
    #[prost(message, repeated, tag = "2")]
    pub pndpnmbdokf: ::prost::alloc::vec::Vec<Jnagmcbepjh>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Chfjcfemkki {
    #[prost(message, repeated, tag = "1")]
    pub ieicckjighh: ::prost::alloc::vec::Vec<Gokkddgjomb>,
    #[prost(uint32, tag = "11")]
    pub icjcdipkani: u32,
    #[prost(uint32, tag = "13")]
    pub cpddbbokdca: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6429)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Figfhkogknh {
    #[prost(message, optional, tag = "2")]
    pub gbkiklmaooa: ::core::option::Option<Okfhjlfojep>,
    #[prost(enumeration = "Elenllnehne", tag = "7")]
    pub amgmmkeddmk: i32,
    #[prost(uint32, tag = "3")]
    pub hmdbggkhhjl: u32,
    #[prost(uint32, tag = "13")]
    pub bljgcongpkk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Einaplinofb {
    #[prost(bool, tag = "1")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "5")]
    pub route_id: u32,
    #[prost(bool, tag = "13")]
    pub is_finish: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29344)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ofeppniopmk {
    #[prost(uint32, repeated, tag = "3")]
    pub jpanbkncffl: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "11")]
    pub mdpjbhkkiba: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kgekkbabkdd {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23370)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pefngcdnfpa {
    #[prost(bool, tag = "1")]
    pub kodnaagljdl: bool,
    #[prost(uint32, tag = "3")]
    pub kngjhmllcnp: u32,
    #[prost(uint32, tag = "4")]
    pub score: u32,
    #[prost(uint32, tag = "6")]
    pub level_id: u32,
    #[prost(bool, tag = "7")]
    pub pdjbgnkfdpe: bool,
    #[prost(bool, tag = "13")]
    pub omeniamedce: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Njfhdjnkjkk {
    #[prost(message, repeated, tag = "8")]
    pub uid_info_list: ::prost::alloc::vec::Vec<BreakoutSyncConnectUidInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dibnpkdbjif {
    #[prost(uint32, tag = "4")]
    pub nefcdaaileo: u32,
    #[prost(uint32, tag = "6")]
    pub bjeiphdhnho: u32,
    #[prost(uint32, tag = "7")]
    pub gemagmefccg: u32,
    #[prost(message, optional, tag = "14")]
    pub mfaioelamec: ::core::option::Option<Ncdnmmmmkaf>,
    #[prost(message, optional, tag = "15")]
    pub haefdcknfoi: ::core::option::Option<Nebcilhoahf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gcncgdnfabi {
    #[prost(uint32, tag = "13")]
    pub pcmildfjbnp: u32,
    #[prost(uint32, tag = "14")]
    pub lhhgpmoklkg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jbcfnmiamoe {
    #[prost(uint32, tag = "1")]
    pub dombdimffii: u32,
    #[prost(map = "uint32, message", tag = "2")]
    pub jenacepcgof: ::std::collections::HashMap<u32, Fkheidfjkdo>,
    #[prost(bool, tag = "3")]
    pub haeaoofajng: bool,
    #[prost(uint32, repeated, tag = "6")]
    pub lpgmaehcbob: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "9")]
    pub ikdajelleai: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fcheommkjeb {
    #[prost(bool, tag = "2")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "6")]
    pub lchbeahgheo: u32,
    #[prost(uint32, tag = "7")]
    pub gfdlfnmfala: u32,
    #[prost(bool, tag = "8")]
    pub jkjibnjgail: bool,
    #[prost(uint32, tag = "14")]
    pub aemocbabopf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Odfnohdicec {
    #[prost(uint32, tag = "3")]
    pub oajoobghagm: u32,
    #[prost(uint32, tag = "10")]
    pub imffldgomkb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Conlnjpjidn {
    #[prost(bool, tag = "9")]
    pub glkngddnocn: bool,
    #[prost(bool, tag = "13")]
    pub pmjlllfophk: bool,
    #[prost(uint32, tag = "14")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "15")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gbmaccklnje {
    #[prost(message, optional, tag = "6")]
    pub fgaeincckdk: ::core::option::Option<Olheklkendn>,
    #[prost(message, repeated, tag = "13")]
    pub jahppelnedf: ::prost::alloc::vec::Vec<Hfhjkhoplmn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(610)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nigcfojhhjp {
    #[prost(string, tag = "2")]
    pub imiogmdokcb: ::prost::alloc::string::String,
    #[prost(uint32, tag = "5")]
    pub entity_id: u32,
    #[prost(message, optional, tag = "6")]
    pub ojonopoenfl: ::core::option::Option<Ldkjnpenphg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27915)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gifijedalgp {
    #[prost(uint32, tag = "4")]
    pub mlnmecigdmh: u32,
    #[prost(uint32, tag = "5")]
    pub cbpdgcponhm: u32,
    #[prost(bool, tag = "7")]
    pub nhnplcpploc: bool,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25063)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aaobdjhaljk {
    #[prost(string, tag = "6")]
    pub flifgjlkjna: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jniehcmkpok {
    #[prost(message, optional, tag = "1")]
    pub pbipbnicaja: ::core::option::Option<Amlajjbgfij>,
    #[prost(uint32, tag = "11")]
    pub obbkdonjjmn: u32,
    #[prost(message, repeated, tag = "13")]
    pub bmdanbaokee: ::prost::alloc::vec::Vec<Amlajjbgfij>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20991)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nbgkflmjnmd {
    #[prost(uint32, tag = "12")]
    pub dplieaghmco: u32,
    #[prost(bool, tag = "13")]
    pub is_locked: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20279)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lfcdjfkihmk {
    #[prost(uint32, repeated, tag = "2")]
    pub ffaanbklbkh: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "6")]
    pub bmokgmfeelh: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(message, optional, tag = "13")]
    pub mcdogialdkp: ::core::option::Option<Lfobkbcnfic>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct AbilityGadgetInfo {
    #[prost(uint32, tag = "1")]
    pub camp_id: u32,
    #[prost(uint32, tag = "2")]
    pub camp_target_type: u32,
    #[prost(uint32, tag = "3")]
    pub target_entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ckdpmacgdjo {
    #[prost(uint32, tag = "10")]
    pub pimkkmnpnpf: u32,
    #[prost(message, repeated, tag = "14")]
    pub jhbcbieobep: ::prost::alloc::vec::Vec<Jickppdlohc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ainomebmcnd {
    #[prost(uint32, repeated, tag = "5")]
    pub lonjoaagemm: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "9")]
    pub hhnmcjfeghe: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "14")]
    pub skill_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ikdfplikjcp {
    #[prost(
        oneof = "ikdfplikjcp::Jjcckhcdjfm",
        tags = "1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 118, 202, 297, 357, 386, 531, 567, 650, 690, 699, 794, 969, 1011, 1039, 1069, 1077, 1135, 1138, 1185, 1383, 1466, 1611, 1700, 1747, 1840, 1869, 1938"
    )]
    pub jjcckhcdjfm: ::core::option::Option<ikdfplikjcp::Jjcckhcdjfm>,
}
/// Nested message and enum types in `IKDFPLIKJCP`.
pub mod ikdfplikjcp {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Jjcckhcdjfm {
        #[prost(message, tag = "1")]
        UseSkill(super::Gdjgmnhbkoi),
        #[prost(message, tag = "2")]
        DiceReroll(super::Cjlppfedhcp),
        #[prost(message, tag = "3")]
        PhaseChange(super::Nifpmkjloep),
        #[prost(message, tag = "4")]
        AddCards(super::Cdghiaofoef),
        #[prost(message, tag = "5")]
        Pass(super::Hgbpggbfpdb),
        #[prost(message, tag = "7")]
        SkillResult(super::Nobjfjifjpn),
        #[prost(message, tag = "8")]
        MoveCard(super::Pkkladnalib),
        #[prost(message, tag = "9")]
        DiceRoll(super::Mjechbdpimn),
        #[prost(message, tag = "10")]
        AddDice(super::Phcljhjjano),
        #[prost(message, tag = "11")]
        CharDie(super::Jpchppmeffm),
        #[prost(message, tag = "12")]
        CostDice(super::Hdbbjnnfkmg),
        #[prost(message, tag = "13")]
        SelectOnStage(super::Bpiimjohgee),
        #[prost(message, tag = "14")]
        TokenChange(super::Oiogcpahkbl),
        #[prost(message, tag = "15")]
        RemoveCards(super::Ggogoccopnk),
        #[prost(message, tag = "17")]
        UpdateController(super::Lnjjakbbcho),
        #[prost(message, tag = "118")]
        ReactionBegin(super::Abpmjblhhcb),
        #[prost(message, tag = "202")]
        GameOver(super::Lkiinllaana),
        #[prost(message, tag = "297")]
        CardUpdate(super::Nmniohoeegj),
        #[prost(message, tag = "357")]
        DiscoverEnd(super::Kdkfaoloaof),
        #[prost(message, tag = "386")]
        PveIntentionChange(super::Bjldhbepnni),
        #[prost(message, tag = "531")]
        UseSkillEnd(super::Onkkbfghhmc),
        #[prost(message, tag = "567")]
        ClientPerform(super::Afigaifiepl),
        #[prost(message, tag = "650")]
        SelectOnStageByEffect(super::Apnkbhelnbc),
        #[prost(message, tag = "690")]
        ModifyAdd(super::Cabepenlbbk),
        #[prost(message, tag = "699")]
        UseLegend(super::Pieoeomnfkc),
        #[prost(message, tag = "794")]
        ModifyRemove(super::Pkkdehoadbf),
        #[prost(message, tag = "969")]
        FieldUpdate(super::Ajfhodjafkf),
        #[prost(message, tag = "1011")]
        ChangeCharacterIndex(super::Iljfpjeaapi),
        #[prost(message, tag = "1039")]
        CostRevise(super::Nabkhckefgh),
        #[prost(message, tag = "1069")]
        WaitingListChange(super::Dpjniakcola),
        #[prost(message, tag = "1077")]
        SkillLimitsChange(super::Bonghpofpld),
        #[prost(message, tag = "1135")]
        PveIntentionInfo(super::Hkpplkipnac),
        #[prost(message, tag = "1138")]
        NewCard(super::Bdgenhafhme),
        #[prost(message, tag = "1185")]
        TransferCardToOpponent(super::Pbioijnmcjo),
        #[prost(message, tag = "1383")]
        CardHenshin(super::Oagnclpgikc),
        #[prost(message, tag = "1466")]
        DuelDataChange(super::Mlhdjcgehab),
        #[prost(message, tag = "1611")]
        ReactionEnd(super::Efjgfdfllck),
        #[prost(message, tag = "1700")]
        NoDamageSkillResult(super::Cpiejkniloo),
        #[prost(message, tag = "1747")]
        PhaseContinue(super::Phjneimepph),
        #[prost(message, tag = "1840")]
        BustCards(super::Olnffmgjbmi),
        #[prost(message, tag = "1869")]
        OpTimer(super::Gbjdliamnim),
        #[prost(message, tag = "1938")]
        ZoneShuffle(super::Aebojmlmbge),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21559)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Laaldlbilja {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lpcohhokfjo {
    #[prost(uint32, tag = "1")]
    pub nekecfnahom: u32,
    #[prost(bool, tag = "7")]
    pub kbkgaofekij: bool,
    #[prost(uint32, tag = "11")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nnkijpdejke {
    #[prost(message, repeated, tag = "5")]
    pub kikeobngppo: ::prost::alloc::vec::Vec<Kepnfkbpghm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24559)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bgnbinolbih {
    #[prost(uint32, repeated, tag = "4")]
    pub hnempaagmdn: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "11")]
    pub cakpdnkkgen: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29291)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jnhaebkffnp {
    #[prost(uint32, tag = "2")]
    pub ffhpdcibkod: u32,
    #[prost(int32, tag = "3")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(695)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ffkmdchhefp {
    #[prost(message, optional, tag = "1")]
    pub plagnbjpbha: ::core::option::Option<Hmgbjnndkem>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Khhlgfehbgj {
    #[prost(uint32, repeated, tag = "5")]
    pub koipcpddphj: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "6")]
    pub dlaljndolao: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "8")]
    pub clcbaeodibo: u32,
    #[prost(uint32, tag = "10")]
    pub ionhghgajgg: u32,
    #[prost(uint32, tag = "12")]
    pub epfcidiklkg: u32,
    #[prost(uint32, tag = "15")]
    pub igaknkedboo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22382)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Enbmbfifpjm {
    #[prost(bool, tag = "8")]
    pub mfbmiicbnjo: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cabepenlbbk {
    #[prost(uint32, tag = "4")]
    pub abeaibhkcjn: u32,
    #[prost(uint32, tag = "6")]
    pub ooipgfedjmn: u32,
    #[prost(enumeration = "Cmgooomlaia", tag = "8")]
    pub imiogmdokcb: i32,
    #[prost(uint32, repeated, tag = "9")]
    pub cdgikfolbgh: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "13")]
    pub pos: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26472)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ibekdfanapi {
    #[prost(uint32, tag = "3")]
    pub amoheapplca: u32,
    #[prost(message, optional, tag = "6")]
    pub cainbbibgeb: ::core::option::Option<AbilityString>,
    #[prost(enumeration = "PlayerDieType", tag = "11")]
    pub die_type: i32,
    #[prost(uint32, tag = "15")]
    pub hiacpelkdmp: u32,
    #[prost(oneof = "ibekdfanapi::Entity", tags = "2, 10")]
    pub entity: ::core::option::Option<ibekdfanapi::Entity>,
}
/// Nested message and enum types in `IBEKDFANAPI`.
pub mod ibekdfanapi {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Entity {
        #[prost(uint32, tag = "2")]
        MonsterId(u32),
        #[prost(uint32, tag = "10")]
        GadgetId(u32),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1103)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Baemcijbkbd {
    #[prost(uint32, repeated, tag = "3")]
    pub gcffnlekkjh: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(uint32, tag = "8")]
    pub city_id: u32,
    #[prost(message, repeated, tag = "13")]
    pub item_list: ::prost::alloc::vec::Vec<Jickppdlohc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28673)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kljljjnicnh {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29044)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oogoblokaec {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "8")]
    pub bhcegggpkeb: u32,
    #[prost(uint32, tag = "13")]
    pub jbfdogpakkc: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9472)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eihfhneehhh {
    #[prost(uint32, tag = "6")]
    pub group_id: u32,
    #[prost(uint32, tag = "9")]
    pub jimelgdjmlf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dhnbihgaejb {
    #[prost(map = "uint32, message", tag = "2")]
    pub eepdghejgpm: ::std::collections::HashMap<u32, Dgiddppffdj>,
    #[prost(uint32, repeated, tag = "5")]
    pub annckmohnle: ::prost::alloc::vec::Vec<u32>,
    #[prost(map = "uint32, uint32", tag = "15")]
    pub fmfklmjbpga: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6054)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cdlmnkmgplo {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24719)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Npjlbmlkhdp {
    #[prost(uint32, tag = "3")]
    pub nfickllnfgn: u32,
    #[prost(uint32, tag = "10")]
    pub group_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fhpeaioogci {
    #[prost(uint32, repeated, tag = "12")]
    pub skill_id_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "15")]
    pub dajhkhflndj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26899)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ghgibonmkla {
    #[prost(uint32, tag = "14")]
    pub jimelgdjmlf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bodfnfidfod {
    #[prost(uint32, tag = "4")]
    pub abgmlemgiog: u32,
    #[prost(map = "uint32, uint32", tag = "7")]
    pub jccgobkgoja: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "15")]
    pub gilnlcackfo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28377)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Micfeceecic {
    #[prost(message, repeated, tag = "15")]
    pub cihgnhkebip: ::prost::alloc::vec::Vec<Jickppdlohc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Enebcpjjphn {
    #[prost(message, repeated, tag = "6")]
    pub ahllkjjemlg: ::prost::alloc::vec::Vec<Fndlklbaapg>,
    #[prost(uint32, tag = "12")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21511)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Opmlgcapddk {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6166)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cjcnklibgdk {
    #[prost(message, optional, tag = "11")]
    pub source_pos: ::core::option::Option<Vector>,
    #[prost(int32, repeated, tag = "2")]
    pub ppgkldflino: ::prost::alloc::vec::Vec<i32>,
    #[prost(message, optional, tag = "4")]
    pub destination_pos: ::core::option::Option<Vector>,
    #[prost(int32, tag = "5")]
    pub query_id: i32,
    #[prost(int32, tag = "3")]
    pub uid: i32,
    #[prost(uint32, tag = "15")]
    pub scene_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cacglibjiie {
    #[prost(uint32, repeated, tag = "1")]
    pub jeilnpeliab: ::prost::alloc::vec::Vec<u32>,
    #[prost(enumeration = "Hlplmkkognk", tag = "2")]
    pub r#type: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21218)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dnemgihlelk {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1912)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jemfedpbmgg {
    #[prost(bool, tag = "3")]
    pub is_locked: bool,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27057)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Caebjljcijm {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(bytes = "vec", tag = "15")]
    pub ijmcpgikian: ::prost::alloc::vec::Vec<u8>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2768)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eelbapilelm {
    #[prost(uint32, tag = "5")]
    pub fbnlohmdnhd: u32,
    #[prost(message, optional, tag = "8")]
    pub gnlffpclcnm: ::core::option::Option<Pbdbfhjjlpb>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(189)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Enikcfbodee {
    #[prost(message, optional, tag = "5")]
    pub ohjnpjckgeg: ::core::option::Option<Cppnhdpjmec>,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4646)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Laijhecpgcg {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "12")]
    pub mgdckpanedk: ::prost::alloc::vec::Vec<Bggjcfhphbk>,
    #[prost(uint32, tag = "15")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ijeocmpdmnf {
    #[prost(message, optional, tag = "1")]
    pub cbnggobidha: ::core::option::Option<Nipgcfogihp>,
    #[prost(bool, tag = "4")]
    pub mpfldfdogai: bool,
    #[prost(bool, tag = "7")]
    pub hdihdajmlff: bool,
    #[prost(message, repeated, tag = "10")]
    pub pndpnmbdokf: ::prost::alloc::vec::Vec<Nihodijkpke>,
    #[prost(bool, tag = "13")]
    pub fblpakodjcj: bool,
    #[prost(message, optional, tag = "14")]
    pub mihakfpllkc: ::core::option::Option<Gkidjmlnnhh>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5530)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kngnadmmkjk {
    #[prost(message, repeated, tag = "10")]
    pub bdefoigangn: ::prost::alloc::vec::Vec<Kcplhcnkghg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23921)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Egmkbdknjkf {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bkfkeihhbcc {
    #[prost(float, tag = "4")]
    pub ofafcbcfndp: f32,
    #[prost(uint32, tag = "12")]
    pub rot: u32,
    #[prost(uint32, tag = "13")]
    pub bdebhppcbjj: u32,
    #[prost(float, tag = "15")]
    pub pgldfmnllbh: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kbafijfpklo {
    #[prost(string, tag = "15")]
    pub bfpmihhhmip: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22198)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct WearEquipReq {
    #[prost(uint64, tag = "3")]
    pub equip_guid: u64,
    #[prost(uint64, tag = "10")]
    pub avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PlayTeamEntityInfo {
    #[prost(uint32, tag = "1")]
    pub entity_id: u32,
    #[prost(uint32, tag = "2")]
    pub player_uid: u32,
    #[prost(uint32, tag = "3")]
    pub authority_peer_id: u32,
    #[prost(uint32, tag = "5")]
    pub gadget_config_id: u32,
    #[prost(message, optional, tag = "6")]
    pub ability_info: ::core::option::Option<AbilitySyncStateInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6977)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Inddbamlnof {
    #[prost(uint32, repeated, tag = "3")]
    pub hnempaagmdn: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub cakpdnkkgen: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21184)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mnmlaiopnln {
    #[prost(uint32, tag = "4")]
    pub kngjhmllcnp: u32,
    #[prost(bool, tag = "5")]
    pub kodnaagljdl: bool,
    #[prost(bool, tag = "13")]
    pub omeniamedce: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29818)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Phmeaiphipc {
    #[prost(map = "uint32, message", tag = "13")]
    pub gljhmdnljeh: ::std::collections::HashMap<u32, Hdnfcemgfoj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29645)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ephcdnbbada {
    #[prost(uint32, repeated, tag = "2")]
    pub cdnnoiceecd: ::prost::alloc::vec::Vec<u32>,
    #[prost(map = "uint64, message", tag = "4")]
    pub cjenicjpfge: ::std::collections::HashMap<u64, Igklnndncmg>,
    #[prost(uint32, tag = "6")]
    pub djmdoppacph: u32,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25614)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dbmhmoldgam {
    #[prost(uint32, tag = "8")]
    pub anim_hash: u32,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(uint64, tag = "10")]
    pub avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23749)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Koohjjgfpkl {
    #[prost(message, repeated, tag = "2")]
    pub ofekdfbpkfn: ::prost::alloc::vec::Vec<Nbdhfhkmlfd>,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27428)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Glgbfaokebm {
    #[prost(map = "uint32, uint32", tag = "10")]
    pub kjogidllodk: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8547)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kbggfhagfmi {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26379)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fibkhfbhgjc {
    #[prost(uint32, tag = "3")]
    pub jdlanbmecpo: u32,
    #[prost(int32, repeated, tag = "5")]
    pub param_list: ::prost::alloc::vec::Vec<i32>,
    #[prost(bool, tag = "6")]
    pub cdhlhlopklm: bool,
    #[prost(uint32, repeated, tag = "8")]
    pub kjandmiadcl: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "15")]
    pub bmhajioppcn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20458)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Clfncmgfgpc {
    #[prost(message, optional, tag = "11")]
    pub amolhefinek: ::core::option::Option<Nhnljibhpmj>,
    #[prost(message, optional, tag = "1")]
    pub mehkopgffhm: ::core::option::Option<Khjmikaafhb>,
    #[prost(bool, tag = "10")]
    pub hpfccafchdh: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eoabcgeojhi {
    #[prost(bool, tag = "5")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "8")]
    pub hfaleccdfif: u32,
    #[prost(uint32, tag = "12")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kepnfkbpghm {
    #[prost(bool, tag = "3")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "9")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "13")]
    pub oelcnlojhhe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26014)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gponpnenjkd {
    #[prost(uint64, repeated, tag = "6")]
    pub avatar_guid_list: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint32, tag = "7")]
    pub level_id: u32,
    #[prost(uint32, tag = "13")]
    pub bodiejclgmb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Iiflpnicpim {
    #[prost(message, repeated, tag = "4")]
    pub ecnieknfdmg: ::prost::alloc::vec::Vec<Iibkpakhlpc>,
    #[prost(uint32, tag = "5")]
    pub fmlbphadood: u32,
    #[prost(uint32, tag = "6")]
    pub glhadhabhag: u32,
    #[prost(uint64, tag = "7")]
    pub jagjhbfkdfg: u64,
    #[prost(float, tag = "9")]
    pub pokhdgjnlmf: f32,
    #[prost(string, tag = "14")]
    pub bfpmihhhmip: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iibkpakhlpc {
    #[prost(uint64, tag = "4")]
    pub afmolopanfe: u64,
    #[prost(uint32, tag = "10")]
    pub fhcpckfnjal: u32,
    #[prost(bool, tag = "13")]
    pub eogpkjnngca: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3863)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Efjceknjbgi {
    #[prost(message, optional, tag = "1")]
    pub nmmgkopadfd: ::core::option::Option<CustomGadgetTreeInfo>,
    #[prost(uint32, repeated, tag = "14")]
    pub pdeipgdakhg: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "15")]
    pub ghlbjahjehf: u32,
    #[prost(uint32, tag = "12")]
    pub kngjhmllcnp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22858)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kmkgolgjnhk {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint32, tag = "7")]
    pub avatar_id: u32,
    #[prost(uint32, tag = "15")]
    pub pcfiaajeoij: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29441)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Efoecljccmi {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27143)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ambchbonpde {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "6")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7660)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mklkalpielk {
    #[prost(uint32, tag = "8")]
    pub entity_id: u32,
    #[prost(message, optional, tag = "9")]
    pub pgakccikebe: ::core::option::Option<Vector>,
    #[prost(enumeration = "ForwardType", tag = "10")]
    pub forward_type: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(843)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mlnncpcojbe {
    #[prost(uint32, tag = "4")]
    pub lcddidljedn: u32,
    #[prost(uint32, tag = "6")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "15")]
    pub jlilgmdeacg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26094)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Haeieamiepd {
    #[prost(enumeration = "ForwardType", tag = "10")]
    pub forward_type: i32,
    #[prost(message, optional, tag = "13")]
    pub lpjhfogdail: ::core::option::Option<Jaachoefmpd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9533)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bcgkjpahnam {
    #[prost(message, repeated, tag = "12")]
    pub nfmbfogncnl: ::prost::alloc::vec::Vec<Acekdebfimc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1929)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ggenfnibmmn {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22151)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kpddphedefn {
    #[prost(uint32, tag = "1")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8289)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ccadmmeepkn {
    #[prost(uint32, tag = "2")]
    pub end_time: u32,
    #[prost(uint32, tag = "5")]
    pub gndclfhkmpj: u32,
    #[prost(uint32, tag = "6")]
    pub dafbmphnlma: u32,
    #[prost(uint32, tag = "9")]
    pub pihndegfmph: u32,
    #[prost(uint32, tag = "14")]
    pub progress: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Akllemmholi {
    #[prost(uint32, repeated, tag = "1")]
    pub nlaaaakiojb: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "3")]
    pub cgikofoccie: ::prost::alloc::vec::Vec<Pkjmckidjfl>,
    #[prost(bool, tag = "7")]
    pub himcefbjclb: bool,
    #[prost(message, repeated, tag = "8")]
    pub mdkpojccejj: ::prost::alloc::vec::Vec<Fjincakifkg>,
    #[prost(uint32, repeated, tag = "9")]
    pub mbbdpmphngh: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "14")]
    pub mpfldfdogai: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7817)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bcdeaiplfbo {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fpoeaodohgo {
    #[prost(uint32, tag = "1")]
    pub max_combo: u32,
    #[prost(uint32, tag = "3")]
    pub fjamcdjdjoa: u32,
    #[prost(uint32, tag = "8")]
    pub uid: u32,
    #[prost(uint32, tag = "10")]
    pub cpbjlefbpfm: u32,
    #[prost(message, optional, tag = "12")]
    pub fgaeincckdk: ::core::option::Option<Olheklkendn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23936)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bmohhhahaho {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Iphflgnbhfg {
    #[prost(bool, tag = "10")]
    pub mpfldfdogai: bool,
    #[prost(bool, tag = "11")]
    pub pgdgnmgcekm: bool,
    #[prost(message, repeated, tag = "12")]
    pub kckepcmlihi: ::prost::alloc::vec::Vec<Blpmijepglf>,
    #[prost(message, optional, tag = "13")]
    pub hpodkdccikj: ::core::option::Option<Elcbgecgeon>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9551)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dbaelcjabmm {
    #[prost(enumeration = "Kpfoblalblc", tag = "15")]
    pub daakpcoabep: i32,
    #[prost(uint64, tag = "10")]
    pub ihgjlfcgfin: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Khcoejhbnll {
    #[prost(bool, tag = "6")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "11")]
    pub lanobinadcm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Plcgieaonlg {
    #[prost(message, optional, tag = "1")]
    pub avatar_info: ::core::option::Option<AvatarInfo>,
    #[prost(uint32, tag = "5")]
    pub player_uid: u32,
    #[prost(oneof = "plcgieaonlg::Detail", tags = "512")]
    pub detail: ::core::option::Option<plcgieaonlg::Detail>,
}
/// Nested message and enum types in `PLCGIEAONLG`.
pub mod plcgieaonlg {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(message, tag = "512")]
        UgcAvatarInfo(super::Gaiobfeadpd),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6721)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hlbfmhdphbg {
    #[prost(uint32, tag = "5")]
    pub level_id: u32,
    #[prost(bool, tag = "7")]
    pub joejchcfdpe: bool,
    #[prost(bool, tag = "8")]
    pub abhdemelcdn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gjdeepckgpm {
    #[prost(uint32, tag = "1")]
    pub cgmmjmgjmea: u32,
    #[prost(bool, tag = "2")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21900)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Opbhnochpkp {
    #[prost(message, optional, tag = "2")]
    pub ebdikdlbieg: ::core::option::Option<Olheklkendn>,
    #[prost(uint32, tag = "9")]
    pub target_uid: u32,
    #[prost(uint32, tag = "11")]
    pub param: u32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mbjeplkjnig {
    #[prost(uint32, tag = "1")]
    pub flhbhdpmboj: u32,
    #[prost(uint32, tag = "2")]
    pub ehofpiihlgb: u32,
    #[prost(uint32, tag = "13")]
    pub lmebmmbegkm: u32,
    #[prost(uint32, tag = "15")]
    pub nackagifbjb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8712)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hgbebmafkho {
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aldkffogbbd {
    #[prost(uint32, tag = "7")]
    pub end_time: u32,
    #[prost(uint32, tag = "10")]
    pub jabgacillec: u32,
    #[prost(uint32, tag = "14")]
    pub odlnbbdmjon: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26621)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eieeciganmi {
    #[prost(message, repeated, tag = "13")]
    pub jjblblmdphc: ::prost::alloc::vec::Vec<Ldkjnpenphg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26858)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cedeggfpiig {
    #[prost(uint32, tag = "6")]
    pub nekecfnahom: u32,
    #[prost(uint32, tag = "9")]
    pub uid: u32,
    #[prost(bool, tag = "14")]
    pub moaelibphoi: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7832)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gkkmgfhicdb {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26616)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pmahciclacp {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(231)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Egfemofhobg {
    #[prost(int32, tag = "2")]
    pub dpkjeacpfoc: i32,
    #[prost(uint32, repeated, tag = "9")]
    pub param_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29849)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fmiecbaoeli {
    #[prost(enumeration = "ForwardType", tag = "7")]
    pub forward_type: i32,
    #[prost(message, optional, tag = "12")]
    pub niakdchedce: ::core::option::Option<Eafhlmdchko>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Olifchhijag {
    #[prost(uint32, tag = "2")]
    pub fhcpckfnjal: u32,
    #[prost(bool, tag = "4")]
    pub ilcndnkdejj: bool,
    #[prost(uint32, tag = "5")]
    pub ekkmpcdcpfm: u32,
    #[prost(uint32, tag = "9")]
    pub cpgflobbgpo: u32,
    #[prost(uint32, tag = "10")]
    pub name_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7415)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dfipjdhiedj {
    #[prost(uint32, tag = "1")]
    pub epfcidiklkg: u32,
    #[prost(uint32, tag = "11")]
    pub level_id: u32,
    #[prost(bool, tag = "14")]
    pub lhcpmanhdno: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29862)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oobihkaenma {
    #[prost(uint32, tag = "4")]
    pub config_id: u32,
    #[prost(uint32, tag = "10")]
    pub group_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9266)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pgladlkpled {
    #[prost(message, optional, tag = "9")]
    pub dbdnmhcjfoc: ::core::option::Option<Ogkdehbnjlm>,
    #[prost(uint32, tag = "12")]
    pub finahglfhag: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21137)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nojhdadgdnc {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22655)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nfcakbhmjmb {
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4657)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Akbnajjdohh {
    #[prost(uint32, tag = "3")]
    pub palekjjhcmj: u32,
    #[prost(bool, tag = "4")]
    pub fadincnpbmd: bool,
    #[prost(uint32, tag = "7")]
    pub aekageebaaa: u32,
    #[prost(message, repeated, tag = "8")]
    pub meikgboldgh: ::prost::alloc::vec::Vec<Hfhjkhoplmn>,
    #[prost(uint32, repeated, tag = "9")]
    pub kogmmcnpjll: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "11")]
    pub pieapgepmlf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26465)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fmcbmbpifem {
    #[prost(uint32, tag = "2")]
    pub index: u32,
    #[prost(enumeration = "Gniinhjicad", tag = "4")]
    pub pkflamjffob: i32,
    #[prost(uint32, tag = "10")]
    pub entity_id: u32,
    #[prost(message, optional, tag = "14")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "15")]
    pub rot: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22660)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oipeagnhpod {
    #[prost(uint32, tag = "15")]
    pub avatar_entity_id: u32,
    #[prost(bool, tag = "8")]
    pub nbpdfnbllhl: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8702)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hcbkgmnodng {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub dombdimffii: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jjonjlomkhh {
    #[prost(message, repeated, tag = "14")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Jdgedojpjoe>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SceneMonsterInfo {
    #[prost(uint32, tag = "1")]
    pub monster_id: u32,
    #[prost(uint32, tag = "2")]
    pub group_id: u32,
    #[prost(uint32, tag = "3")]
    pub config_id: u32,
    #[prost(message, repeated, tag = "4")]
    pub weapon_list: ::prost::alloc::vec::Vec<SceneWeaponInfo>,
    #[prost(uint32, tag = "5")]
    pub authority_peer_id: u32,
    #[prost(uint32, repeated, tag = "6")]
    pub affix_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "7")]
    pub is_elite: bool,
    #[prost(uint32, tag = "8")]
    pub owner_entity_id: u32,
    #[prost(uint32, tag = "9")]
    pub summoned_tag: u32,
    #[prost(map = "uint32, uint32", tag = "10")]
    pub summon_tag_map: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "11")]
    pub pose_id: u32,
    #[prost(enumeration = "MonsterBornType", tag = "12")]
    pub born_type: i32,
    #[prost(uint32, tag = "13")]
    pub block_id: u32,
    #[prost(uint32, tag = "14")]
    pub mark_flag: u32,
    #[prost(uint32, tag = "15")]
    pub title_id: u32,
    #[prost(uint32, tag = "16")]
    pub special_name_id: u32,
    #[prost(uint32, tag = "17")]
    pub attack_target_id: u32,
    #[prost(message, optional, tag = "18")]
    pub monster_route: ::core::option::Option<MonsterRoute>,
    #[prost(uint32, tag = "19")]
    pub ai_config_id: u32,
    #[prost(uint32, tag = "20")]
    pub level_route_id: u32,
    #[prost(uint32, tag = "21")]
    pub init_pose_id: u32,
    #[prost(bool, tag = "22")]
    pub is_light: bool,
    #[prost(oneof = "scene_monster_info::Aghglnefdhk", tags = "50, 51")]
    pub aghglnefdhk: ::core::option::Option<scene_monster_info::Aghglnefdhk>,
}
/// Nested message and enum types in `SceneMonsterInfo`.
pub mod scene_monster_info {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Aghglnefdhk {
        #[prost(message, tag = "50")]
        FishInfo(super::SceneFishInfo),
        #[prost(message, tag = "51")]
        FishtankFishInfo(super::FishtankFishInfo),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2573)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mojkeepbdlm {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27640)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mpehfbcdnjm {
    #[prost(uint32, repeated, tag = "1")]
    pub jbemdpmjmfh: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "7")]
    pub info_list: ::prost::alloc::vec::Vec<AiSyncInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8480)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Adefjhlgikj {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint64, tag = "12")]
    pub ihgjlfcgfin: u64,
    #[prost(uint32, tag = "15")]
    pub ggcfiehankk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hpbcmbfekgo {
    #[prost(message, repeated, tag = "10")]
    pub lcbabfejlkb: ::prost::alloc::vec::Vec<Bacikmlghhn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2118)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ehmlejgmfea {
    #[prost(bool, tag = "15")]
    pub jfjndakfjek: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25977)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ogjdnenmgkp {
    #[prost(uint32, tag = "10")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7526)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jfjgogojnbo {
    #[prost(message, repeated, tag = "2")]
    pub fjdgoehgkgp: ::prost::alloc::vec::Vec<Ajlpkkkodfi>,
    #[prost(uint32, tag = "4")]
    pub scene_id: u32,
    #[prost(uint32, tag = "8")]
    pub scene_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23408)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lpdpholbnmj {
    #[prost(uint32, tag = "13")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5913)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Milohbeejcg {
    #[prost(enumeration = "Fgiblimhhik", tag = "14")]
    pub kgconldgjpg: i32,
    #[prost(uint32, tag = "15")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21088)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cooplalmbdl {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fepjaehjdic {
    #[prost(uint32, repeated, tag = "3")]
    pub mdfmdehcdfp: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "6")]
    pub fnahihocnoc: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "12")]
    pub gicjofmfpib: ::prost::alloc::vec::Vec<u32>,
    #[prost(map = "uint32, uint32", tag = "13")]
    pub kbdnnjfoddg: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dhbcejobgfg {
    #[prost(uint32, tag = "4")]
    pub ddfafhknifa: u32,
    #[prost(uint32, tag = "7")]
    pub olmcaacjgam: u32,
    #[prost(string, tag = "8")]
    pub ahopmdionfo: ::prost::alloc::string::String,
    #[prost(uint32, tag = "10")]
    pub config_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9092)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct EvtAvatarStandUpNotify {
    #[prost(int32, tag = "8")]
    pub direction: i32,
    #[prost(uint64, tag = "10")]
    pub chair_id: u64,
    #[prost(int32, tag = "11")]
    pub perform_id: i32,
    #[prost(uint32, tag = "13")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22022)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lbhohbdeakk {
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4834)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lgpifabmnmh {
    #[prost(uint32, tag = "2")]
    pub config_id: u32,
    #[prost(uint32, tag = "4")]
    pub ghmeilnkhpf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Epangooiecn {
    #[prost(uint32, tag = "2")]
    pub cepegimlioc: u32,
    #[prost(uint32, repeated, tag = "4")]
    pub npmpjingpof: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "5")]
    pub mmbhkcejkic: u32,
    #[prost(uint32, tag = "6")]
    pub kbonbbholpf: u32,
    #[prost(bool, tag = "7")]
    pub kjpfbjchlci: bool,
    #[prost(uint32, tag = "8")]
    pub coebnijnnne: u32,
    #[prost(uint32, tag = "9")]
    pub odamlcmejbk: u32,
    #[prost(message, optional, tag = "11")]
    pub haefdcknfoi: ::core::option::Option<Oeednchkhad>,
    #[prost(uint32, tag = "12")]
    pub ehlbbpbbndl: u32,
    #[prost(uint32, tag = "13")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23050)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kionckldlhg {
    #[prost(bool, tag = "14")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "8")]
    pub himdchgjoal: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Akbflgicend {
    #[prost(bool, tag = "11")]
    pub obibendjndc: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cgaidecbehg {
    #[prost(uint32, tag = "4")]
    pub labigndnlma: u32,
    #[prost(uint32, tag = "11")]
    pub fmbkcablalg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23876)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gcojfefjaic {
    #[prost(uint32, tag = "12")]
    pub epfcidiklkg: u32,
    #[prost(uint32, tag = "13")]
    pub ionhghgajgg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24728)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jhmempgfipf {
    #[prost(uint32, tag = "5")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(960)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jpdgdginlef {
    #[prost(uint32, tag = "3")]
    pub bghklcfcjcp: u32,
    #[prost(uint32, tag = "4")]
    pub fmoonpcghdb: u32,
    #[prost(uint32, tag = "6")]
    pub bodiejclgmb: u32,
    #[prost(bool, tag = "7")]
    pub nmicjffmbpf: bool,
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
    #[prost(uint32, tag = "11")]
    pub ckecbimkape: u32,
    #[prost(uint32, tag = "14")]
    pub apaaphbhhmk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28822)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pbkmhhbpffg {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7002)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Obmigljkemf {
    #[prost(uint32, repeated, tag = "12")]
    pub cpmfmphhfki: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "1")]
    pub ddbdiflnhdg: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "2")]
    pub level_id: u32,
    #[prost(bool, tag = "13")]
    pub eejccicofii: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5546)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mlnlcbomdhg {
    #[prost(message, optional, tag = "1")]
    pub hgdgjjfbfnd: ::core::option::Option<Deigilfodbd>,
    #[prost(enumeration = "Gpkbobclbcl", tag = "4")]
    pub imiogmdokcb: i32,
    #[prost(bool, tag = "5")]
    pub gggnjbeijog: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Neifcknfnak {
    #[prost(uint32, tag = "1")]
    pub jbfdogpakkc: u32,
    #[prost(uint32, tag = "5")]
    pub score: u32,
    #[prost(uint32, tag = "9")]
    pub level_id: u32,
    #[prost(uint32, tag = "14")]
    pub aeljdiplelm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26353)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ldlhkebakmc {
    #[prost(bool, tag = "2")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "4")]
    pub parent_quest_id: u32,
    #[prost(uint32, repeated, tag = "5")]
    pub iplebkfnilg: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(uint32, tag = "10")]
    pub feehhbklage: u32,
    #[prost(uint32, tag = "11")]
    pub mpmmpdogiga: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21779)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ilhkpjapffo {
    #[prost(message, optional, tag = "3")]
    pub position: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "2")]
    pub owner_entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Apfceefmolo {
    #[prost(uint32, tag = "5")]
    pub pcmildfjbnp: u32,
    #[prost(message, repeated, tag = "11")]
    pub jghoddipilm: ::prost::alloc::vec::Vec<Nlpnkejgibf>,
    #[prost(uint32, tag = "13")]
    pub hgbbglkplfi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Khmodclefpe {
    #[prost(message, optional, tag = "4")]
    pub gmjagibjeac: ::core::option::Option<Gaoddbppala>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bbhekplkmfg {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(message, optional, tag = "2")]
    pub pos: ::core::option::Option<Aojkinlfjhe>,
    #[prost(int32, tag = "3")]
    pub bjcabobcjce: i32,
    #[prost(message, optional, tag = "4")]
    pub akeimgbchbp: ::core::option::Option<Aojkinlfjhe>,
    #[prost(uint32, tag = "5")]
    pub boedihpahdi: u32,
    #[prost(uint32, repeated, tag = "6")]
    pub knoedmlegkf: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "7")]
    pub obbkbkhhmam: ::prost::alloc::vec::Vec<Aojkinlfjhe>,
    #[prost(int32, repeated, tag = "9")]
    pub cepgjmogkmb: ::prost::alloc::vec::Vec<i32>,
    #[prost(uint32, tag = "11")]
    pub ljpcgmehdle: u32,
    #[prost(uint32, tag = "12")]
    pub config_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5276)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hhenjlkpmjd {
    #[prost(uint32, tag = "10")]
    pub lcddidljedn: u32,
    #[prost(uint32, tag = "5")]
    pub lchbeahgheo: u32,
    #[prost(uint32, tag = "12")]
    pub group_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23923)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bacmlajkfjm {
    #[prost(uint32, repeated, tag = "13")]
    pub kdfdiooggal: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "4")]
    pub city_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23683)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Odoiiinnogp {
    #[prost(bool, tag = "4")]
    pub hcjfdjhilam: bool,
    #[prost(bool, tag = "5")]
    pub omeniamedce: bool,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(uint32, tag = "12")]
    pub score: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aikikfmiahg {
    #[prost(bool, tag = "1")]
    pub glkngddnocn: bool,
    #[prost(string, tag = "2")]
    pub lkfgeagbpga: ::prost::alloc::string::String,
    #[prost(uint32, tag = "3")]
    pub khgmnccnofp: u32,
    #[prost(enumeration = "Mcfiemolici", tag = "4")]
    pub mnjclpfbbec: i32,
    #[prost(uint32, tag = "5")]
    pub diceglmncpd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24367)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jnmjghakjgn {
    #[prost(uint32, tag = "5")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1786)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Inhlijhodop {
    #[prost(enumeration = "Kpfoblalblc", tag = "3")]
    pub daakpcoabep: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5526)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ibihlaokioo {
    #[prost(uint32, tag = "1")]
    pub score: u32,
    #[prost(bool, tag = "2")]
    pub kodnaagljdl: bool,
    #[prost(uint32, tag = "4")]
    pub kngjhmllcnp: u32,
    #[prost(message, repeated, tag = "9")]
    pub fagjdjiglon: ::prost::alloc::vec::Vec<Mkpoefoilgb>,
    #[prost(uint32, tag = "12")]
    pub onhjaboekhb: u32,
    #[prost(bool, tag = "13")]
    pub omeniamedce: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24588)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Llgnjglhjnb {
    #[prost(message, optional, tag = "1")]
    pub jgkfihajpdo: ::core::option::Option<Hbofnfomohd>,
    #[prost(uint32, tag = "8")]
    pub bdeflcdkdbi: u32,
    #[prost(enumeration = "Ncocchbfele", tag = "9")]
    pub ckcfhppcdfe: i32,
    #[prost(message, optional, tag = "11")]
    pub nibcobfiklk: ::core::option::Option<Dbjbliaecjd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dbjbliaecjd {
    #[prost(bool, tag = "4")]
    pub hpofoemaepd: bool,
    #[prost(uint32, tag = "9")]
    pub bmdcbkpecng: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hbofnfomohd {
    #[prost(uint32, tag = "1")]
    pub jcghmkmnaod: u32,
    #[prost(bool, tag = "8")]
    pub hpofoemaepd: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4495)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Deanbahkbke {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eckacobpkbl {
    #[prost(uint32, tag = "1")]
    pub guid: u32,
    #[prost(uint32, tag = "2")]
    pub oegjaildlbk: u32,
    #[prost(uint32, tag = "3")]
    pub pcfiaajeoij: u32,
    #[prost(message, optional, tag = "4")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(oneof = "eckacobpkbl::Lffbinnlllg", tags = "6, 7")]
    pub lffbinnlllg: ::core::option::Option<eckacobpkbl::Lffbinnlllg>,
}
/// Nested message and enum types in `ECKACOBPKBL`.
pub mod eckacobpkbl {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Lffbinnlllg {
        #[prost(message, tag = "6")]
        NpcData(super::Jmdipfdjiai),
        #[prost(message, tag = "7")]
        SuiteData(super::Anbhhdkcden),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kogikbgoicn {
    #[prost(map = "uint32, message", tag = "7")]
    pub okpfcgninop: ::std::collections::HashMap<u32, Pmkmghknmmo>,
    #[prost(uint32, tag = "8")]
    pub nebkjmlknid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pikbbdhlpjj {
    #[prost(uint32, tag = "5")]
    pub room_id: u32,
    #[prost(message, optional, tag = "12")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "13")]
    pub pos: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28133)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lffoilomoec {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "8")]
    pub target_uid: u32,
    #[prost(message, optional, tag = "15")]
    pub abehjooaeom: ::core::option::Option<Nbdhfhkmlfd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26637)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pfpffkfbgkk {
    #[prost(uint32, tag = "8")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ldfoehikkml {
    #[prost(uint32, tag = "11")]
    pub config_id: u32,
    #[prost(oneof = "ldfoehikkml::Nbdofgcpfej", tags = "2, 7, 10, 14")]
    pub nbdofgcpfej: ::core::option::Option<ldfoehikkml::Nbdofgcpfej>,
}
/// Nested message and enum types in `LDFOEHIKKML`.
pub mod ldfoehikkml {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Nbdofgcpfej {
        #[prost(message, tag = "2")]
        GadgetStateChange(super::Nccncmfilpa),
        #[prost(message, tag = "7")]
        MonsterWaveDeactive(super::Hjmpmbgecae),
        #[prost(message, tag = "10")]
        GadgetDeactive(super::Ekiamhkemoo),
        #[prost(message, tag = "14")]
        MonsterGroupDeactive(super::Efpcnooedlc),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7913)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hciogiiaibe {
    #[prost(uint32, tag = "5")]
    pub ipdobhbahcn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(450)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Agnbgcafjhd {
    #[prost(uint32, tag = "1")]
    pub fkclbeinjgh: u32,
    #[prost(bytes = "vec", tag = "6")]
    pub mnknajcdnbk: ::prost::alloc::vec::Vec<u8>,
    #[prost(uint32, tag = "11")]
    pub id: u32,
    #[prost(enumeration = "Gafkaplofdb", tag = "12")]
    pub kjpechhmekn: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22491)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eeoiogpeodj {
    #[prost(oneof = "eeoiogpeodj::Detail", tags = "1591, 481, 2015, 1621, 865")]
    pub detail: ::core::option::Option<eeoiogpeodj::Detail>,
}
/// Nested message and enum types in `EEOIOGPEODJ`.
pub mod eeoiogpeodj {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(uint32, tag = "1591")]
        RedPoint(u32),
        #[prost(bool, tag = "481")]
        IsShowDetailBuild(bool),
        #[prost(uint32, tag = "2015")]
        BgmId(u32),
        #[prost(bool, tag = "1621")]
        IsShowBriefCardEventCase(bool),
        #[prost(bool, tag = "865")]
        IsShowAnimation(bool),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3184)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gjgodklmgib {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2308)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Npajidchffj {
    #[prost(int32, tag = "2")]
    pub query_id: i32,
    #[prost(message, repeated, tag = "3")]
    pub kdbjkifiejh: ::prost::alloc::vec::Vec<Haoghpbgfpf>,
    #[prost(enumeration = "Beljhldaojh", tag = "4")]
    pub query_status: i32,
    #[prost(message, repeated, tag = "10")]
    pub onimbheflkj: ::prost::alloc::vec::Vec<Haoghpbgfpf>,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "13")]
    pub corners: ::prost::alloc::vec::Vec<Vector>,
    #[prost(message, repeated, tag = "14")]
    pub egeblkioplk: ::prost::alloc::vec::Vec<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Alggbjmhace {
    #[prost(enumeration = "Okacifdimde", tag = "1")]
    pub imiogmdokcb: i32,
    #[prost(uint32, tag = "11")]
    pub abimanelkoc: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ekijbcdebid {
    #[prost(uint32, tag = "3")]
    pub elggebdbpij: u32,
    #[prost(uint32, tag = "4")]
    pub level_id: u32,
    #[prost(uint32, tag = "5")]
    pub epccchcgdao: u32,
    #[prost(bool, tag = "7")]
    pub bnaccmflpko: bool,
    #[prost(uint32, tag = "11")]
    pub aeinjfapknj: u32,
    #[prost(uint32, repeated, tag = "12")]
    pub dkhnhhndajp: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "13")]
    pub bdbnkngijlp: bool,
    #[prost(bool, tag = "15")]
    pub pmjlllfophk: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27311)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jdpclhiogng {
    #[prost(bool, tag = "4")]
    pub hcinocnlhcb: bool,
    #[prost(uint32, tag = "11")]
    pub aoegkkajean: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25030)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Digppgnofbg {
    #[prost(uint32, tag = "5")]
    pub prop_type: u32,
    #[prost(uint32, tag = "7")]
    pub anchbjdfhjh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(789)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eecpemdelda {
    #[prost(message, optional, tag = "11")]
    pub mmcpgdgehco: ::core::option::Option<Meenbhfdngj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3767)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bjgmphpnodg {
    #[prost(uint32, repeated, tag = "1")]
    pub ifgdbigfapm: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "12")]
    pub odfflefldoj: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7979)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Miagfgbdpod {
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29534)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mjkeolhgccp {
    #[prost(message, optional, tag = "8")]
    pub glehmlbodei: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "4")]
    pub phohknnapak: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "1")]
    pub ecokackbleo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20535)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lkpaicbpicb {
    #[prost(uint32, tag = "2")]
    pub city_id: u32,
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "13")]
    pub level: u32,
    #[prost(message, repeated, tag = "15")]
    pub item_list: ::prost::alloc::vec::Vec<Jickppdlohc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28350)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dpdcieofcbc {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct StatueGadgetInfo {
    #[prost(uint32, repeated, tag = "1")]
    pub opened_statue_uid_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ggjnmdcoehi {
    #[prost(uint32, tag = "2")]
    pub uid: u32,
    #[prost(uint32, tag = "5")]
    pub bjeecapappj: u32,
    #[prost(uint32, tag = "6")]
    pub lahonfcepnn: u32,
    #[prost(message, repeated, tag = "7")]
    pub ieencefpnpm: ::prost::alloc::vec::Vec<Bemnaikefon>,
    #[prost(uint32, tag = "8")]
    pub fegmjgapmbe: u32,
    #[prost(uint32, tag = "9")]
    pub nnigcoepfjd: u32,
    #[prost(uint32, tag = "12")]
    pub ffcanepcdhk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21595)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Paeadcfmpka {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21525)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ocbbjcjmcin {
    #[prost(message, repeated, tag = "15")]
    pub gjcfljpmnad: ::prost::alloc::vec::Vec<EntityMoveInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kjjflmfficn {
    #[prost(oneof = "kjjflmfficn::Lmbbpkakimg", tags = "12")]
    pub lmbbpkakimg: ::core::option::Option<kjjflmfficn::Lmbbpkakimg>,
}
/// Nested message and enum types in `KJJFLMFFICN`.
pub mod kjjflmfficn {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Lmbbpkakimg {
        #[prost(message, tag = "12")]
        DetailAbilityInfo(super::Knjlmgfkimb),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25968)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lnonlpomhao {
    #[prost(uint64, repeated, tag = "6")]
    pub mnchcggmlpa: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint32, tag = "13")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "5")]
    pub bodiejclgmb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Vector {
    #[prost(float, tag = "1")]
    pub x: f32,
    #[prost(float, tag = "2")]
    pub y: f32,
    #[prost(float, tag = "3")]
    pub z: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1222)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aobfhnmnjgj {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "6")]
    pub item_list: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(uint32, tag = "13")]
    pub hnogkehflhe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5583)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Opclbfjjjbn {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3595)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eceepamflkd {
    #[prost(string, tag = "4")]
    pub ocnikcmddpi: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kiblanedmoa {
    #[prost(uint32, tag = "4")]
    pub uid: u32,
    #[prost(message, repeated, tag = "7")]
    pub fehokhcmjpd: ::prost::alloc::vec::Vec<Jihhhapkbeh>,
    #[prost(message, repeated, tag = "14")]
    pub lfodppnbhmn: ::prost::alloc::vec::Vec<Jihhhapkbeh>,
    #[prost(enumeration = "Mggahfoamjf", tag = "15")]
    pub ophgapahhkc: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28251)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dabpbfppenj {
    #[prost(uint32, tag = "11")]
    pub eejdlgkmpdj: u32,
    #[prost(uint32, tag = "10")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22783)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kdekhingcog {
    #[prost(uint32, tag = "12")]
    pub level: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26198)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hdokmgmnjal {
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22351)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Blokboblcnk {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20478)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Glkpcfkgkcf {
    #[prost(uint32, repeated, tag = "9")]
    pub eekfelfangn: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26503)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lakomebanbf {
    #[prost(string, tag = "9")]
    pub dkhhpajbjif: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27163)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct EnterSceneReadyReq {
    #[prost(uint32, tag = "6")]
    pub enter_scene_token: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct SceneReliquaryInfo {
    #[prost(uint32, tag = "1")]
    pub item_id: u32,
    #[prost(uint64, tag = "2")]
    pub guid: u64,
    #[prost(uint32, tag = "3")]
    pub level: u32,
    #[prost(uint32, tag = "4")]
    pub promote_level: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4931)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lajcjcfoelj {
    #[prost(bool, tag = "7")]
    pub is_paused: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26040)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ckilhbcecbp {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mgccccmjdbi {
    #[prost(uint32, tag = "7")]
    pub entity_id: u32,
    #[prost(int32, tag = "8")]
    pub dmmdjommjik: i32,
    #[prost(uint32, tag = "10")]
    pub pnljnepogna: u32,
    #[prost(message, optional, tag = "13")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "15")]
    pub icfjcachlcm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27071)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Memjgpfahjk {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25015)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ClientSetGameTimeRsp {
    #[prost(uint32, tag = "2")]
    pub game_time: u32,
    #[prost(uint32, repeated, tag = "3")]
    pub adcbgmkpkjl: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "5")]
    pub client_game_time: u32,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8275)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jmcpkgcdepo {
    #[prost(message, optional, tag = "13")]
    pub kgekblnjonj: ::core::option::Option<Nkpfmnbhpdg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bacikmlghhn {
    #[prost(bool, tag = "2")]
    pub glkngddnocn: bool,
    #[prost(uint32, repeated, tag = "9")]
    pub inmbdifbgom: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "13")]
    pub eaipgemknpo: u32,
    #[prost(uint32, repeated, tag = "14")]
    pub hblbgajeecj: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22828)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mmijkkdlohk {
    #[prost(string, tag = "7")]
    pub msg: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Peebelmdiec {
    #[prost(bool, tag = "3")]
    pub mlifpdabpcf: bool,
    #[prost(bool, tag = "5")]
    pub lhamfackemf: bool,
    #[prost(bool, tag = "8")]
    pub hocbhpdhplf: bool,
    #[prost(uint32, tag = "10")]
    pub eikkfelngij: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Imccamjndaa {
    #[prost(uint32, tag = "5")]
    pub pmldnfnnjam: u32,
    #[prost(bool, tag = "14")]
    pub hcjfdjhilam: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8938)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iocoobaagnk {
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hkhgfihoknc {
    #[prost(uint32, tag = "1")]
    pub deddkkogeil: u32,
    #[prost(message, optional, tag = "4")]
    pub infhjiepnjd: ::core::option::Option<Dfokmedfpll>,
    #[prost(message, repeated, tag = "7")]
    pub item_list: ::prost::alloc::vec::Vec<Bpgcahbjncd>,
    #[prost(uint32, tag = "8")]
    pub bhebpjkagmo: u32,
    #[prost(uint32, tag = "9")]
    pub mhjhgimlhln: u32,
    #[prost(uint32, tag = "10")]
    pub nbdgkgplboe: u32,
    #[prost(bool, tag = "11")]
    pub bkampgbbbfp: bool,
    #[prost(bool, tag = "12")]
    pub picolpbcpgh: bool,
    #[prost(uint32, tag = "13")]
    pub config_id: u32,
    #[prost(string, repeated, tag = "14")]
    pub argument_list: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(enumeration = "Ehclpiiploh", tag = "15")]
    pub dbpcffboecf: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5760)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kfclehkcbgg {
    #[prost(uint32, tag = "3")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fogejoffjpp {
    #[prost(uint32, repeated, tag = "7")]
    pub gghbcjjfbag: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7224)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jppnnllknca {
    #[prost(uint32, tag = "5")]
    pub area_type: u32,
    #[prost(uint32, tag = "8")]
    pub area_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7745)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aekmkghjnpl {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ccnnidmjljn {
    #[prost(uint32, tag = "2")]
    pub eaipgemknpo: u32,
    #[prost(bool, tag = "5")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "6")]
    pub mkcgmmganlk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Apglckhigha {
    #[prost(uint32, tag = "3")]
    pub aiebbdlcdam: u32,
    #[prost(bool, tag = "6")]
    pub gedhjnkcdhh: bool,
    #[prost(uint32, tag = "7")]
    pub group_id: u32,
    #[prost(message, optional, tag = "8")]
    pub nneihdfonin: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "13")]
    pub hljnfjalbna: u32,
    #[prost(uint32, tag = "14")]
    pub chnhpdepcne: u32,
    #[prost(uint32, tag = "15")]
    pub config_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7339)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aenimpdnebb {
    #[prost(uint32, tag = "6")]
    pub nlahjgcjdei: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6744)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cmblcecncmo {
    #[prost(uint32, tag = "7")]
    pub fhcpckfnjal: u32,
    #[prost(uint32, tag = "14")]
    pub name_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24303)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hhemeolcpip {
    #[prost(uint64, tag = "8")]
    pub avatar_guid: u64,
    #[prost(bool, tag = "4")]
    pub ajmcnjpfkod: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28232)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dgpmldppecj {
    #[prost(bool, tag = "2")]
    pub oejcjaiekhh: bool,
    #[prost(uint32, tag = "6")]
    pub ldibalopgkb: u32,
    #[prost(message, optional, tag = "13")]
    pub nnpmlgapaan: ::core::option::Option<Olheklkendn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MpPlayRewardInfo {
    #[prost(uint32, tag = "1")]
    pub resin: u32,
    #[prost(uint32, repeated, tag = "2")]
    pub remain_uid_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "3")]
    pub qualify_uid_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6194)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ncioiiagljl {
    #[prost(message, optional, tag = "7")]
    pub mklgaeceklc: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "8")]
    pub hpoeckekafa: ::core::option::Option<Vector>,
    #[prost(int32, tag = "1")]
    pub uid: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29841)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Faabhjenjkc {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22497)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ocpidjcfdpf {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24517)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fdfomeigmha {
    #[prost(uint32, repeated, tag = "9")]
    pub jggobknpmfj: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "1")]
    pub ajjeblpnahp: u32,
    #[prost(uint32, tag = "14")]
    pub hggehlmhkmp: u32,
    #[prost(uint32, tag = "12")]
    pub point_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Phjneimepph {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ddapmcmnfcd {
    #[prost(message, repeated, tag = "5")]
    pub gfgmlcfflkh: ::prost::alloc::vec::Vec<Jnajjandbmo>,
    #[prost(uint32, tag = "8")]
    pub meehjdoecoa: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4975)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pncoenjoakm {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26260)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ngckimhdbpd {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2699)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mjdojdeegmp {
    #[prost(uint32, repeated, tag = "14")]
    pub force_id_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(528)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hhehojedfjh {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gaghifffhoi {
    #[prost(bool, tag = "3")]
    pub eogpkjnngca: bool,
    #[prost(float, tag = "8")]
    pub gcnfdfhjaof: f32,
    #[prost(uint32, tag = "14")]
    pub fhcpckfnjal: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pdddamoeekf {
    #[prost(string, tag = "1")]
    pub bmfkoonmmee: ::prost::alloc::string::String,
    #[prost(uint32, tag = "4")]
    pub index: u32,
    #[prost(message, optional, tag = "6")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
    #[prost(string, tag = "7")]
    pub dkhhpajbjif: ::prost::alloc::string::String,
    #[prost(uint32, tag = "8")]
    pub avatar_id: u32,
    #[prost(bool, tag = "9")]
    pub njbmdeneifm: bool,
    #[prost(uint32, tag = "11")]
    pub uid: u32,
    #[prost(string, tag = "13")]
    pub omknbnmebik: ::prost::alloc::string::String,
    #[prost(uint32, tag = "14")]
    pub cbbaclolncd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9672)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bmifpgpmfee {
    #[prost(message, repeated, tag = "15")]
    pub pnglaliocnn: ::prost::alloc::vec::Vec<Cofdgbnbmfe>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hopfeeipgjp {
    #[prost(message, optional, tag = "3")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "5")]
    pub guid: u32,
    #[prost(message, optional, tag = "7")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "15")]
    pub config_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jiiomjgcklo {
    #[prost(uint32, tag = "1")]
    pub avatar_id: u32,
    #[prost(map = "uint32, message", tag = "2")]
    pub prop_map: ::std::collections::HashMap<u32, PropValue>,
    #[prost(uint32, repeated, tag = "3")]
    pub talent_id_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(map = "uint32, float", tag = "4")]
    pub fight_prop_map: ::std::collections::HashMap<u32, f32>,
    #[prost(uint32, tag = "5")]
    pub skill_depot_id: u32,
    #[prost(uint32, tag = "6")]
    pub core_proud_skill_level: u32,
    #[prost(uint32, repeated, tag = "7")]
    pub inherent_proud_skill_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(map = "uint32, uint32", tag = "8")]
    pub skill_level_map: ::std::collections::HashMap<u32, u32>,
    #[prost(map = "uint32, uint32", tag = "9")]
    pub proud_skill_extra_level_map: ::std::collections::HashMap<u32, u32>,
    #[prost(message, repeated, tag = "10")]
    pub olemdmjpaka: ::prost::alloc::vec::Vec<Flmademmjjh>,
    #[prost(message, optional, tag = "11")]
    pub fetter_info: ::core::option::Option<AvatarFetterInfo>,
    #[prost(uint32, tag = "12")]
    pub costume_id: u32,
    #[prost(message, optional, tag = "13")]
    pub excel_info: ::core::option::Option<AvatarExcelInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23467)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ponkbpmgfhe {
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3354)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Licchjadpkm {
    #[prost(uint32, repeated, tag = "8")]
    pub agblcjcaegj: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "12")]
    pub jfkkmffpngi: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "13")]
    pub gabaoahlepf: u32,
    #[prost(bool, tag = "14")]
    pub ikpepkahabm: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25233)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mbfpdipmbpc {
    #[prost(uint32, tag = "1")]
    pub city_id: u32,
    #[prost(uint32, tag = "2")]
    pub config_id: u32,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3722)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PlayerGameTimeNotify {
    #[prost(uint32, tag = "8")]
    pub uid: u32,
    #[prost(uint32, tag = "9")]
    pub game_time: u32,
    #[prost(bool, tag = "11")]
    pub is_home: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9538)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Akkigjeeege {
    #[prost(uint32, tag = "1")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6208)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Goecgmimacf {
    #[prost(bool, tag = "3")]
    pub is_finish: bool,
    #[prost(uint32, tag = "4")]
    pub jkpcjabbgjb: u32,
    #[prost(uint32, tag = "10")]
    pub plelkcoknng: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dgdfibcmhgj {
    #[prost(uint32, tag = "9")]
    pub uid: u32,
    #[prost(bool, tag = "10")]
    pub daiffkglmfn: bool,
    #[prost(bool, tag = "15")]
    pub fejehlfaeio: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bonghpofpld {
    #[prost(message, repeated, tag = "1")]
    pub hepdpioilgd: ::prost::alloc::vec::Vec<Ehlkdkhkifl>,
    #[prost(enumeration = "Cmgooomlaia", tag = "7")]
    pub imiogmdokcb: i32,
    #[prost(uint32, tag = "14")]
    pub ooipgfedjmn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5949)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cefjdmcmdme {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "15")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lmnlilnkpho {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3891)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fjlpniljgkh {
    #[prost(bool, tag = "6")]
    pub fnoolfjbgid: bool,
    #[prost(uint64, tag = "7")]
    pub guid: u64,
    #[prost(uint32, tag = "15")]
    pub amlijkeniin: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1861)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ijimlonmhpl {
    #[prost(uint32, tag = "2")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(404)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gclbpiplgmn {
    #[prost(uint32, repeated, tag = "1")]
    pub gmpncfjlpab: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "7")]
    pub fenmlnkglib: bool,
    #[prost(bool, tag = "3")]
    pub bejeldkadfi: bool,
    #[prost(uint32, tag = "6")]
    pub hggehlmhkmp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ckbmklicbbo {
    #[prost(message, repeated, tag = "7")]
    pub ocfelhfnhka: ::prost::alloc::vec::Vec<Cfkoflpomok>,
    #[prost(uint32, tag = "14")]
    pub lladmbnfoam: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct AbilityEmbryo {
    #[prost(uint32, tag = "1")]
    pub ability_id: u32,
    #[prost(fixed32, tag = "2")]
    pub ability_name_hash: u32,
    #[prost(fixed32, tag = "3")]
    pub ability_override_name_hash: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22581)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Emlekdbefma {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2004)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Olggkbfefgk {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(uint32, tag = "12")]
    pub kmgeoboklnf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bnacfaengge {
    #[prost(string, tag = "1")]
    pub efajihmnobk: ::prost::alloc::string::String,
    #[prost(uint32, repeated, tag = "4")]
    pub mlcglcokkeg: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "5")]
    pub nfdkkmjkphh: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "7")]
    pub eiibffcnpof: ::prost::alloc::vec::Vec<Mlecmfllogc>,
    #[prost(string, tag = "8")]
    pub ijlhlcllene: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub nick_name: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "11")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
    #[prost(uint32, tag = "13")]
    pub llomlfjhalg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Iohoedhlmdd {
    #[prost(uint32, tag = "6")]
    pub pogflcpgmaf: u32,
    #[prost(int32, repeated, tag = "10")]
    pub gdiddpikeel: ::prost::alloc::vec::Vec<i32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dnfljpmgnkd {
    #[prost(bool, tag = "1")]
    pub ahgeecdilkm: bool,
    #[prost(uint64, tag = "4")]
    pub nkcolnajdca: u64,
    #[prost(bool, tag = "5")]
    pub ldjdfkmbgbl: bool,
    #[prost(bool, tag = "9")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "11")]
    pub oaicfbdhdhj: u32,
    #[prost(uint32, tag = "12")]
    pub fhbenanddig: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hjiiipeeiim {
    #[prost(uint32, repeated, tag = "3")]
    pub cmiieglhffl: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "4")]
    pub ibhdpgmkhhn: u32,
    #[prost(uint32, tag = "6")]
    pub pieapgepmlf: u32,
    #[prost(bool, tag = "8")]
    pub lailpnooajc: bool,
    #[prost(message, repeated, tag = "9")]
    pub iejjafibefp: ::prost::alloc::vec::Vec<Ombeifnnedf>,
    #[prost(message, repeated, tag = "11")]
    pub dghloieemcg: ::prost::alloc::vec::Vec<Ibdnaogmofo>,
    #[prost(message, repeated, tag = "12")]
    pub ganaoaindng: ::prost::alloc::vec::Vec<Ombeifnnedf>,
    #[prost(uint32, tag = "14")]
    pub lojpodllaif: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct RoutePoint {
    #[prost(message, optional, tag = "1")]
    pub position: ::core::option::Option<Vector>,
    #[prost(float, tag = "2")]
    pub arrive_range: f32,
    #[prost(bool, tag = "3")]
    pub fkdndpilljm: bool,
    #[prost(enumeration = "Algfpdoaafa", tag = "24")]
    pub point_type: i32,
    #[prost(oneof = "route_point::Ppkbbekfpia", tags = "11, 12")]
    pub ppkbbekfpia: ::core::option::Option<route_point::Ppkbbekfpia>,
    #[prost(oneof = "route_point::Cfcaegjncdl", tags = "21, 22, 23")]
    pub cfcaegjncdl: ::core::option::Option<route_point::Cfcaegjncdl>,
}
/// Nested message and enum types in `RoutePoint`.
pub mod route_point {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Ppkbbekfpia {
        #[prost(float, tag = "11")]
        Velocity(f32),
        #[prost(float, tag = "12")]
        Time(f32),
    }
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Cfcaegjncdl {
        #[prost(message, tag = "21")]
        Rotation(super::Vector),
        #[prost(message, tag = "22")]
        RotationSpeed(super::MathQuaternion),
        #[prost(message, tag = "23")]
        AxisSpeed(super::MathQuaternion),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bmhbnoahgag {
    #[prost(uint32, repeated, tag = "7")]
    pub fpladbdbhpc: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "10")]
    pub ilmkcapkflo: ::prost::alloc::vec::Vec<u32>,
    #[prost(enumeration = "Glnndhihpdf", tag = "13")]
    pub mbeniijdlna: i32,
    #[prost(uint32, repeated, tag = "15")]
    pub hdfmeefdpjj: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4165)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lnkmjgdghgh {
    #[prost(uint32, repeated, tag = "3")]
    pub gmlaoagjcao: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24971)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ilecoajkakn {
    #[prost(uint32, tag = "1")]
    pub monejdbpolb: u32,
    #[prost(uint32, repeated, tag = "2")]
    pub gogofpnokbk: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "3")]
    pub poaficpfpcj: u32,
    #[prost(uint32, tag = "4")]
    pub oedojblamdm: u32,
    #[prost(map = "uint32, message", tag = "5")]
    pub agnjkckecbo: ::std::collections::HashMap<u32, Jcfmhohidod>,
    #[prost(bool, tag = "6")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "8")]
    pub oajoobghagm: u32,
    #[prost(message, repeated, tag = "12")]
    pub jaebimkpkfe: ::prost::alloc::vec::Vec<Gbmaccklnje>,
    #[prost(uint32, tag = "13")]
    pub amlijkeniin: u32,
    #[prost(map = "uint32, message", tag = "14")]
    pub fmiebpkjjpj: ::std::collections::HashMap<u32, Ofbhcgggggn>,
    #[prost(
        oneof = "ilecoajkakn::Detail",
        tags = "21, 101, 191, 282, 567, 568, 612, 618, 638, 655, 685, 782, 794, 883, 889, 925, 931, 1033, 1047, 1058, 1111, 1156, 1174, 1280, 1302, 1377, 1382, 1392, 1448, 1505, 1529, 1564, 1630, 1724, 1734, 1864, 1910, 2039"
    )]
    pub detail: ::core::option::Option<ilecoajkakn::Detail>,
}
/// Nested message and enum types in `ILECOAJKAKN`.
pub mod ilecoajkakn {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(message, tag = "21")]
        BladeDanceSettleInfo(super::Fcgobfgpopj),
        #[prost(message, tag = "101")]
        CharMasterSettleInfo(super::Dhfhhmlendf),
        #[prost(message, tag = "191")]
        TowerLevelEndNotify(super::Gfnnbabomdh),
        #[prost(message, tag = "282")]
        CrystalLinkSettleInfo(super::Plcfjagcllk),
        #[prost(message, tag = "567")]
        FairyTalesCombatSettleInfo(super::Bjkojeginla),
        #[prost(message, tag = "568")]
        GainBuffSettleInfo(super::Nmnaeoabpgd),
        #[prost(message, tag = "612")]
        FilmfestBattleSettleInfo(super::Njimnjonhcg),
        #[prost(message, tag = "618")]
        SummerTimeV2DungeonSettleInfo(super::Bijijpeaggg),
        #[prost(message, tag = "638")]
        EffigyChallengeV5SettleInfo(super::Mohpadglamb),
        #[prost(message, tag = "655")]
        RoguelikeDungeonSettleInfo(super::Ihokgdihida),
        #[prost(message, tag = "685")]
        ChannellerSlabLoopDungeonResultInfo(super::Bcdhnjpildb),
        #[prost(message, tag = "782")]
        LostSamachurlSneakSettleInfo(super::Fdhdepgnmph),
        #[prost(message, tag = "794")]
        WindFieldDungeonSettleInfo(super::Hkbgidacbim),
        #[prost(message, tag = "883")]
        MistTrialSettleInfo(super::Cdbidcbdgal),
        #[prost(message, tag = "889")]
        AutoTimeStopSettleInfo(super::Epfekhpnimg),
        #[prost(message, tag = "925")]
        BulletHellSettleInfo(super::Knkljommjoo),
        #[prost(message, tag = "931")]
        PacmanSettleInfo(super::Badbjimdidk),
        #[prost(message, tag = "1033")]
        BomberDodocoSettleInfo(super::Nlfemfhpkjb),
        #[prost(message, tag = "1047")]
        QuickTimeCombatSettleInfo(super::Gembindeeeh),
        #[prost(message, tag = "1058")]
        FeverBattleSettleInfo(super::Ficbjoomddm),
        #[prost(message, tag = "1111")]
        RechargeDiskSettleInfo(super::Opdlemiaepk),
        #[prost(message, tag = "1156")]
        MultiCharacterDungeonSettleInfo(super::Ebljjgfccjf),
        #[prost(message, tag = "1174")]
        InspirationSpurtDungeonSettleInfo(super::Ebpebjjcfjm),
        #[prost(message, tag = "1280")]
        EffigyChallengeV2SettleInfo(super::Fheclpdoabl),
        #[prost(message, tag = "1302")]
        InstableSpraySettleInfo(super::Efjgmjbglhb),
        #[prost(message, tag = "1377")]
        TeamChainSettleInfo(super::Hnkklhcmklm),
        #[prost(message, tag = "1382")]
        FilmfestSniperSettleInfo(super::Nooaknjkicj),
        #[prost(message, tag = "1392")]
        CeremonyBattleSettleInfo(super::Ildklpolppb),
        #[prost(message, tag = "1448")]
        GoalChallengeSettleInfo(super::Agoohiedaip),
        #[prost(message, tag = "1505")]
        CooperateChallengeSettleInfo(super::Piggmfflihd),
        #[prost(message, tag = "1529")]
        EffigyChallengeDungeonResultInfo(super::Fcheommkjeb),
        #[prost(message, tag = "1564")]
        StaminaFightSettleInfo(super::Imhhiobhimg),
        #[prost(message, tag = "1630")]
        FungusFighterV3SettleInfo(super::Kdohkjmdabi),
        #[prost(message, tag = "1724")]
        AcrobaticsBattleSettleInfo(super::Nejpgchkklf),
        #[prost(message, tag = "1734")]
        RoleCombatSettleInfo(super::Hljfhhikken),
        #[prost(message, tag = "1864")]
        SlimeCannonSettleInfo(super::Adhdjknmeke),
        #[prost(message, tag = "1910")]
        FungusFighterV2SettleInfo(super::Cjihhahabho),
        #[prost(message, tag = "2039")]
        TrialAvatarFirstPassDungeonNotify(super::Bnheicceaog),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mblgamkolnh {
    #[prost(message, repeated, tag = "6")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Fjkeekcohpl>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2016)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ljjabooding {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24903)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mmggflokfod {
    #[prost(uint32, tag = "2")]
    pub finahglfhag: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct WeatherInfo {
    #[prost(uint32, tag = "1")]
    pub weather_area_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29991)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jdmgfcipnin {
    #[prost(message, repeated, tag = "6")]
    pub bgipcecajjh: ::prost::alloc::vec::Vec<Iljbekegpif>,
    #[prost(message, repeated, tag = "7")]
    pub mhlenclfckn: ::prost::alloc::vec::Vec<Iljbekegpif>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jehlcimijgn {
    #[prost(uint32, repeated, tag = "11")]
    pub cgcbidnpjba: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5875)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Njcnlbinmgi {
    #[prost(uint32, tag = "15")]
    pub area_id: u32,
    #[prost(uint32, tag = "12")]
    pub index: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29402)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jbgefkhgdmp {
    #[prost(uint32, tag = "2")]
    pub lpgihliaipl: u32,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(807)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AvatarEquipChangeNotify {
    #[prost(uint32, tag = "1")]
    pub equip_type: u32,
    #[prost(uint64, tag = "3")]
    pub avatar_guid: u64,
    #[prost(message, optional, tag = "4")]
    pub reliquary: ::core::option::Option<SceneReliquaryInfo>,
    #[prost(uint32, tag = "7")]
    pub item_id: u32,
    #[prost(uint64, tag = "10")]
    pub equip_guid: u64,
    #[prost(message, optional, tag = "12")]
    pub weapon: ::core::option::Option<SceneWeaponInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27250)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetScenePointRsp {
    #[prost(uint32, repeated, tag = "2")]
    pub aommpmbgcoe: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "3")]
    pub lpidfiibcjo: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "4")]
    pub scene_id: u32,
    #[prost(uint32, repeated, tag = "5")]
    pub kngiechcbdh: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "6")]
    pub belong_uid: u32,
    #[prost(uint32, repeated, tag = "7")]
    pub iobmaimghjo: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "8")]
    pub pnnkjhbfkka: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "9")]
    pub cblhebagpog: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "10")]
    pub is_relogin: bool,
    #[prost(uint32, repeated, tag = "11")]
    pub dfgocmalaap: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "12")]
    pub klpjmmaegdb: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "15")]
    pub jcllnnamcoo: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nebcilhoahf {
    #[prost(uint64, tag = "1")]
    pub jcflbhehnnc: u64,
    #[prost(message, repeated, tag = "2")]
    pub gkklpkbphng: ::prost::alloc::vec::Vec<Iihkhenlbce>,
    #[prost(uint64, tag = "5")]
    pub pgfdgkfjhji: u64,
    #[prost(float, tag = "12")]
    pub lcllndinkkp: f32,
    #[prost(message, repeated, tag = "15")]
    pub efhfpbemmbg: ::prost::alloc::vec::Vec<Iihkhenlbce>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cbmcenpmihi {
    #[prost(bool, tag = "5")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "9")]
    pub feehhbklage: u32,
    #[prost(uint32, tag = "12")]
    pub ejlncifpjgl: u32,
    #[prost(uint32, tag = "13")]
    pub mpmmpdogiga: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6882)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pcdkhlmbigd {
    #[prost(uint32, repeated, tag = "8")]
    pub ddbdiflnhdg: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4951)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ngaffkjdnba {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jaifgfijcno {
    #[prost(uint32, tag = "6")]
    pub config_id: u32,
    #[prost(bool, tag = "8")]
    pub ncallphknad: bool,
    #[prost(uint32, tag = "12")]
    pub phenkogjbcp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pkjmckidjfl {
    #[prost(uint32, tag = "11")]
    pub id: u32,
    #[prost(bool, tag = "13")]
    pub is_finish: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Damhkoknmhm {
    #[prost(uint32, tag = "1")]
    pub pnhkneinaca: u32,
    #[prost(message, repeated, tag = "2")]
    pub djmchfpiflm: ::prost::alloc::vec::Vec<Ngofpeolopf>,
    #[prost(uint32, tag = "4")]
    pub napcpmlnhme: u32,
    #[prost(message, repeated, tag = "6")]
    pub kgipbcbhaad: ::prost::alloc::vec::Vec<Jmblhdbaood>,
    #[prost(uint32, tag = "9")]
    pub city_id: u32,
    #[prost(message, repeated, tag = "10")]
    pub pogldpdffad: ::prost::alloc::vec::Vec<Lfjndjlgphf>,
    #[prost(uint32, tag = "11")]
    pub ofnogjpgbna: u32,
    #[prost(message, repeated, tag = "13")]
    pub efbgbhmgocj: ::prost::alloc::vec::Vec<Jgbhhlonijj>,
    #[prost(uint32, tag = "14")]
    pub hgbbglkplfi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lojigcpmdmk {
    #[prost(uint32, tag = "1")]
    pub cgjlickodnh: u32,
    #[prost(bool, tag = "2")]
    pub khdmihpghem: bool,
    #[prost(message, repeated, tag = "3")]
    pub eekbgcndecm: ::prost::alloc::vec::Vec<Djmoiaaeiem>,
    #[prost(uint32, tag = "4")]
    pub noabiplpace: u32,
    #[prost(bool, tag = "5")]
    pub hgmkgfcdfbe: bool,
    #[prost(message, optional, tag = "6")]
    pub phcljdcdcfp: ::core::option::Option<Djmoiaaeiem>,
    #[prost(uint32, tag = "7")]
    pub chemkpmdeoa: u32,
    #[prost(bool, tag = "8")]
    pub pjjdjmgpnle: bool,
    #[prost(uint32, tag = "9")]
    pub dcaeljlakhm: u32,
    #[prost(bool, tag = "11")]
    pub apjciikkigm: bool,
    #[prost(uint32, tag = "13")]
    pub level_id: u32,
    #[prost(uint32, tag = "14")]
    pub fkbjjopnofb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20135)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pckljbnkahi {
    #[prost(uint32, tag = "4")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mohpadglamb {
    #[prost(bool, tag = "3")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "5")]
    pub hggehlmhkmp: u32,
    #[prost(uint32, tag = "7")]
    pub kngjhmllcnp: u32,
    #[prost(uint32, repeated, tag = "11")]
    pub gmpncfjlpab: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "12")]
    pub kncbeijefii: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "13")]
    pub hkidjbfgpfp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3501)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hkmooaikfhn {
    #[prost(uint32, tag = "4")]
    pub addoemlbmbj: u32,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27255)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bjedaiilmoh {
    #[prost(uint32, tag = "9")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27437)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Llpcndhkbhh {
    #[prost(bool, tag = "4")]
    pub ednnnddpaij: bool,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(uint64, tag = "14")]
    pub ihgjlfcgfin: u64,
    #[prost(enumeration = "Kpfoblalblc", tag = "15")]
    pub daakpcoabep: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dfhohanjnne {
    #[prost(uint32, tag = "2")]
    pub jfocdfoobep: u32,
    #[prost(uint32, tag = "3")]
    pub pmjhkmkpnna: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27992)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ihdpfdhnhkf {
    #[prost(uint32, tag = "5")]
    pub bgmdlpabefa: u32,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(uint32, tag = "11")]
    pub finahglfhag: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1920)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ljmdilcdboc {
    #[prost(uint32, tag = "1")]
    pub cnaifgicldh: u32,
    #[prost(bool, tag = "3")]
    pub nkjbdclkogp: bool,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(string, tag = "13")]
    pub name: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21773)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Laekbfhffcd {
    #[prost(message, repeated, tag = "8")]
    pub dmbmjaiigec: ::prost::alloc::vec::Vec<Mkdekefnklf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20055)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gidnojopbdf {
    #[prost(message, optional, tag = "4")]
    pub lbbkkkbbffp: ::core::option::Option<Lcfljaaibio>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Igklnndncmg {
    #[prost(enumeration = "AvatarExpeditionState", tag = "1")]
    pub state: i32,
    #[prost(uint32, tag = "2")]
    pub mimeiglbopi: u32,
    #[prost(uint32, tag = "3")]
    pub cchopbcadig: u32,
    #[prost(uint32, tag = "4")]
    pub start_time: u32,
    #[prost(float, tag = "5")]
    pub pgiioibnkke: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25562)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kdcddgbkmen {
    #[prost(map = "uint64, message", tag = "4")]
    pub cjenicjpfge: ::std::collections::HashMap<u64, Igklnndncmg>,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21641)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kkkgbpkfcae {
    #[prost(uint32, tag = "13")]
    pub akckjlabnhd: u32,
    #[prost(uint32, tag = "4")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hbfbkimoogd {
    #[prost(uint32, tag = "14")]
    pub lbeinahahka: u32,
    #[prost(uint32, tag = "15")]
    pub nilalkpfcco: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ForceUpdateInfo {
    #[prost(string, tag = "1")]
    pub force_update_url: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22470)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Flbhgdcpebg {
    #[prost(uint32, tag = "6")]
    pub costume_id: u32,
    #[prost(uint64, tag = "3")]
    pub dljodpnohgd: u64,
    #[prost(uint64, tag = "5")]
    pub guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27038)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ehmjnpnhcbp {
    #[prost(uint32, tag = "9")]
    pub cnaifgicldh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3406)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Phfojlopghe {
    #[prost(uint32, tag = "3")]
    pub ffhpdcibkod: u32,
    #[prost(uint32, tag = "6")]
    pub cjdimmaimho: u32,
    #[prost(uint32, tag = "7")]
    pub pieapgepmlf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24643)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lcpcganminf {
    #[prost(int32, tag = "3")]
    pub kdemgbkboma: i32,
    #[prost(uint32, tag = "4")]
    pub apicibiflak: u32,
    #[prost(uint32, tag = "9")]
    pub attacker_id: u32,
    #[prost(int32, tag = "10")]
    pub edbfacbgbce: i32,
    #[prost(uint32, tag = "11")]
    pub ccacojpkpoh: u32,
    #[prost(int32, tag = "12")]
    pub entity_type: i32,
    #[prost(float, tag = "13")]
    pub kjpmlhhapje: f32,
    #[prost(oneof = "lcpcganminf::Fdpifholfbp", tags = "5, 6")]
    pub fdpifholfbp: ::core::option::Option<lcpcganminf::Fdpifholfbp>,
}
/// Nested message and enum types in `LCPCGANMINF`.
pub mod lcpcganminf {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Fdpifholfbp {
        #[prost(message, tag = "5")]
        ShapeSphere(super::Gfinlgdciin),
        #[prost(message, tag = "6")]
        ShapeBox(super::Phdaeehjbba),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pofjalommmf {
    #[prost(uint32, tag = "3")]
    pub lladmbnfoam: u32,
    #[prost(message, repeated, tag = "9")]
    pub gjpidehlfmd: ::prost::alloc::vec::Vec<Ambnedakhfp>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22780)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lpohnndnoll {
    #[prost(uint32, tag = "2")]
    pub pieapgepmlf: u32,
    #[prost(uint32, tag = "4")]
    pub fbfdaklpefb: u32,
    #[prost(uint32, tag = "5")]
    pub mndhnpjnngp: u32,
    #[prost(message, optional, tag = "8")]
    pub kpcpnehcmej: ::core::option::Option<Efegiimaomi>,
    #[prost(message, optional, tag = "9")]
    pub epndbdpklep: ::core::option::Option<Gjdjpcpphic>,
    #[prost(uint32, tag = "14")]
    pub hmogllbdgjm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25195)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hghhnbeokok {
    #[prost(message, optional, tag = "4")]
    pub bdaledoahfa: ::core::option::Option<Ngofpeolopf>,
    #[prost(uint32, tag = "15")]
    pub ofnogjpgbna: u32,
    #[prost(uint32, tag = "2")]
    pub bhgdnciojdj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AvatarTeam {
    #[prost(uint64, repeated, tag = "4")]
    pub avatar_guid_list: ::prost::alloc::vec::Vec<u64>,
    #[prost(string, tag = "5")]
    pub team_name: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Alkbannmcbh {
    #[prost(uint32, tag = "9")]
    pub count: u32,
    #[prost(uint32, tag = "15")]
    pub aadkglakicj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29272)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fpkjpjodibd {
    #[prost(uint32, tag = "13")]
    pub kmgeoboklnf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26483)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gfipmchlnmk {
    #[prost(uint32, tag = "5")]
    pub draft_id: u32,
    #[prost(bool, tag = "12")]
    pub moaelibphoi: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21310)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cpcagmcmnko {
    #[prost(message, repeated, tag = "10")]
    pub gjihlnaeggd: ::prost::alloc::vec::Vec<Pimeinbajfb>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3707)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Glbcpjeadhh {
    #[prost(uint32, tag = "11")]
    pub level_id: u32,
    #[prost(uint32, tag = "6")]
    pub hoceceaalmd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9186)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gchbljfdamg {
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fchfmadjied {
    #[prost(uint64, tag = "2")]
    pub avatar_guid: u64,
    #[prost(uint32, repeated, tag = "6")]
    pub ljnhbcgoddi: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "8")]
    pub entity_id: u32,
    #[prost(uint32, repeated, tag = "11")]
    pub bnkbjokaeog: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25818)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fakmdbammkh {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29130)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lnhihnndidg {
    #[prost(uint32, tag = "13")]
    pub pijfdbikfkb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8936)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ijmfphjfmpb {
    #[prost(uint32, tag = "10")]
    pub hbckgdpdpjg: u32,
    #[prost(uint32, tag = "5")]
    pub ljimckhkiin: u32,
    #[prost(uint32, tag = "4")]
    pub hgedgcibabj: u32,
    #[prost(uint32, tag = "7")]
    pub ocogbonfhgd: u32,
    #[prost(uint32, tag = "6")]
    pub ggigcllhefm: u32,
    #[prost(uint32, tag = "8")]
    pub ncbfiaibfpa: u32,
    #[prost(uint32, tag = "12")]
    pub bfooomcghap: u32,
    #[prost(uint32, tag = "2")]
    pub hgbeodjlopj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ijjkjdgcbem {
    #[prost(uint32, tag = "5")]
    pub gciedacelim: u32,
    #[prost(uint32, tag = "8")]
    pub kngbdmdcnhk: u32,
    #[prost(uint32, tag = "13")]
    pub glgedflcgal: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6733)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lgnmghikidb {
    #[prost(uint32, tag = "14")]
    pub fckgaeokoid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2452)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mhedbhkeefl {
    #[prost(enumeration = "StoreType", tag = "2")]
    pub store_type: i32,
    #[prost(uint32, tag = "3")]
    pub pcmelffpegc: u32,
    #[prost(uint32, tag = "6")]
    pub weight_limit: u32,
    #[prost(uint32, tag = "8")]
    pub lfedheogicp: u32,
    #[prost(uint32, tag = "9")]
    pub ggigoodbbki: u32,
    #[prost(uint32, tag = "10")]
    pub mlmplaomlnk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23664)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ogeleglfmhl {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mkpoefoilgb {
    #[prost(uint32, tag = "2")]
    pub dijkcdkokba: u32,
    #[prost(uint32, tag = "10")]
    pub naiooghbhdf: u32,
    #[prost(uint32, tag = "11")]
    pub ibbkmjbhbma: u32,
    #[prost(message, optional, tag = "12")]
    pub fgaeincckdk: ::core::option::Option<Olheklkendn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hnecjfgcafg {
    #[prost(message, repeated, tag = "9")]
    pub pndpnmbdokf: ::prost::alloc::vec::Vec<Mhogjcokaca>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3974)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dboghnmginp {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(uint32, tag = "11")]
    pub mliofjeoklg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pahoicknmep {
    #[prost(bool, tag = "4")]
    pub gdfoebgclhc: bool,
    #[prost(uint64, tag = "13")]
    pub avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5096)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gdcohpdjble {
    #[prost(uint32, tag = "7")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22709)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iimkmailpno {
    #[prost(uint32, tag = "5")]
    pub aoegkkajean: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kcplhcnkghg {
    #[prost(int32, tag = "6")]
    pub mdmmnleemdf: i32,
    #[prost(uint32, tag = "8")]
    pub key: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21345)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct AvatarWearFlycloakRsp {
    #[prost(uint32, tag = "8")]
    pub flycloak_id: u32,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
    #[prost(uint64, tag = "13")]
    pub avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kkiaddodloi {
    #[prost(uint32, tag = "5")]
    pub llomlfjhalg: u32,
    #[prost(uint32, tag = "8")]
    pub fnmnpilhpgl: u32,
    #[prost(uint32, tag = "11")]
    pub idkeilcenfk: u32,
    #[prost(uint32, tag = "12")]
    pub phdcilagdoj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27513)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lpebbipgpak {
    #[prost(map = "uint32, uint32", tag = "14")]
    pub pffbjofbdnp: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9283)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Anmpbaacjch {
    #[prost(uint32, tag = "12")]
    pub ndlpmmnppad: u32,
    #[prost(uint32, tag = "14")]
    pub epfcidiklkg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7399)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ohobiilbjjk {
    #[prost(message, optional, tag = "7")]
    pub hckdfmkemci: ::core::option::Option<Ifpnjpjlnof>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3716)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hcdikepcibn {
    #[prost(string, tag = "2")]
    pub dibdhhdadlf: ::prost::alloc::string::String,
    #[prost(enumeration = "Lobgomipgai", tag = "9")]
    pub dgcdhpmegkg: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24502)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dcpofbkkhjb {
    #[prost(uint32, tag = "3")]
    pub discount_num: u32,
    #[prost(uint32, tag = "10")]
    pub discount_num_limit: u32,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3811)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mcbnejdmgcj {
    #[prost(string, tag = "7")]
    pub lkfgeagbpga: ::prost::alloc::string::String,
    #[prost(uint32, tag = "9")]
    pub linbeicjmio: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23415)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fgdflecamcc {
    #[prost(message, repeated, tag = "9")]
    pub gcffnlekkjh: ::prost::alloc::vec::Vec<Ddofekcbiic>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Geemaadbnji {
    #[prost(uint32, tag = "8")]
    pub godogijjjia: u32,
    #[prost(bool, tag = "11")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "12")]
    pub iejpghnlidb: u32,
    #[prost(oneof = "geemaadbnji::Detail", tags = "3, 9, 14")]
    pub detail: ::core::option::Option<geemaadbnji::Detail>,
}
/// Nested message and enum types in `GEEMAADBNJI`.
pub mod geemaadbnji {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(message, tag = "3")]
        FallInfo(super::Jaepbkgeddl),
        #[prost(message, tag = "9")]
        MusicInfo(super::Enfmopieema),
        #[prost(message, tag = "14")]
        BalloonInfo(super::Jbjfcekclge),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5184)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ahehadbbkgb {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22264)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pkodmodkoel {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8246)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jihddfbdlcb {
    #[prost(uint32, repeated, tag = "5")]
    pub hnempaagmdn: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(uint32, tag = "15")]
    pub cakpdnkkgen: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pimeinbajfb {
    #[prost(uint32, tag = "2")]
    pub level: u32,
    #[prost(uint32, tag = "5")]
    pub fagpphacnbj: u32,
    #[prost(uint32, tag = "7")]
    pub fmhpjlfhlfm: u32,
    #[prost(bool, tag = "10")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28906)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lhieldacefm {
    #[prost(uint64, repeated, tag = "2")]
    pub dokagagpmca: ::prost::alloc::vec::Vec<u64>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2796)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bliejfanfeh {
    #[prost(uint32, tag = "3")]
    pub dnbefljlamb: u32,
    #[prost(uint32, tag = "5")]
    pub finahglfhag: u32,
    #[prost(message, repeated, tag = "11")]
    pub kcahjmfnmmk: ::prost::alloc::vec::Vec<Eblgakaodkk>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7588)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jpgibpoddef {
    #[prost(uint32, tag = "13")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(802)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ClientSetGameTimeReq {
    #[prost(bool, tag = "5")]
    pub is_force_set: bool,
    #[prost(uint32, tag = "15")]
    pub client_game_time: u32,
    #[prost(uint32, tag = "7")]
    pub game_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22904)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pjpdgieheii {
    #[prost(uint32, tag = "8")]
    pub ffhpdcibkod: u32,
    #[prost(uint32, tag = "9")]
    pub jcpmenncbda: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Joclmphljbb {
    #[prost(uint32, tag = "3")]
    pub lmfecbhlmbd: u32,
    #[prost(message, optional, tag = "4")]
    pub lipecknceii: ::core::option::Option<Fmpagifcmlj>,
    #[prost(message, optional, tag = "6")]
    pub golemmjgijl: ::core::option::Option<Agefelgnkla>,
    #[prost(message, repeated, tag = "10")]
    pub kckepcmlihi: ::prost::alloc::vec::Vec<Mcigbdljifh>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hhlmfpohmch {
    #[prost(uint32, tag = "1")]
    pub cbflknimppm: u32,
    #[prost(map = "uint32, uint32", tag = "6")]
    pub mhgcjhmbjdj: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "11")]
    pub config_id: u32,
    #[prost(bool, tag = "12")]
    pub pmjlllfophk: bool,
    #[prost(uint32, tag = "13")]
    pub group_id: u32,
    #[prost(uint32, tag = "14")]
    pub adjnolplkoa: u32,
    #[prost(bool, tag = "15")]
    pub cpohjleclok: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20132)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pebfbdonhlo {
    #[prost(uint32, repeated, tag = "3")]
    pub jhlbppfggpg: ::prost::alloc::vec::Vec<u32>,
    #[prost(enumeration = "Nfonhfamdne", repeated, tag = "5")]
    pub ancflfipdei: ::prost::alloc::vec::Vec<i32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6867)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Enngigicnoc {
    #[prost(uint32, tag = "11")]
    pub jcmchgnnlmj: u32,
    #[prost(uint32, tag = "12")]
    pub finahglfhag: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lplgpnfpbkl {
    #[prost(float, tag = "4")]
    pub npbpbnndllf: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jhjiliaanko {
    #[prost(bool, tag = "2")]
    pub is_add: bool,
    #[prost(uint32, tag = "3")]
    pub innkmkkbbpk: u32,
    #[prost(uint32, tag = "5")]
    pub lfnobkniajh: u32,
    #[prost(oneof = "jhjiliaanko::Detail", tags = "151, 778, 901, 1734")]
    pub detail: ::core::option::Option<jhjiliaanko::Detail>,
}
/// Nested message and enum types in `JHJILIAANKO`.
pub mod jhjiliaanko {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(message, tag = "151")]
        CardResult(super::Ebponabnlje),
        #[prost(message, tag = "778")]
        AvatarResult(super::Hppankbcfgi),
        #[prost(message, tag = "901")]
        AvatarAvailableCountResult(super::Jgblkfdnihf),
        #[prost(message, tag = "1734")]
        CoinResult(super::Kdpbgpnncld),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21841)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bnklcignflb {
    #[prost(enumeration = "Bblamelipgm", tag = "5")]
    pub imiogmdokcb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20378)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Akddnalkcnl {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22617)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Henbjgpnoen {
    #[prost(uint32, tag = "6")]
    pub epfcidiklkg: u32,
    #[prost(uint32, tag = "8")]
    pub group_id: u32,
    #[prost(uint32, tag = "14")]
    pub jimelgdjmlf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28562)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ichlhcppadj {
    #[prost(string, tag = "10")]
    pub jofcomombdo: ::prost::alloc::string::String,
    #[prost(enumeration = "Aplfhdmbkhc", tag = "11")]
    pub amgkaojakgm: i32,
    #[prost(enumeration = "Flmmanlpmnb", tag = "14")]
    pub ibipcgcoifg: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bcdnfnmfijc {
    #[prost(uint32, repeated, tag = "1")]
    pub dmagpfepmpg: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, optional, tag = "3")]
    pub akgooiibcom: ::core::option::Option<Hopfeeipgjp>,
    #[prost(uint32, tag = "4")]
    pub ohemoadeajp: u32,
    #[prost(bool, tag = "7")]
    pub nofdmpeggce: bool,
    #[prost(bool, tag = "8")]
    pub hhdnnmnhnci: bool,
    #[prost(bool, tag = "9")]
    pub jkjhkfdnepm: bool,
    #[prost(uint32, tag = "14")]
    pub oilcnlikkib: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26162)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Flelmacahhi {
    #[prost(uint32, tag = "9")]
    pub epfcidiklkg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9034)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mfleoajkoop {
    #[prost(message, optional, tag = "14")]
    pub plagnbjpbha: ::core::option::Option<Efegiimaomi>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28162)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nmmlphgikde {
    #[prost(bool, tag = "6")]
    pub miigdddjden: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21275)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nbdlmbaiodf {
    #[prost(uint32, repeated, tag = "7")]
    pub uid_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ppefapbbigc {
    #[prost(bool, tag = "1")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "5")]
    pub level_id: u32,
    #[prost(uint32, tag = "9")]
    pub nmaapldbbni: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25179)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jfbnnfddfna {
    #[prost(message, repeated, tag = "5")]
    pub lnhaddhlhki: ::prost::alloc::vec::Vec<Hhfjebhlghh>,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(bool, tag = "10")]
    pub bnffigfaiao: bool,
    #[prost(uint32, tag = "11")]
    pub imiogmdokcb: u32,
    #[prost(uint32, tag = "12")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2358)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lbpmhegepnh {
    #[prost(bool, tag = "13")]
    pub bkfhphpgdnh: bool,
    #[prost(int32, tag = "15")]
    pub uid: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29779)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oinbmdpckoo {
    #[prost(uint32, tag = "1")]
    pub anblhiacjil: u32,
    #[prost(uint32, tag = "3")]
    pub ffhpdcibkod: u32,
    #[prost(uint32, tag = "4")]
    pub score: u32,
    #[prost(uint32, tag = "11")]
    pub jenagocpdkl: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29104)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mllnbjhmilp {
    #[prost(uint32, tag = "3")]
    pub ffhpdcibkod: u32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2806)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cmakipkaach {
    #[prost(uint32, repeated, tag = "5")]
    pub uid_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "7")]
    pub nekecfnahom: u32,
    #[prost(enumeration = "Hdmdabcdahk", tag = "12")]
    pub imiogmdokcb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26648)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aljfhgflkdj {
    #[prost(uint32, tag = "14")]
    pub offering_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29466)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eciclohkhdi {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(uint32, tag = "15")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gooockgeefh {
    #[prost(uint32, tag = "5")]
    pub avatar_id: u32,
    #[prost(bool, tag = "7")]
    pub pgpkmokbfam: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29988)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cojhmaoehkm {
    #[prost(uint32, tag = "3")]
    pub ffhpdcibkod: u32,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1517)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Niajmlinggi {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1324)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ljeioaledan {
    #[prost(message, repeated, tag = "3")]
    pub param_list: ::prost::alloc::vec::Vec<Cacglibjiie>,
    #[prost(enumeration = "Kpfoblalblc", tag = "14")]
    pub daakpcoabep: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21032)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jmloaeeenck {
    #[prost(uint32, tag = "5")]
    pub parent_quest_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Npggiapaihn {
    #[prost(uint32, tag = "2")]
    pub doiihabehko: u32,
    #[prost(message, optional, tag = "4")]
    pub ghniillngkc: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "7")]
    pub ref_id: u32,
    #[prost(message, optional, tag = "9")]
    pub ref_pos: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "10")]
    pub oipcdlondgp: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gonnebehpce {
    #[prost(message, repeated, tag = "7")]
    pub piijcnnieco: ::prost::alloc::vec::Vec<Dchlobngomn>,
    #[prost(message, optional, tag = "9")]
    pub akgooiibcom: ::core::option::Option<Nijkankibla>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23998)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Japjgkgmfgl {
    #[prost(uint32, tag = "5")]
    pub level_id: u32,
    #[prost(uint32, tag = "6")]
    pub hajlkkofpen: u32,
    #[prost(uint32, tag = "7")]
    pub olncdabdlda: u32,
    #[prost(bool, tag = "9")]
    pub omeniamedce: bool,
    #[prost(bool, tag = "15")]
    pub kodnaagljdl: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dccikbofgkg {
    #[prost(int32, tag = "2")]
    pub kijohgonmma: i32,
    #[prost(message, optional, tag = "6")]
    pub hpoeckekafa: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "15")]
    pub ejnocldgpef: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27723)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hmkdbekgppg {
    #[prost(string, repeated, tag = "7")]
    pub bfhjmpmmkkk: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28545)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bddgbpnjckd {
    #[prost(bool, tag = "12")]
    pub is_add: bool,
    #[prost(uint32, repeated, tag = "13")]
    pub nljcodddnfp: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hekghbfomii {
    #[prost(message, repeated, tag = "1")]
    pub mnfcnbiepnh: ::prost::alloc::vec::Vec<Giibefajgbk>,
    #[prost(message, repeated, tag = "4")]
    pub cjbjinieicp: ::prost::alloc::vec::Vec<Elnajehamjl>,
    #[prost(uint32, repeated, tag = "7")]
    pub hjehlpbgnim: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "8")]
    pub lfapmglggbg: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "9")]
    pub indimdaicce: ::prost::alloc::vec::Vec<Bjkfjpjdmic>,
    #[prost(bool, tag = "10")]
    pub ipdbkmdeomf: bool,
    #[prost(message, repeated, tag = "13")]
    pub bjkbopggpjm: ::prost::alloc::vec::Vec<Enlafolmiog>,
    #[prost(uint32, repeated, tag = "14")]
    pub dkimeemcdio: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22507)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bjgplphcoom {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mcmknaedhon {
    #[prost(uint32, tag = "9")]
    pub costume_id: u32,
    #[prost(uint32, tag = "14")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct FightPropPair {
    #[prost(uint32, tag = "1")]
    pub prop_type: u32,
    #[prost(float, tag = "2")]
    pub prop_value: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9344)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kadobopihjl {
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mddagbicmke {
    #[prost(uint32, tag = "3")]
    pub hggehlmhkmp: u32,
    #[prost(map = "uint32, message", tag = "5")]
    pub hajoleipgnp: ::std::collections::HashMap<u32, Nmkndnhoppm>,
    #[prost(uint32, tag = "10")]
    pub ibcpgooajkg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21403)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fcfjdpgcomn {
    #[prost(uint32, tag = "8")]
    pub anhdimegdln: u32,
    #[prost(uint32, tag = "9")]
    pub hnmjkbepnml: u32,
    #[prost(message, repeated, tag = "15")]
    pub gnbhbgoilfp: ::prost::alloc::vec::Vec<Npjpiooloko>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21742)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pgipebioofh {
    #[prost(string, tag = "5")]
    pub bfpmihhhmip: ::prost::alloc::string::String,
    #[prost(message, repeated, tag = "10")]
    pub hpagcfjiekp: ::prost::alloc::vec::Vec<Gpjghadeoen>,
    #[prost(message, repeated, tag = "11")]
    pub amfbnejghma: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(uint32, tag = "14")]
    pub gmghajidboe: u32,
    #[prost(oneof = "pgipebioofh::Accefdlpfgh", tags = "966, 1644")]
    pub accefdlpfgh: ::core::option::Option<pgipebioofh::Accefdlpfgh>,
}
/// Nested message and enum types in `PGIPEBIOOFH`.
pub mod pgipebioofh {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Accefdlpfgh {
        #[prost(uint32, tag = "966")]
        SlotId(u32),
        #[prost(uint32, tag = "1644")]
        FurnitureSuiteId(u32),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24833)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hofjnjafafe {
    #[prost(uint32, tag = "3")]
    pub kngbdmdcnhk: u32,
    #[prost(uint32, tag = "2")]
    pub aiebbdlcdam: u32,
    #[prost(uint32, tag = "11")]
    pub ghlbjahjehf: u32,
    #[prost(bool, tag = "4")]
    pub kodnaagljdl: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20236)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kahgmbdpdbd {
    #[prost(uint32, tag = "8")]
    pub uid: u32,
    #[prost(string, tag = "14")]
    pub efajihmnobk: ::prost::alloc::string::String,
    #[prost(string, tag = "15")]
    pub ijlhlcllene: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Reliquary {
    #[prost(uint32, tag = "1")]
    pub level: u32,
    #[prost(uint32, tag = "2")]
    pub exp: u32,
    #[prost(uint32, tag = "3")]
    pub promote_level: u32,
    #[prost(uint32, tag = "4")]
    pub main_prop_id: u32,
    #[prost(uint32, repeated, tag = "5")]
    pub append_prop_id_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "6")]
    pub lceenmifapm: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6845)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iblfgakcoan {
    #[prost(uint32, tag = "5")]
    pub ampeopeomad: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bpiimjohgee {
    #[prost(uint32, tag = "6")]
    pub ooipgfedjmn: u32,
    #[prost(uint32, tag = "8")]
    pub dajhkhflndj: u32,
    #[prost(enumeration = "Cmgooomlaia", tag = "12")]
    pub imiogmdokcb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hdcfbppbplf {
    #[prost(message, repeated, tag = "11")]
    pub avatar_list: ::prost::alloc::vec::Vec<Peijajnggoe>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cjnehmhbamo {
    #[prost(uint32, tag = "1")]
    pub mbkommkghof: u32,
    #[prost(uint32, tag = "5")]
    pub bfcfpldnngm: u32,
    #[prost(fixed32, tag = "14")]
    pub hgbbglkplfi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6928)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jdliddkipcn {
    #[prost(message, optional, tag = "14")]
    pub mnpoiilnkob: ::core::option::Option<Pfpomopllnm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(508)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fpjbofnaald {
    #[prost(uint32, tag = "3")]
    pub dlhajheokgi: u32,
    #[prost(uint32, tag = "5")]
    pub kpainmemhab: u32,
    #[prost(uint32, tag = "6")]
    pub group_id: u32,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
    #[prost(uint32, tag = "13")]
    pub liolfafenpj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hdgjjajdeco {
    #[prost(bool, tag = "6")]
    pub omeniamedce: bool,
    #[prost(message, optional, tag = "11")]
    pub nganceicghc: ::core::option::Option<Cpajafhanak>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5136)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nkigbcachfa {
    #[prost(uint32, tag = "13")]
    pub benakhnfdpj: u32,
    #[prost(uint32, tag = "3")]
    pub nbjnmkfeeng: u32,
    #[prost(uint32, tag = "12")]
    pub lddcajjpoah: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2524)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cenjbmkecdi {
    #[prost(uint32, tag = "15")]
    pub cfbofcgikic: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20493)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Haeheodchje {
    #[prost(uint32, tag = "2")]
    pub iaciifabjbj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20563)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kclaipljcgd {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hopikhoionp {
    #[prost(bool, tag = "10")]
    pub gpmjcjeoojc: bool,
    #[prost(uint32, tag = "13")]
    pub kmbphnnjpij: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pbioijnmcjo {
    #[prost(message, repeated, tag = "10")]
    pub lgfpfkpanpi: ::prost::alloc::vec::Vec<Baadcbgpefo>,
    #[prost(enumeration = "Kbaiomioccp", tag = "11")]
    pub jmlabobclde: i32,
    #[prost(enumeration = "Cmgooomlaia", tag = "14")]
    pub imiogmdokcb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24146)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Figlifipjdp {
    #[prost(message, repeated, tag = "6")]
    pub iecbcfcicoj: ::prost::alloc::vec::Vec<Ofcloobnfgl>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7563)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kppinfjofnj {
    #[prost(uint32, tag = "11")]
    pub aoegkkajean: u32,
    #[prost(bool, tag = "4")]
    pub moaelibphoi: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28999)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Colcekbllki {
    #[prost(message, repeated, tag = "2")]
    pub bbopfhaodop: ::prost::alloc::vec::Vec<Ajmimbmcabe>,
    #[prost(uint32, tag = "15")]
    pub finahglfhag: u32,
    #[prost(uint32, tag = "11")]
    pub hggehlmhkmp: u32,
    #[prost(uint32, tag = "7")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8975)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ekenobkophg {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27567)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ocnabbfgddh {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21255)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ijikdjdofdo {
    #[prost(bool, tag = "2")]
    pub bmbdkfchbbn: bool,
    #[prost(uint32, tag = "3")]
    pub edkmhlpplgh: u32,
    #[prost(uint32, tag = "7")]
    pub avatar_id: u32,
    #[prost(uint32, tag = "11")]
    pub level_id: u32,
    #[prost(uint32, tag = "12")]
    pub point_id: u32,
    #[prost(bool, tag = "14")]
    pub jnmimjfgljb: bool,
    #[prost(uint32, tag = "15")]
    pub element_type: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lkkfhdfbahj {
    #[prost(uint32, tag = "2")]
    pub nmaapldbbni: u32,
    #[prost(uint32, tag = "9")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4064)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bmkeecepifi {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Elnajehamjl {
    #[prost(uint32, tag = "1")]
    pub skill_id: u32,
    #[prost(message, repeated, tag = "4")]
    pub lapnpeiacnl: ::prost::alloc::vec::Vec<Ombeifnnedf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hkdcdfdmpmo {
    #[prost(bool, tag = "4")]
    pub cnjcgpjckdi: bool,
    #[prost(bool, tag = "6")]
    pub pmjlllfophk: bool,
    #[prost(bool, tag = "7")]
    pub eddeeflkcan: bool,
    #[prost(bool, tag = "9")]
    pub mipjlecmmjk: bool,
    #[prost(bool, tag = "11")]
    pub hpmjinlnncp: bool,
    #[prost(uint32, tag = "13")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3256)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iohcjjfblkd {
    #[prost(bool, tag = "13")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "14")]
    pub diceglmncpd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27945)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ekakakfbpdn {
    #[prost(uint32, tag = "5")]
    pub hnogkehflhe: u32,
    #[prost(uint32, tag = "13")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25486)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nmedljabofj {
    #[prost(map = "uint32, uint32", tag = "5")]
    pub idkjlfhcgfo: ::std::collections::HashMap<u32, u32>,
    #[prost(string, tag = "15")]
    pub version: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1673)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gffhmoldapa {
    #[prost(uint32, tag = "3")]
    pub entity_id: u32,
    #[prost(message, optional, tag = "6")]
    pub position: ::core::option::Option<Vector>,
    #[prost(uint64, tag = "9")]
    pub chair_id: u64,
    #[prost(int32, tag = "15")]
    pub direction: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21090)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Njjphdkkkdk {
    #[prost(message, repeated, tag = "10")]
    pub gcffnlekkjh: ::prost::alloc::vec::Vec<Ddofekcbiic>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct AnimatorParameterValueInfo {
    #[prost(uint32, tag = "1")]
    pub para_type: u32,
    #[prost(oneof = "animator_parameter_value_info::Bagijokgeic", tags = "2, 3, 4")]
    pub bagijokgeic: ::core::option::Option<animator_parameter_value_info::Bagijokgeic>,
}
/// Nested message and enum types in `AnimatorParameterValueInfo`.
pub mod animator_parameter_value_info {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Bagijokgeic {
        #[prost(int32, tag = "2")]
        IntVal(i32),
        #[prost(float, tag = "3")]
        FloatVal(f32),
        #[prost(bool, tag = "4")]
        BoolVal(bool),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oamhdlmdfkp {
    #[prost(message, repeated, tag = "2")]
    pub kikeobngppo: ::prost::alloc::vec::Vec<Ondpndjgpho>,
    #[prost(uint32, tag = "14")]
    pub ogfeicdecao: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5706)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ihhimahmpej {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1641)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kfmohglggco {
    #[prost(uint32, tag = "2")]
    pub hgnfekjabcf: u32,
    #[prost(uint64, tag = "3")]
    pub avatar_guid: u64,
    #[prost(uint32, tag = "7")]
    pub cpiickiklja: u32,
    #[prost(uint32, tag = "15")]
    pub lifnclihicj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27015)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pnnalmbkpfd {
    #[prost(uint32, tag = "3")]
    pub uid: u32,
    #[prost(uint32, tag = "5")]
    pub cbbaclolncd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26507)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Egppebjadpk {
    #[prost(uint32, tag = "4")]
    pub ffhpdcibkod: u32,
    #[prost(message, optional, tag = "5")]
    pub nganceicghc: ::core::option::Option<Fpknoklofho>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1530)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pdphepgijlg {
    #[prost(uint64, repeated, tag = "3")]
    pub avatar_guid_list: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint64, tag = "4")]
    pub cur_avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20710)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mddpofcadgc {
    #[prost(float, tag = "2")]
    pub nljejpgcpci: f32,
    #[prost(enumeration = "Ioeoeimkmjd", tag = "3")]
    pub imiogmdokcb: i32,
    #[prost(uint32, tag = "4")]
    pub prop_type: u32,
    #[prost(float, tag = "12")]
    pub jhccpfipjpm: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kkaklbdlooe {
    #[prost(message, repeated, tag = "2")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Ekijbcdebid>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lkhdonhbjag {
    #[prost(uint32, tag = "8")]
    pub element_type: u32,
    #[prost(uint32, tag = "15")]
    pub equip_type: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bpgcahbjncd {
    #[prost(message, optional, tag = "1")]
    pub hkpidjmmckb: ::core::option::Option<Bomacpdepid>,
    #[prost(message, optional, tag = "2")]
    pub delete_info: ::core::option::Option<MaterialDeleteInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Banpaideplm {
    #[prost(message, repeated, tag = "8")]
    pub jiihglahmlg: ::prost::alloc::vec::Vec<Oajdeioklfk>,
    #[prost(message, repeated, tag = "9")]
    pub lildonieldm: ::prost::alloc::vec::Vec<Aphhkpjpmpl>,
    #[prost(bool, tag = "10")]
    pub aibccambgdk: bool,
    #[prost(message, repeated, tag = "12")]
    pub mpmopbibllb: ::prost::alloc::vec::Vec<Ephjfofebda>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27364)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kccdlbpponc {
    #[prost(uint32, repeated, tag = "14")]
    pub nfdkkmjkphh: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct AvatarEquipAffixInfo {
    #[prost(uint32, tag = "1")]
    pub equip_affix_id: u32,
    #[prost(uint32, tag = "2")]
    pub left_cd_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ficbjoomddm {
    #[prost(uint32, tag = "2")]
    pub bodiejclgmb: u32,
    #[prost(uint32, tag = "11")]
    pub score: u32,
    #[prost(uint32, tag = "13")]
    pub level_id: u32,
    #[prost(bool, tag = "14")]
    pub omeniamedce: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1910)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ameiimbdnhi {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "2")]
    pub kdfdiooggal: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "5")]
    pub city_id: u32,
    #[prost(message, repeated, tag = "15")]
    pub item_list: ::prost::alloc::vec::Vec<Jickppdlohc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25289)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aagdllmaple {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25239)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dgoejefjold {
    #[prost(message, optional, tag = "7")]
    pub abogpiadfac: ::core::option::Option<Bmhbnoahgag>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3362)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Geihambbkjc {
    #[prost(uint32, tag = "6")]
    pub lcehpfcejen: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21101)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ekaoaejilee {
    #[prost(uint32, repeated, tag = "4")]
    pub gankidgjfdd: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8136)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lajnolkackj {
    #[prost(uint64, tag = "2")]
    pub guid: u64,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23425)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Agjpeaecjke {
    #[prost(message, optional, tag = "11")]
    pub jnbdbdfnpmj: ::core::option::Option<CustomGadgetTreeInfo>,
    #[prost(uint32, tag = "13")]
    pub dnbefljlamb: u32,
    #[prost(uint32, tag = "8")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20744)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lakhamcgech {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3971)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hfjjokacgkj {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "15")]
    pub adcbgmkpkjl: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pdepcehjhjj {
    #[prost(bool, tag = "9")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "10")]
    pub jcckkcmgfme: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25532)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mdhimknkmbm {
    #[prost(uint32, tag = "6")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Knjbllamebd {
    #[prost(bool, tag = "3")]
    pub imlibccbmie: bool,
    #[prost(uint32, repeated, tag = "6")]
    pub dfbhckadmff: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "15")]
    pub holalickcpe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Haoghpbgfpf {
    #[prost(message, repeated, tag = "7")]
    pub dlbfcncngih: ::prost::alloc::vec::Vec<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fheclpdoabl {
    #[prost(uint32, tag = "2")]
    pub gablkaaecjb: u32,
    #[prost(bool, tag = "3")]
    pub oaaibflmmnh: bool,
    #[prost(uint32, tag = "6")]
    pub mbdfifondeg: u32,
    #[prost(uint32, tag = "7")]
    pub iboifpadmme: u32,
    #[prost(uint32, tag = "10")]
    pub clmjhibiejd: u32,
    #[prost(bool, tag = "11")]
    pub aienbkncado: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4010)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Npekfpbgkik {
    #[prost(uint32, repeated, tag = "5")]
    pub onioldaalan: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "1439")]
    pub pgimckfgipd: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "3")]
    pub jgcddbfmogl: u32,
    #[prost(float, tag = "710")]
    pub speed: f32,
    #[prost(uint32, tag = "9")]
    pub pgccobeibdk: u32,
    #[prost(uint32, tag = "14")]
    pub score: u32,
    #[prost(uint32, tag = "4")]
    pub bnmjbhhkcbk: u32,
    #[prost(uint32, tag = "1")]
    pub combo: u32,
    #[prost(uint32, tag = "1020")]
    pub kapobbfgpeg: u32,
    #[prost(uint32, tag = "12")]
    pub ggcfiehankk: u32,
    #[prost(uint32, tag = "11")]
    pub max_combo: u32,
    #[prost(bool, tag = "1678")]
    pub cakhipmgflf: bool,
    #[prost(bool, tag = "93")]
    pub ocdcdndkkmn: bool,
    #[prost(bool, tag = "7")]
    pub daphocnhdfm: bool,
    #[prost(uint32, tag = "1183")]
    pub lojfdjclfcc: u32,
    #[prost(uint64, tag = "13")]
    pub ihgjlfcgfin: u64,
    #[prost(uint32, tag = "1001")]
    pub bondcepggfh: u32,
    #[prost(uint32, tag = "10")]
    pub bbpccoicmcl: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Opdlemiaepk {
    #[prost(uint32, tag = "1")]
    pub level_id: u32,
    #[prost(uint32, tag = "4")]
    pub bodiejclgmb: u32,
    #[prost(uint32, repeated, tag = "8")]
    pub meikgboldgh: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "10")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "15")]
    pub apaaphbhhmk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(888)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mkiknmpmnfl {
    #[prost(uint32, tag = "14")]
    pub igaknkedboo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Afailbmmkka {
    #[prost(bool, tag = "8")]
    pub jhioephknlm: bool,
    #[prost(uint32, tag = "12")]
    pub fbeehjbemkf: u32,
    #[prost(enumeration = "Ekmpekpeaaj", tag = "14")]
    pub jifocckifkb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28814)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ajfjcfdjemc {
    #[prost(bool, tag = "3")]
    pub ikcfbicobmh: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ServerBuff {
    #[prost(uint32, tag = "1")]
    pub mffpclgbcdg: u32,
    #[prost(uint32, tag = "2")]
    pub ofdbppflnme: u32,
    #[prost(uint32, tag = "3")]
    pub loenhcobgbf: u32,
    #[prost(uint32, tag = "4")]
    pub instanced_modifier_id: u32,
    #[prost(bool, tag = "5")]
    pub jejiflfmeno: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24656)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pgogmgpkpia {
    #[prost(uint32, tag = "2")]
    pub cplaojeajnc: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8708)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jpmpjepdnjc {
    #[prost(uint32, tag = "1")]
    pub mliofjeoklg: u32,
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(oneof = "jpmpjepdnjc::Nbdofgcpfej", tags = "5, 8")]
    pub nbdofgcpfej: ::core::option::Option<jpmpjepdnjc::Nbdofgcpfej>,
}
/// Nested message and enum types in `JPMPJEPDNJC`.
pub mod jpmpjepdnjc {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Nbdofgcpfej {
        #[prost(uint32, tag = "5")]
        Level(u32),
        #[prost(uint32, tag = "8")]
        ChapterId(u32),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28087)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Apblbgiehon {
    #[prost(uint32, tag = "2")]
    pub epfcidiklkg: u32,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(uint32, tag = "8")]
    pub ndlpmmnppad: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lgidoebepcl {
    #[prost(uint32, tag = "1")]
    pub r#type: u32,
    #[prost(uint32, tag = "6")]
    pub config_id: u32,
    #[prost(uint32, tag = "7")]
    pub gadget_id: u32,
    #[prost(uint32, tag = "11")]
    pub group_id: u32,
    #[prost(message, optional, tag = "14")]
    pub pos: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5308)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Efmifkninhf {
    #[prost(uint32, tag = "11")]
    pub bljgcongpkk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27022)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ljemjnfhlej {
    #[prost(uint32, tag = "6")]
    pub kngbdmdcnhk: u32,
    #[prost(bool, tag = "12")]
    pub nmgpofehjdg: bool,
    #[prost(bool, tag = "9")]
    pub epeeagedehe: bool,
    #[prost(bool, tag = "11")]
    pub oomiiaobpgi: bool,
    #[prost(uint32, tag = "3")]
    pub pooaikmbamk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nmaeboppgbn {
    #[prost(message, optional, tag = "3")]
    pub akgooiibcom: ::core::option::Option<Nijkankibla>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mkneamdhffn {
    #[prost(uint32, tag = "14")]
    pub config_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6786)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ndeaboiigaf {
    #[prost(uint32, repeated, tag = "4")]
    pub gipepnionak: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27606)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Amkacncebhf {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9116)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iggcpkfnljc {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "9")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20577)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nlbjlbhefcl {
    #[prost(uint32, tag = "4")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8548)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bemjplaolle {
    #[prost(enumeration = "Dhdebbipiif", tag = "15")]
    pub ckehablghnn: i32,
    #[prost(uint32, tag = "4")]
    pub finahglfhag: u32,
    #[prost(uint32, tag = "7")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28675)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dekcdebknhe {
    #[prost(map = "uint32, uint32", tag = "12")]
    pub gbhbblghdlj: ::std::collections::HashMap<u32, u32>,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23831)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Poimdpijebc {
    #[prost(string, repeated, tag = "4")]
    pub ndfkojopdkc: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dokknidhjob {
    #[prost(uint32, tag = "5")]
    pub count: u32,
    #[prost(uint32, tag = "15")]
    pub pemalbhpmkf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9698)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gllnmgnlbni {
    #[prost(uint32, tag = "1")]
    pub param: u32,
    #[prost(message, repeated, tag = "2")]
    pub entity_list: ::prost::alloc::vec::Vec<SceneEntityInfo>,
    #[prost(enumeration = "VisionType", tag = "13")]
    pub appear_type: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Odgfdjghjgm {
    #[prost(message, repeated, tag = "1")]
    pub kiindlkbnpd: ::prost::alloc::vec::Vec<Famlaplkgjm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ibkgcggjodp {
    #[prost(bool, tag = "5")]
    pub mpfldfdogai: bool,
    #[prost(message, optional, tag = "6")]
    pub gafmcjbmfae: ::core::option::Option<Onfppnppneg>,
    #[prost(message, optional, tag = "10")]
    pub ffanfeejale: ::core::option::Option<Gkeglhbkjpl>,
    #[prost(message, optional, tag = "14")]
    pub pikphkjinib: ::core::option::Option<Mhceoaicljf>,
    #[prost(message, optional, tag = "15")]
    pub bclbhobhbim: ::core::option::Option<Ejccpjjdien>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5489)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fdeihbidpnp {
    #[prost(uint32, tag = "14")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23738)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lpndebffdkn {
    #[prost(uint32, tag = "1")]
    pub room_id: u32,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "15")]
    pub eoagpbccfmm: ::prost::alloc::vec::Vec<Bpnpapaahgn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dcbnahflejc {
    #[prost(uint32, tag = "2")]
    pub iejpghnlidb: u32,
    #[prost(uint32, tag = "8")]
    pub bdeflcdkdbi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ojgjdfemdio {
    #[prost(message, repeated, tag = "1")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Hodbenfnelc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20771)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bojgpgilfni {
    #[prost(uint32, repeated, tag = "7")]
    pub inmbdifbgom: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25143)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Odanadmddje {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1978)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oicljpodgeg {
    #[prost(message, repeated, tag = "4")]
    pub fbhdeibpldl: ::prost::alloc::vec::Vec<Ijlhhneflkk>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7605)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kmdaepaenab {
    #[prost(uint32, tag = "8")]
    pub jphiojmomig: u32,
    #[prost(uint32, tag = "9")]
    pub offering_id: u32,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "13")]
    pub item_list: ::prost::alloc::vec::Vec<Jickppdlohc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Djcgmlcfklc {
    #[prost(uint32, tag = "1")]
    pub config_id: u32,
    #[prost(message, optional, tag = "11")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "14")]
    pub group_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9331)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jalfgmkkhml {
    #[prost(uint32, tag = "2")]
    pub group_id: u32,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(uint32, tag = "13")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct FishtankFishInfo {
    #[prost(float, tag = "1")]
    pub fish_distance_from_water: f32,
    #[prost(float, tag = "2")]
    pub fish_scale: f32,
    #[prost(float, tag = "3")]
    pub initial_rotation_y: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mgagolbfegf {
    #[prost(uint32, tag = "3")]
    pub attack_target_id: u32,
    #[prost(uint32, tag = "7")]
    pub efibhdppdan: u32,
    #[prost(uint32, tag = "8")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bidjmbkeiib {
    #[prost(message, repeated, tag = "1")]
    pub biajhkfkckn: ::prost::alloc::vec::Vec<Bkjkchoklkg>,
    #[prost(message, repeated, tag = "2")]
    pub cadalmejagh: ::prost::alloc::vec::Vec<Bkjkchoklkg>,
    #[prost(message, repeated, tag = "3")]
    pub mbchkmgalnf: ::prost::alloc::vec::Vec<Millgcohbji>,
    #[prost(message, repeated, tag = "4")]
    pub fgkkmijpapj: ::prost::alloc::vec::Vec<Lejdfpgeiko>,
    #[prost(message, repeated, tag = "5")]
    pub aaehpgkinop: ::prost::alloc::vec::Vec<Ohapebodapg>,
    #[prost(uint32, tag = "6")]
    pub block_id: u32,
    #[prost(message, repeated, tag = "7")]
    pub khegoeegnnj: ::prost::alloc::vec::Vec<Mmnockpjaob>,
    #[prost(message, repeated, tag = "8")]
    pub mhdjclkghoa: ::prost::alloc::vec::Vec<Fodheifhdjb>,
    #[prost(message, repeated, tag = "10")]
    pub cnlocgcmnnm: ::prost::alloc::vec::Vec<Gmjkgjhncbl>,
    #[prost(uint32, tag = "11")]
    pub obbgjelhibg: u32,
    #[prost(message, repeated, tag = "12")]
    pub lnfomllacke: ::prost::alloc::vec::Vec<Pjplljjmeed>,
    #[prost(bool, tag = "13")]
    pub hpmjinlnncp: bool,
    #[prost(message, repeated, tag = "14")]
    pub mfikhdnpnbp: ::prost::alloc::vec::Vec<Gilgdmkhmaj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21960)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bdlcankgeob {
    #[prost(string, tag = "10")]
    pub hdjmmmfejom: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gfinlgdciin {
    #[prost(message, optional, tag = "1")]
    pub hpoeckekafa: ::core::option::Option<Vector>,
    #[prost(float, tag = "2")]
    pub cckjpdchobj: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28094)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kjpbjmplhgh {
    #[prost(message, repeated, tag = "10")]
    pub leolaijlknj: ::prost::alloc::vec::Vec<Ijjkjdgcbem>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25467)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cidehgcendb {
    #[prost(bool, tag = "11")]
    pub iecapkphljk: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lccnnipfkne {
    #[prost(uint32, tag = "1")]
    pub oelcnlojhhe: u32,
    #[prost(string, tag = "2")]
    pub version: ::prost::alloc::string::String,
    #[prost(enumeration = "Bjikpodamda", repeated, tag = "3")]
    pub kpgeknahhpj: ::prost::alloc::vec::Vec<i32>,
    #[prost(uint32, repeated, tag = "4")]
    pub ejoofdibice: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, optional, tag = "5")]
    pub mlopmggddmn: ::core::option::Option<Maclkmpjdcg>,
    #[prost(uint32, tag = "6")]
    pub dilobkceegc: u32,
    #[prost(message, optional, tag = "7")]
    pub achepmkcklh: ::core::option::Option<Ljafoaoodob>,
    #[prost(bool, tag = "8")]
    pub ohpccomacpn: bool,
    #[prost(uint32, tag = "9")]
    pub cdgbhmnpcla: u32,
    #[prost(uint32, tag = "10")]
    pub iifgpcppaaa: u32,
    #[prost(uint32, tag = "11")]
    pub jaaekgkmado: u32,
    #[prost(bool, tag = "12")]
    pub fncgaidogkk: bool,
    #[prost(bool, tag = "13")]
    pub pfbcaldpcag: bool,
    #[prost(uint32, tag = "14")]
    pub start_time: u32,
    #[prost(uint32, tag = "15")]
    pub infnhamfbbl: u32,
    #[prost(message, optional, tag = "96")]
    pub oiajdljoipd: ::core::option::Option<Hjiiipeeiim>,
    #[prost(uint32, repeated, tag = "317")]
    pub aldlofknhcn: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, optional, tag = "778")]
    pub pkcbbbhckki: ::core::option::Option<Hgdjmickhak>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24904)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ojbmedmkjpg {
    #[prost(message, optional, tag = "2")]
    pub motion_info: ::core::option::Option<MotionInfo>,
    #[prost(uint32, tag = "4")]
    pub room_id: u32,
    #[prost(uint32, tag = "3")]
    pub scene_time: u32,
    #[prost(uint32, tag = "1")]
    pub entity_id: u32,
    #[prost(uint32, tag = "9")]
    pub parent_quest_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27316)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aablpedpehl {
    #[prost(message, optional, tag = "7")]
    pub cpmhmdjdedb: ::core::option::Option<Ibfdcgeoeie>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7966)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oedgifblemb {
    #[prost(message, optional, tag = "3")]
    pub dnkjojhbjld: ::core::option::Option<Gfehnonhkkn>,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22039)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gcdoklnhoei {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9944)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kiapfacahen {
    #[prost(uint32, tag = "3")]
    pub level_id: u32,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23341)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jhdendcpnjl {
    #[prost(uint32, repeated, tag = "5")]
    pub kdfdiooggal: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "8")]
    pub item_list: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
    #[prost(uint32, tag = "11")]
    pub fagpphacnbj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8633)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Leboalmhbep {
    #[prost(uint32, tag = "7")]
    pub today_fish_num: u32,
    #[prost(uint32, tag = "8")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1245)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mokibnfepmf {
    #[prost(uint32, tag = "1")]
    pub avatar_id: u32,
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Daiigopbcdd {
    #[prost(message, optional, tag = "12")]
    pub akgooiibcom: ::core::option::Option<Hopfeeipgjp>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jgbhhlonijj {
    #[prost(string, tag = "1")]
    pub nkanjijnimc: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub ampbndiacmi: ::prost::alloc::string::String,
    #[prost(uint32, tag = "3")]
    pub aiibbmagphd: u32,
    #[prost(uint32, tag = "4")]
    pub hpncmjeamla: u32,
    #[prost(uint32, tag = "5")]
    pub jabgacillec: u32,
    #[prost(uint32, tag = "6")]
    pub end_time: u32,
    #[prost(uint32, tag = "7")]
    pub ojpghllbfdf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Defholmeihg {
    #[prost(message, repeated, tag = "11")]
    pub meoegodmpff: ::prost::alloc::vec::Vec<Ooimbbpdcmm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6539)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ijbpofcflaa {
    #[prost(uint32, tag = "12")]
    pub jmafbiekcdm: u32,
    #[prost(uint32, tag = "5")]
    pub ghnnchioega: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22242)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lodddjmaipo {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pkfabbkappa {
    #[prost(uint32, tag = "1")]
    pub nohhakbkgnj: u32,
    #[prost(bool, tag = "4")]
    pub is_active: bool,
    #[prost(uint32, tag = "6")]
    pub config_id: u32,
    #[prost(bool, tag = "10")]
    pub mjadamhjpcm: bool,
    #[prost(map = "uint32, bool", tag = "15")]
    pub glnbnekhobc: ::std::collections::HashMap<u32, bool>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29796)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bibjooeakka {
    #[prost(bool, tag = "2")]
    pub jeibgbldjpk: bool,
    #[prost(bool, tag = "11")]
    pub aemdnebmnif: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22101)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jglnlbmpbkn {
    #[prost(message, optional, tag = "4")]
    pub icchdgkmnlf: ::core::option::Option<Ljjfjilbnll>,
    #[prost(message, optional, tag = "10")]
    pub kfedmcekgmk: ::core::option::Option<Cnhljkcjahb>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2275)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jnabaogliho {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jjnllnibimm {
    #[prost(uint32, repeated, tag = "6")]
    pub heloknmgibn: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "7")]
    pub bejcabbjbnm: u32,
    #[prost(uint32, repeated, tag = "12")]
    pub jimabahegjd: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kjgaenhlkhp {
    #[prost(message, repeated, tag = "9")]
    pub item_list: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(message, repeated, tag = "14")]
    pub jgieajjbpnc: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(message, optional, tag = "15")]
    pub akgooiibcom: ::core::option::Option<Olncpfjiekm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22130)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Laabambdoal {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "8")]
    pub fidjdhjoebn: ::prost::alloc::vec::Vec<Ombeifnnedf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24094)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nmijhddbejd {
    #[prost(uint32, tag = "2")]
    pub jlgjbaleioi: u32,
    #[prost(uint32, tag = "5")]
    pub scene_id: u32,
    #[prost(uint32, tag = "13")]
    pub area_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2169)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Amlkdjnlhok {
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20269)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bfnamkpjkei {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fblpikddjdn {
    #[prost(uint32, tag = "4")]
    pub ooiijgfcclj: u32,
    #[prost(uint32, repeated, tag = "5")]
    pub mnchcggmlpa: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "10")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5657)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dgbalpmlcde {
    #[prost(uint32, tag = "11")]
    pub ofnogjpgbna: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23772)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bpoipnoeipf {
    #[prost(uint32, tag = "10")]
    pub ebjejlglodb: u32,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub finahglfhag: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28519)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bhkjmcdklga {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6655)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Apllcnohjon {
    #[prost(uint32, tag = "13")]
    pub bikoakjlpbe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26316)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bpcmcckjech {
    #[prost(uint32, tag = "1")]
    pub pihndegfmph: u32,
    #[prost(bool, tag = "12")]
    pub fadincnpbmd: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ihklgmifgmn {
    #[prost(uint32, tag = "7")]
    pub jkdheddnhca: u32,
    #[prost(uint32, tag = "8")]
    pub avatar_id: u32,
    #[prost(uint32, tag = "9")]
    pub ndcdmpindoi: u32,
    #[prost(uint32, tag = "10")]
    pub lllglcjcnlc: u32,
    #[prost(uint32, tag = "11")]
    pub jggogjmdfph: u32,
    #[prost(uint32, tag = "12")]
    pub faakljkfmja: u32,
    #[prost(uint32, tag = "13")]
    pub hpmjlephdeh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28418)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Flgcgdiooci {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29452)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bimbmeppijb {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ookjdbingha {
    #[prost(message, repeated, tag = "3")]
    pub dchoafdfnen: ::prost::alloc::vec::Vec<Ggnjeoklmjf>,
    #[prost(uint32, tag = "12")]
    pub hdgmialkfmc: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26449)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ohjcbglinem {
    #[prost(uint32, tag = "5")]
    pub jaaekgkmado: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26816)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Igpcpjiamhl {
    #[prost(bool, tag = "9")]
    pub fogkcggkjia: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4786)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ahjgcegclfp {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24314)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pemoahadhmm {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27035)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Epbdkpgldbp {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ClientGadgetInfo {
    #[prost(uint32, tag = "1")]
    pub camp_id: u32,
    #[prost(uint32, tag = "2")]
    pub camp_type: u32,
    #[prost(uint64, tag = "3")]
    pub guid: u64,
    #[prost(uint32, tag = "4")]
    pub owner_entity_id: u32,
    #[prost(uint32, tag = "5")]
    pub target_entity_id: u32,
    #[prost(bool, tag = "6")]
    pub async_load: bool,
    #[prost(bool, tag = "7")]
    pub is_peer_id_from_player: bool,
    #[prost(uint32, repeated, tag = "8")]
    pub target_entity_id_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "9")]
    pub target_lock_point_index_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28820)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kcpfjlbegii {
    #[prost(uint64, tag = "5")]
    pub ihgjlfcgfin: u64,
    #[prost(enumeration = "Kpfoblalblc", tag = "6")]
    pub daakpcoabep: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4930)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ippaecmbhaf {
    #[prost(bool, tag = "8")]
    pub jfblhmgjibh: bool,
    #[prost(oneof = "ippaecmbhaf::Emnopeeiljh", tags = "6, 12, 11, 4")]
    pub emnopeeiljh: ::core::option::Option<ippaecmbhaf::Emnopeeiljh>,
}
/// Nested message and enum types in `IPPAECMBHAF`.
pub mod ippaecmbhaf {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Emnopeeiljh {
        #[prost(uint32, tag = "6")]
        TargetUid(u32),
        #[prost(string, tag = "12")]
        XboxUserId(::prost::alloc::string::String),
        #[prost(string, tag = "11")]
        PsnId(::prost::alloc::string::String),
        #[prost(string, tag = "4")]
        OnlineId(::prost::alloc::string::String),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22002)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hgloekppokh {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
    #[prost(uint32, tag = "12")]
    pub edkmhlpplgh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aepkkifpnjb {
    #[prost(message, repeated, tag = "7")]
    pub mdfhandhakc: ::prost::alloc::vec::Vec<Lfkheeoicgd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2100)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Olgfmeihidp {
    #[prost(message, repeated, tag = "2")]
    pub opmjjilflpp: ::prost::alloc::vec::Vec<Iajojnflmna>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bcapediaeio {
    #[prost(message, optional, tag = "7")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "11")]
    pub pos: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Phpoheggimp {
    #[prost(uint32, tag = "3")]
    pub element_type: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Agagoebmfca {
    #[prost(bool, tag = "3")]
    pub nlpnmnnifpi: bool,
    #[prost(message, repeated, tag = "4")]
    pub geiagfpmlof: ::prost::alloc::vec::Vec<Jngmojcffnm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(80)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Akpknokalpe {
    #[prost(uint32, tag = "14")]
    pub lmonmngilnd: u32,
    #[prost(uint32, tag = "4")]
    pub bdeflcdkdbi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1140)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kaaeeaacnkb {
    #[prost(uint32, tag = "6")]
    pub config_id: u32,
    #[prost(uint32, tag = "14")]
    pub finahglfhag: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ibdnaogmofo {
    #[prost(uint32, tag = "1")]
    pub mjkccodcemc: u32,
    #[prost(bool, tag = "3")]
    pub lnfkcefiabm: bool,
    #[prost(uint32, tag = "7")]
    pub hpodkdccikj: u32,
    #[prost(uint32, tag = "12")]
    pub kljcagkgilp: u32,
    #[prost(uint32, tag = "14")]
    pub ebjejlglodb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bbicdkoepob {
    #[prost(uint32, tag = "1")]
    pub nmpkofeakli: u32,
    #[prost(uint32, tag = "2")]
    pub pjmkfdgkfhp: u32,
    #[prost(uint32, tag = "3")]
    pub mndaajnejjm: u32,
    #[prost(uint32, tag = "9")]
    pub bmlfacfapha: u32,
    #[prost(uint32, tag = "13")]
    pub joicnkaboma: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4044)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bonijacfpcg {
    #[prost(uint32, tag = "7")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aodebpfbiml {
    #[prost(uint32, tag = "5")]
    pub kjdmoofknek: u32,
    #[prost(message, optional, tag = "11")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "15")]
    pub pos: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27277)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nbfpodpoghe {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lhfeifbbgdj {
    #[prost(message, optional, tag = "3")]
    pub blpdogelkbo: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "10")]
    pub phlbljlbidf: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "12")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "13")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21316)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Copbfcblgkm {
    #[prost(enumeration = "Imenpajgoaf", tag = "12")]
    pub fpibidglpjn: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21832)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ihkkchdpgio {
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jafnaffnfld {
    #[prost(float, tag = "4")]
    pub mdmmnleemdf: f32,
    #[prost(message, optional, tag = "6")]
    pub key: ::core::option::Option<AbilityString>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24318)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Clclpfggogm {
    #[prost(uint32, tag = "3")]
    pub pjbbbidpajh: u32,
    #[prost(uint32, tag = "6")]
    pub konankaciem: u32,
    #[prost(message, repeated, tag = "7")]
    pub kabodnmegek: ::prost::alloc::vec::Vec<Olheklkendn>,
    #[prost(enumeration = "Nlobhempbem", tag = "10")]
    pub igcfekljnmj: i32,
    #[prost(message, optional, tag = "11")]
    pub jknhpfobgjb: ::core::option::Option<Piccfjidmml>,
    #[prost(uint32, repeated, tag = "13")]
    pub fehbkkpdbdi: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "14")]
    pub nekecfnahom: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9737)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bdhdnmfecco {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mnhbehenecp {
    #[prost(uint32, repeated, tag = "11")]
    pub banddfjcaci: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23964)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kjecgnljocn {
    #[prost(bool, tag = "1")]
    pub mgdddjphkhl: bool,
    #[prost(bool, tag = "3")]
    pub adicccllcbf: bool,
    #[prost(uint32, tag = "6")]
    pub fjamcdjdjoa: u32,
    #[prost(bool, tag = "7")]
    pub lhgljpgnnch: bool,
    #[prost(uint32, tag = "10")]
    pub eaipgemknpo: u32,
    #[prost(bool, tag = "12")]
    pub nhdncfmcecj: bool,
    #[prost(bool, tag = "13")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "14")]
    pub lchbeahgheo: u32,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22657)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Akbnobmadan {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Abpmjblhhcb {
    #[prost(uint32, tag = "4")]
    pub skill_id: u32,
    #[prost(uint32, tag = "5")]
    pub dajhkhflndj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pdpbfmhbnfa {
    #[prost(uint32, tag = "2")]
    pub score: u32,
    #[prost(uint32, tag = "7")]
    pub iokopnampkg: u32,
    #[prost(uint64, tag = "8")]
    pub lhbllkcebbd: u64,
    #[prost(uint32, tag = "11")]
    pub jpgdmdcefeb: u32,
    #[prost(uint32, tag = "12")]
    pub ckphcagonkg: u32,
    #[prost(uint32, tag = "14")]
    pub mlnmecigdmh: u32,
    #[prost(uint64, tag = "15")]
    pub ccebbinlhmj: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29939)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Blhnmlpcngk {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9843)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hlfoddabbkf {
    #[prost(message, repeated, tag = "10")]
    pub bhdkknaobip: ::prost::alloc::vec::Vec<Mimanfiikmn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(937)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ojeommhjdmc {
    #[prost(uint32, tag = "9")]
    pub scene_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7474)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Emniieelhml {
    #[prost(uint64, tag = "15")]
    pub mcppeknbhfk: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24433)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ojdaeejnfdm {
    #[prost(uint32, tag = "13")]
    pub npc_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21947)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Immmipmgmgd {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "4")]
    pub caeoniplbjc: u32,
    #[prost(uint32, repeated, tag = "9")]
    pub cjiieiogbfo: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bbklmlcjkif {
    #[prost(message, repeated, tag = "13")]
    pub gpcgmmobghm: ::prost::alloc::vec::Vec<Oghblecebnl>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kmjchhjlfod {
    #[prost(uint32, tag = "1")]
    pub dilobkceegc: u32,
    #[prost(bool, tag = "2")]
    pub djbcmfcccch: bool,
    #[prost(uint32, tag = "3")]
    pub oaliohamlgn: u32,
    #[prost(bool, tag = "7")]
    pub cbpfggcimbd: bool,
    #[prost(message, repeated, tag = "8")]
    pub gejankkfnhi: ::prost::alloc::vec::Vec<Kkjdcdopfeb>,
    #[prost(uint32, tag = "9")]
    pub laahcnefemp: u32,
    #[prost(bool, tag = "11")]
    pub mpfldfdogai: bool,
    #[prost(uint32, tag = "12")]
    pub nkkbifadccb: u32,
    #[prost(uint32, tag = "15")]
    pub lmppebimkfa: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25306)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Decdolooaag {
    #[prost(uint32, repeated, tag = "14")]
    pub hiolegallcn: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24707)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Igdakmgpbbi {
    #[prost(message, optional, tag = "9")]
    pub apjdfnanbdo: ::core::option::Option<Kjdpjhlalai>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25314)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hmaknfljhmp {
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23125)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cjceefeofac {
    #[prost(map = "uint32, message", tag = "7")]
    pub prop_map: ::std::collections::HashMap<u32, PropValue>,
    #[prost(uint32, tag = "15")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21576)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iomdjjicdoh {
    #[prost(bool, tag = "2")]
    pub kodnaagljdl: bool,
    #[prost(uint32, tag = "3")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "4")]
    pub ffhpdcibkod: u32,
    #[prost(bool, tag = "7")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "10")]
    pub oelcnlojhhe: u32,
    #[prost(uint32, tag = "11")]
    pub mgdhllgefff: u32,
    #[prost(bool, tag = "12")]
    pub doolleanbad: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Npcmaaojada {
    #[prost(uint32, tag = "1")]
    pub level_id: u32,
    #[prost(uint32, tag = "7")]
    pub bodiejclgmb: u32,
    #[prost(bool, tag = "15")]
    pub keplhhehole: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7494)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dhdabbencag {
    #[prost(uint32, tag = "9")]
    pub eaipgemknpo: u32,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ddofekcbiic {
    #[prost(uint64, tag = "1")]
    pub pjgkhfmlcin: u64,
    #[prost(message, repeated, tag = "2")]
    pub ggdbalongin: ::prost::alloc::vec::Vec<Igcdehpiifm>,
    #[prost(bool, tag = "3")]
    pub ghjafbkdidn: bool,
    #[prost(uint32, tag = "4")]
    pub mlgfpgidgno: u32,
    #[prost(int32, repeated, tag = "5")]
    pub algjnhegpni: ::prost::alloc::vec::Vec<i32>,
    #[prost(message, repeated, tag = "6")]
    pub mkifgehebld: ::prost::alloc::vec::Vec<Cbmcenpmihi>,
    #[prost(uint32, tag = "7")]
    pub pkhkgdhghpa: u32,
    #[prost(message, repeated, tag = "8")]
    pub pcibmjmpabh: ::prost::alloc::vec::Vec<Chomfemehnl>,
    #[prost(map = "uint32, uint32", tag = "9")]
    pub mjdaohhpppc: ::std::collections::HashMap<u32, u32>,
    #[prost(bool, tag = "10")]
    pub pmjlllfophk: bool,
    #[prost(uint32, tag = "11")]
    pub dijchghpaee: u32,
    #[prost(bool, tag = "12")]
    pub knfokpomcck: bool,
    #[prost(uint32, tag = "13")]
    pub parent_quest_id: u32,
    #[prost(bool, tag = "14")]
    pub ikpepkahabm: bool,
    #[prost(message, optional, tag = "15")]
    pub kapjlomcdng: ::core::option::Option<Cdfinadpjap>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Abgkedbgbln {
    #[prost(bool, tag = "1")]
    pub glkngddnocn: bool,
    #[prost(message, repeated, tag = "8")]
    pub jlnakolcdgn: ::prost::alloc::vec::Vec<Gfneafefccl>,
    #[prost(uint32, tag = "11")]
    pub lbeinahahka: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7544)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dlichmdobkl {
    #[prost(bool, tag = "11")]
    pub ggoecigkpaa: bool,
    #[prost(uint32, tag = "15")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Iplimljdklb {
    #[prost(bool, tag = "5")]
    pub pmjlllfophk: bool,
    #[prost(bool, tag = "6")]
    pub glkngddnocn: bool,
    #[prost(message, repeated, tag = "8")]
    pub djhmnidjlcp: ::prost::alloc::vec::Vec<Cgaidecbehg>,
    #[prost(uint32, tag = "13")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pfkmfkplbpd {
    #[prost(uint32, tag = "2")]
    pub mafdjfnephk: u32,
    #[prost(bool, tag = "3")]
    pub glkngddnocn: bool,
    #[prost(bool, tag = "4")]
    pub pmjlllfophk: bool,
    #[prost(uint32, tag = "5")]
    pub level_id: u32,
    #[prost(uint32, tag = "9")]
    pub iejpghnlidb: u32,
    #[prost(uint32, tag = "13")]
    pub dmjodfmkbab: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21652)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bmmlcaicajd {
    #[prost(uint32, repeated, tag = "8")]
    pub oddcjjmgeoh: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9717)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aejnfnkhkel {
    #[prost(uint32, tag = "2")]
    pub oohmhddmoia: u32,
    #[prost(message, optional, tag = "6")]
    pub nnpmlgapaan: ::core::option::Option<Olheklkendn>,
    #[prost(uint32, tag = "8")]
    pub ldibalopgkb: u32,
    #[prost(bool, tag = "12")]
    pub oejcjaiekhh: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25318)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dclhemonjjb {
    #[prost(uint32, tag = "4")]
    pub oalcohnapaj: u32,
    #[prost(uint32, tag = "3")]
    pub dcedejdmlho: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26622)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aondeipohca {
    #[prost(uint32, tag = "1")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aekpapnojpn {
    #[prost(bool, tag = "7")]
    pub mkinchcgjim: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9073)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ffegpbljkki {
    #[prost(bool, tag = "11")]
    pub ikcfbicobmh: bool,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22697)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Epioipnokoc {
    #[prost(enumeration = "Bpobbmngmdl", tag = "5")]
    pub r#type: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26763)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Inbdncgocdg {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Maclkmpjdcg {
    #[prost(uint32, tag = "1")]
    pub jfocdfoobep: u32,
    #[prost(uint32, tag = "4")]
    pub bkhlphlghde: u32,
    #[prost(uint32, tag = "7")]
    pub cdgbhmnpcla: u32,
    #[prost(message, repeated, tag = "12")]
    pub kelmembfmfm: ::prost::alloc::vec::Vec<Ffiamakjoda>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kmjmklpgpkk {
    #[prost(uint32, tag = "1")]
    pub scene_id: u32,
    #[prost(enumeration = "Ndfpcjooapl", tag = "2")]
    pub dnhaegdcpjb: i32,
    #[prost(uint32, tag = "3")]
    pub resin: u32,
    #[prost(bool, tag = "4")]
    pub eogpkjnngca: bool,
    #[prost(uint32, tag = "5")]
    pub jhpcgnpglga: u32,
    #[prost(message, optional, tag = "6")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "7")]
    pub level: u32,
    #[prost(bool, tag = "8")]
    pub ddcckpfbpdb: bool,
    #[prost(message, optional, tag = "9")]
    pub kgakhdpkial: ::core::option::Option<WeeklyBossResinDiscountInfo>,
    #[prost(uint32, tag = "10")]
    pub id: u32,
    #[prost(uint32, tag = "11")]
    pub gnmadohhmoi: u32,
    #[prost(uint32, tag = "12")]
    pub hgbbglkplfi: u32,
    #[prost(uint32, tag = "13")]
    pub city_id: u32,
    #[prost(uint32, tag = "14")]
    pub ceelknnieng: u32,
    #[prost(uint32, tag = "15")]
    pub gjapbkelhog: u32,
    #[prost(uint32, tag = "468")]
    pub ffobionlmoj: u32,
    #[prost(uint32, tag = "707")]
    pub group_id: u32,
    #[prost(bool, tag = "1139")]
    pub jbojodaccic: bool,
    #[prost(uint32, tag = "1400")]
    pub monster_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6448)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cghgjjopbje {
    #[prost(uint32, repeated, tag = "8")]
    pub skill_id: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5405)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AvatarDataNotify {
    #[prost(uint32, repeated, tag = "1")]
    pub owned_flycloak_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "2")]
    pub backup_avatar_team_order_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "3")]
    pub ophdokofiho: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint64, tag = "4")]
    pub choose_avatar_guid: u64,
    #[prost(uint32, repeated, tag = "5")]
    pub cpeajkcgpio: ::prost::alloc::vec::Vec<u32>,
    #[prost(map = "uint32, message", tag = "6")]
    pub avatar_team_map: ::std::collections::HashMap<u32, AvatarTeam>,
    #[prost(message, repeated, tag = "9")]
    pub avatar_list: ::prost::alloc::vec::Vec<AvatarInfo>,
    #[prost(message, repeated, tag = "11")]
    pub avatar_rename_list: ::prost::alloc::vec::Vec<AvatarRenameInfo>,
    #[prost(uint32, tag = "13")]
    pub cur_avatar_team_id: u32,
    #[prost(uint64, repeated, tag = "15")]
    pub temp_avatar_guid_list: ::prost::alloc::vec::Vec<u64>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21607)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Enbapmgjjef {
    #[prost(int32, tag = "10")]
    pub ffhpdcibkod: i32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25398)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Iafginppggc {
    #[prost(int32, tag = "2")]
    pub fjbeeggkkcf: i32,
    #[prost(string, tag = "3")]
    pub level: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub msg: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22183)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jiojljefodo {
    #[prost(message, optional, tag = "2")]
    pub motion_info: ::core::option::Option<MotionInfo>,
    #[prost(uint32, tag = "4")]
    pub reliable_seq: u32,
    #[prost(uint32, tag = "9")]
    pub scene_time: u32,
    #[prost(uint32, tag = "10")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3230)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lonbilcmoeh {
    #[prost(uint32, tag = "8")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5302)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oeecpkccnif {
    #[prost(uint32, tag = "5")]
    pub bgmdlpabefa: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6866)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Baaidblmpgh {
    #[prost(uint32, tag = "1")]
    pub uid: u32,
    #[prost(message, repeated, tag = "7")]
    pub kacicjgagel: ::prost::alloc::vec::Vec<Pjnppnfikhk>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4969)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jglhmimhjbh {
    #[prost(uint32, tag = "4")]
    pub ggcfiehankk: u32,
    #[prost(uint32, tag = "1")]
    pub bbpccoicmcl: u32,
    #[prost(uint32, tag = "5")]
    pub combo: u32,
    #[prost(uint32, tag = "2")]
    pub score: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28665)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Amnlfeelapb {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dhfhhmlendf {
    #[prost(uint32, tag = "3")]
    pub jcmchgnnlmj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mjpkecmoiga {
    #[prost(uint32, tag = "1")]
    pub pieimacpkol: u32,
    #[prost(uint32, tag = "4")]
    pub bmeoibcmlbi: u32,
    #[prost(message, repeated, tag = "5")]
    pub cbciapkmjhe: ::prost::alloc::vec::Vec<Hgnogamjlaf>,
    #[prost(map = "uint32, uint32", tag = "11")]
    pub mnimpfajklb: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8522)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Llhahebefnn {
    #[prost(uint32, tag = "14")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25361)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bbohnoaekeo {
    #[prost(message, optional, tag = "1")]
    pub eimcfamhhbj: ::core::option::Option<Pagiaoelfbi>,
    #[prost(uint32, tag = "8")]
    pub param: u32,
    #[prost(message, repeated, tag = "10")]
    pub kiindlkbnpd: ::prost::alloc::vec::Vec<Alkbannmcbh>,
    #[prost(uint32, tag = "13")]
    pub r#type: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ijpadigmnph {
    #[prost(float, tag = "1")]
    pub x: f32,
    #[prost(float, tag = "2")]
    pub y: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3850)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ekaakbkdcfi {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "6")]
    pub kngbdmdcnhk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9076)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jnolompjmag {
    #[prost(uint32, tag = "5")]
    pub mkknkhbbglh: u32,
    #[prost(uint32, tag = "7")]
    pub lmbaaodmhjn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22353)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cbifonjbnkk {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28124)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oogibebihip {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint32, tag = "11")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25982)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Loihmckcfmj {
    #[prost(message, optional, tag = "7")]
    pub icchdgkmnlf: ::core::option::Option<Ljjfjilbnll>,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pmnpldnddip {
    #[prost(uint32, tag = "1")]
    pub oajoobghagm: u32,
    #[prost(bool, tag = "2")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "15")]
    pub mkcgmmganlk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(718)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Enbfhgfjecl {
    #[prost(uint32, tag = "5")]
    pub target_uid: u32,
    #[prost(bool, tag = "9")]
    pub jfjndakfjek: bool,
    #[prost(enumeration = "Djncinjhhok", tag = "10")]
    pub imiogmdokcb: i32,
    #[prost(string, tag = "11")]
    pub khmggfmbooh: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pknoabhffko {
    #[prost(map = "string, string", tag = "12")]
    pub bfilfabkeki: ::std::collections::HashMap<
        ::prost::alloc::string::String,
        ::prost::alloc::string::String,
    >,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26103)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Koijkkejmbd {
    #[prost(uint32, tag = "1")]
    pub parent_quest_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7083)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bpdcoccmbgg {
    #[prost(uint32, tag = "1")]
    pub nmgddmpcncc: u32,
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "9")]
    pub lmmbcmmondg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20261)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dbbcnnfemdb {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kccfehjjdgl {
    #[prost(uint32, tag = "6")]
    pub kpabanmakjo: u32,
    #[prost(bool, tag = "8")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27211)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fnmoelgldng {
    #[prost(bool, tag = "1")]
    pub hdnildcefmg: bool,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(uint32, tag = "12")]
    pub kmkgjolhlih: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2726)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Idfelimjjmj {
    #[prost(bool, tag = "9")]
    pub nkaogolciad: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6480)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aneedmnfgfk {
    #[prost(uint32, tag = "8")]
    pub mkbopnehhmd: u32,
    #[prost(uint32, tag = "13")]
    pub level_id: u32,
    #[prost(uint32, tag = "15")]
    pub score: u32,
    #[prost(uint32, tag = "4")]
    pub kngjhmllcnp: u32,
    #[prost(bool, tag = "1")]
    pub is_finish: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nmniohoeegj {
    #[prost(message, optional, tag = "11")]
    pub loalbblhdii: ::core::option::Option<Mkbmdcgmieo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dkjabjbiedj {
    #[prost(uint32, tag = "2")]
    pub entity_id: u32,
    #[prost(float, tag = "4")]
    pub caclkilffmf: f32,
    #[prost(float, tag = "6")]
    pub gdlilefjmci: f32,
    #[prost(message, optional, tag = "13")]
    pub oipcdlondgp: ::core::option::Option<Vector>,
    #[prost(float, tag = "15")]
    pub speed: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hibompkipin {
    #[prost(bool, tag = "1")]
    pub mpfldfdogai: bool,
    #[prost(uint32, tag = "5")]
    pub oaliohamlgn: u32,
    #[prost(map = "uint32, uint32", tag = "8")]
    pub oglbnkaeemi: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "10")]
    pub hpmnaojdhme: u32,
    #[prost(bool, tag = "14")]
    pub apckflankil: bool,
    #[prost(map = "uint32, uint32", tag = "15")]
    pub ajkplbpkcab: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26701)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Agfiohnkkmd {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25345)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct EvtAvatarLockChairReq {
    #[prost(message, optional, tag = "14")]
    pub position: ::core::option::Option<Vector>,
    #[prost(uint64, tag = "9")]
    pub chair_id: u64,
    #[prost(int32, tag = "4")]
    pub direction: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1407)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dbjfejhncoc {
    #[prost(uint64, tag = "4")]
    pub guid: u64,
    #[prost(bool, tag = "8")]
    pub hlalmdgmpfm: bool,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fkdddhiegmf {
    #[prost(uint32, repeated, tag = "7")]
    pub adgghahhfda: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "9")]
    pub pieapgepmlf: u32,
    #[prost(uint32, tag = "10")]
    pub bdlkboknano: u32,
    #[prost(message, repeated, tag = "12")]
    pub cgielifmplc: ::prost::alloc::vec::Vec<Cgaalgdlehl>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26796)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ebamogohglo {
    #[prost(message, repeated, tag = "5")]
    pub hinlpahcmkn: ::prost::alloc::vec::Vec<Pndbjojmdph>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25457)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SceneEntityAppearNotify {
    #[prost(enumeration = "VisionType", tag = "3")]
    pub appear_type: i32,
    #[prost(message, repeated, tag = "7")]
    pub entity_list: ::prost::alloc::vec::Vec<SceneEntityInfo>,
    #[prost(uint32, tag = "10")]
    pub param: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23453)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gfhkebnhpko {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1775)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pckjjjalhlf {
    #[prost(message, repeated, tag = "8")]
    pub lokekjmfnih: ::prost::alloc::vec::Vec<Poaelklahjj>,
    #[prost(enumeration = "Lopfafplahp", tag = "10")]
    pub pjbikednknd: i32,
    #[prost(uint32, tag = "14")]
    pub fffcjhkongk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Poaelklahjj {
    #[prost(uint32, tag = "1")]
    pub kmkgjolhlih: u32,
    #[prost(int32, tag = "3")]
    pub plpmjinbapj: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nobjfjifjpn {
    #[prost(uint32, tag = "1")]
    pub olekbaakakh: u32,
    #[prost(uint32, tag = "3")]
    pub lfajnkbnfna: u32,
    #[prost(uint32, tag = "4")]
    pub jkodbjelogm: u32,
    #[prost(uint32, tag = "5")]
    pub celfpjfeogi: u32,
    #[prost(uint32, tag = "6")]
    pub skill_id: u32,
    #[prost(uint32, tag = "7")]
    pub mpcmnambobb: u32,
    #[prost(uint32, tag = "9")]
    pub nfbalifdncm: u32,
    #[prost(uint32, tag = "10")]
    pub nclblialnmk: u32,
    #[prost(message, repeated, tag = "11")]
    pub empcckdemll: ::prost::alloc::vec::Vec<Pdpehfdjbam>,
    #[prost(uint32, tag = "12")]
    pub damage: u32,
    #[prost(uint32, tag = "15")]
    pub ommkdidfibl: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5709)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kiooioaljlc {
    #[prost(uint32, repeated, tag = "9")]
    pub bmijfpaijij: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8160)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Habgjeihihf {
    #[prost(uint32, tag = "2")]
    pub pjhiljjcffp: u32,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29250)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Knlkgnhllog {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6772)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PingReq {
    #[prost(bytes = "vec", tag = "13")]
    pub hkphehghcod: ::prost::alloc::vec::Vec<u8>,
    #[prost(bytes = "vec", tag = "3")]
    pub ojlncaoffbd: ::prost::alloc::vec::Vec<u8>,
    #[prost(uint32, tag = "1")]
    pub client_time: u32,
    #[prost(float, tag = "2")]
    pub ue_time: f32,
    #[prost(double, tag = "11")]
    pub total_tick_time: f64,
    #[prost(uint32, tag = "12")]
    pub seq: u32,
    #[prost(uint32, tag = "4")]
    pub imejalhdmok: u32,
    #[prost(uint64, tag = "10")]
    pub ifgabdpigmf: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24798)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mmmipoicjng {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22521)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cakpmldogbm {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(message, optional, tag = "11")]
    pub keibgplbkgk: ::core::option::Option<Iclcefkfeag>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nfbopnmfebo {
    #[prost(message, optional, tag = "12")]
    pub fgaeincckdk: ::core::option::Option<Ambnedakhfp>,
    #[prost(uint32, tag = "13")]
    pub count: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24100)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mfccpbnemfh {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "11")]
    pub cnaifgicldh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ndmndbffogm {
    #[prost(uint32, tag = "4")]
    pub score: u32,
    #[prost(uint32, tag = "5")]
    pub lladmbnfoam: u32,
    #[prost(uint32, tag = "7")]
    pub jcpmenncbda: u32,
    #[prost(message, optional, tag = "9")]
    pub fgaeincckdk: ::core::option::Option<Ambnedakhfp>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(247)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cinicehgmji {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "4")]
    pub hdfmeefdpjj: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9557)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hpfihmbbaek {
    #[prost(message, repeated, tag = "2")]
    pub ijjlklpaoaa: ::prost::alloc::vec::Vec<Gpcmgdakoem>,
    #[prost(message, repeated, tag = "4")]
    pub peoilihahjk: ::prost::alloc::vec::Vec<Pbkkceocheb>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27075)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hlfelcgjmah {
    #[prost(uint32, tag = "1")]
    pub hoinfbdgefk: u32,
    #[prost(uint32, tag = "8")]
    pub parent_quest_id: u32,
    #[prost(int32, repeated, tag = "12")]
    pub algjnhegpni: ::prost::alloc::vec::Vec<i32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26114)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Khmiemjidhl {
    #[prost(uint32, tag = "4")]
    pub adjnolplkoa: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct RoguelikeGadgetInfo {
    #[prost(uint32, tag = "1")]
    pub cell_config_id: u32,
    #[prost(uint32, tag = "2")]
    pub cell_type: u32,
    #[prost(uint32, tag = "3")]
    pub cell_state: u32,
    #[prost(uint32, tag = "4")]
    pub cell_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gaoddbppala {
    #[prost(enumeration = "Aigmbjebmnn", tag = "1")]
    pub action_type: i32,
    #[prost(uint64, tag = "2")]
    pub client_game_time: u64,
    #[prost(uint64, tag = "3")]
    pub server_game_time: u64,
    #[prost(bool, tag = "4")]
    pub is_failed: bool,
    #[prost(message, optional, tag = "5")]
    pub pos: ::core::option::Option<Aojkinlfjhe>,
    #[prost(uint32, tag = "6")]
    pub peer_id: u32,
    #[prost(uint64, tag = "7")]
    pub execution_game_time: u64,
    #[prost(message, optional, tag = "8")]
    pub gbdoibooebo: ::core::option::Option<Aojkinlfjhe>,
    #[prost(int32, tag = "9")]
    pub rot: i32,
    #[prost(uint32, repeated, tag = "10")]
    pub eekfelfangn: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fgjpipdnehd {
    #[prost(uint32, tag = "8")]
    pub nkkbbpnjoca: u32,
    #[prost(uint32, tag = "10")]
    pub foiejabhbfh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27493)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ikmbpinjfmd {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20414)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UnionCmdNotify {
    #[prost(message, repeated, tag = "9")]
    pub cmd_list: ::prost::alloc::vec::Vec<UnionCmd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dpjniakcola {
    #[prost(uint32, tag = "2")]
    pub fkfilingojp: u32,
    #[prost(uint32, tag = "7")]
    pub ooipgfedjmn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3201)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nlcpaedkfkl {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5287)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct AvatarFlycloakChangeNotify {
    #[prost(uint64, tag = "3")]
    pub avatar_guid: u64,
    #[prost(uint32, tag = "15")]
    pub flycloak_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mmgmjpjhjll {
    #[prost(bool, tag = "5")]
    pub glkngddnocn: bool,
    #[prost(uint32, repeated, tag = "7")]
    pub jnlfkhcfnkn: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "10")]
    pub clckdpngejo: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pcikoddfkmk {
    #[prost(uint32, tag = "5")]
    pub kefkhhanadm: u32,
    #[prost(uint32, tag = "11")]
    pub eofehcpknbc: u32,
    #[prost(uint32, tag = "12")]
    pub offset: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2882)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Miccgobdeea {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ihokgdihida {
    #[prost(map = "uint32, message", tag = "1")]
    pub emojgidcmfd: ::std::collections::HashMap<u32, Llobojjfonb>,
    #[prost(bool, tag = "3")]
    pub lohbcbdepib: bool,
    #[prost(uint32, tag = "6")]
    pub onjnhpggefo: u32,
    #[prost(uint32, tag = "7")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "10")]
    pub nkgdgkcidjj: u32,
    #[prost(bool, tag = "11")]
    pub hbelmaakkio: bool,
    #[prost(uint32, tag = "14")]
    pub mgdepmjlbao: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hgnidagejpm {
    #[prost(uint32, tag = "1")]
    pub uid: u32,
    #[prost(uint32, tag = "3")]
    pub ljkpfeoohdi: u32,
    #[prost(uint32, tag = "5")]
    pub nbamebammnf: u32,
    #[prost(message, optional, tag = "11")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
    #[prost(uint32, tag = "13")]
    pub hbndfnakngk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29107)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Empbihilhlh {
    #[prost(uint32, tag = "13")]
    pub oeocpoekcmj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jgblkfdnihf {
    #[prost(uint64, repeated, tag = "4")]
    pub avatar_guid_list: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint32, tag = "14")]
    pub fmkhegbnbah: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ohmfkkpghkp {
    #[prost(string, tag = "11")]
    pub bfpmihhhmip: ::prost::alloc::string::String,
    #[prost(bool, tag = "15")]
    pub fnjegaacabo: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20893)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bmebpgeheed {
    #[prost(message, repeated, tag = "2")]
    pub phnlnoieelc: ::prost::alloc::vec::Vec<Hjoppfkldnk>,
    #[prost(message, repeated, tag = "14")]
    pub mgcjiajmcli: ::prost::alloc::vec::Vec<Hjoppfkldnk>,
    #[prost(message, repeated, tag = "15")]
    pub egiijidbaml: ::prost::alloc::vec::Vec<Hjoppfkldnk>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22723)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Klaekhkcjhc {
    #[prost(message, optional, tag = "3")]
    pub platform: ::core::option::Option<PlatformInfo>,
    #[prost(uint32, tag = "8")]
    pub scene_time: u32,
    #[prost(uint32, tag = "15")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7467)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fdcoloidkai {
    #[prost(uint32, tag = "1")]
    pub level_id: u32,
    #[prost(bool, tag = "14")]
    pub icbkancjbmd: bool,
    #[prost(uint32, tag = "15")]
    pub dihpjpafnac: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(899)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Diaflliphln {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(296)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mneeolaefok {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(391)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Obaahjggcja {
    #[prost(uint32, repeated, tag = "2")]
    pub phipflljkpl: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "7")]
    pub fbplnaaknaf: u32,
    #[prost(uint32, tag = "13")]
    pub eaipgemknpo: u32,
    #[prost(bool, tag = "11")]
    pub hcjfdjhilam: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4647)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jccbkkjdlke {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8635)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eemaapceimk {
    #[prost(uint32, tag = "3")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1231)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mdpbcbhgmeh {
    #[prost(uint64, tag = "7")]
    pub aghciclcick: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21790)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fhlghfboodh {
    #[prost(uint32, tag = "5")]
    pub bdbgopiikfo: u32,
    #[prost(uint32, tag = "7")]
    pub city_id: u32,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pendpgjgckd {
    #[prost(uint32, repeated, tag = "2")]
    pub jnlfkhcfnkn: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "3")]
    pub clckdpngejo: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "11")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nbgckgbplal {
    #[prost(uint32, tag = "1")]
    pub emjgdbdceal: u32,
    #[prost(fixed32, tag = "2")]
    pub ibfoilmphdd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Khdnochbacf {
    #[prost(uint32, tag = "9")]
    pub level_id: u32,
    #[prost(bool, tag = "10")]
    pub glkngddnocn: bool,
    #[prost(bool, tag = "12")]
    pub is_finish: bool,
    #[prost(uint32, tag = "13")]
    pub ofnmjncbnhk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4946)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nkpmodmmjhb {
    #[prost(message, optional, tag = "2")]
    pub ibeakhhnohb: ::core::option::Option<Hcjgifnjppj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5937)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pjhmddehanl {
    #[prost(uint32, tag = "9")]
    pub point_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28957)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gembdhiabjj {
    #[prost(enumeration = "Ligdiknfkjc", tag = "7")]
    pub gjmpbchfklh: i32,
    #[prost(bool, tag = "5")]
    pub icnjnjilaod: bool,
    #[prost(uint32, tag = "11")]
    pub cgpkofndhbg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22427)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Niahldlkioj {
    #[prost(message, repeated, tag = "15")]
    pub ilcacofdcfi: ::prost::alloc::vec::Vec<Clcjfnmkmgl>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5296)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct SceneTimeNotify {
    #[prost(bool, tag = "10")]
    pub is_paused: bool,
    #[prost(uint32, tag = "11")]
    pub scene_id: u32,
    #[prost(uint64, tag = "15")]
    pub scene_time: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9268)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Donppbgabcg {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(bool, tag = "11")]
    pub aeilndeeeeb: bool,
    #[prost(bool, tag = "14")]
    pub hkohmhicbej: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3250)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oempdehfici {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(message, optional, tag = "4")]
    pub inbkgniehng: ::core::option::Option<Fhmmnelmnmd>,
    #[prost(message, repeated, tag = "11")]
    pub item_list: ::prost::alloc::vec::Vec<Jickppdlohc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8109)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Okmofajgkch {
    #[prost(uint32, tag = "8")]
    pub entity_id: u32,
    #[prost(float, tag = "12")]
    pub mdmmnleemdf: f32,
    #[prost(uint32, tag = "15")]
    pub iafhmpdiddm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1192)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ladbkpclmed {
    #[prost(enumeration = "Glbcdbehhij", tag = "14")]
    pub imiogmdokcb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nppkacnelmc {
    #[prost(message, optional, tag = "7")]
    pub mioooafmoae: ::core::option::Option<Kifaknnkdpc>,
    #[prost(bool, tag = "14")]
    pub empffmldnmj: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20720)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Plpiojglndb {
    #[prost(uint32, tag = "2")]
    pub entity_id: u32,
    #[prost(float, tag = "3")]
    pub cur_stamina: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Phcnfhkapef {
    #[prost(uint32, tag = "12")]
    pub olnimdhkaff: u32,
    #[prost(uint32, tag = "15")]
    pub ocfoijcfjak: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cggeldlhdaj {
    #[prost(message, optional, tag = "1")]
    pub gdjkcknogbd: ::core::option::Option<Apmhhcohpld>,
    #[prost(message, optional, tag = "2")]
    pub cienokdhfod: ::core::option::Option<Dkifdgnkpld>,
    #[prost(uint32, repeated, tag = "4")]
    pub scene_tag_id_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "8")]
    pub scene_id: u32,
    #[prost(bool, tag = "10")]
    pub is_locked: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nlfemfhpkjb {
    #[prost(uint32, tag = "3")]
    pub game_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pjnmnmcmene {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mjmmbpjnadl {
    #[prost(map = "uint32, uint32", tag = "1")]
    pub efandlibejl: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "3")]
    pub mp_play_id: u32,
    #[prost(uint32, tag = "5")]
    pub hjjhglikcam: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mlmkbichnog {
    #[prost(uint32, repeated, tag = "1")]
    pub pdhekmemblg: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "3")]
    pub aekageebaaa: u32,
    #[prost(message, optional, tag = "5")]
    pub omhfbicmgia: ::core::option::Option<Kbdgjpclchj>,
    #[prost(uint32, tag = "7")]
    pub goegmoibfcl: u32,
    #[prost(uint32, tag = "9")]
    pub libnhfhefbf: u32,
    #[prost(uint64, tag = "11")]
    pub baadlabmpdj: u64,
    #[prost(message, optional, tag = "12")]
    pub ghihaidbacf: ::core::option::Option<Kbdgjpclchj>,
    #[prost(uint32, tag = "13")]
    pub hpmghmceddp: u32,
    #[prost(uint32, tag = "14")]
    pub nekecfnahom: u32,
    #[prost(message, repeated, tag = "15")]
    pub kabodnmegek: ::prost::alloc::vec::Vec<Hgmnlagdfdc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1688)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ihdfdamifem {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25257)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Alnnfmienop {
    #[prost(uint32, tag = "3")]
    pub eaipgemknpo: u32,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(oneof = "alnnfmienop::Dapnlkepgjn", tags = "4")]
    pub dapnlkepgjn: ::core::option::Option<alnnfmienop::Dapnlkepgjn>,
}
/// Nested message and enum types in `ALNNFMIENOP`.
pub mod alnnfmienop {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Dapnlkepgjn {
        #[prost(message, tag = "4")]
        SettleInfo(super::Ihokgdihida),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mpehmgifbmm {
    #[prost(uint32, tag = "1")]
    pub entity_id: u32,
    #[prost(int32, tag = "2")]
    pub jagmdckniaa: i32,
    #[prost(message, optional, tag = "3")]
    pub ref_pos: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "4")]
    pub nflndoplccd: u32,
    #[prost(uint32, tag = "5")]
    pub doiihabehko: u32,
    #[prost(message, optional, tag = "6")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(bool, tag = "7")]
    pub aedngllehap: bool,
    #[prost(bool, tag = "9")]
    pub icgpfmimpbe: bool,
    #[prost(uint32, tag = "10")]
    pub pnljnepogna: u32,
    #[prost(int32, tag = "11")]
    pub dmmdjommjik: i32,
    #[prost(float, tag = "12")]
    pub niccgpghand: f32,
    #[prost(int32, tag = "13")]
    pub enoekklhbnh: i32,
    #[prost(uint32, tag = "14")]
    pub ljmkbmgncbi: u32,
    #[prost(uint32, tag = "15")]
    pub ref_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8750)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bhfpkmkhege {
    #[prost(bool, tag = "2")]
    pub pohoiclcbkl: bool,
    #[prost(uint32, tag = "3")]
    pub parent_quest_id: u32,
    #[prost(message, optional, tag = "4")]
    pub hgdgjjfbfnd: ::core::option::Option<Deigilfodbd>,
    #[prost(uint32, tag = "8")]
    pub entity_id: u32,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
    #[prost(uint32, tag = "15")]
    pub pjabefajbgb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2618)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Glggellhckb {
    #[prost(uint32, tag = "13")]
    pub id: u32,
    #[prost(uint32, tag = "10")]
    pub lgjdfhokopk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ipgdgihpbef {
    #[prost(map = "uint32, uint32", tag = "1")]
    pub hbkgbnkkcbg: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "4")]
    pub uid: u32,
    #[prost(string, tag = "13")]
    pub omknbnmebik: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "14")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9302)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Okbiaipdgfh {
    #[prost(uint32, tag = "2")]
    pub id: u32,
    #[prost(uint32, tag = "3")]
    pub fnnnbgbmgdk: u32,
    #[prost(enumeration = "Ndbdleknhmf", tag = "5")]
    pub r#type: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ggmacifdebm {
    #[prost(message, repeated, tag = "1")]
    pub hgkbedpkpna: ::prost::alloc::vec::Vec<Ibcbpjieaaf>,
    #[prost(bool, tag = "2")]
    pub keplhhehole: bool,
    #[prost(uint32, tag = "4")]
    pub level_id: u32,
    #[prost(bool, tag = "7")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8086)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct OpenStateUpdateNotify {
    #[prost(map = "uint32, uint32", tag = "9")]
    pub open_state_map: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1158)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Anadbimjkap {
    #[prost(message, repeated, tag = "15")]
    pub ekkgnbldpeg: ::prost::alloc::vec::Vec<Hdaafccggfe>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kmjbmefjigo {
    #[prost(uint32, repeated, tag = "9")]
    pub fiekpelikle: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "10")]
    pub costume_id: u32,
    #[prost(bool, tag = "13")]
    pub hdnildcefmg: bool,
    #[prost(uint32, tag = "15")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22096)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pifkgbaofaj {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3746)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nfgeknbbdam {
    #[prost(uint32, tag = "1")]
    pub level_id: u32,
    #[prost(bool, tag = "3")]
    pub hcjfdjhilam: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Likogpgghfj {
    #[prost(uint32, tag = "1")]
    pub chncenbeilh: u32,
    #[prost(uint32, repeated, tag = "14")]
    pub pjlioneefgi: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27317)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Afknollnkah {
    #[prost(uint32, tag = "13")]
    pub hnogkehflhe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ldcechmbpfh {
    #[prost(uint32, tag = "6")]
    pub bpjdjdffkdh: u32,
    #[prost(message, optional, tag = "7")]
    pub dhegcbchmmj: ::core::option::Option<Ejpdlplcajh>,
    #[prost(message, optional, tag = "8")]
    pub ddmpapbpdfl: ::core::option::Option<Aoepjjadkga>,
    #[prost(uint32, tag = "9")]
    pub apkglfkamel: u32,
    #[prost(message, optional, tag = "10")]
    pub ccendamkoem: ::core::option::Option<Ekfgghclomj>,
    #[prost(bool, tag = "12")]
    pub is_add: bool,
    #[prost(uint32, tag = "13")]
    pub room_id: u32,
    #[prost(uint32, tag = "14")]
    pub abnfggbpdeo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23958)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hkohgofjfai {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "9")]
    pub fiekpelikle: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6103)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Apblbkgkohd {
    #[prost(message, repeated, tag = "4")]
    pub mmmlfikmden: ::prost::alloc::vec::Vec<Kglmkabnmmm>,
    #[prost(message, repeated, tag = "5")]
    pub dlfdignbonk: ::prost::alloc::vec::Vec<Kglmkabnmmm>,
    #[prost(message, repeated, tag = "8")]
    pub lnbojicaife: ::prost::alloc::vec::Vec<Vector>,
    #[prost(message, repeated, tag = "9")]
    pub opkgnldiehj: ::prost::alloc::vec::Vec<Vector>,
    #[prost(int32, tag = "10")]
    pub query_id: i32,
    #[prost(enumeration = "Pgmjcmnhalc", tag = "14")]
    pub query_status: i32,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kgbkifdbepc {
    #[prost(uint32, tag = "8")]
    pub khcggeigcbc: u32,
    #[prost(uint32, tag = "12")]
    pub ajecgdgbgci: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21222)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hijbgefnbod {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8040)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Acojijoefpm {
    #[prost(message, repeated, tag = "2")]
    pub blacdjfdahf: ::prost::alloc::vec::Vec<Bkfkeihhbcc>,
    #[prost(message, repeated, tag = "5")]
    pub gikaoegnlhl: ::prost::alloc::vec::Vec<Kohnlafgbmo>,
    #[prost(bool, tag = "9")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "8")]
    pub lojbhhkefjo: u32,
    #[prost(uint32, tag = "11")]
    pub level_id: u32,
    #[prost(uint32, tag = "10")]
    pub kngjhmllcnp: u32,
    #[prost(uint32, tag = "14")]
    pub ggagmenijdb: u32,
    #[prost(uint32, tag = "6")]
    pub cgmebdlbkmh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5947)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fbdpalcfgmi {
    #[prost(message, optional, tag = "5")]
    pub fofmcglbfgl: ::core::option::Option<Egocjgkcmgf>,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24796)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Phggcemdphi {
    #[prost(int32, repeated, tag = "3")]
    pub param_list: ::prost::alloc::vec::Vec<i32>,
    #[prost(uint32, tag = "8")]
    pub target_entity_id: u32,
    #[prost(uint32, tag = "1")]
    pub source_entity_id: u32,
    #[prost(uint32, tag = "2")]
    pub lplcopemgof: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eenofofcohf {
    #[prost(uint32, tag = "1")]
    pub nmaapldbbni: u32,
    #[prost(uint32, tag = "9")]
    pub ggcfiehankk: u32,
    #[prost(bool, tag = "11")]
    pub bnaccmflpko: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27153)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eblkjgdciae {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint32, tag = "4")]
    pub dnbefljlamb: u32,
    #[prost(message, repeated, tag = "9")]
    pub hcikipjgcjc: ::prost::alloc::vec::Vec<Lojhflgpfcl>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24250)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Alpedeanbgp {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub ofhapaohpjb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24304)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ajkblbplocd {
    #[prost(message, repeated, tag = "14")]
    pub gapodpgieln: ::prost::alloc::vec::Vec<Ennopjofajk>,
    #[prost(uint32, tag = "5")]
    pub pieimacpkol: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28567)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cmjflialall {
    #[prost(uint32, tag = "1")]
    pub gefnmjhabgj: u32,
    #[prost(bool, tag = "4")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "6")]
    pub lceaamjmkjn: u32,
    #[prost(bool, tag = "7")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "9")]
    pub pmldnfnnjam: u32,
    #[prost(uint32, tag = "10")]
    pub group_id: u32,
    #[prost(uint32, tag = "13")]
    pub score: u32,
    #[prost(uint32, tag = "14")]
    pub pdbfcaegfeg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23846)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lpjcpllndbc {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4383)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cfioppcgfln {
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5669)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hgcdbgcgoki {
    #[prost(uint32, tag = "2")]
    pub gfbbgfpdmpj: u32,
    #[prost(uint32, tag = "5")]
    pub bpnkdclmfoa: u32,
    #[prost(bool, tag = "6")]
    pub ilnbddpakhp: bool,
    #[prost(message, repeated, tag = "10")]
    pub emfhfegcjjb: ::prost::alloc::vec::Vec<Hkhgfihoknc>,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
    #[prost(string, tag = "14")]
    pub bfpmihhhmip: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kmhhoephmjo {
    #[prost(uint32, tag = "7")]
    pub equip_type: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mffemnbflln {
    #[prost(float, tag = "3")]
    pub odmegpdigef: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7657)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ajjljnhched {
    #[prost(uint32, tag = "1")]
    pub hkegebjnjjd: u32,
    #[prost(message, optional, tag = "5")]
    pub okkjcbojaod: ::core::option::Option<Ncgpmhoihhl>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jiefokipopm {
    #[prost(uint32, tag = "1")]
    pub hcgblldppok: u32,
    #[prost(uint32, tag = "4")]
    pub fcphcokaleb: u32,
    #[prost(uint32, tag = "6")]
    pub gjmpfkecfkb: u32,
    #[prost(uint32, tag = "8")]
    pub ghaaadjpihn: u32,
    #[prost(uint32, tag = "10")]
    pub mlnmecigdmh: u32,
    #[prost(uint32, tag = "13")]
    pub mejcendjalc: u32,
    #[prost(uint32, tag = "14")]
    pub lgganndjeoi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7623)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mbjfpbbemba {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21661)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lofkcaobdfg {
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9240)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hhalpcfomnh {
    #[prost(uint32, tag = "8")]
    pub bodiejclgmb: u32,
    #[prost(uint32, tag = "2")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fkfkbcfbopd {
    #[prost(message, repeated, tag = "4")]
    pub pbppckbbkli: ::prost::alloc::vec::Vec<Gljgndbodki>,
    #[prost(uint32, tag = "8")]
    pub iddchfgaglk: u32,
    #[prost(uint32, tag = "9")]
    pub enheoepdecj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22280)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Egkkpdlkmlp {
    #[prost(uint32, tag = "14")]
    pub lbeinahahka: u32,
    #[prost(uint32, tag = "11")]
    pub nilalkpfcco: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26974)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nmlfaokiimj {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct QueryCurrRegionHttpRsp {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(string, tag = "2")]
    pub msg: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "3")]
    pub region_info: ::core::option::Option<RegionInfo>,
    #[prost(bytes = "vec", tag = "11")]
    pub client_secret_key: ::prost::alloc::vec::Vec<u8>,
    #[prost(bytes = "vec", tag = "12")]
    pub region_custom_config_encrypted: ::prost::alloc::vec::Vec<u8>,
    #[prost(bytes = "vec", tag = "13")]
    pub client_region_custom_config_encrypted: ::prost::alloc::vec::Vec<u8>,
    #[prost(string, tag = "14")]
    pub connect_gate_ticket: ::prost::alloc::string::String,
    #[prost(oneof = "query_curr_region_http_rsp::Detail", tags = "4, 5")]
    pub detail: ::core::option::Option<query_curr_region_http_rsp::Detail>,
}
/// Nested message and enum types in `QueryCurrRegionHttpRsp`.
pub mod query_curr_region_http_rsp {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(message, tag = "4")]
        ForceUpdate(super::ForceUpdateInfo),
        #[prost(message, tag = "5")]
        StopServer(super::StopServerInfo),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fchdblfdcpd {
    #[prost(uint32, repeated, tag = "2")]
    pub ckkdfocmgib: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "15")]
    pub edkmhlpplgh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eliiddffaef {
    #[prost(bool, tag = "3")]
    pub mpfldfdogai: bool,
    #[prost(uint32, tag = "4")]
    pub exp: u32,
    #[prost(uint32, tag = "5")]
    pub nmikcmlkndm: u32,
    #[prost(uint32, tag = "6")]
    pub deenkhenhpd: u32,
    #[prost(uint32, tag = "7")]
    pub feidgcjnihi: u32,
    #[prost(uint32, tag = "9")]
    pub level: u32,
    #[prost(uint32, repeated, tag = "10")]
    pub lklnancmfjk: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "12")]
    pub likpbcbbhaa: u32,
    #[prost(bool, tag = "15")]
    pub bdcmfboihao: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1976)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Obhnmbeicpg {
    #[prost(uint32, tag = "3")]
    pub skill_id: u32,
    #[prost(uint32, tag = "2")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "9")]
    pub lchbeahgheo: u32,
    #[prost(uint32, tag = "5")]
    pub emhicnfjopo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21156)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mopdajlpocd {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22394)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kbkdggcihif {
    #[prost(uint32, tag = "1")]
    pub jiglndleoch: u32,
    #[prost(uint32, tag = "8")]
    pub lbcoamiihoi: u32,
    #[prost(uint32, tag = "10")]
    pub jheaggehcbg: u32,
    #[prost(uint32, tag = "12")]
    pub haalkjaookk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1113)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ejbigagklgl {
    #[prost(uint32, tag = "6")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lieoeelledn {
    #[prost(message, repeated, tag = "13")]
    pub pndpnmbdokf: ::prost::alloc::vec::Vec<Iplimljdklb>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Icikkbechfo {
    #[prost(uint32, tag = "6")]
    pub item_id: u32,
    #[prost(bool, tag = "10")]
    pub gkeocobfifi: bool,
    #[prost(uint32, tag = "11")]
    pub count: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29526)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hipgikcegda {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23292)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Djlmfpbgdlo {
    #[prost(uint32, tag = "7")]
    pub hnneelkcdmc: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27634)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Apbjcopkbbe {
    #[prost(uint32, tag = "1")]
    pub kngjhmllcnp: u32,
    #[prost(uint32, repeated, tag = "4")]
    pub glkdkojdnfe: ::prost::alloc::vec::Vec<u32>,
    #[prost(enumeration = "Bmdigaiggbk", tag = "6")]
    pub imiogmdokcb: i32,
    #[prost(uint32, tag = "7")]
    pub jabgacillec: u32,
    #[prost(bool, tag = "8")]
    pub haeaoofajng: bool,
    #[prost(uint32, tag = "9")]
    pub poaficpfpcj: u32,
    #[prost(message, repeated, tag = "10")]
    pub fagjdjiglon: ::prost::alloc::vec::Vec<Mdljnanfjmc>,
    #[prost(uint32, tag = "11")]
    pub ikdajelleai: u32,
    #[prost(uint32, tag = "13")]
    pub jimelgdjmlf: u32,
    #[prost(message, repeated, tag = "14")]
    pub meikgboldgh: ::prost::alloc::vec::Vec<Hfhjkhoplmn>,
    #[prost(bool, tag = "15")]
    pub bpdljhgnngd: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8031)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jogmjelpfgl {
    #[prost(uint32, tag = "1")]
    pub ohdengdfndp: u32,
    #[prost(bool, tag = "5")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "6")]
    pub penjgiijfpg: u32,
    #[prost(uint32, tag = "9")]
    pub pdeihlekapj: u32,
    #[prost(uint32, tag = "10")]
    pub khhinalflhp: u32,
    #[prost(uint32, tag = "13")]
    pub dnhlmkmlppb: u32,
    #[prost(bool, tag = "14")]
    pub ccjpkbgbiia: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5594)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Adagkgdhili {
    #[prost(message, repeated, tag = "15")]
    pub oninekgckcg: ::prost::alloc::vec::Vec<Pfnopcldnil>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bdnaacfedfg {
    #[prost(uint32, tag = "3")]
    pub key_id: u32,
    #[prost(bool, tag = "4")]
    pub pmjlllfophk: bool,
    #[prost(bool, tag = "12")]
    pub lpchfploeli: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ppdjhnjdegm {
    #[prost(bool, tag = "1")]
    pub mpfldfdogai: bool,
    #[prost(map = "uint32, message", tag = "2")]
    pub pggecbkbpnp: ::std::collections::HashMap<u32, Geemaadbnji>,
    #[prost(uint32, tag = "3")]
    pub nmikcmlkndm: u32,
    #[prost(map = "uint32, message", tag = "4")]
    pub eandoceemej: ::std::collections::HashMap<u32, Gmpkodpacgm>,
    #[prost(message, repeated, tag = "6")]
    pub emipfngkdpk: ::prost::alloc::vec::Vec<Dcbnahflejc>,
    #[prost(bool, tag = "7")]
    pub opcagnidahi: bool,
    #[prost(uint32, tag = "8")]
    pub nglmacpcoel: u32,
    #[prost(uint32, tag = "13")]
    pub ikammkhkkhi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24987)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kopbcleffah {
    #[prost(uint32, tag = "1")]
    pub area_type: u32,
    #[prost(uint32, tag = "7")]
    pub area_id: u32,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2492)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Glaplfpdgcn {
    #[prost(uint32, repeated, tag = "4")]
    pub npmpjingpof: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23108)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Agaejglnojc {
    #[prost(bool, tag = "8")]
    pub gapbeakmpma: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hcjgifnjppj {
    #[prost(uint32, tag = "7")]
    pub monster_config_id: u32,
    #[prost(uint32, tag = "15")]
    pub lbgllpjcdog: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fjloaadfjol {
    #[prost(message, repeated, tag = "13")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Iepeohakkmi>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28770)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jgcmodfonmi {
    #[prost(uint32, tag = "3")]
    pub bgmdlpabefa: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26494)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Neenoceenod {
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dchlobngomn {
    #[prost(uint32, tag = "14")]
    pub avatar_id: u32,
    #[prost(uint32, tag = "15")]
    pub player_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21639)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gjjjobcmbeg {
    #[prost(uint32, tag = "3")]
    pub uid: u32,
    #[prost(uint32, tag = "5")]
    pub nekecfnahom: u32,
    #[prost(bool, tag = "9")]
    pub moaelibphoi: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6841)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pgdpididgjp {
    #[prost(uint32, tag = "11")]
    pub level_id: u32,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Amfpbpkaaba {
    #[prost(float, tag = "5")]
    pub mfehfneiffa: f32,
    #[prost(uint32, tag = "12")]
    pub element_type: u32,
    #[prost(float, tag = "13")]
    pub jglicghgnfp: f32,
    #[prost(uint32, tag = "14")]
    pub plgcfdaenlc: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(824)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gegfcjcaofo {
    #[prost(message, repeated, tag = "3")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Hkdcdfdmpmo>,
    #[prost(uint64, tag = "7")]
    pub eehlmdngeln: u64,
    #[prost(uint32, tag = "10")]
    pub bbjdaejpofe: u32,
    #[prost(message, repeated, tag = "12")]
    pub hmckpcenidk: ::prost::alloc::vec::Vec<Bdnaacfedfg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22685)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lfilcndgpan {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nndlcndekfh {
    #[prost(uint32, tag = "1")]
    pub level: u32,
    #[prost(uint32, tag = "5")]
    pub monster_id: u32,
    #[prost(uint32, tag = "7")]
    pub count: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1186)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dbpaehoijlm {
    #[prost(uint32, tag = "11")]
    pub jofggbnalgp: u32,
    #[prost(uint32, tag = "1")]
    pub ebjejlglodb: u32,
    #[prost(uint32, tag = "4")]
    pub iieilnhpcji: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24348)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mnganfihnoe {
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ddaakfefaib {
    #[prost(int32, tag = "8")]
    pub jaleaggjokf: i32,
    #[prost(int32, tag = "10")]
    pub mdmmnleemdf: i32,
    #[prost(message, repeated, tag = "14")]
    pub doijacgkgij: ::prost::alloc::vec::Vec<Iohoedhlmdd>,
    #[prost(uint32, tag = "15")]
    pub r#type: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kdmidlbhjjd {
    #[prost(uint32, tag = "1")]
    pub entity_id: u32,
    #[prost(int32, tag = "5")]
    pub name_id: i32,
    #[prost(bool, tag = "6")]
    pub ffekmffdnap: bool,
    #[prost(message, optional, tag = "15")]
    pub mdmmnleemdf: ::core::option::Option<AnimatorParameterValueInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bbikbhkdnpi {
    #[prost(uint32, tag = "3")]
    pub pafldbljhfd: u32,
    #[prost(message, repeated, tag = "8")]
    pub joahnclhcbh: ::prost::alloc::vec::Vec<Hijlleihoda>,
    #[prost(message, repeated, tag = "15")]
    pub kgajikdihni: ::prost::alloc::vec::Vec<Hopikhoionp>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29957)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gkghpjgainn {
    #[prost(uint64, repeated, tag = "12")]
    pub equip_guid_list: ::prost::alloc::vec::Vec<u64>,
    #[prost(bool, tag = "3")]
    pub is_locked: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23465)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mkfogccdgdd {
    #[prost(uint32, tag = "4")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2521)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cdmncgojigf {
    #[prost(string, tag = "5")]
    pub team_name: ::prost::alloc::string::String,
    #[prost(int32, tag = "8")]
    pub team_id: i32,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2980)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bacldnpdali {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25169)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bhofdmlehko {
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24450)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hockddmkeim {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7168)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Iejaifddggd {
    #[prost(uint64, repeated, tag = "14")]
    pub gbgmoobdgfl: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint64, tag = "4")]
    pub avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pfpomopllnm {
    #[prost(uint32, tag = "1")]
    pub aekageebaaa: u32,
    #[prost(uint32, tag = "2")]
    pub paebpijcanp: u32,
    #[prost(uint32, tag = "4")]
    pub fmdngadplon: u32,
    #[prost(enumeration = "Cnaclmknnlb", tag = "5")]
    pub ebjcfmkmnmi: i32,
    #[prost(uint32, repeated, tag = "6")]
    pub hchojonkhob: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "7")]
    pub dlhakokjino: ::prost::alloc::vec::Vec<Bnacfaengge>,
    #[prost(uint32, tag = "8")]
    pub lnfebgjkljp: u32,
    #[prost(uint32, tag = "9")]
    pub cgapfkebemf: u32,
    #[prost(uint32, tag = "10")]
    pub lihdcpplban: u32,
    #[prost(uint32, repeated, tag = "12")]
    pub kogmmcnpjll: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "13")]
    pub gcamlfofaho: u32,
    #[prost(message, repeated, tag = "15")]
    pub ipnkkoahioe: ::prost::alloc::vec::Vec<Nbnniigacnc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25060)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ehhlgdofplj {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(bool, tag = "2")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "7")]
    pub score: u32,
    #[prost(uint32, tag = "8")]
    pub mpbmkddpdgp: u32,
    #[prost(bool, tag = "11")]
    pub is_finish: bool,
    #[prost(uint32, tag = "13")]
    pub gefnmjhabgj: u32,
    #[prost(uint32, tag = "15")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4059)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ckgadkgnkmj {
    #[prost(uint32, tag = "2")]
    pub ggigcllhefm: u32,
    #[prost(uint32, repeated, tag = "4")]
    pub hffjpcnbdoo: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "9")]
    pub level_id: u32,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20302)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Apghfleeljl {
    #[prost(uint32, repeated, tag = "2")]
    pub cabgdhlnblk: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "3")]
    pub config_id: u32,
    #[prost(uint32, repeated, tag = "6")]
    pub ckgnipbiaai: ::prost::alloc::vec::Vec<u32>,
    #[prost(enumeration = "Abpkolenhap", tag = "7")]
    pub dhicfghanog: i32,
    #[prost(uint32, tag = "8")]
    pub level_id: u32,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Plgmidnfdfn {
    #[prost(string, tag = "3")]
    pub efajihmnobk: ::prost::alloc::string::String,
    #[prost(message, repeated, tag = "4")]
    pub jahppelnedf: ::prost::alloc::vec::Vec<Hfhjkhoplmn>,
    #[prost(message, optional, tag = "6")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
    #[prost(uint32, tag = "7")]
    pub uid: u32,
    #[prost(string, tag = "10")]
    pub omknbnmebik: ::prost::alloc::string::String,
    #[prost(uint32, tag = "14")]
    pub odcpaeconnd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8418)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dcdpcpkaaeg {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "6")]
    pub adjnolplkoa: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27388)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jiapaakhgho {
    #[prost(uint32, tag = "1")]
    pub uid: u32,
    #[prost(uint32, tag = "2")]
    pub akckjlabnhd: u32,
    #[prost(uint32, tag = "9")]
    pub ofebpljjnkh: u32,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
    #[prost(uint32, tag = "15")]
    pub lenjloinpff: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28902)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gcfljbllmdf {
    #[prost(uint32, tag = "6")]
    pub pcepaceobhm: u32,
    #[prost(uint32, tag = "10")]
    pub gefnmjhabgj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25517)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jgkekomdiil {
    #[prost(float, tag = "1")]
    pub lnghhdiabnk: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25397)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Imaeibpkbbl {
    #[prost(message, repeated, tag = "12")]
    pub hlohmmhkffp: ::prost::alloc::vec::Vec<Mpoldibfemm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5502)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dkbclodkgdk {
    #[prost(message, optional, tag = "14")]
    pub oehgddjngac: ::core::option::Option<Jnopbdmemon>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27932)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nplapcbppmf {
    #[prost(uint32, tag = "10")]
    pub bbpgijfjhen: u32,
    #[prost(uint32, tag = "3")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29762)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Phacdcgglnh {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29558)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oacpninelpm {
    #[prost(string, tag = "5")]
    pub bmfkoonmmee: ::prost::alloc::string::String,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(uint32, tag = "8")]
    pub uid: u32,
    #[prost(bool, tag = "13")]
    pub ihkkickgnhb: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3638)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Epfpelmmmma {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8801)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cdpmamgphhf {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint32, tag = "2")]
    pub olghckdnmbi: u32,
    #[prost(uint32, tag = "9")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "13")]
    pub ecpgnbgdbbn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dfoalmcbpmg {
    #[prost(bool, tag = "8")]
    pub mihhkdpflnb: bool,
    #[prost(uint32, tag = "9")]
    pub aoejecpcind: u32,
    #[prost(uint32, tag = "15")]
    pub fiddpfbimif: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25649)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Becknncakfl {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26020)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Knebjilakeh {
    #[prost(uint32, tag = "12")]
    pub oajoobghagm: u32,
    #[prost(uint32, tag = "4")]
    pub point_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6644)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oemppoefojd {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8691)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kmifnnoobke {
    #[prost(bool, tag = "1")]
    pub fjdblnkepkb: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(191)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Icdidjeapke {
    #[prost(uint32, tag = "9")]
    pub blcafdahkcg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21972)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gbfpamampgg {
    #[prost(enumeration = "Kpfoblalblc", tag = "3")]
    pub daakpcoabep: i32,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
    #[prost(oneof = "gbfpamampgg::Dapnlkepgjn", tags = "10")]
    pub dapnlkepgjn: ::core::option::Option<gbfpamampgg::Dapnlkepgjn>,
}
/// Nested message and enum types in `GBFPAMAMPGG`.
pub mod gbfpamampgg {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Dapnlkepgjn {
        #[prost(message, tag = "10")]
        MusicInfo(super::Mghcahckcgh),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25077)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hegpadahbck {
    #[prost(bool, tag = "8")]
    pub lgfkdhdidih: bool,
    #[prost(bool, tag = "15")]
    pub hejleaaeooa: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20715)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cajbokcille {
    #[prost(message, repeated, tag = "14")]
    pub avatar_rename_list: ::prost::alloc::vec::Vec<AvatarRenameInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gfigapgglpi {
    #[prost(uint32, tag = "1")]
    pub loankpmkdcc: u32,
    #[prost(uint32, tag = "2")]
    pub iejpghnlidb: u32,
    #[prost(message, optional, tag = "3")]
    pub bkbnbipfbcf: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "4")]
    pub llfljcigkcm: u32,
    #[prost(uint32, tag = "6")]
    pub region_id: u32,
    #[prost(bool, tag = "7")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "11")]
    pub scene_id: u32,
    #[prost(uint32, tag = "12")]
    pub kdkcobnnglo: u32,
    #[prost(float, tag = "13")]
    pub obclcjejiml: f32,
    #[prost(bool, tag = "15")]
    pub mjadamhjpcm: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9077)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cjldebgljjg {
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(865)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Elnecmffhgd {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint32, tag = "3")]
    pub scene_id: u32,
    #[prost(message, repeated, tag = "8")]
    pub egheppoloja: ::prost::alloc::vec::Vec<Ophoiiminjj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mkbmdcgmieo {
    #[prost(message, repeated, tag = "1")]
    pub obhpoeliapm: ::prost::alloc::vec::Vec<Bifeddinlod>,
    #[prost(uint32, tag = "2")]
    pub guid: u32,
    #[prost(uint32, tag = "5")]
    pub ionhghgajgg: u32,
    #[prost(uint32, tag = "7")]
    pub ooipgfedjmn: u32,
    #[prost(uint32, repeated, tag = "9")]
    pub tag_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "12")]
    pub id: u32,
    #[prost(bool, tag = "13")]
    pub lakingcakkd: bool,
    #[prost(uint32, repeated, tag = "14")]
    pub skill_id_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "15")]
    pub bhmhdgkhbce: ::prost::alloc::vec::Vec<Gmcjndhelfg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(689)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nolndpmeomc {
    #[prost(uint64, tag = "9")]
    pub avatar_guid: u64,
    #[prost(uint32, tag = "5")]
    pub dpmaabplgdp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2773)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bcjjkpchaaa {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Knjlmgfkimb {
    #[prost(uint32, tag = "4")]
    pub instanced_ability_id: u32,
    #[prost(int32, tag = "5")]
    pub modifier_local_id: i32,
    #[prost(uint32, tag = "6")]
    pub instanced_modifier_id: u32,
    #[prost(int32, tag = "7")]
    pub local_id: i32,
    #[prost(uint32, tag = "9")]
    pub caaoabgheol: u32,
    #[prost(message, optional, tag = "12")]
    pub parent_ability_name: ::core::option::Option<AbilityString>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24334)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dmclpdhbnjh {
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2380)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct QueryPathReq {
    #[prost(message, repeated, tag = "11")]
    pub destination_pos: ::prost::alloc::vec::Vec<Vector>,
    #[prost(message, optional, tag = "9")]
    pub ehheiahalel: ::core::option::Option<Ljlcafopobk>,
    #[prost(message, optional, tag = "13")]
    pub eicgaabfbdo: ::core::option::Option<Ahdcnhcibnm>,
    #[prost(message, optional, tag = "5")]
    pub source_pos: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "7")]
    pub edjnmloinpa: ::core::option::Option<Ahdcnhcibnm>,
    #[prost(enumeration = "QueryPathReqOptionType", tag = "1")]
    pub bjlkihfokof: i32,
    #[prost(uint32, tag = "12")]
    pub scene_id: u32,
    #[prost(int32, tag = "3")]
    pub query_id: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5837)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Apfnkkfiiif {
    #[prost(uint32, tag = "3")]
    pub dokadedbgbl: u32,
    #[prost(uint32, tag = "8")]
    pub pieimacpkol: u32,
    #[prost(message, repeated, tag = "15")]
    pub fmjgcmapmmm: ::prost::alloc::vec::Vec<Bigmholkpek>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9710)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pdjbkleaonm {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(uint32, tag = "9")]
    pub room_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2819)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kiejfbahcba {
    #[prost(uint32, tag = "4")]
    pub fbnlohmdnhd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2334)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fgjafpkfboa {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "14")]
    pub mcofcimmekc: ::prost::alloc::vec::Vec<Fdkiifffcgj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ggnjeoklmjf {
    #[prost(message, repeated, tag = "2")]
    pub cmlpckchahc: ::prost::alloc::vec::Vec<Gmbaailcdec>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2520)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Omplnabnnch {
    #[prost(uint64, repeated, tag = "1")]
    pub gbgmoobdgfl: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint64, tag = "7")]
    pub aghciclcick: u64,
    #[prost(uint32, tag = "12")]
    pub emdnglbbfad: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Icancipfhnk {
    #[prost(message, optional, tag = "1")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "2")]
    pub hpodkdccikj: u32,
    #[prost(uint32, tag = "5")]
    pub kljcagkgilp: u32,
    #[prost(bool, tag = "6")]
    pub pmjlllfophk: bool,
    #[prost(uint32, tag = "13")]
    pub iejpghnlidb: u32,
    #[prost(uint32, tag = "15")]
    pub id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5990)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ljomgnipcji {
    #[prost(message, repeated, tag = "1")]
    pub efabilifgfk: ::prost::alloc::vec::Vec<Hjkeejmimjm>,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oefkeljinli {
    #[prost(enumeration = "Agfcmlmdkfd", tag = "1")]
    pub status: i32,
    #[prost(uint32, tag = "2")]
    pub dlcbijlgpan: u32,
    #[prost(uint32, tag = "4")]
    pub omfmlfafiga: u32,
    #[prost(uint32, tag = "5")]
    pub oaliohamlgn: u32,
    #[prost(uint32, tag = "6")]
    pub bnbohmbknke: u32,
    #[prost(bool, tag = "8")]
    pub khkobcefbbj: bool,
    #[prost(uint32, tag = "11")]
    pub padginlbcmn: u32,
    #[prost(bool, tag = "13")]
    pub efkpnbaopad: bool,
    #[prost(map = "uint32, uint32", tag = "14")]
    pub gipgepliegm: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "15")]
    pub laokdloojpj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23750)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ihfpbklbjgg {
    #[prost(message, optional, tag = "2")]
    pub kcblafeckch: ::core::option::Option<Icancipfhnk>,
    #[prost(message, optional, tag = "10")]
    pub odpnmgfheom: ::core::option::Option<Icancipfhnk>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5765)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jclpeiedbfc {
    #[prost(uint32, tag = "6")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nnfdihpaghc {
    #[prost(uint32, tag = "5")]
    pub iejpghnlidb: u32,
    #[prost(bool, tag = "7")]
    pub is_finish: bool,
    #[prost(bool, tag = "8")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "9")]
    pub eaipgemknpo: u32,
    #[prost(map = "uint32, message", tag = "14")]
    pub hbjhpffjnnb: ::std::collections::HashMap<u32, Aaenlnibfop>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gbgadbffgoo {
    #[prost(uint32, tag = "9")]
    pub mliofjeoklg: u32,
    #[prost(enumeration = "Acjbafcalin", tag = "13")]
    pub nbkbefdeobp: i32,
    #[prost(oneof = "gbgadbffgoo::Nbdofgcpfej", tags = "5, 14, 15")]
    pub nbdofgcpfej: ::core::option::Option<gbgadbffgoo::Nbdofgcpfej>,
}
/// Nested message and enum types in `GBGADBFFGOO`.
pub mod gbgadbffgoo {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Nbdofgcpfej {
        #[prost(uint32, tag = "5")]
        Level(u32),
        #[prost(uint32, tag = "14")]
        ChapterId(u32),
        #[prost(message, tag = "15")]
        QuestParam(super::Libnnjiadme),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Libnnjiadme {
    #[prost(uint32, tag = "2")]
    pub pjabefajbgb: u32,
    #[prost(uint32, tag = "7")]
    pub bdeflcdkdbi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1078)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Iabkcdkpoea {
    #[prost(uint32, repeated, tag = "1")]
    pub ipigafhmpfh: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1696)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nedijcjokji {
    #[prost(uint32, tag = "15")]
    pub oajoobghagm: u32,
    #[prost(bool, tag = "12")]
    pub fnjegaacabo: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SceneTeamAvatar {
    #[prost(message, optional, tag = "1")]
    pub scene_entity_info: ::core::option::Option<SceneEntityInfo>,
    #[prost(uint32, tag = "2")]
    pub entity_id: u32,
    #[prost(message, optional, tag = "3")]
    pub avatar_ability_info: ::core::option::Option<AbilitySyncStateInfo>,
    #[prost(message, repeated, tag = "4")]
    pub server_buff_list: ::prost::alloc::vec::Vec<ServerBuff>,
    #[prost(bool, tag = "5")]
    pub is_reconnect: bool,
    #[prost(message, optional, tag = "6")]
    pub weapon_ability_info: ::core::option::Option<AbilitySyncStateInfo>,
    #[prost(uint32, tag = "7")]
    pub weapon_entity_id: u32,
    #[prost(uint32, tag = "8")]
    pub scene_id: u32,
    #[prost(message, optional, tag = "9")]
    pub avatar_info: ::core::option::Option<AvatarInfo>,
    #[prost(message, optional, tag = "10")]
    pub scene_avatar_info: ::core::option::Option<SceneAvatarInfo>,
    #[prost(uint64, tag = "11")]
    pub weapon_guid: u64,
    #[prost(message, optional, tag = "12")]
    pub ability_control_block: ::core::option::Option<AbilityControlBlock>,
    #[prost(bool, tag = "13")]
    pub is_player_cur_avatar: bool,
    #[prost(uint32, tag = "14")]
    pub player_uid: u32,
    #[prost(uint64, tag = "15")]
    pub avatar_guid: u64,
    #[prost(bool, tag = "919")]
    pub is_on_scene: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28462)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nofkoaibmch {
    #[prost(message, repeated, tag = "11")]
    pub jnjlfljnhcj: ::prost::alloc::vec::Vec<Hdhmianbihc>,
    #[prost(uint32, tag = "13")]
    pub idfmkkfiego: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cipkalfkaoi {
    #[prost(message, repeated, tag = "1")]
    pub kikeobngppo: ::prost::alloc::vec::Vec<Ikmncnbemla>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8492)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hdnpkmlleec {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20003)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ffaoipiaapc {
    #[prost(uint32, tag = "7")]
    pub ocfoijcfjak: u32,
    #[prost(bool, tag = "9")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "11")]
    pub olnimdhkaff: u32,
    #[prost(uint32, tag = "12")]
    pub oikafcinphn: u32,
    #[prost(uint32, tag = "13")]
    pub level_id: u32,
    #[prost(uint32, tag = "15")]
    pub pgichlhdgjp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fakfjbedhhf {
    #[prost(message, repeated, tag = "3")]
    pub aooofnmpohp: ::prost::alloc::vec::Vec<Pfkmfkplbpd>,
    #[prost(message, optional, tag = "10")]
    pub ehadpghmjef: ::core::option::Option<Clihejnniec>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29531)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cfbojnjodfj {
    #[prost(bool, tag = "6")]
    pub lceenmifapm: bool,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(uint64, tag = "9")]
    pub jahlenghnmj: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cjadhbnifnb {
    #[prost(bool, tag = "2")]
    pub pjjdjmgpnle: bool,
    #[prost(bool, tag = "4")]
    pub pmjlllfophk: bool,
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
    #[prost(uint32, tag = "13")]
    pub nmaapldbbni: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Khdghdfkppp {
    #[prost(uint32, tag = "2")]
    pub nkgekomllng: u32,
    #[prost(uint32, tag = "3")]
    pub fagpphacnbj: u32,
    #[prost(uint32, tag = "11")]
    pub khpfgeiljbh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct BreakoutSnapShot {
    #[prost(uint64, tag = "1")]
    pub client_game_time: u64,
    #[prost(uint64, tag = "2")]
    pub server_game_time: u64,
    #[prost(message, repeated, tag = "3")]
    pub ball_list: ::prost::alloc::vec::Vec<BreakoutPhysicalObject>,
    #[prost(message, repeated, tag = "4")]
    pub physical_object_list: ::prost::alloc::vec::Vec<BreakoutPhysicalObject>,
    #[prost(message, repeated, tag = "5")]
    pub action_list: ::prost::alloc::vec::Vec<BreakoutAction>,
    #[prost(uint32, tag = "6")]
    pub wave_index: u32,
    #[prost(bool, tag = "7")]
    pub is_finish: bool,
    #[prost(uint32, tag = "8")]
    pub score: u32,
    #[prost(uint32, tag = "9")]
    pub combo: u32,
    #[prost(uint32, tag = "10")]
    pub max_combo: u32,
    #[prost(uint32, tag = "11")]
    pub life_count: u32,
    #[prost(uint32, tag = "12")]
    pub wave_suite_index: u32,
    #[prost(message, repeated, tag = "13")]
    pub spawn_point_list: ::prost::alloc::vec::Vec<BreakoutSpawnPoint>,
    #[prost(uint32, tag = "14")]
    pub remaining_boss_hp: u32,
    #[prost(message, repeated, tag = "15")]
    pub brick_element_reaction_list: ::prost::alloc::vec::Vec<
        BreakoutElementReactionCounter,
    >,
    #[prost(message, repeated, tag = "16")]
    pub ball_element_reaction_list: ::prost::alloc::vec::Vec<
        BreakoutElementReactionCounter,
    >,
    #[prost(message, repeated, tag = "17")]
    pub uid_info_list: ::prost::alloc::vec::Vec<BreakoutSyncConnectUidInfo>,
    #[prost(message, repeated, tag = "18")]
    pub dynamic_object_list: ::prost::alloc::vec::Vec<BreakoutPhysicalObject>,
    #[prost(uint32, repeated, tag = "19")]
    pub id_index_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "20")]
    pub raw_client_game_time: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3237)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pcobgimllaa {
    #[prost(uint32, tag = "14")]
    pub bodiejclgmb: u32,
    #[prost(uint32, tag = "9")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26061)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mfcggknamni {
    #[prost(uint32, tag = "6")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29703)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jjljplmbdoc {
    #[prost(uint32, tag = "15")]
    pub param: u32,
    #[prost(uint32, tag = "3")]
    pub jofggbnalgp: u32,
    #[prost(uint32, tag = "14")]
    pub cekichkjdkm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26725)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Boinalkgnln {
    #[prost(uint64, tag = "3")]
    pub aghciclcick: u64,
    #[prost(uint32, tag = "9")]
    pub bbeabgnbbfi: u32,
    #[prost(uint32, tag = "14")]
    pub hplkpcgfili: u32,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gdmjgbfbfhp {
    #[prost(uint32, tag = "1")]
    pub eafbmillado: u32,
    #[prost(bool, tag = "2")]
    pub kodnaagljdl: bool,
    #[prost(int32, tag = "4")]
    pub ebfagbdgdbl: i32,
    #[prost(bool, tag = "6")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "7")]
    pub amlijkeniin: u32,
    #[prost(uint32, tag = "8")]
    pub dmkkmolpglk: u32,
    #[prost(uint32, tag = "11")]
    pub mcmhepoeold: u32,
    #[prost(uint32, tag = "12")]
    pub kngjhmllcnp: u32,
    #[prost(uint32, tag = "15")]
    pub score: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8291)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iblglbkadep {
    #[prost(uint32, tag = "6")]
    pub kngjhmllcnp: u32,
    #[prost(uint32, tag = "11")]
    pub gofhghokepn: u32,
    #[prost(uint32, tag = "4")]
    pub oopflkkhhel: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21987)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fppbflphdci {
    #[prost(uint32, tag = "15")]
    pub team_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mimanfiikmn {
    #[prost(uint32, tag = "2")]
    pub entity_id: u32,
    #[prost(message, repeated, tag = "10")]
    pub jjblblmdphc: ::prost::alloc::vec::Vec<Ldkjnpenphg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ebcpgaghaib {
    #[prost(uint32, tag = "1")]
    pub monejdbpolb: u32,
    #[prost(uint32, tag = "3")]
    pub lladmbnfoam: u32,
    #[prost(message, optional, tag = "5")]
    pub fgaeincckdk: ::core::option::Option<Ambnedakhfp>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7521)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Magopphpfng {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5345)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Menmbdkmoek {
    #[prost(uint32, tag = "3")]
    pub finahglfhag: u32,
    #[prost(uint32, tag = "7")]
    pub kdmjfhdppdp: u32,
    #[prost(message, repeated, tag = "8")]
    pub fpkeigkadab: ::prost::alloc::vec::Vec<Lmlbfoeldff>,
    #[prost(uint32, tag = "9")]
    pub oibooeeaidh: u32,
    #[prost(uint32, tag = "10")]
    pub cdchfgfjnoi: u32,
    #[prost(uint32, tag = "15")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20325)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct EvtBeingHitNotify {
    #[prost(message, optional, tag = "1")]
    pub being_hit_info: ::core::option::Option<EvtBeingHitInfo>,
    #[prost(enumeration = "ForwardType", tag = "11")]
    pub forward_type: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24064)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hpolekkdkao {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Knnfimgeieh {
    #[prost(bool, tag = "7")]
    pub mpfldfdogai: bool,
    #[prost(message, repeated, tag = "8")]
    pub hcliemdgggc: ::prost::alloc::vec::Vec<Gfigapgglpi>,
    #[prost(uint32, tag = "11")]
    pub epppbolkbac: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cmbdnhpifch {
    #[prost(uint32, tag = "2")]
    pub uid: u32,
    #[prost(uint32, tag = "9")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20689)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ghkfhodhhhb {
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21492)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ogjfbcpjolh {
    #[prost(uint32, repeated, tag = "7")]
    pub fbhbheaommc: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22324)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dbepejjiiao {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(map = "uint32, float", tag = "11")]
    pub ogpmcpplgib: ::std::collections::HashMap<u32, f32>,
    #[prost(message, repeated, tag = "14")]
    pub efcdelgmmkg: ::prost::alloc::vec::Vec<AvatarInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28095)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hjfnbbfipml {
    #[prost(uint32, repeated, tag = "6")]
    pub tag_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint64, tag = "2")]
    pub guid: u64,
    #[prost(bool, tag = "15")]
    pub hlalmdgmpfm: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ghjfdphadgk {
    #[prost(uint32, tag = "2")]
    pub bdbnjnmfnie: u32,
    #[prost(uint32, tag = "8")]
    pub nmaapldbbni: u32,
    #[prost(uint32, tag = "11")]
    pub level_id: u32,
    #[prost(uint64, repeated, tag = "12")]
    pub ekblibfknee: ::prost::alloc::vec::Vec<u64>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2027)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ddaclmibhgl {
    #[prost(uint32, tag = "1")]
    pub ipdobhbahcn: u32,
    #[prost(bool, tag = "3")]
    pub ilmbiapimoh: bool,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22208)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jhcffokppei {
    #[prost(uint32, tag = "1")]
    pub ffhpdcibkod: u32,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7465)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cnlojcnbkck {
    #[prost(message, repeated, tag = "4")]
    pub item_list: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(uint32, repeated, tag = "6")]
    pub fenojplgmge: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bhcohccolbe {
    #[prost(message, optional, tag = "3")]
    pub mdmmnleemdf: ::core::option::Option<AnimatorParameterValueInfoPair>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2104)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Allaihheajk {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "12")]
    pub pmlfohgfhbf: ::prost::alloc::vec::Vec<Pdddamoeekf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hjmpmbgecae {
    #[prost(uint32, tag = "5")]
    pub fpbjlpalnpe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23175)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Omdaekkpefm {
    #[prost(uint32, tag = "13")]
    pub dangdbehnfe: u32,
    #[prost(uint32, tag = "7")]
    pub kledmfebmki: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29888)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lemflbnjkgf {
    #[prost(bool, tag = "2")]
    pub hpcpnmechga: bool,
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint64, tag = "6")]
    pub ihgjlfcgfin: u64,
    #[prost(enumeration = "Kpfoblalblc", tag = "15")]
    pub daakpcoabep: i32,
    #[prost(oneof = "lemflbnjkgf::Bfhmjlgchpd", tags = "8")]
    pub bfhmjlgchpd: ::core::option::Option<lemflbnjkgf::Bfhmjlgchpd>,
}
/// Nested message and enum types in `LEMFLBNJKGF`.
pub mod lemflbnjkgf {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Bfhmjlgchpd {
        #[prost(message, tag = "8")]
        MusicBriefInfo(super::Gdmlpoedpjo),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eibcjiphbhi {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1833)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Emecddngoon {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(enumeration = "Kpfoblalblc", tag = "14")]
    pub daakpcoabep: i32,
    #[prost(oneof = "emecddngoon::Dapnlkepgjn", tags = "5")]
    pub dapnlkepgjn: ::core::option::Option<emecddngoon::Dapnlkepgjn>,
}
/// Nested message and enum types in `EMECDDNGOON`.
pub mod emecddngoon {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Dapnlkepgjn {
        #[prost(message, tag = "5")]
        MusicInfo(super::Cedafhjbnpc),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7774)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fabpnoejaio {
    #[prost(uint32, tag = "11")]
    pub scene_time: u32,
    #[prost(uint32, tag = "12")]
    pub entity_id: u32,
    #[prost(message, optional, tag = "13")]
    pub hkndhdnkkji: ::core::option::Option<MotionInfo>,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(135)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pjfmepeknpo {
    #[prost(uint32, repeated, tag = "13")]
    pub affix_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "3")]
    pub konankaciem: u32,
    #[prost(uint32, tag = "5")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mcjcanjlblh {
    #[prost(bool, tag = "2")]
    pub nooloahaepd: bool,
    #[prost(uint32, tag = "3")]
    pub nhnongdigfg: u32,
    #[prost(bool, tag = "7")]
    pub dbhodjfllmb: bool,
    #[prost(uint32, tag = "8")]
    pub flepofbnjij: u32,
    #[prost(uint32, tag = "15")]
    pub nohkdfbphge: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23318)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Odcocpandhg {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Iggncaelhii {
    #[prost(message, repeated, tag = "1")]
    pub mbdhjjohcko: ::prost::alloc::vec::Vec<Mifdfaihdda>,
    #[prost(message, optional, tag = "2")]
    pub npmjpllmfbn: ::core::option::Option<Dhnbihgaejb>,
    #[prost(uint32, tag = "3")]
    pub jpdbmdleeec: u32,
    #[prost(uint32, tag = "4")]
    pub memeffoingb: u32,
    #[prost(map = "uint32, message", tag = "5")]
    pub cmpmhdgcfkh: ::std::collections::HashMap<u32, Ggjnmdcoehi>,
    #[prost(uint32, tag = "6")]
    pub hkegebjnjjd: u32,
    #[prost(uint32, tag = "7")]
    pub kdjifcpbgen: u32,
    #[prost(uint32, repeated, tag = "12")]
    pub fmfeecnjnmo: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "15")]
    pub dhhjajjncoi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4460)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hkbgepamhfb {
    #[prost(message, optional, tag = "9")]
    pub cikncjighed: ::core::option::Option<Gbjbjkbneke>,
    #[prost(uint32, tag = "10")]
    pub fbnlohmdnhd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26692)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mcioedhjbla {
    #[prost(uint32, tag = "15")]
    pub kngbdmdcnhk: u32,
    #[prost(uint32, tag = "3")]
    pub fgommpiofpb: u32,
    #[prost(enumeration = "Lngojpfiioo", tag = "5")]
    pub poclliajmdd: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1243)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Geoljdgfhdl {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(string, tag = "8")]
    pub jfaamlfpknm: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9511)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jmjhhmaklfl {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kdfclhhkgih {
    #[prost(bool, tag = "4")]
    pub jfgekmgjnca: bool,
    #[prost(uint32, tag = "10")]
    pub region_id: u32,
    #[prost(uint32, tag = "11")]
    pub cckjpdchobj: u32,
    #[prost(message, optional, tag = "12")]
    pub lejabmhmppm: ::core::option::Option<Vector>,
    #[prost(message, repeated, tag = "15")]
    pub kdfedkcgfpm: ::prost::alloc::vec::Vec<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25960)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Diodajdnmnl {
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(252)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mjogafodlia {
    #[prost(uint32, tag = "2")]
    pub group_id: u32,
    #[prost(uint32, tag = "3")]
    pub lcddidljedn: u32,
    #[prost(uint32, tag = "7")]
    pub lchbeahgheo: u32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lojadoadkgd {
    #[prost(uint32, tag = "4")]
    pub id: u32,
    #[prost(uint32, tag = "10")]
    pub aplpjpoklag: u32,
    #[prost(uint32, tag = "12")]
    pub kljcagkgilp: u32,
    #[prost(enumeration = "Afaplaefbil", tag = "13")]
    pub status: i32,
    #[prost(uint32, tag = "14")]
    pub hpodkdccikj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29362)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iknppeapmej {
    #[prost(uint32, tag = "2")]
    pub jcmchgnnlmj: u32,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21780)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gafokhbiepo {
    #[prost(uint32, repeated, tag = "1")]
    pub fbhbheaommc: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, optional, tag = "3")]
    pub position: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2166)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct NpcTalkRsp {
    #[prost(uint32, tag = "3")]
    pub cur_talk_id: u32,
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "6")]
    pub npc_entity_id: u32,
    #[prost(uint32, tag = "10")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1612)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cfjlmdinipl {
    #[prost(bool, tag = "10")]
    pub oogfepalodf: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct VehicleMember {
    #[prost(uint32, tag = "1")]
    pub uid: u32,
    #[prost(uint64, tag = "2")]
    pub avatar_guid: u64,
    #[prost(uint32, tag = "3")]
    pub pos: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25184)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eehhhhampmj {
    #[prost(string, repeated, tag = "13")]
    pub bfhjmpmmkkk: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dinnmhnocgd {
    #[prost(uint32, tag = "2")]
    pub fagpphacnbj: u32,
    #[prost(uint32, tag = "3")]
    pub hpoffmfkbdi: u32,
    #[prost(bool, tag = "15")]
    pub pmjlllfophk: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6974)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Khenpkdpckl {
    #[prost(bool, tag = "5")]
    pub hdnildcefmg: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5536)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ekkdieannme {
    #[prost(message, repeated, tag = "3")]
    pub mkockchdbml: ::prost::alloc::vec::Vec<Nbdhfhkmlfd>,
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "13")]
    pub ofekdfbpkfn: ::prost::alloc::vec::Vec<Nbdhfhkmlfd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6954)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fnnkkklapee {
    #[prost(uint32, tag = "2")]
    pub bdeflcdkdbi: u32,
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "15")]
    pub lmonmngilnd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3870)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ejfgikalokp {
    #[prost(uint32, tag = "1")]
    pub epfcidiklkg: u32,
    #[prost(uint32, tag = "8")]
    pub clcbaeodibo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27617)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pdpggdjehhc {
    #[prost(message, repeated, tag = "5")]
    pub kabodnmegek: ::prost::alloc::vec::Vec<Olheklkendn>,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(uint32, tag = "12")]
    pub param: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6152)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bcacfkmkigg {
    #[prost(message, optional, tag = "12")]
    pub pfeldffpklp: ::core::option::Option<Feemcgmmdci>,
    #[prost(int32, tag = "14")]
    pub query_id: i32,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7484)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dolielpmjlb {
    #[prost(uint32, repeated, tag = "4")]
    pub mnchcggmlpa: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9785)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mmhpiedjdmp {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21583)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Iibjhmgpnnj {
    #[prost(message, repeated, tag = "4")]
    pub cfghcccflcj: ::prost::alloc::vec::Vec<Fchdblfdcpd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9588)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dnhekjbefmm {
    #[prost(map = "uint32, uint32", tag = "14")]
    pub hbkgbnkkcbg: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "12")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9387)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kcaekjdlkcm {
    #[prost(string, tag = "12")]
    pub hglnccjieag: ::prost::alloc::string::String,
    #[prost(uint32, tag = "7")]
    pub lnbgblbmadj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iakpnfngoac {
    #[prost(uint32, tag = "4")]
    pub ieableaadff: u32,
    #[prost(uint32, tag = "10")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25165)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fodpoagbgkh {
    #[prost(uint64, tag = "1")]
    pub guid: u64,
    #[prost(map = "uint32, message", tag = "6")]
    pub skill_map: ::std::collections::HashMap<u32, AvatarSkillInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26345)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ceppfogmcfh {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ielanafkgko {
    #[prost(uint32, tag = "1")]
    pub pingabdelme: u32,
    #[prost(uint32, repeated, tag = "2")]
    pub kbgfigbangk: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "4")]
    pub jgjjgkfcmjn: ::prost::alloc::vec::Vec<u32>,
    #[prost(enumeration = "Ephalejpikm", tag = "8")]
    pub iigdikakpcc: i32,
    #[prost(uint32, tag = "11")]
    pub id: u32,
    #[prost(uint32, tag = "12")]
    pub jbkgfndcbcc: u32,
    #[prost(bool, tag = "14")]
    pub fglohnkkppg: bool,
    #[prost(bool, tag = "15")]
    pub ckcgjflacll: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24351)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nlgiahinbpb {
    #[prost(message, repeated, tag = "1")]
    pub meikgboldgh: ::prost::alloc::vec::Vec<Hfhjkhoplmn>,
    #[prost(uint32, tag = "3")]
    pub kngjhmllcnp: u32,
    #[prost(message, repeated, tag = "4")]
    pub fagjdjiglon: ::prost::alloc::vec::Vec<Dlfioiilgfn>,
    #[prost(uint32, repeated, tag = "9")]
    pub glkdkojdnfe: ::prost::alloc::vec::Vec<u32>,
    #[prost(enumeration = "Kndodpcnljf", tag = "10")]
    pub imiogmdokcb: i32,
    #[prost(uint32, tag = "13")]
    pub kkppjfkddep: u32,
    #[prost(uint32, tag = "14")]
    pub jimelgdjmlf: u32,
    #[prost(bool, tag = "15")]
    pub haeaoofajng: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29192)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fnhijppibhp {
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29490)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dppnjhhodjl {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29244)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ajphpjdpibj {
    #[prost(uint32, tag = "10")]
    pub pmfoiancced: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1314)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct LifeStateChangeNotify {
    #[prost(string, repeated, tag = "1")]
    pub ohmkbgameim: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(uint32, tag = "5")]
    pub source_entity_id: u32,
    #[prost(uint32, tag = "6")]
    pub move_reliable_seq: u32,
    #[prost(enumeration = "PlayerDieType", tag = "7")]
    pub die_type: i32,
    #[prost(string, tag = "8")]
    pub attack_tag: ::prost::alloc::string::String,
    #[prost(uint32, tag = "9")]
    pub life_state: u32,
    #[prost(message, repeated, tag = "10")]
    pub server_buff_list: ::prost::alloc::vec::Vec<ServerBuff>,
    #[prost(uint32, tag = "15")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22936)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pilnaajohme {
    #[prost(uint64, repeated, tag = "2")]
    pub lkabifbmgjm: ::prost::alloc::vec::Vec<u64>,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(enumeration = "Kpfoblalblc", tag = "13")]
    pub daakpcoabep: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21696)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hcgbocljcli {
    #[prost(message, optional, tag = "7")]
    pub dbdnmhcjfoc: ::core::option::Option<Abpihfanhob>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dnjmjfmebml {
    #[prost(uint32, repeated, tag = "1")]
    pub emedjdnngji: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "4")]
    pub ojhcppehhkg: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "6")]
    pub pgdonckdomb: ::prost::alloc::vec::Vec<Ombeifnnedf>,
    #[prost(uint32, tag = "9")]
    pub avatar_id: u32,
    #[prost(uint32, repeated, tag = "10")]
    pub ilkgefdhpfi: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "12")]
    pub bbpgijfjhen: u32,
    #[prost(bool, tag = "13")]
    pub kcoimeccodp: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8392)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cakhfgbaahf {
    #[prost(string, tag = "6")]
    pub agbccekekfm: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7811)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mnokflkoaha {
    #[prost(uint32, tag = "4")]
    pub pefkmbhjcdl: u32,
    #[prost(uint32, tag = "11")]
    pub mjmlcohblpl: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5974)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hnkfpoomhcb {
    #[prost(uint32, tag = "7")]
    pub lfiocjllhld: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29437)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aeehnhmjemd {
    #[prost(map = "uint32, message", tag = "7")]
    pub kojoofkppfo: ::std::collections::HashMap<u32, Enadnfekflf>,
    #[prost(bool, tag = "12")]
    pub kcoimeccodp: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6174)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oekgeecbbgb {
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23486)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bgbeckbdkek {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "8")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5880)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dmkdmecljod {
    #[prost(bool, tag = "5")]
    pub kodnaagljdl: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21588)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nlpcnchfnno {
    #[prost(message, repeated, tag = "4")]
    pub ikmdadcopeg: ::prost::alloc::vec::Vec<Ijginkjgdpd>,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Odoeiglkpon {
    #[prost(uint32, tag = "1")]
    pub iejpghnlidb: u32,
    #[prost(bool, tag = "3")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "8")]
    pub eaipgemknpo: u32,
    #[prost(bool, tag = "9")]
    pub is_finish: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct JourneyGearGadgetInfo {
    #[prost(uint32, tag = "1")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21155)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mpnaedekkjo {
    #[prost(message, repeated, tag = "8")]
    pub avatar_list: ::prost::alloc::vec::Vec<AvatarInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1740)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ahlgcfedllj {
    #[prost(string, repeated, tag = "6")]
    pub neklgmnbpio: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29566)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kdbjkfocmik {
    #[prost(uint32, repeated, tag = "12")]
    pub pkhhejmdnbe: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21630)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hjacjmdikod {
    #[prost(enumeration = "ForwardType", tag = "1")]
    pub forward_type: i32,
    #[prost(uint32, tag = "5")]
    pub entity_id: u32,
    #[prost(message, optional, tag = "12")]
    pub jcpeclekmfe: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2772)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aigemkoiomf {
    #[prost(message, optional, tag = "9")]
    pub iceodakhlke: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "13")]
    pub fbnofcochmm: ::core::option::Option<Vector>,
    #[prost(uint32, repeated, tag = "461")]
    pub target_entity_id_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "1674")]
    pub target_lock_point_index_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, optional, tag = "396")]
    pub ability_name: ::core::option::Option<AbilityString>,
    #[prost(enumeration = "Gkfginklnch", tag = "736")]
    pub abcekghahjd: i32,
    #[prost(uint32, tag = "8")]
    pub owner_entity_id: u32,
    #[prost(uint32, tag = "1")]
    pub prop_owner_entity_id: u32,
    #[prost(uint32, tag = "7")]
    pub camp_id: u32,
    #[prost(uint32, tag = "6")]
    pub target_entity_id: u32,
    #[prost(enumeration = "ForwardType", tag = "12")]
    pub forward_type: i32,
    #[prost(uint32, tag = "1062")]
    pub born_slot_index: u32,
    #[prost(uint32, tag = "3")]
    pub config_id: u32,
    #[prost(uint32, tag = "11")]
    pub ifdccelmmek: u32,
    #[prost(uint32, tag = "5")]
    pub room_id: u32,
    #[prost(uint32, tag = "14")]
    pub camp_type: u32,
    #[prost(uint32, tag = "15")]
    pub entity_id: u32,
    #[prost(uint64, tag = "2")]
    pub guid: u64,
    #[prost(uint32, tag = "1873")]
    pub init_pose_id: u32,
    #[prost(bool, tag = "4")]
    pub mlgmcongjkn: bool,
    #[prost(bool, tag = "10")]
    pub dpgpdakkiml: bool,
    #[prost(bool, tag = "295")]
    pub is_peer_id_from_player: bool,
    #[prost(bool, tag = "847")]
    pub alopahmmoom: bool,
    #[prost(int32, tag = "1393")]
    pub local_id: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3694)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nanppafhccg {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct EntityClientData {
    #[prost(uint32, tag = "1")]
    pub wind_change_scene_time: u32,
    #[prost(float, tag = "2")]
    pub windmill_sync_angle: f32,
    #[prost(int32, tag = "3")]
    pub wind_change_target_level: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6500)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hcabfpdhded {
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21174)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pnncgngbmhb {
    #[prost(uint32, tag = "5")]
    pub dccchkbighp: u32,
    #[prost(enumeration = "Klgpddijgjm", tag = "9")]
    pub iieilnhpcji: i32,
    #[prost(uint32, tag = "12")]
    pub ldnkcljncbf: u32,
    #[prost(uint32, tag = "14")]
    pub progress: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27343)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aklhjlkdgmj {
    #[prost(uint32, tag = "3")]
    pub dnbefljlamb: u32,
    #[prost(uint32, tag = "9")]
    pub oaliohamlgn: u32,
    #[prost(uint32, tag = "13")]
    pub oijjdaladef: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Enlafolmiog {
    #[prost(message, repeated, tag = "4")]
    pub lapnpeiacnl: ::prost::alloc::vec::Vec<Ombeifnnedf>,
    #[prost(uint32, tag = "8")]
    pub epfcidiklkg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26119)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ailepfehgcm {
    #[prost(uint32, repeated, tag = "7")]
    pub skill_id: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27002)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Moeoiimgokk {
    #[prost(uint32, tag = "11")]
    pub idannnklhfl: u32,
    #[prost(uint32, tag = "13")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8716)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cafhfaoejhh {
    #[prost(uint32, tag = "6")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25585)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kphmkpoklno {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23558)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fbagmjnaeco {
    #[prost(uint64, tag = "3")]
    pub mcppeknbhfk: u64,
    #[prost(bool, tag = "10")]
    pub is_add: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nijhgckhnhg {
    #[prost(message, repeated, tag = "2")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Mallehdgdab>,
    #[prost(uint32, tag = "14")]
    pub bodiejclgmb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24260)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lnphalcadem {
    #[prost(message, repeated, tag = "13")]
    pub maoijffgide: ::prost::alloc::vec::Vec<Pkgoclimoig>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Efjgmjbglhb {
    #[prost(uint32, tag = "5")]
    pub level_id: u32,
    #[prost(uint32, tag = "6")]
    pub hkegebjnjjd: u32,
    #[prost(uint32, tag = "8")]
    pub bodiejclgmb: u32,
    #[prost(uint32, repeated, tag = "9")]
    pub meikgboldgh: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "12")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "13")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jihimnomjic {
    #[prost(map = "uint32, uint32", tag = "4")]
    pub ohmfmobgkpl: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "8")]
    pub end_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4267)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hmfajbcibch {
    #[prost(uint32, tag = "6")]
    pub level_id: u32,
    #[prost(uint32, tag = "1")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26879)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Obifofdlanm {
    #[prost(enumeration = "Nbpleololnc", tag = "7")]
    pub njhhgikdkca: i32,
    #[prost(bool, tag = "14")]
    pub mldenodkbcg: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27528)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ncialpanoej {
    #[prost(string, repeated, tag = "7")]
    pub bfhjmpmmkkk: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mmnockpjaob {
    #[prost(message, optional, tag = "1")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "6")]
    pub rot: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8564)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gnenbpfepjl {
    #[prost(uint32, tag = "5")]
    pub pjabefajbgb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27951)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jbjdibggglj {
    #[prost(enumeration = "Opadjpdffbm", tag = "2")]
    pub ngfmchnlnpi: i32,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bggjcfhphbk {
    #[prost(message, optional, tag = "3")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
    #[prost(string, tag = "6")]
    pub bmfkoonmmee: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub omknbnmebik: ::prost::alloc::string::String,
    #[prost(map = "uint32, uint32", tag = "12")]
    pub ijlfkccoonm: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "13")]
    pub uid: u32,
    #[prost(bool, tag = "15")]
    pub eeeakaafiae: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4454)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oklalbhphko {
    #[prost(message, optional, tag = "1")]
    pub fiohlpphlgj: ::core::option::Option<Oknbffifigj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ackhdoigjcc {
    #[prost(uint32, tag = "4")]
    pub miolbjepfgp: u32,
    #[prost(uint32, tag = "7")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gjbkfopdcgk {
    #[prost(uint32, tag = "1")]
    pub avatar_id: u32,
    #[prost(uint32, tag = "2")]
    pub level: u32,
    #[prost(uint32, tag = "3")]
    pub costume_id: u32,
    #[prost(uint32, tag = "4")]
    pub jegiijcnafn: u32,
    #[prost(uint32, tag = "5")]
    pub bbpgijfjhen: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SceneGadgetInfo {
    #[prost(uint32, tag = "1")]
    pub gadget_id: u32,
    #[prost(uint32, tag = "2")]
    pub group_id: u32,
    #[prost(uint32, tag = "3")]
    pub config_id: u32,
    #[prost(uint32, tag = "4")]
    pub owner_entity_id: u32,
    #[prost(enumeration = "GadgetBornType", tag = "5")]
    pub born_type: i32,
    #[prost(uint32, tag = "6")]
    pub gadget_state: u32,
    #[prost(uint32, tag = "7")]
    pub gadget_type: u32,
    #[prost(bool, tag = "8")]
    pub is_show_cutscene: bool,
    #[prost(uint32, tag = "9")]
    pub authority_peer_id: u32,
    #[prost(bool, tag = "10")]
    pub is_enable_interact: bool,
    #[prost(uint32, tag = "11")]
    pub interact_id: u32,
    #[prost(uint32, tag = "21")]
    pub mark_flag: u32,
    #[prost(uint32, tag = "22")]
    pub prop_owner_entity_id: u32,
    #[prost(message, optional, tag = "23")]
    pub platform: ::core::option::Option<PlatformInfo>,
    #[prost(uint32, repeated, tag = "24")]
    pub interact_uid_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "25")]
    pub draft_id: u32,
    #[prost(uint32, tag = "26")]
    pub gadget_talk_state: u32,
    #[prost(message, optional, tag = "27")]
    pub jioigfoffff: ::core::option::Option<Dkiblfiglap>,
    #[prost(uint32, tag = "28")]
    pub init_pose_id: u32,
    #[prost(uint32, repeated, tag = "29")]
    pub affix_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, optional, tag = "100")]
    pub play_info: ::core::option::Option<GadgetPlayInfo>,
    #[prost(message, optional, tag = "101")]
    pub ugc_tower_level_up_gadget_info: ::core::option::Option<
        UgcTowerLevelUpGadgetInfo,
    >,
    #[prost(message, optional, tag = "102")]
    pub journey_gear_operator_info: ::core::option::Option<JourneyGearGadgetInfo>,
    #[prost(message, optional, tag = "103")]
    pub ugc_v2_special_gadget_info: ::core::option::Option<UgcSpecialGadgetInfo>,
    #[prost(
        oneof = "scene_gadget_info::Aghglnefdhk",
        tags = "13, 14, 15, 17, 18, 19, 20, 41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 61, 62, 63, 64, 67"
    )]
    pub aghglnefdhk: ::core::option::Option<scene_gadget_info::Aghglnefdhk>,
}
/// Nested message and enum types in `SceneGadgetInfo`.
pub mod scene_gadget_info {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Aghglnefdhk {
        #[prost(message, tag = "13")]
        GatherGadget(super::GatherGadgetInfo),
        #[prost(message, tag = "14")]
        Worktop(super::WorktopInfo),
        #[prost(message, tag = "15")]
        ClientGadget(super::ClientGadgetInfo),
        #[prost(message, tag = "17")]
        Weather(super::WeatherInfo),
        #[prost(message, tag = "18")]
        AbilityGadget(super::AbilityGadgetInfo),
        #[prost(message, tag = "19")]
        StatueGadget(super::StatueGadgetInfo),
        #[prost(message, tag = "20")]
        BossChest(super::BossChestInfo),
        #[prost(message, tag = "41")]
        BlossomChest(super::BlossomChestInfo),
        #[prost(message, tag = "42")]
        MpPlayReward(super::MpPlayRewardInfo),
        #[prost(message, tag = "43")]
        GeneralReward(super::GadgetGeneralRewardInfo),
        #[prost(message, tag = "44")]
        OfferingInfo(super::OfferingInfo),
        #[prost(message, tag = "45")]
        FoundationInfo(super::FoundationInfo),
        #[prost(message, tag = "46")]
        VehicleInfo(super::VehicleInfo),
        #[prost(message, tag = "47")]
        ShellInfo(super::EchoShellInfo),
        #[prost(message, tag = "48")]
        ScreenInfo(super::ScreenInfo),
        #[prost(message, tag = "59")]
        FishPoolInfo(super::FishPoolInfo),
        #[prost(message, tag = "60")]
        CustomGadgetTreeInfo(super::CustomGadgetTreeInfo),
        #[prost(message, tag = "61")]
        RoguelikeGadgetInfo(super::RoguelikeGadgetInfo),
        #[prost(message, tag = "62")]
        NightCrowGadgetInfo(super::NightCrowGadgetInfo),
        #[prost(message, tag = "63")]
        DeshretObeliskGadgetInfo(super::DeshretObeliskGadgetInfo),
        #[prost(message, tag = "64")]
        CoinCollectOperatorInfo(super::CoinCollectOperatorInfo),
        #[prost(message, tag = "67")]
        TrifleGadget(super::Iachjpimdfa),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3922)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ghdegkffpdf {
    #[prost(uint32, tag = "2")]
    pub gainccncano: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9079)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cnhbkochghk {
    #[prost(uint32, tag = "12")]
    pub mkhendmflmf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25506)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ocgolpfllpp {
    #[prost(uint32, tag = "2")]
    pub epfcidiklkg: u32,
    #[prost(uint32, tag = "4")]
    pub player_uid: u32,
    #[prost(uint32, tag = "5")]
    pub group_id: u32,
    #[prost(uint32, tag = "9")]
    pub jimelgdjmlf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Epfekhpnimg {
    #[prost(uint32, tag = "4")]
    pub level_id: u32,
    #[prost(uint32, tag = "7")]
    pub score: u32,
    #[prost(uint32, tag = "8")]
    pub jpgdmdcefeb: u32,
    #[prost(bool, tag = "13")]
    pub omeniamedce: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9998)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jdgflglanod {
    #[prost(uint32, repeated, tag = "2")]
    pub mjaoninhiib: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23607)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pogfnbkonbn {
    #[prost(uint32, tag = "2")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24265)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bdnnkkpdgba {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hkihlaepcpl {
    #[prost(uint32, tag = "2")]
    pub level_id: u32,
    #[prost(uint32, tag = "6")]
    pub eaipgemknpo: u32,
    #[prost(bool, tag = "7")]
    pub is_finish: bool,
    #[prost(bool, tag = "14")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2168)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mjhffjfhhip {
    #[prost(message, repeated, tag = "4")]
    pub eodfhdjigem: ::prost::alloc::vec::Vec<Apfceefmolo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2278)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cnikcnjkamd {
    #[prost(uint32, tag = "9")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2603)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lgjokmncnnk {
    #[prost(uint32, tag = "4")]
    pub ofgjoiolmph: u32,
    #[prost(message, optional, tag = "6")]
    pub mfigidkajbd: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "14")]
    pub ngihokcibpe: u32,
    #[prost(message, optional, tag = "15")]
    pub ibeakhhnohb: ::core::option::Option<Hcjgifnjppj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25204)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Okbecpjiped {
    #[prost(uint32, tag = "6")]
    pub finahglfhag: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6094)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bobajcnhaac {
    #[prost(uint32, tag = "1")]
    pub area_id: u32,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "8")]
    pub fapmpnadddf: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "10")]
    pub index: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6164)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dclcjkjjjim {
    #[prost(message, optional, tag = "3")]
    pub jjkiajcocpn: ::core::option::Option<Fijdalpgdcn>,
    #[prost(int32, tag = "14")]
    pub query_id: i32,
    #[prost(uint32, tag = "4")]
    pub scene_id: u32,
    #[prost(bool, tag = "12")]
    pub cookmnefhkf: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(624)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hpedfmecajb {
    #[prost(uint64, tag = "10")]
    pub guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mijlijekdkh {
    #[prost(enumeration = "Ecncmbdmagd", tag = "2")]
    pub state: i32,
    #[prost(uint32, tag = "13")]
    pub fgbjnghbgia: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cofdgbnbmfe {
    #[prost(message, optional, tag = "6")]
    pub glehmlbodei: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "14")]
    pub ecokackbleo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4982)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fgmaalladoe {
    #[prost(uint32, tag = "13")]
    pub cbpdgcponhm: u32,
    #[prost(bool, tag = "3")]
    pub jdmpiannmgk: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oncdplgelhg {
    #[prost(message, optional, tag = "3")]
    pub jadiddibhpf: ::core::option::Option<Ngdfaggmlhb>,
    #[prost(uint32, repeated, tag = "4")]
    pub cggmedeicfl: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "5")]
    pub exp: u32,
    #[prost(message, optional, tag = "6")]
    pub bcifjfnnjjm: ::core::option::Option<Mmgmjpjhjll>,
    #[prost(uint32, tag = "7")]
    pub hgbbglkplfi: u32,
    #[prost(uint32, tag = "9")]
    pub jcckkcmgfme: u32,
    #[prost(message, optional, tag = "10")]
    pub bbhholeohno: ::core::option::Option<Ebhcmmihdjl>,
    #[prost(message, optional, tag = "11")]
    pub kcblafeckch: ::core::option::Option<Fmjedpaojdn>,
    #[prost(uint32, tag = "12")]
    pub hepibkmfgji: u32,
    #[prost(uint32, tag = "14")]
    pub level: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22679)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Leclobioodh {
    #[prost(uint32, tag = "10")]
    pub bdbgopiikfo: u32,
    #[prost(uint32, tag = "8")]
    pub city_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28854)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kmbiddmgiae {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8286)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gehfgbjkdcg {
    #[prost(uint32, tag = "8")]
    pub dfkppmokcei: u32,
    #[prost(uint32, tag = "11")]
    pub aahipcacehn: u32,
    #[prost(uint32, tag = "2")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aefiopfgdji {
    #[prost(uint32, repeated, tag = "2")]
    pub ighmloendhp: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "4")]
    pub dddbbipmmja: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "6")]
    pub glkngddnocn: bool,
    #[prost(message, repeated, tag = "10")]
    pub pgejgjmggog: ::prost::alloc::vec::Vec<Neifcknfnak>,
    #[prost(uint32, tag = "12")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9563)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mbogapkiecl {
    #[prost(uint32, tag = "2")]
    pub phbfokpbfil: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct WeeklyBossResinDiscountInfo {
    #[prost(uint32, tag = "1")]
    pub discount_num: u32,
    #[prost(uint32, tag = "2")]
    pub discount_num_limit: u32,
    #[prost(uint32, tag = "3")]
    pub resin_cost: u32,
    #[prost(uint32, tag = "4")]
    pub original_resin_cost: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6247)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gmcieflboek {
    #[prost(uint32, repeated, tag = "12")]
    pub jhjilcmeonh: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2451)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Djnnjddgjpb {
    #[prost(message, repeated, tag = "1")]
    pub hncbgdmhgea: ::prost::alloc::vec::Vec<Niegobddjkn>,
    #[prost(uint32, tag = "4")]
    pub parent_quest_id: u32,
    #[prost(uint32, tag = "12")]
    pub hoinfbdgefk: u32,
    #[prost(uint32, tag = "3")]
    pub pjabefajbgb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(420)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gaoiappljke {
    #[prost(uint32, tag = "10")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hlgkkeignph {
    #[prost(uint32, tag = "7")]
    pub aoegkkajean: u32,
    #[prost(uint32, tag = "9")]
    pub jcdmgmnmcij: u32,
    #[prost(uint32, tag = "12")]
    pub play_type: u32,
    #[prost(bool, tag = "13")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1990)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bcbljjkgkjc {
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2390)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PathfindingEnterSceneReq {
    #[prost(message, repeated, tag = "8")]
    pub fhcfdlflkno: ::prost::alloc::vec::Vec<Gffiokdnclp>,
    #[prost(int32, repeated, tag = "7")]
    pub bjhopiegdge: ::prost::alloc::vec::Vec<i32>,
    #[prost(uint32, tag = "9")]
    pub hhaiifodeoo: u32,
    #[prost(bool, tag = "1")]
    pub ilahfkpdagk: bool,
    #[prost(uint32, tag = "12")]
    pub egjdkpkgdib: u32,
    #[prost(uint32, tag = "14")]
    pub version: u32,
    #[prost(uint32, tag = "15")]
    pub scene_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29345)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ddbgedjdjpi {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hnkapajlddl {
    #[prost(uint32, tag = "1")]
    pub entity_id: u32,
    #[prost(message, optional, tag = "7")]
    pub oipcdlondgp: ::core::option::Option<Vector>,
    #[prost(int32, repeated, tag = "13")]
    pub pmedeininbj: ::prost::alloc::vec::Vec<i32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3756)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cpiodppmica {
    #[prost(uint32, tag = "9")]
    pub city_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cgchkpdkpeh {
    #[prost(message, optional, tag = "5")]
    pub jgefhahafki: ::core::option::Option<Jickppdlohc>,
    #[prost(bool, tag = "8")]
    pub jfkeaaofekj: bool,
    #[prost(bool, tag = "12")]
    pub lioelanodlf: bool,
    #[prost(message, repeated, tag = "13")]
    pub fpkncklmohj: ::prost::alloc::vec::Vec<Lpnokffdbne>,
    #[prost(message, repeated, tag = "15")]
    pub inpfjmanehi: ::prost::alloc::vec::Vec<Jickppdlohc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Agidndbcppj {
    #[prost(message, repeated, tag = "9")]
    pub hjdggbfipfm: ::prost::alloc::vec::Vec<Nfigjikiapk>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ganfnnpfodc {
    #[prost(uint32, repeated, tag = "1")]
    pub hcllfkfdkgm: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "2")]
    pub progress: u32,
    #[prost(uint32, tag = "4")]
    pub ibcoiokmgge: u32,
    #[prost(uint32, tag = "7")]
    pub mfikbpggoep: u32,
    #[prost(uint32, repeated, tag = "10")]
    pub bbkmlbibdpn: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "13")]
    pub ikiechdjnab: u32,
    #[prost(uint32, tag = "15")]
    pub gjpkjnhefbh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25275)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Naljimkcncc {
    #[prost(uint32, tag = "2")]
    pub ffhpdcibkod: u32,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct UgcTowerLevelUpGadgetInfo {
    #[prost(uint32, tag = "1")]
    pub tower_level: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9590)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lbdbmjjbikl {
    #[prost(message, repeated, tag = "1")]
    pub fhnblggioja: ::prost::alloc::vec::Vec<Imokhhljpie>,
    #[prost(message, repeated, tag = "2")]
    pub fookdbcngal: ::prost::alloc::vec::Vec<Debenkfigjp>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1058)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bolgbbegbfb {
    #[prost(uint32, tag = "5")]
    pub level: u32,
    #[prost(uint32, tag = "13")]
    pub hgdgjjfbfnd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26418)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gobnhohcmkk {
    #[prost(message, repeated, tag = "3")]
    pub nfmbfogncnl: ::prost::alloc::vec::Vec<Acekdebfimc>,
    #[prost(uint32, repeated, tag = "5")]
    pub ilijhdmbkjb: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "13")]
    pub hggjihmneba: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "15")]
    pub ngclgchdopl: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22757)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gpkdgbdpaeb {
    #[prost(message, optional, tag = "8")]
    pub holkpjjeeim: ::core::option::Option<Cjceknnabgi>,
    #[prost(uint32, tag = "15")]
    pub bpjdjdffkdh: u32,
    #[prost(uint32, tag = "1")]
    pub oajoobghagm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21357)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hcjkggmmgpd {
    #[prost(message, repeated, tag = "4")]
    pub ndigicgoipj: ::prost::alloc::vec::Vec<Kbdmhdnkjlg>,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ljafoaoodob {
    #[prost(fixed32, tag = "1")]
    pub jabgacillec: u32,
    #[prost(uint32, repeated, tag = "12")]
    pub mnchcggmlpa: ::prost::alloc::vec::Vec<u32>,
    #[prost(fixed32, tag = "13")]
    pub end_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eafhlmdchko {
    #[prost(int32, tag = "4")]
    pub okimclncakb: i32,
    #[prost(uint32, tag = "5")]
    pub entity_id: u32,
    #[prost(message, optional, tag = "7")]
    pub eloajobahbl: ::core::option::Option<Vector>,
    #[prost(float, tag = "8")]
    pub apnadahboln: f32,
    #[prost(message, optional, tag = "9")]
    pub bkakdhnlhfp: ::core::option::Option<Vector>,
    #[prost(int32, tag = "10")]
    pub dmmdjommjik: i32,
    #[prost(message, optional, tag = "13")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "15")]
    pub blpdogelkbo: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Emekkiandle {
    #[prost(message, optional, tag = "4")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "7")]
    pub pos: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Minggpmedia {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8992)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pikljkicahc {
    #[prost(uint32, tag = "4")]
    pub dnbefljlamb: u32,
    #[prost(map = "uint32, uint32", tag = "10")]
    pub hbkgbnkkcbg: ::std::collections::HashMap<u32, u32>,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Equip {
    #[prost(bool, tag = "3")]
    pub is_locked: bool,
    #[prost(oneof = "equip::Detail", tags = "1, 2")]
    pub detail: ::core::option::Option<equip::Detail>,
}
/// Nested message and enum types in `Equip`.
pub mod equip {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(message, tag = "1")]
        Reliquary(super::Reliquary),
        #[prost(message, tag = "2")]
        Weapon(super::Weapon),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2228)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kgbflofhnfp {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct RegionSimpleInfo {
    #[prost(string, tag = "1")]
    pub name: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub title: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub r#type: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub dispatch_url: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ehbhodnnocc {
    #[prost(uint32, tag = "2")]
    pub entity_id: u32,
    #[prost(message, optional, tag = "4")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "5")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "6")]
    pub gadget_id: u32,
    #[prost(float, tag = "8")]
    pub iccfmmbmigl: f32,
    #[prost(uint32, repeated, tag = "13")]
    pub uid_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(float, tag = "14")]
    pub gccedlnkfjd: f32,
    #[prost(uint32, tag = "15")]
    pub owner_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7431)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jgnopeflban {
    #[prost(uint32, tag = "7")]
    pub kngbdmdcnhk: u32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28712)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Adiikiajcej {
    #[prost(uint32, tag = "4")]
    pub jcojapmjdnm: u32,
    #[prost(map = "uint32, uint32", tag = "5")]
    pub summon_tag_map: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9537)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bhjepcffknm {
    #[prost(bool, tag = "6")]
    pub moaelibphoi: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(445)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mgiledfilgg {
    #[prost(uint32, tag = "1")]
    pub score: u32,
    #[prost(bool, tag = "2")]
    pub kodnaagljdl: bool,
    #[prost(bool, tag = "6")]
    pub omeniamedce: bool,
    #[prost(message, repeated, tag = "8")]
    pub meikgboldgh: ::prost::alloc::vec::Vec<Hfhjkhoplmn>,
    #[prost(message, repeated, tag = "9")]
    pub fagjdjiglon: ::prost::alloc::vec::Vec<Hmidobjfnfm>,
    #[prost(uint32, tag = "12")]
    pub level_id: u32,
    #[prost(uint32, tag = "14")]
    pub kngjhmllcnp: u32,
    #[prost(uint32, tag = "15")]
    pub onhjaboekhb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ecllggpfagl {
    #[prost(message, repeated, tag = "3")]
    pub kikeobngppo: ::prost::alloc::vec::Vec<Ccnnidmjljn>,
    #[prost(bool, tag = "7")]
    pub jhnbplfcbaj: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dbacenhlldc {
    #[prost(uint32, tag = "1")]
    pub pmldnfnnjam: u32,
    #[prost(uint32, tag = "3")]
    pub aeljdiplelm: u32,
    #[prost(uint32, tag = "4")]
    pub jbfdogpakkc: u32,
    #[prost(uint32, tag = "7")]
    pub level_id: u32,
    #[prost(uint32, tag = "10")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "13")]
    pub fjamcdjdjoa: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Edfdomnmmnn {
    #[prost(uint64, tag = "3")]
    pub jhbjebbiikf: u64,
    #[prost(uint32, tag = "5")]
    pub anblhiacjil: u32,
    #[prost(uint64, tag = "7")]
    pub gannoopeadj: u64,
    #[prost(uint32, tag = "8")]
    pub fbkeofgncpm: u32,
    #[prost(uint32, tag = "10")]
    pub cdefcjjphjd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2653)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oengjemiobd {
    #[prost(message, optional, tag = "6")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(enumeration = "Gijcldfplmh", tag = "8")]
    pub imiogmdokcb: i32,
    #[prost(uint32, repeated, tag = "9")]
    pub doalegicgkl: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "10")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mnnoklfgemn {
    #[prost(int32, repeated, tag = "3")]
    pub param_list: ::prost::alloc::vec::Vec<i32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25817)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ckicehekhpg {
    #[prost(uint32, tag = "14")]
    pub area_id: u32,
    #[prost(uint32, tag = "10")]
    pub index: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28310)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct GetScenePointReq {
    #[prost(bool, tag = "9")]
    pub is_relogin: bool,
    #[prost(uint32, tag = "6")]
    pub belong_uid: u32,
    #[prost(uint32, tag = "10")]
    pub scene_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20486)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jlkchnflcgf {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20448)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gcnkldpakde {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(bool, tag = "5")]
    pub jemmgilnbpa: bool,
    #[prost(uint64, tag = "6")]
    pub ihgjlfcgfin: u64,
    #[prost(bool, tag = "7")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "11")]
    pub ggcfiehankk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27008)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nlamofolgol {
    #[prost(uint32, tag = "3")]
    pub oacjabibpdd: u32,
    #[prost(uint32, tag = "4")]
    pub debogmdglmi: u32,
    #[prost(uint64, tag = "2")]
    pub avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28649)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hibhmjccgpk {
    #[prost(uint32, tag = "7")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct BreakoutBrickInfo {
    #[prost(uint32, tag = "1")]
    pub hp: u32,
    #[prost(uint32, tag = "2")]
    pub element_type: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AvatarSkillInfo {
    #[prost(uint32, tag = "1")]
    pub bhfdbbkemak: u32,
    #[prost(uint32, repeated, tag = "2")]
    pub gdfjmggfdch: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "3")]
    pub cmhgdldahdm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28765)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oifodkmhjka {
    #[prost(uint32, tag = "1")]
    pub nkgekomllng: u32,
    #[prost(uint32, tag = "2")]
    pub city_id: u32,
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "9")]
    pub fagpphacnbj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(120)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fhffmnbkdoc {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8302)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Igibkfkkjke {
    #[prost(uint32, tag = "1")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3629)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cjmckolhkii {
    #[prost(uint32, tag = "3")]
    pub jcmchgnnlmj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1506)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cipecojfjch {
    #[prost(map = "uint32, uint32", tag = "7")]
    pub hbkgbnkkcbg: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "15")]
    pub dnbefljlamb: u32,
    #[prost(uint32, tag = "6")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Joecdaolnfd {
    #[prost(message, repeated, tag = "7")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Bnkhjphhael>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23578)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Clmoajonppp {
    #[prost(message, repeated, tag = "6")]
    pub gjihlnaeggd: ::prost::alloc::vec::Vec<Clhnpakhdgh>,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24521)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dhahjdhoiag {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20798)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fdbhjpmflnp {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3233)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bjamgelpgph {
    #[prost(uint32, tag = "3")]
    pub cphmidoniph: u32,
    #[prost(uint32, tag = "4")]
    pub bkphjkhilod: u32,
    #[prost(uint32, tag = "11")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1585)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Klhkhkmfhgb {
    #[prost(uint32, tag = "7")]
    pub level_id: u32,
    #[prost(bool, tag = "10")]
    pub eejccicofii: bool,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25655)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ghcooibodbh {
    #[prost(uint32, tag = "4")]
    pub epfcidiklkg: u32,
    #[prost(uint32, tag = "8")]
    pub group_id: u32,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
    #[prost(uint32, tag = "12")]
    pub jimelgdjmlf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3057)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ilbhkenacge {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(message, optional, tag = "6")]
    pub mlopmggddmn: ::core::option::Option<Maclkmpjdcg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bcanlffgnic {
    #[prost(uint32, tag = "3")]
    pub level_id: u32,
    #[prost(uint32, tag = "7")]
    pub blgimgojmhf: u32,
    #[prost(uint32, tag = "9")]
    pub ofnmjncbnhk: u32,
    #[prost(uint32, tag = "10")]
    pub ffffpjenpan: u32,
    #[prost(uint32, tag = "14")]
    pub cdiadkcfhbj: u32,
    #[prost(bool, tag = "15")]
    pub pjjdjmgpnle: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gkidjmlnnhh {
    #[prost(message, repeated, tag = "2")]
    pub pndpnmbdokf: ::prost::alloc::vec::Vec<Lojlabaafoa>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23879)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oefdhcmenic {
    #[prost(uint32, tag = "8")]
    pub draft_id: u32,
    #[prost(bool, tag = "9")]
    pub moaelibphoi: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9577)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Poejlmmjbbd {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1712)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fckdlegcgfc {
    #[prost(uint32, tag = "3")]
    pub knjkmffgefl: u32,
    #[prost(uint32, tag = "6")]
    pub entity_id: u32,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4258)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kfhdanndfod {
    #[prost(message, repeated, tag = "6")]
    pub eiokfkmbnee: ::prost::alloc::vec::Vec<Djciabfhkpm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4162)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hhcfghaffle {
    #[prost(enumeration = "Kpfoblalblc", tag = "11")]
    pub daakpcoabep: i32,
    #[prost(uint32, tag = "3")]
    pub dnbefljlamb: u32,
    #[prost(oneof = "hhcfghaffle::Fdjmhhhdkae", tags = "14")]
    pub fdjmhhhdkae: ::core::option::Option<hhcfghaffle::Fdjmhhhdkae>,
    #[prost(oneof = "hhcfghaffle::Bfhmjlgchpd", tags = "427")]
    pub bfhmjlgchpd: ::core::option::Option<hhcfghaffle::Bfhmjlgchpd>,
}
/// Nested message and enum types in `HHCFGHAFFLE`.
pub mod hhcfghaffle {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Fdjmhhhdkae {
        #[prost(message, tag = "14")]
        MusicRecord(super::Ookjdbingha),
    }
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Bfhmjlgchpd {
        #[prost(message, tag = "427")]
        MusicBriefInfo(super::Gdmlpoedpjo),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27413)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cgbhejiijjl {
    #[prost(uint32, repeated, tag = "14")]
    pub dafmfimglge: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "6")]
    pub jdkakobfheh: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4412)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ndaokgakleo {
    #[prost(uint32, tag = "3")]
    pub pjabefajbgb: u32,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(uint32, tag = "12")]
    pub point_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27164)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Demgbggifam {
    #[prost(bool, tag = "3")]
    pub djibobckbhd: bool,
    #[prost(bool, tag = "5")]
    pub bnaccmflpko: bool,
    #[prost(uint32, tag = "8")]
    pub ekgeolmiccp: u32,
    #[prost(bool, tag = "14")]
    pub ffiohjifojh: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gajgjfpndmh {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(714)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ipaaiamnddl {
    #[prost(string, tag = "6")]
    pub ckiecfillbc: ::prost::alloc::string::String,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28457)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bnjbbpimoaj {
    #[prost(message, repeated, tag = "4")]
    pub jjmkpfhjkgk: ::prost::alloc::vec::Vec<Enebcpjjphn>,
    #[prost(uint32, repeated, tag = "9")]
    pub pdhekmemblg: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "12")]
    pub kabodnmegek: ::prost::alloc::vec::Vec<Olheklkendn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cgaalgdlehl {
    #[prost(uint32, tag = "3")]
    pub lchbeahgheo: u32,
    #[prost(uint32, tag = "4")]
    pub aemocbabopf: u32,
    #[prost(uint32, tag = "6")]
    pub jcbjbinmihd: u32,
    #[prost(uint32, tag = "8")]
    pub bidpnlmmden: u32,
    #[prost(uint32, tag = "9")]
    pub oaliohamlgn: u32,
    #[prost(bool, tag = "10")]
    pub mlcemkmhabp: bool,
    #[prost(uint32, tag = "12")]
    pub jabgacillec: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6934)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oihjgpnefbm {
    #[prost(uint32, tag = "3")]
    pub pieapgepmlf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20588)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lllaipdnjcj {
    #[prost(uint32, repeated, tag = "14")]
    pub ipigafhmpfh: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6285)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lmgkfdkimlc {
    #[prost(uint32, tag = "2")]
    pub id: u32,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24864)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Akdajfdceon {
    #[prost(uint32, repeated, tag = "2")]
    pub bompjddhgin: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7713)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kdecmkengne {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Afdnkldihkd {
    #[prost(message, repeated, tag = "8")]
    pub fcfojegmolm: ::prost::alloc::vec::Vec<Ppjgpbjfedb>,
    #[prost(uint32, repeated, tag = "9")]
    pub dmmjilkhdim: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "12")]
    pub cfnkiaeelhn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gliedehaimn {
    #[prost(message, repeated, tag = "12")]
    pub iflibbifjcc: ::prost::alloc::vec::Vec<Ckbmklicbbo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5309)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hkjhjlfnieh {
    #[prost(uint32, tag = "5")]
    pub bdeflcdkdbi: u32,
    #[prost(uint32, tag = "10")]
    pub dnbefljlamb: u32,
    #[prost(uint32, tag = "15")]
    pub hpodkdccikj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23713)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Naiphhcadod {
    #[prost(message, optional, tag = "2")]
    pub aflhefedfbe: ::core::option::Option<Bkcinfmcjlj>,
    #[prost(enumeration = "Elenllnehne", tag = "9")]
    pub amgmmkeddmk: i32,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
    #[prost(oneof = "naiphhcadod::Detail", tags = "8, 15")]
    pub detail: ::core::option::Option<naiphhcadod::Detail>,
}
/// Nested message and enum types in `NAIPHHCADOD`.
pub mod naiphhcadod {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(uint32, tag = "8")]
        ExamId(u32),
        #[prost(message, tag = "15")]
        TemplatePotionInfo(super::Okfhjlfojep),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27376)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eaflnnlnacd {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(message, optional, tag = "12")]
    pub omjbfbpbolh: ::core::option::Option<Capgoaibekk>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20788)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bcnjofggplg {
    #[prost(message, optional, tag = "5")]
    pub nganceicghc: ::core::option::Option<Gancjaoghkj>,
    #[prost(uint32, tag = "10")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2982)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bigpcflcpaj {
    #[prost(message, optional, tag = "8")]
    pub abehjooaeom: ::core::option::Option<Nbdhfhkmlfd>,
    #[prost(uint32, tag = "15")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24178)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cjckapnchbc {
    #[prost(message, repeated, tag = "13")]
    pub nbknnmmclgi: ::prost::alloc::vec::Vec<Fjgghhpgddh>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27339)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fdgmpplljin {
    #[prost(message, repeated, tag = "4")]
    pub bfeddejnoei: ::prost::alloc::vec::Vec<Khdghdfkppp>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bopnjeknlnc {
    #[prost(uint32, repeated, tag = "7")]
    pub data_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "15")]
    pub enoekklhbnh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25197)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ldfplmnmefd {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24653)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bfibdgbpjhd {
    #[prost(uint32, tag = "4")]
    pub avatar_id: u32,
    #[prost(uint32, tag = "5")]
    pub uid: u32,
    #[prost(uint32, tag = "6")]
    pub costume_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1913)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Npnfllghmkn {
    #[prost(uint32, tag = "7")]
    pub exp: u32,
    #[prost(uint32, tag = "15")]
    pub level: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8214)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ejeiaohibob {
    #[prost(int32, tag = "11")]
    pub retcode: i32,
    #[prost(message, optional, tag = "14")]
    pub ekcfljlknje: ::core::option::Option<Pfcgodklbbb>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26145)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eihpocdjpdg {
    #[prost(message, optional, tag = "3")]
    pub ibeakhhnohb: ::core::option::Option<Hcjgifnjppj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5408)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mmngkmlgkfo {
    #[prost(uint32, tag = "1")]
    pub oajoobghagm: u32,
    #[prost(uint32, tag = "6")]
    pub cell_id: u32,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5188)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Koialjahfdb {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5369)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hkgkjogdgil {
    #[prost(message, repeated, tag = "2")]
    pub odijhnlaojo: ::prost::alloc::vec::Vec<Fchicpcaagk>,
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "5")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Khpfeknjdof {
    #[prost(map = "uint32, uint32", tag = "1")]
    pub cmkffdoalem: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "3")]
    pub difimmmnjfo: u32,
    #[prost(uint32, tag = "4")]
    pub fdmkmfbocla: u32,
    #[prost(uint32, tag = "8")]
    pub jpdbmdleeec: u32,
    #[prost(uint32, tag = "10")]
    pub kngjhmllcnp: u32,
    #[prost(uint32, tag = "11")]
    pub meoheillebh: u32,
    #[prost(map = "uint32, uint32", tag = "12")]
    pub chehpfehbop: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "13")]
    pub jfggpgkhjck: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26985)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Odmbjppcbfl {
    #[prost(message, repeated, tag = "1")]
    pub lkajmmfhndh: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(bool, tag = "4")]
    pub hgpndhkdgdo: bool,
    #[prost(message, repeated, tag = "5")]
    pub aegcogahfgi: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(enumeration = "Ligdiknfkjc", tag = "12")]
    pub gjmpbchfklh: i32,
    #[prost(enumeration = "Heaiploaaok", tag = "13")]
    pub bcoolhgfdgn: i32,
    #[prost(message, repeated, tag = "15")]
    pub jhbcbieobep: ::prost::alloc::vec::Vec<Jickppdlohc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6826)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mngbibhbkof {
    #[prost(uint32, tag = "3")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29943)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oladclhpehk {
    #[prost(message, repeated, tag = "1")]
    pub dkdakpficjc: ::prost::alloc::vec::Vec<Nnhfmcjogpo>,
    #[prost(uint64, repeated, tag = "10")]
    pub kjgceabmona: ::prost::alloc::vec::Vec<u64>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3954)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cpmmgejbdke {
    #[prost(uint32, tag = "6")]
    pub aekageebaaa: u32,
    #[prost(uint32, repeated, tag = "8")]
    pub kogmmcnpjll: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "12")]
    pub fadincnpbmd: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Laadojlabdh {
    #[prost(map = "uint32, message", tag = "1")]
    pub ioeemcmlfhc: ::std::collections::HashMap<u32, Denadbadmph>,
    #[prost(message, optional, tag = "4")]
    pub pemoigkjagh: ::core::option::Option<Okfhjlfojep>,
    #[prost(message, optional, tag = "8")]
    pub faniilagpea: ::core::option::Option<Denadbadmph>,
    #[prost(uint32, tag = "12")]
    pub gljelgnbeoj: u32,
    #[prost(uint32, tag = "13")]
    pub cdingkpeack: u32,
    #[prost(bool, tag = "14")]
    pub jijldgmdipf: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27889)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dhlhjdgedla {
    #[prost(uint32, tag = "5")]
    pub fgnkleemdfa: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jlfkagacplj {
    #[prost(uint32, tag = "6")]
    pub point_id: u32,
    #[prost(uint32, tag = "9")]
    pub pjabefajbgb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hpmjajcbegh {
    #[prost(uint32, tag = "1")]
    pub uid: u32,
    #[prost(map = "uint32, uint32", tag = "4")]
    pub njfhjgjilck: ::std::collections::HashMap<u32, u32>,
    #[prost(map = "uint32, uint32", tag = "6")]
    pub ejcgaapoggn: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8424)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mdbkmoiakij {
    #[prost(message, optional, tag = "6")]
    pub nffhjlhemmb: ::core::option::Option<Ibdnaogmofo>,
    #[prost(uint32, tag = "8")]
    pub jaaekgkmado: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ScreenInfo {
    #[prost(uint32, tag = "1")]
    pub live_id: u32,
    #[prost(uint32, tag = "2")]
    pub projector_entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29405)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gpcaoedhbgb {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "15")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8151)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Neonekmnodc {
    #[prost(message, optional, tag = "6")]
    pub npfflknkfnd: ::core::option::Option<CustomGadgetTreeInfo>,
    #[prost(uint32, tag = "2")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27378)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ijfanhefoai {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4434)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gdbphelgkcb {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5451)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kifolpglkno {
    #[prost(uint32, tag = "5")]
    pub fgbjnghbgia: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8365)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ebgleggdnip {
    #[prost(message, optional, tag = "7")]
    pub jflcmbgbmjc: ::core::option::Option<Ombeifnnedf>,
    #[prost(bool, tag = "9")]
    pub dnhkpdbldfh: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1711)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Epmijpcfkfb {
    #[prost(string, tag = "9")]
    pub ckiecfillbc: ::prost::alloc::string::String,
    #[prost(uint32, tag = "5")]
    pub item_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28427)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gdppidfebof {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5087)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dlpnkdpinhm {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub ejpdnfnkaen: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hellfllbjmi {
    #[prost(enumeration = "Khbdllkplfg", tag = "4")]
    pub avatar_type: i32,
    #[prost(uint32, tag = "6")]
    pub avatar_id: u32,
    #[prost(uint32, tag = "10")]
    pub coohemdonkj: u32,
    #[prost(uint32, tag = "11")]
    pub bbpgijfjhen: u32,
    #[prost(uint32, tag = "14")]
    pub costume_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25284)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pnnnebidbch {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fjincakifkg {
    #[prost(uint32, tag = "1")]
    pub nmaapldbbni: u32,
    #[prost(bool, tag = "9")]
    pub is_finish: bool,
    #[prost(uint32, tag = "10")]
    pub id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7240)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eipekhlckdk {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "11")]
    pub bdeflcdkdbi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28424)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nlkflimenbk {
    #[prost(int32, tag = "11")]
    pub retcode: i32,
    #[prost(message, optional, tag = "13")]
    pub pjmiheedbdb: ::core::option::Option<Cjeimokenam>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4793)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fnkjgbiacff {
    #[prost(uint32, tag = "1")]
    pub ckhbgejdcdh: u32,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub emneihdpfpm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4313)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jchefnmoeil {
    #[prost(fixed32, tag = "10")]
    pub end_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4096)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Giekkdckhib {
    #[prost(message, repeated, tag = "2")]
    pub jdpigmdjgom: ::prost::alloc::vec::Vec<Nbdhfhkmlfd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27391)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Idebielpdfn {
    #[prost(uint32, tag = "5")]
    pub target_uid: u32,
    #[prost(bool, tag = "10")]
    pub dijlpfdmong: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4623)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ciallioadeg {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(bool, tag = "8")]
    pub moaelibphoi: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9782)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Imnnplohjmf {
    #[prost(uint32, tag = "15")]
    pub iaciifabjbj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9919)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Acfbikeeclb {
    #[prost(uint32, tag = "3")]
    pub room_id: u32,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(uint64, tag = "9")]
    pub guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28741)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jkmifdkkkpm {
    #[prost(uint32, tag = "12")]
    pub ebjejlglodb: u32,
    #[prost(uint32, tag = "4")]
    pub finahglfhag: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6516)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lggcobooiam {
    #[prost(uint32, tag = "2")]
    pub monster_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21769)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ickleoopcmo {
    #[prost(message, repeated, tag = "3")]
    pub item_list: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(uint32, tag = "8")]
    pub offering_id: u32,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21533)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gmhhlbbcnop {
    #[prost(message, optional, tag = "1")]
    pub amlijkeniin: ::core::option::Option<Bbklmlcjkif>,
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27961)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gimkgcjdada {
    #[prost(message, optional, tag = "14")]
    pub phbfokpbfil: ::core::option::Option<Lhioajddipl>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3525)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Paghfiiggaj {
    #[prost(uint32, repeated, tag = "4")]
    pub cahkemgedca: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "11")]
    pub mdbgedmjmeg: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20954)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bidoeipofdb {
    #[prost(uint32, tag = "4")]
    pub godogijjjia: u32,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fobpmoeflgh {
    #[prost(uint32, tag = "2")]
    pub kjimmfdaflh: u32,
    #[prost(uint32, tag = "7")]
    pub state: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24469)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fhngmifjplg {
    #[prost(message, repeated, tag = "2")]
    pub ekdokdogpib: ::prost::alloc::vec::Vec<Dinnmhnocgd>,
    #[prost(uint32, tag = "7")]
    pub hepibkmfgji: u32,
    #[prost(uint32, tag = "10")]
    pub city_id: u32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub jcckkcmgfme: u32,
    #[prost(uint32, tag = "15")]
    pub hgbbglkplfi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6242)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pbjocpbmbcl {
    #[prost(uint32, tag = "12")]
    pub knfcmlhpfni: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7114)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gekgfidanle {
    #[prost(uint32, tag = "2")]
    pub live_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Chomfemehnl {
    #[prost(message, repeated, tag = "2")]
    pub liepbjgjpgn: ::prost::alloc::vec::Vec<Fldalopdbcg>,
    #[prost(uint32, tag = "4")]
    pub lddcajjpoah: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2188)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dagfponjepf {
    #[prost(uint32, tag = "6")]
    pub end_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29398)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Naeadmnmdoh {
    #[prost(uint32, tag = "2")]
    pub ecpgnbgdbbn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24632)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Akcggmfpodf {
    #[prost(uint32, tag = "7")]
    pub end_time: u32,
    #[prost(bool, tag = "12")]
    pub nemglnmnaoo: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22945)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bdkdcdmnkea {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "15")]
    pub param_list: ::prost::alloc::vec::Vec<Jnopbdmemon>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Denadbadmph {
    #[prost(uint32, tag = "1")]
    pub ipfodaacdep: u32,
    #[prost(uint32, tag = "3")]
    pub nkgdgkcidjj: u32,
    #[prost(uint32, tag = "4")]
    pub jpmbhfofdik: u32,
    #[prost(uint32, tag = "9")]
    pub bchmbaljeec: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lnjoeebpgnm {
    #[prost(uint32, tag = "5")]
    pub pjhiljjcffp: u32,
    #[prost(uint32, tag = "9")]
    pub iejpghnlidb: u32,
    #[prost(message, optional, tag = "11")]
    pub hpoeckekafa: ::core::option::Option<Vector>,
    #[prost(bool, tag = "14")]
    pub ngjflelcfin: bool,
    #[prost(bool, tag = "15")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fjbdcmmfcbp {
    #[prost(uint32, tag = "2")]
    pub alhijlhahbi: u32,
    #[prost(uint32, tag = "8")]
    pub score: u32,
    #[prost(uint32, tag = "10")]
    pub fbbhhgmceep: u32,
    #[prost(uint32, tag = "13")]
    pub ikidjkodjne: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23089)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nkbiomonheb {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25643)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fenancinfjb {
    #[prost(uint32, repeated, tag = "5")]
    pub kdfdiooggal: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "4")]
    pub fagpphacnbj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4259)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ebcejecdfib {
    #[prost(uint32, tag = "3")]
    pub player_uid: u32,
    #[prost(uint32, tag = "6")]
    pub oajoobghagm: u32,
    #[prost(uint32, tag = "11")]
    pub kdmndbanfif: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bjldhbepnni {
    #[prost(message, repeated, tag = "7")]
    pub cbpcbpahcen: ::prost::alloc::vec::Vec<Fhpeaioogci>,
    #[prost(enumeration = "Oefkbifaplf", tag = "9")]
    pub jifocckifkb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28206)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Njogmgdabmi {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3239)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bgbgnbbalac {
    #[prost(bool, tag = "3")]
    pub oejcjaiekhh: bool,
    #[prost(message, optional, tag = "8")]
    pub nnpmlgapaan: ::core::option::Option<Olheklkendn>,
    #[prost(uint32, tag = "12")]
    pub ldibalopgkb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26298)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bffbigoipkn {
    #[prost(message, optional, tag = "2")]
    pub region_info: ::core::option::Option<Bjghdocnfnb>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jickppdlohc {
    #[prost(uint32, tag = "1")]
    pub item_id: u32,
    #[prost(uint32, tag = "2")]
    pub count: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ioahicpmieb {
    #[prost(uint32, tag = "1")]
    pub ojlmdpljifi: u32,
    #[prost(uint32, tag = "2")]
    pub epfcidiklkg: u32,
    #[prost(message, repeated, tag = "3")]
    pub obhpoeliapm: ::prost::alloc::vec::Vec<Bifeddinlod>,
    #[prost(uint32, repeated, tag = "4")]
    pub dobebmldbio: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "5")]
    pub mjmifkjbkbn: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "6")]
    pub hjiknnieeli: ::prost::alloc::vec::Vec<Ombeifnnedf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(400)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kandeldkbgn {
    #[prost(uint32, tag = "1")]
    pub scene_id: u32,
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "10")]
    pub point_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4881)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ibljkaoaihf {
    #[prost(uint32, tag = "6")]
    pub nekecfnahom: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cmdpjimjcah {
    #[prost(enumeration = "Elehhooedfn", tag = "2")]
    pub pocidnhbiam: i32,
    #[prost(uint32, tag = "9")]
    pub ppbikoaeohd: u32,
    #[prost(uint32, tag = "10")]
    pub score: u32,
    #[prost(uint64, tag = "14")]
    pub mcppeknbhfk: u64,
    #[prost(uint32, tag = "15")]
    pub version: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20244)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kmenacehkla {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "5")]
    pub lekkmfgejim: u32,
    #[prost(uint32, tag = "14")]
    pub gcndadecclf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8331)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nfpfabglikg {
    #[prost(uint32, repeated, tag = "2")]
    pub dhopbdihgcg: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "3")]
    pub gmlaoagjcao: ::prost::alloc::vec::Vec<Cegmhfpbajj>,
    #[prost(uint32, repeated, tag = "5")]
    pub ggkggghhlml: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "6")]
    pub nngfnbcaapi: ::prost::alloc::vec::Vec<Cegmhfpbajj>,
    #[prost(message, repeated, tag = "7")]
    pub peebjaoikfc: ::prost::alloc::vec::Vec<Ddggnmcaglo>,
    #[prost(uint32, tag = "8")]
    pub eaipgemknpo: u32,
    #[prost(message, repeated, tag = "9")]
    pub avatar_list: ::prost::alloc::vec::Vec<Cegmhfpbajj>,
    #[prost(uint32, repeated, tag = "12")]
    pub kcdbadfpipd: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lkkccncgdon {
    #[prost(map = "uint32, message", tag = "13")]
    pub ddpfmkjfpak: ::std::collections::HashMap<u32, Objfdbheakj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ekbdehfiahf {
    #[prost(uint32, tag = "7")]
    pub param1: u32,
    #[prost(uint32, tag = "9")]
    pub ffhpdcibkod: u32,
    #[prost(uint32, tag = "10")]
    pub param2: u32,
    #[prost(uint32, tag = "11")]
    pub param3: u32,
    #[prost(uint32, tag = "13")]
    pub ppbikoaeohd: u32,
    #[prost(enumeration = "Lfjlgojmkeh", tag = "15")]
    pub imiogmdokcb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28498)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bkoemmhhdmp {
    #[prost(message, repeated, tag = "12")]
    pub kkgfnmegced: ::prost::alloc::vec::Vec<Dbglamejmjm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20942)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Chofkmbaajn {
    #[prost(uint32, tag = "2")]
    pub param: u32,
    #[prost(uint32, tag = "9")]
    pub gfjpmhjoefj: u32,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9133)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hfnepahenoc {
    #[prost(uint32, tag = "7")]
    pub target_uid: u32,
    #[prost(enumeration = "Jkbhgieflni", tag = "12")]
    pub imiogmdokcb: i32,
    #[prost(bool, tag = "13")]
    pub jfjndakfjek: bool,
    #[prost(string, tag = "15")]
    pub khmggfmbooh: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nkhbdlcjpgm {
    #[prost(bool, tag = "3")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "4")]
    pub ofnmjncbnhk: u32,
    #[prost(message, repeated, tag = "7")]
    pub efcdelgmmkg: ::prost::alloc::vec::Vec<Ealkfdeadic>,
    #[prost(uint32, tag = "8")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "13")]
    pub iencbcegpbc: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9922)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Amhcahamkpj {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23696)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ipcnocobika {
    #[prost(uint32, tag = "12")]
    pub gilcfdfdgdc: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Manlpkpnaoj {
    #[prost(message, optional, tag = "6")]
    pub entity_authority_info: ::core::option::Option<EntityAuthorityInfo>,
    #[prost(uint32, tag = "8")]
    pub authority_peer_id: u32,
    #[prost(uint32, tag = "14")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25533)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nkladhmgehl {
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29133)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bnhinmjldmk {
    #[prost(enumeration = "Dcdcnnpiffk", tag = "5")]
    pub fbfdaklpefb: i32,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
    #[prost(message, optional, tag = "15")]
    pub epndbdpklep: ::core::option::Option<Gjdjpcpphic>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29511)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Chcolbomhcc {
    #[prost(message, optional, tag = "3")]
    pub abehjooaeom: ::core::option::Option<Nbdhfhkmlfd>,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25134)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aphpnjhgnol {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(message, optional, tag = "10")]
    pub inhbohmobjd: ::core::option::Option<Ablnmoieclb>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8806)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hlehnekfmdd {
    #[prost(uint32, tag = "2")]
    pub bfoikgclhpn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fpknoklofho {
    #[prost(bool, tag = "4")]
    pub omeniamedce: bool,
    #[prost(message, optional, tag = "13")]
    pub nganceicghc: ::core::option::Option<Jidjecipkcp>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ndjflpjbaej {
    #[prost(bool, tag = "1")]
    pub ojifcjgpcbk: bool,
    #[prost(uint32, tag = "4")]
    pub japeoejlnpd: u32,
    #[prost(map = "uint32, uint32", tag = "5")]
    pub jioeogolpfd: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "6")]
    pub uid: u32,
    #[prost(uint32, tag = "14")]
    pub pieapgepmlf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6156)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Adhdekailim {
    #[prost(bool, tag = "11")]
    pub gnplmjkghdg: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9799)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Noebpbmlije {
    #[prost(uint32, tag = "4")]
    pub bodiejclgmb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7542)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gaalcacimkf {
    #[prost(uint32, tag = "6")]
    pub ffhpdcibkod: u32,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4758)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oacnpiebkhc {
    #[prost(enumeration = "Kpfoblalblc", tag = "3")]
    pub daakpcoabep: i32,
    #[prost(bool, tag = "9")]
    pub bpnkheifahp: bool,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
    #[prost(uint64, tag = "11")]
    pub ihgjlfcgfin: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20842)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fmepiodjfpi {
    #[prost(message, optional, tag = "5")]
    pub obnaopiehpg: ::core::option::Option<Keincdamkem>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kogandhhocg {
    #[prost(enumeration = "Jpbmhlijinp", tag = "12")]
    pub state: i32,
    #[prost(uint32, tag = "14")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mpggmjodjao {
    #[prost(uint32, tag = "2")]
    pub scene_id: u32,
    #[prost(uint32, tag = "3")]
    pub figbkbnadgl: u32,
    #[prost(string, tag = "8")]
    pub kpiogbmlmem: ::prost::alloc::string::String,
    #[prost(uint32, tag = "9")]
    pub njddaollmgi: u32,
    #[prost(uint32, tag = "11")]
    pub block_id: u32,
    #[prost(bool, tag = "12")]
    pub jdmpiannmgk: bool,
    #[prost(uint32, tag = "13")]
    pub cbpdgcponhm: u32,
    #[prost(bool, tag = "14")]
    pub lafelphbjon: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4003)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dpfdnaefabc {
    #[prost(uint32, tag = "5")]
    pub ndcdmpindoi: u32,
    #[prost(bool, tag = "15")]
    pub is_locked: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25950)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mipnpoakecb {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "15")]
    pub kkdcekchelg: ::prost::alloc::vec::Vec<Ifbaofmdkno>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ifbaofmdkno {
    #[prost(message, optional, tag = "4")]
    pub fhmdopheeld: ::core::option::Option<Nbdhfhkmlfd>,
    #[prost(message, repeated, tag = "11")]
    pub hilllclaile: ::prost::alloc::vec::Vec<Gjbkfopdcgk>,
    #[prost(enumeration = "Peelkmkjkpp", tag = "14")]
    pub imiogmdokcb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6226)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Elcdmcpiago {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4289)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bpocckakdhg {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25403)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aoiacmemopc {
    #[prost(bool, tag = "2")]
    pub is_enable_interact: bool,
    #[prost(uint32, tag = "8")]
    pub gadget_state: u32,
    #[prost(uint32, tag = "9")]
    pub ghlbjahjehf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24713)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Acfpmmpdiee {
    #[prost(message, optional, tag = "11")]
    pub pfhhnaigkcf: ::core::option::Option<CustomGadgetTreeInfo>,
    #[prost(uint32, tag = "3")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3807)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Phdgjikihgj {
    #[prost(int32, tag = "12")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub ofebpljjnkh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ncdahfbiepn {
    #[prost(message, repeated, tag = "2")]
    pub hjomkfnmlch: ::prost::alloc::vec::Vec<Eikamckbfdf>,
    #[prost(uint32, tag = "3")]
    pub jimelgdjmlf: u32,
    #[prost(uint32, tag = "7")]
    pub level_id: u32,
    #[prost(uint32, tag = "8")]
    pub nekecfnahom: u32,
    #[prost(bool, tag = "9")]
    pub edojgafakda: bool,
    #[prost(uint32, repeated, tag = "12")]
    pub pdhekmemblg: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25992)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Admpidaeoek {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub gfjpmhjoefj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jmaelbngomj {
    #[prost(uint32, repeated, tag = "7")]
    pub npmpjingpof: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "8")]
    pub cjhdmkllkpa: u32,
    #[prost(uint32, repeated, tag = "10")]
    pub jahppelnedf: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28259)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ggmamlmihka {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Njpkdapljfb {
    #[prost(message, repeated, tag = "2")]
    pub dngffhfbbkl: ::prost::alloc::vec::Vec<Hjpeiaodcbk>,
    #[prost(uint32, tag = "3")]
    pub ajcgkkpccgd: u32,
    #[prost(uint32, tag = "8")]
    pub khoonepkknp: u32,
    #[prost(uint32, tag = "12")]
    pub konankaciem: u32,
    #[prost(enumeration = "Nlobhempbem", tag = "13")]
    pub igcfekljnmj: i32,
    #[prost(uint32, tag = "15")]
    pub hgalndaojlp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25153)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kbcafnggleb {
    #[prost(uint32, tag = "12")]
    pub pldlclomedf: u32,
    #[prost(uint32, tag = "13")]
    pub pjhiljjcffp: u32,
    #[prost(bool, tag = "1")]
    pub kodnaagljdl: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23864)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oafbfodelpg {
    #[prost(uint32, tag = "6")]
    pub oajoobghagm: u32,
    #[prost(uint32, tag = "9")]
    pub cell_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ahecbkcpdag {
    #[prost(string, tag = "2")]
    pub hkjonajkdeb: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub ckdoilfbgdf: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub plegblkhflm: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub elibaikmmmf: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub cncnihlhfgg: ::prost::alloc::string::String,
    #[prost(string, tag = "14")]
    pub pabdkpdlpaj: ::prost::alloc::string::String,
    #[prost(string, tag = "15")]
    pub bmlfnppbapp: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21324)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ncaokalkaof {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "5")]
    pub gipepnionak: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29030)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hjooghhhkmo {
    #[prost(bool, tag = "2")]
    pub kjjbicgcgoj: bool,
    #[prost(message, optional, tag = "6")]
    pub pnabmflkemm: ::core::option::Option<Hhlmfpohmch>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25046)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eehonojgdci {
    #[prost(uint32, tag = "1")]
    pub fiddpfbimif: u32,
    #[prost(message, optional, tag = "6")]
    pub cmldoojcjhk: ::core::option::Option<Ohfhhiejgip>,
    #[prost(bool, tag = "10")]
    pub adhibdajpnk: bool,
    #[prost(bool, tag = "12")]
    pub fpdnlphajoj: bool,
    #[prost(bool, tag = "15")]
    pub hecncammjdo: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29745)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nofejkclgll {
    #[prost(uint32, tag = "10")]
    pub index: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1213)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jghbikckopa {
    #[prost(uint32, tag = "15")]
    pub pjhiljjcffp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4247)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hhombfnbgpg {
    #[prost(map = "uint32, uint32", tag = "1")]
    pub knccaoognee: ::std::collections::HashMap<u32, u32>,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(message, optional, tag = "13")]
    pub kgfpcmbdpaj: ::core::option::Option<Lkofcbnnoam>,
    #[prost(enumeration = "Ainahdonfeo", tag = "15")]
    pub fbfdaklpefb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2584)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Adjbcagfoia {
    #[prost(uint32, tag = "8")]
    pub end_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4539)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Agbbnbildnk {
    #[prost(message, optional, tag = "2")]
    pub cpmhmdjdedb: ::core::option::Option<Ijginkjgdpd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5683)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gmmpabimbjb {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4637)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetPlayerTokenRsp {
    #[prost(string, tag = "1")]
    pub mfdajlkhgje: ::prost::alloc::string::String,
    #[prost(bytes = "vec", tag = "2")]
    pub fegjghppifb: ::prost::alloc::vec::Vec<u8>,
    #[prost(uint32, tag = "3")]
    pub jkebncdohgp: u32,
    #[prost(uint32, tag = "4")]
    pub uid: u32,
    #[prost(uint64, tag = "5")]
    pub secret_key_seed: u64,
    #[prost(string, tag = "6")]
    pub account_uid: ::prost::alloc::string::String,
    #[prost(bool, tag = "7")]
    pub dendcfpkedl: bool,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(uint32, tag = "9")]
    pub gkjoeienpdi: u32,
    #[prost(bool, tag = "10")]
    pub gmoplpfjnja: bool,
    #[prost(bytes = "vec", tag = "11")]
    pub efpfgpdadeb: ::prost::alloc::vec::Vec<u8>,
    #[prost(string, tag = "12")]
    pub secret_key: ::prost::alloc::string::String,
    #[prost(uint32, tag = "13")]
    pub gnldgmlngea: u32,
    #[prost(string, tag = "14")]
    pub msg: ::prost::alloc::string::String,
    #[prost(uint32, tag = "15")]
    pub ajcgkkpccgd: u32,
    #[prost(string, tag = "139")]
    pub kipgkkmdakn: ::prost::alloc::string::String,
    #[prost(string, tag = "311")]
    pub sign: ::prost::alloc::string::String,
    #[prost(bool, tag = "400")]
    pub nbcconnlelm: bool,
    #[prost(uint32, tag = "452")]
    pub nclcelgnipj: u32,
    #[prost(uint32, tag = "629")]
    pub dpnadjbahem: u32,
    #[prost(bool, tag = "642")]
    pub abellmcpkge: bool,
    #[prost(uint32, tag = "734")]
    pub key_id: u32,
    #[prost(string, tag = "959")]
    pub lbkdgoefebc: ::prost::alloc::string::String,
    #[prost(string, tag = "999")]
    pub lnojmeceebk: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "1018")]
    pub stop_server: ::core::option::Option<StopServerInfo>,
    #[prost(string, tag = "1021")]
    pub server_rand_key: ::prost::alloc::string::String,
    #[prost(bool, tag = "1083")]
    pub geilhhoipdc: bool,
    #[prost(uint32, tag = "1249")]
    pub jnlgdefhndg: u32,
    #[prost(string, tag = "1293")]
    pub mhpfnlkcfom: ::prost::alloc::string::String,
    #[prost(uint32, tag = "1447")]
    pub mndbnjhoaee: u32,
    #[prost(uint32, tag = "1448")]
    pub ilijhcpifok: u32,
    #[prost(string, tag = "1453")]
    pub game_biz: ::prost::alloc::string::String,
    #[prost(string, tag = "1498")]
    pub iidkgmgjnac: ::prost::alloc::string::String,
    #[prost(string, tag = "1517")]
    pub kolacojomfh: ::prost::alloc::string::String,
    #[prost(string, tag = "1600")]
    pub bdlfkjiknme: ::prost::alloc::string::String,
    #[prost(string, tag = "1612")]
    pub ohjnpjckgeg: ::prost::alloc::string::String,
    #[prost(uint32, repeated, tag = "1687")]
    pub bapnfdlpccg: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "1866")]
    pub adelhepcneb: u32,
    #[prost(uint32, tag = "1938")]
    pub ldeplpbklji: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jdpnpjbihji {
    #[prost(message, optional, tag = "2")]
    pub hgpmbmkfjjl: ::core::option::Option<Minmbingdih>,
    #[prost(message, optional, tag = "3")]
    pub odpnmgfheom: ::core::option::Option<Ggachihjidh>,
    #[prost(message, optional, tag = "12")]
    pub ocoaneealcg: ::core::option::Option<Icpgnilejnn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hofcoaifplb {
    #[prost(uint32, tag = "3")]
    pub nmaapldbbni: u32,
    #[prost(uint32, tag = "11")]
    pub max_combo: u32,
    #[prost(bool, tag = "12")]
    pub bnaccmflpko: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Naklngmflhf {
    #[prost(bool, tag = "6")]
    pub dkboicelocn: bool,
    #[prost(uint32, tag = "7")]
    pub uid: u32,
    #[prost(uint32, tag = "10")]
    pub lahonfcepnn: u32,
    #[prost(message, repeated, tag = "12")]
    pub ccadhohdbgj: ::prost::alloc::vec::Vec<Abcmjcgajmd>,
    #[prost(uint32, tag = "14")]
    pub jjhdgnfdgde: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7702)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mehncdedcog {
    #[prost(uint32, tag = "1")]
    pub hgjmlaagldl: u32,
    #[prost(uint32, tag = "10")]
    pub flffbammccg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8196)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Clacomncmhb {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fjbkbgpjolj {
    #[prost(message, repeated, tag = "5")]
    pub ffaaldojeen: ::prost::alloc::vec::Vec<Oaojhdnmehh>,
    #[prost(uint32, tag = "11")]
    pub id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29128)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ffbkgfcnael {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2231)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jknpenbhoil {
    #[prost(message, repeated, tag = "7")]
    pub lnahlegijcm: ::prost::alloc::vec::Vec<Gifmlkjcbmp>,
    #[prost(uint32, tag = "12")]
    pub aadkglakicj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3258)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ChangeAvatarReq {
    #[prost(message, optional, tag = "12")]
    pub move_pos: ::core::option::Option<Vector>,
    #[prost(uint64, tag = "10")]
    pub guid: u64,
    #[prost(bool, tag = "7")]
    pub is_move: bool,
    #[prost(bool, tag = "6")]
    pub nkmbbfhgmkb: bool,
    #[prost(uint32, tag = "4")]
    pub skill_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iboepabcdmc {
    #[prost(uint32, tag = "1")]
    pub fpjcjmgoape: u32,
    #[prost(bool, tag = "6")]
    pub hbdfpgfmkdn: bool,
    #[prost(message, optional, tag = "7")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "9")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(bool, tag = "10")]
    pub pbggiflhifd: bool,
    #[prost(bool, tag = "12")]
    pub mkbeiljdmif: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1073)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Omiknoikeih {
    #[prost(message, repeated, tag = "3")]
    pub fhnblggioja: ::prost::alloc::vec::Vec<Imokhhljpie>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5060)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ejgcejaigoe {
    #[prost(uint32, tag = "12")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26133)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mjhoejjjilb {
    #[prost(message, optional, tag = "2")]
    pub ibeakhhnohb: ::core::option::Option<Hcjgifnjppj>,
    #[prost(uint32, tag = "7")]
    pub city_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mhjpfdgedgo {
    #[prost(enumeration = "Mihbpfkemje", tag = "1")]
    pub state: i32,
    #[prost(uint32, tag = "3")]
    pub hjjhglikcam: u32,
    #[prost(uint32, tag = "6")]
    pub progress: u32,
    #[prost(bool, tag = "7")]
    pub kokdkapahij: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28291)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mffinpipkhf {
    #[prost(uint32, tag = "1")]
    pub ipdobhbahcn: u32,
    #[prost(bool, tag = "2")]
    pub ilmbiapimoh: bool,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23162)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hgkeicpedeg {
    #[prost(uint32, tag = "3")]
    pub mdpodaelfmn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23548)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mddpbggfgag {
    #[prost(uint32, tag = "15")]
    pub region_id: u32,
    #[prost(enumeration = "Elldepilofc", tag = "11")]
    pub mbogpbboieh: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26868)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Njmhmjapadi {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5169)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fedppgclaeo {
    #[prost(message, repeated, tag = "5")]
    pub cbknkhfmcok: ::prost::alloc::vec::Vec<Gppndkhnobm>,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1670)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jiidohbbeha {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21411)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mehbcapjoge {
    #[prost(message, optional, tag = "11")]
    pub iikblhjbcio: ::core::option::Option<Jcjcmaibcao>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ajmoomnamdf {
    #[prost(bool, tag = "1")]
    pub fglohnkkppg: bool,
    #[prost(uint32, tag = "2")]
    pub id: u32,
    #[prost(uint32, tag = "3")]
    pub kkladhfcbfj: u32,
    #[prost(bool, tag = "6")]
    pub dnkaakggpap: bool,
    #[prost(enumeration = "Mphajnofphp", tag = "7")]
    pub dnnfdnapjnj: i32,
    #[prost(uint32, tag = "8")]
    pub ifplliooged: u32,
    #[prost(uint32, tag = "11")]
    pub icdlepjhidb: u32,
    #[prost(uint32, tag = "12")]
    pub npc_id: u32,
    #[prost(message, repeated, tag = "14")]
    pub eehfgmolagk: ::prost::alloc::vec::Vec<Emeajkniefa>,
    #[prost(message, optional, tag = "15")]
    pub nobmgicjgbb: ::core::option::Option<Emeajkniefa>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3156)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ccbjckcjhlo {
    #[prost(bool, tag = "2")]
    pub bpihibfpack: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5800)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Englppkohcp {
    #[prost(uint32, tag = "3")]
    pub aoegkkajean: u32,
    #[prost(uint32, tag = "4")]
    pub fcfopolhlof: u32,
    #[prost(bool, tag = "7")]
    pub mihonjccajc: bool,
    #[prost(uint32, repeated, tag = "10")]
    pub param_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4411)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Afioeaigmkk {
    #[prost(message, repeated, tag = "13")]
    pub ikmdadcopeg: ::prost::alloc::vec::Vec<Ijginkjgdpd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7559)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pmdkiigkpjc {
    #[prost(uint32, repeated, tag = "1")]
    pub jihjehcjmbb: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6699)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ingmgclbbbd {
    #[prost(uint32, tag = "11")]
    pub end_time: u32,
    #[prost(uint32, tag = "14")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6828)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bhjldeiobmb {
    #[prost(uint32, tag = "1")]
    pub offering_id: u32,
    #[prost(uint32, tag = "13")]
    pub level: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dpmmbeoncnb {
    #[prost(uint32, tag = "9")]
    pub kfaadeeklbj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5634)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kbcogdncijj {
    #[prost(bool, tag = "3")]
    pub ahblfgaemmf: bool,
    #[prost(enumeration = "Ehgpiloejjj", tag = "1")]
    pub npgfolgpbao: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24785)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Adbldchbapi {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "8")]
    pub fbabmdibfkd: u32,
    #[prost(map = "uint32, message", tag = "10")]
    pub modjgajfajl: ::std::collections::HashMap<u32, Ihklgmifgmn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eeopjgjjcpn {
    #[prost(bool, tag = "4")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "9")]
    pub lcddidljedn: u32,
    #[prost(uint32, tag = "10")]
    pub lchbeahgheo: u32,
    #[prost(uint32, tag = "11")]
    pub hpodkdccikj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28880)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kildmbiangc {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "11")]
    pub ifipfmljpgc: ::prost::alloc::vec::Vec<Bgpahbmkbag>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fnloebiajie {
    #[prost(string, tag = "1")]
    pub lbkdgoefebc: ::prost::alloc::string::String,
    #[prost(bool, tag = "7")]
    pub bkampgbbbfp: bool,
    #[prost(uint32, tag = "3")]
    pub ajcgkkpccgd: u32,
    #[prost(uint32, tag = "9")]
    pub aeedoagehpp: u32,
    #[prost(uint32, tag = "6")]
    pub ggigcllhefm: u32,
    #[prost(uint32, tag = "13")]
    pub uid: u32,
    #[prost(uint32, tag = "12")]
    pub cpmefheeoah: u32,
    #[prost(oneof = "fnloebiajie::Aghglnefdhk", tags = "512, 850, 180")]
    pub aghglnefdhk: ::core::option::Option<fnloebiajie::Aghglnefdhk>,
}
/// Nested message and enum types in `FNLOEBIAJIE`.
pub mod fnloebiajie {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Aghglnefdhk {
        #[prost(string, tag = "512")]
        Text(::prost::alloc::string::String),
        #[prost(message, tag = "850")]
        SystemHint(super::Ahfcckgeijd),
        #[prost(uint32, tag = "180")]
        Icon(u32),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ahfcckgeijd {
    #[prost(uint32, tag = "10")]
    pub r#type: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29598)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jllfoahmeck {
    #[prost(uint32, tag = "14")]
    pub eaipgemknpo: u32,
    #[prost(uint32, repeated, tag = "15")]
    pub nkicbobidaf: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iajojnflmna {
    #[prost(uint32, tag = "1")]
    pub count: u32,
    #[prost(uint64, tag = "7")]
    pub guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4212)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cokneffpbpm {
    #[prost(uint32, tag = "2")]
    pub lhmdbbfaifm: u32,
    #[prost(bool, tag = "3")]
    pub omeniamedce: bool,
    #[prost(message, repeated, tag = "9")]
    pub ehpkeglekkf: ::prost::alloc::vec::Vec<Nfbopnmfebo>,
    #[prost(uint32, tag = "14")]
    pub kngjhmllcnp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25782)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ccjpmeddigp {
    #[prost(uint32, tag = "13")]
    pub id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28678)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lhjnlehkaeg {
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bfmajbbmioh {
    #[prost(uint32, tag = "1")]
    pub icidpjhbdji: u32,
    #[prost(bool, tag = "5")]
    pub bnaccmflpko: bool,
    #[prost(oneof = "bfmajbbmioh::Lfpgpcbeahp", tags = "12, 13, 15")]
    pub lfpgpcbeahp: ::core::option::Option<bfmajbbmioh::Lfpgpcbeahp>,
}
/// Nested message and enum types in `BFMAJBBMIOH`.
pub mod bfmajbbmioh {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Lfpgpcbeahp {
        #[prost(uint32, tag = "12")]
        BossChallengeId(u32),
        #[prost(message, tag = "13")]
        BundleInfo(super::Mnhbehenecp),
        #[prost(message, tag = "15")]
        ScoreChallengeInfo(super::Bcdomhbdhaj),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20189)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hhcjpblpgmg {
    #[prost(uint32, tag = "7")]
    pub item_id: u32,
    #[prost(uint32, tag = "8")]
    pub eoihallmgal: u32,
    #[prost(uint32, tag = "2")]
    pub dbkkkmekici: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Iebkhmdmhii {
    #[prost(message, repeated, tag = "13")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Ppefapbbigc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(268)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mehlihmchfo {
    #[prost(message, repeated, tag = "9")]
    pub gjihlnaeggd: ::prost::alloc::vec::Vec<Clhnpakhdgh>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24432)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ekeabcmjlim {
    #[prost(message, repeated, tag = "10")]
    pub aoicjkbicnf: ::prost::alloc::vec::Vec<Cmdpjimjcah>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22653)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lpohginlpko {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "6")]
    pub kkpkggpfpim: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3829)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Obnchbknnmp {
    #[prost(uint32, tag = "3")]
    pub llbgofeemcl: u32,
    #[prost(uint32, tag = "13")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27676)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kdmgbheanam {
    #[prost(message, repeated, tag = "4")]
    pub item_list: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(uint32, tag = "14")]
    pub finahglfhag: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3747)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jmndpgbofbn {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kmedihgpbph {
    #[prost(uint32, tag = "7")]
    pub end_time: u32,
    #[prost(map = "uint32, message", tag = "14")]
    pub gdinbilaimf: ::std::collections::HashMap<u32, Abdnlacdcni>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3444)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Alfjahkindg {
    #[prost(uint32, tag = "10")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21687)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nfddfjpipch {
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nabkhckefgh {
    #[prost(message, optional, tag = "2")]
    pub phcidgfobba: ::core::option::Option<Hekghbfomii>,
    #[prost(uint32, tag = "13")]
    pub ooipgfedjmn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Efpcnooedlc {
    #[prost(uint32, tag = "14")]
    pub jiiamcfehmj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29127)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Npfeodiaepd {
    #[prost(message, optional, tag = "1")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "11")]
    pub entity_id: u32,
    #[prost(uint32, tag = "5")]
    pub kngbdmdcnhk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nifpmkjloep {
    #[prost(enumeration = "Ljcngngdgph", tag = "3")]
    pub oldjacgpadp: i32,
    #[prost(message, repeated, tag = "10")]
    pub agcilnpmblb: ::prost::alloc::vec::Vec<Ombeifnnedf>,
    #[prost(message, optional, tag = "13")]
    pub eakihpfacdd: ::core::option::Option<Hkpgngddocl>,
    #[prost(enumeration = "Ljcngngdgph", tag = "14")]
    pub kocmcngddjg: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Becbkbinebd {
    #[prost(uint32, tag = "8")]
    pub benpellbbjc: u32,
    #[prost(enumeration = "Blcapebdfdm", tag = "12")]
    pub action_type: i32,
    #[prost(uint32, tag = "13")]
    pub ooipgfedjmn: u32,
    #[prost(message, repeated, tag = "15")]
    pub gikjpjgmpam: ::prost::alloc::vec::Vec<Ikdfplikjcp>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5415)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hicbejglfol {
    #[prost(uint32, tag = "3")]
    pub group_id: u32,
    #[prost(uint32, tag = "10")]
    pub jimelgdjmlf: u32,
    #[prost(oneof = "hicbejglfol::Detail", tags = "268, 560, 894")]
    pub detail: ::core::option::Option<hicbejglfol::Detail>,
}
/// Nested message and enum types in `HICBEJGLFOL`.
pub mod hicbejglfol {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(message, tag = "268")]
        ChessSettleInfo(super::Hdllebacfpf),
        #[prost(message, tag = "560")]
        IrodoriChessSettleInfo(super::Dnfljpmgnkd),
        #[prost(message, tag = "894")]
        MechanicusSettleInfo(super::Agcjpgfcmkm),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Omlhfloecmd {
    #[prost(uint32, tag = "3")]
    pub equip_type: u32,
    #[prost(uint32, tag = "5")]
    pub element_type: u32,
    #[prost(message, repeated, tag = "6")]
    pub oikklpfpkfd: ::prost::alloc::vec::Vec<Ajpkfjdokfh>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bhdohigejan {
    #[prost(uint32, tag = "10")]
    pub dnbefljlamb: u32,
    #[prost(uint32, tag = "12")]
    pub coebnijnnne: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3164)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hnbjjeijnaf {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hikcagdidfb {
    #[prost(bool, tag = "5")]
    pub bmfaadbocfn: bool,
    #[prost(bool, tag = "13")]
    pub miigdddjden: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3324)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dicfahodehc {
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nlchenoncbi {
    #[prost(bool, tag = "14")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "15")]
    pub monejdbpolb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20841)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ckdkgaocboh {
    #[prost(uint32, tag = "2")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23551)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jdpmnaacchi {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25800)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cmcpancdlgj {
    #[prost(message, optional, tag = "6")]
    pub lmpchdebeal: ::core::option::Option<Mpmgngljgjp>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cnjpphndjnc {
    #[prost(uint32, repeated, tag = "1")]
    pub mnofibclodd: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "4")]
    pub aocijogpajp: u32,
    #[prost(message, repeated, tag = "14")]
    pub eapnelhcblm: ::prost::alloc::vec::Vec<Jjnllnibimm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lanfemmhknb {
    #[prost(message, repeated, tag = "10")]
    pub jjikcebedpo: ::prost::alloc::vec::Vec<Jilmfeiligg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kbgffpmolnp {
    #[prost(message, repeated, tag = "5")]
    pub enaplopddom: ::prost::alloc::vec::Vec<Lioffogfcgc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Djfnbcgcgcp {
    #[prost(bool, tag = "5")]
    pub pgpkmokbfam: bool,
    #[prost(uint32, tag = "6")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AvatarRenameInfo {
    #[prost(string, tag = "5")]
    pub hglnccjieag: ::prost::alloc::string::String,
    #[prost(uint32, tag = "10")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24077)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aciccheifdm {
    #[prost(uint32, tag = "4")]
    pub level_id: u32,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(bool, tag = "9")]
    pub fnjegaacabo: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iihkhenlbce {
    #[prost(uint32, tag = "11")]
    pub dajhkhflndj: u32,
    #[prost(uint32, tag = "14")]
    pub epfcidiklkg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22070)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gdpkffibgbb {
    #[prost(uint32, tag = "1")]
    pub eaipgemknpo: u32,
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(bool, tag = "13")]
    pub hcjfdjhilam: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26586)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gckhiffgbfm {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gdnjjlciica {
    #[prost(message, repeated, tag = "15")]
    pub geiagfpmlof: ::prost::alloc::vec::Vec<Bcanlffgnic>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1413)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mpholfipoca {
    #[prost(message, repeated, tag = "14")]
    pub ibpcfnmmbib: ::prost::alloc::vec::Vec<Ljiemnnkpjo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Heilblkkojo {
    #[prost(uint32, tag = "11")]
    pub target_entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20337)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jdofhehgnin {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cfbijpoajhg {
    #[prost(uint32, tag = "4")]
    pub level: u32,
    #[prost(uint32, repeated, tag = "7")]
    pub affix_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "8")]
    pub ehdeemipoda: u32,
    #[prost(uint32, tag = "12")]
    pub monster_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bnagcibncgo {
    #[prost(message, repeated, tag = "4")]
    pub inopfnjgmgg: ::prost::alloc::vec::Vec<Bjghdocnfnb>,
    #[prost(uint32, tag = "6")]
    pub pcchfphgcjb: u32,
    #[prost(bool, tag = "7")]
    pub nmfppomdcac: bool,
    #[prost(uint32, tag = "8")]
    pub blfoidkfggf: u32,
    #[prost(message, repeated, tag = "9")]
    pub hpiflheflng: ::prost::alloc::vec::Vec<Pkfabbkappa>,
    #[prost(uint32, tag = "10")]
    pub kmligbjpnej: u32,
    #[prost(uint32, tag = "11")]
    pub epppbolkbac: u32,
    #[prost(uint32, tag = "13")]
    pub lcnpgpkfeio: u32,
    #[prost(uint32, tag = "15")]
    pub gmdcmocijab: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23430)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bjhcggkpkbn {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(message, optional, tag = "11")]
    pub ghihaidbacf: ::core::option::Option<Jkejhajabgd>,
    #[prost(uint32, tag = "13")]
    pub dcedejdmlho: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21795)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Afoaiijkgfl {
    #[prost(message, repeated, tag = "6")]
    pub abjmemamnld: ::prost::alloc::vec::Vec<Ljjecclcpnk>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Khfhhgcmakk {
    #[prost(uint32, repeated, tag = "2")]
    pub loaclkkmdfm: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "3")]
    pub oohlcocpdfe: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20080)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kepjhngfndp {
    #[prost(message, repeated, tag = "2")]
    pub prop_list: ::prost::alloc::vec::Vec<PropValue>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26388)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dhjcbglcjdf {
    #[prost(uint32, tag = "15")]
    pub migiidpmkpa: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7285)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Enohcjaaafj {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6469)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bhbnfbfajdp {
    #[prost(string, tag = "7")]
    pub nick_name: ::prost::alloc::string::String,
    #[prost(uint32, tag = "2")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21429)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pmoeblbabep {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(string, tag = "4")]
    pub iidkgmgjnac: ::prost::alloc::string::String,
    #[prost(string, tag = "11")]
    pub kolacojomfh: ::prost::alloc::string::String,
    #[prost(uint32, tag = "12")]
    pub mndbnjhoaee: u32,
    #[prost(uint32, tag = "13")]
    pub adelhepcneb: u32,
    #[prost(string, tag = "15")]
    pub game_biz: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ngnchiomjnb {
    #[prost(bool, tag = "1")]
    pub lpjchcadnpj: bool,
    #[prost(uint32, tag = "6")]
    pub japeoejlnpd: u32,
    #[prost(enumeration = "Elfnofggcia", tag = "8")]
    pub liceocklogd: i32,
    #[prost(message, repeated, tag = "9")]
    pub eilahbhkmed: ::prost::alloc::vec::Vec<Eeopjgjjcpn>,
    #[prost(bool, tag = "10")]
    pub bnpdkncpmcp: bool,
    #[prost(bool, tag = "12")]
    pub odcgiedjaoj: bool,
    #[prost(uint64, tag = "13")]
    pub mcppeknbhfk: u64,
    #[prost(uint32, tag = "14")]
    pub hbiemjbfnmp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23804)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bjobelmoomi {
    #[prost(message, repeated, tag = "6")]
    pub jnjlfljnhcj: ::prost::alloc::vec::Vec<Hdhmianbihc>,
    #[prost(uint32, tag = "13")]
    pub idfmkkfiego: u32,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5293)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Obimojfbeph {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "8")]
    pub entity_id: u32,
    #[prost(uint32, tag = "11")]
    pub jdlenedglfl: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1319)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hohekcgiagl {
    #[prost(int32, tag = "12")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "15")]
    pub mark_list: ::prost::alloc::vec::Vec<MapMarkPoint>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29457)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Akbdjfombop {
    #[prost(uint64, repeated, tag = "10")]
    pub mnchcggmlpa: ::prost::alloc::vec::Vec<u64>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7842)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ogdhhejpfjh {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4287)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bealaknoijc {
    #[prost(uint32, tag = "8")]
    pub room_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2238)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gpeokcdbgll {
    #[prost(map = "uint32, uint32", tag = "3")]
    pub moopcjcehld: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4013)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Adiplhiagea {
    #[prost(uint32, tag = "6")]
    pub lhflnpkfdki: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4857)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Odlbehjkacc {
    #[prost(uint32, tag = "13")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26015)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pcmpoobhkgi {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7309)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ncjlbfmeghm {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Neembbolnep {
    #[prost(uint32, tag = "3")]
    pub param2: u32,
    #[prost(uint32, tag = "6")]
    pub param3: u32,
    #[prost(uint32, tag = "8")]
    pub param1: u32,
    #[prost(uint32, tag = "11")]
    pub ppbikoaeohd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20518)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ldeonbcfibm {
    #[prost(enumeration = "ForwardType", tag = "3")]
    pub forward_type: i32,
    #[prost(uint32, tag = "10")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1013)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aogdnjlfgkb {
    #[prost(uint32, tag = "1")]
    pub ofnogjpgbna: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22883)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fimcggkfomm {
    #[prost(uint32, tag = "10")]
    pub hpoffmfkbdi: u32,
    #[prost(uint32, tag = "12")]
    pub fagpphacnbj: u32,
    #[prost(uint32, tag = "6")]
    pub city_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28364)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oahpoccnghb {
    #[prost(uint32, repeated, tag = "9")]
    pub hlboeijjpfo: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23649)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cdljlahchpb {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(message, optional, tag = "14")]
    pub gifedgemmma: ::core::option::Option<Dalekdkmmbf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9784)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cbakogibdbo {
    #[prost(uint32, tag = "15")]
    pub olkacabnmfp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21750)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kignnndbpbf {
    #[prost(uint32, tag = "9")]
    pub anim_hash: u32,
    #[prost(uint32, tag = "6")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6656)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pkphfokcnpj {
    #[prost(uint32, tag = "1")]
    pub kcngbcbogje: u32,
    #[prost(enumeration = "Oamhihbhikn", tag = "4")]
    pub hmpmojahbmh: i32,
    #[prost(uint32, tag = "10")]
    pub fcpecpmogoj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cjeimokenam {
    #[prost(uint32, tag = "4")]
    pub state: u32,
    #[prost(uint32, tag = "5")]
    pub migiidpmkpa: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20753)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nlpfgmabkaf {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24078)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gaaohmdilkl {
    #[prost(uint32, tag = "9")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "13")]
    pub icidpjhbdji: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24232)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bkacbkcpenm {
    #[prost(string, tag = "8")]
    pub jfaamlfpknm: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gcfhdmbfkmn {
    #[prost(uint32, repeated, tag = "4")]
    pub ddoagpcobmg: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "8")]
    pub gnfcbncpffj: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "12")]
    pub bndfebjmhgd: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25997)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mpeokbgpjgb {
    #[prost(message, repeated, tag = "4")]
    pub nngfnbcaapi: ::prost::alloc::vec::Vec<Npnjinmablf>,
    #[prost(uint32, tag = "10")]
    pub hggehlmhkmp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29212)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nlifkekcdmm {
    #[prost(uint32, tag = "12")]
    pub nocbcgejpfi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1435)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hlckbnkckao {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dmnlidhdpfp {
    #[prost(uint32, repeated, tag = "1")]
    pub mnchcggmlpa: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "13")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5374)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Abfackdooaj {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22417)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pfpcgalalph {
    #[prost(uint32, tag = "1")]
    pub config_id: u32,
    #[prost(bool, tag = "5")]
    pub hhnbgoneihh: bool,
    #[prost(uint32, tag = "11")]
    pub group_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6033)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pefobdmaacj {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nlblpmejofk {
    #[prost(uint32, tag = "2")]
    pub pfbmhafngbm: u32,
    #[prost(message, repeated, tag = "3")]
    pub lfijomfaagj: ::prost::alloc::vec::Vec<Odfnohdicec>,
    #[prost(bool, tag = "7")]
    pub ldgnpkgamfj: bool,
    #[prost(bool, tag = "13")]
    pub kkpidnfhgcj: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2069)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Icbkeeglclm {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub lchbeahgheo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21549)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nmdhknbgfol {
    #[prost(uint32, tag = "13")]
    pub bdeflcdkdbi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(844)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cjnejjfllic {
    #[prost(uint32, tag = "2")]
    pub kdjifcpbgen: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23283)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oapfggclhpa {
    #[prost(uint32, tag = "1")]
    pub oelcnlojhhe: u32,
    #[prost(uint32, tag = "2")]
    pub nilalkpfcco: u32,
    #[prost(bool, tag = "8")]
    pub hcjfdjhilam: bool,
    #[prost(bool, tag = "9")]
    pub goonoopfoam: bool,
    #[prost(uint32, tag = "11")]
    pub lbeinahahka: u32,
    #[prost(message, repeated, tag = "13")]
    pub eilahbhkmed: ::prost::alloc::vec::Vec<Mpndgcpkcfn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mkgjgoiaoap {
    #[prost(uint32, tag = "6")]
    pub pebfeamgkoe: u32,
    #[prost(uint32, tag = "12")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mpoldibfemm {
    #[prost(uint32, tag = "5")]
    pub avatar_id: u32,
    #[prost(uint32, repeated, tag = "13")]
    pub jnimckplnfh: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25347)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pfhfpcnjlba {
    #[prost(bool, tag = "5")]
    pub moaelibphoi: bool,
    #[prost(uint32, tag = "7")]
    pub draft_id: u32,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cjjnohjofdh {
    #[prost(message, optional, tag = "5")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "11")]
    pub pos: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28435)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hfdpjedhomp {
    #[prost(uint32, tag = "3")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24221)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bdenffccdpb {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mlclboekhne {
    #[prost(uint32, tag = "1")]
    pub config_id: u32,
    #[prost(bool, tag = "3")]
    pub jingillofcc: bool,
    #[prost(message, optional, tag = "4")]
    pub ecmnhbjiojk: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "5")]
    pub group_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1247)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kldkeehaebm {
    #[prost(uint32, tag = "2")]
    pub pgichlhdgjp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29698)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fafdlhicmjd {
    #[prost(message, repeated, tag = "11")]
    pub dmjibbcpedf: ::prost::alloc::vec::Vec<Mkkmacfgjbg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29828)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mfdoojpiofc {
    #[prost(string, tag = "9")]
    pub nick_name: ::prost::alloc::string::String,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6999)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jjjneaoolph {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4560)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iamfpnagllg {
    #[prost(uint32, tag = "1")]
    pub score: u32,
    #[prost(uint32, tag = "4")]
    pub level_id: u32,
    #[prost(uint32, tag = "5")]
    pub epldglecano: u32,
    #[prost(uint32, tag = "7")]
    pub ejkiancmdpf: u32,
    #[prost(bool, tag = "9")]
    pub hcjfdjhilam: bool,
    #[prost(bool, tag = "13")]
    pub ocgnmnobjgm: bool,
    #[prost(uint32, tag = "14")]
    pub kngjhmllcnp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25324)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hhofhepblgl {
    #[prost(message, repeated, tag = "15")]
    pub efcdelgmmkg: ::prost::alloc::vec::Vec<Ealkfdeadic>,
    #[prost(uint32, tag = "6")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "3")]
    pub bodiejclgmb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(634)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kccbmelpaik {
    #[prost(uint32, tag = "6")]
    pub entity_id: u32,
    #[prost(message, optional, tag = "15")]
    pub entity_client_data: ::core::option::Option<EntityClientData>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7186)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fmjkpocbjjj {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "15")]
    pub ihflgbgnaje: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(912)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fhankdjdfdj {
    #[prost(bool, tag = "14")]
    pub hdnildcefmg: bool,
    #[prost(uint32, tag = "13")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23322)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Flphfehdgbp {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bcdnbomphii {
    #[prost(message, repeated, tag = "1")]
    pub pndpnmbdokf: ::prost::alloc::vec::Vec<Oacpabjklfg>,
    #[prost(bool, tag = "12")]
    pub afkicppfjdp: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3524)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cioehpdldkd {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4338)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hfhlnkjeidn {
    #[prost(uint32, repeated, tag = "5")]
    pub ccffmnckjfh: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9878)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dnnfjoldhip {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8306)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ejjjhgmomgn {
    #[prost(message, optional, tag = "9")]
    pub lhaaomfdljf: ::core::option::Option<Apfceefmolo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hmffljogoia {
    #[prost(float, tag = "2")]
    pub ekljijgdkjo: f32,
    #[prost(message, repeated, tag = "6")]
    pub point_list: ::prost::alloc::vec::Vec<Ijpadigmnph>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Acbffnnaklg {
    #[prost(uint32, tag = "1")]
    pub lcccemmmgki: u32,
    #[prost(message, repeated, tag = "9")]
    pub ifghebhjkmj: ::prost::alloc::vec::Vec<Knjbllamebd>,
    #[prost(uint32, repeated, tag = "13")]
    pub mepjgpejpdn: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(329)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fpplgbnlbhh {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "4")]
    pub klmmambhjdm: u32,
    #[prost(uint32, tag = "5")]
    pub amebmpiipnp: u32,
    #[prost(message, optional, tag = "6")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "7")]
    pub ojhpfmmkgdm: u32,
    #[prost(uint32, tag = "12")]
    pub pidmgplikbo: u32,
    #[prost(uint32, tag = "13")]
    pub kmbabhcpdmp: u32,
    #[prost(uint32, tag = "14")]
    pub pjdgobhfmig: u32,
    #[prost(uint32, tag = "15")]
    pub kboifbikmha: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5185)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mekampbahmf {
    #[prost(map = "uint32, uint32", tag = "8")]
    pub jnnlebgecdl: ::std::collections::HashMap<u32, u32>,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "14")]
    pub kegigleinkl: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22775)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gliigooimih {
    #[prost(uint32, tag = "5")]
    pub level_id: u32,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eonjgnlckla {
    #[prost(uint32, tag = "7")]
    pub bodiejclgmb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9024)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gppbkjhdphl {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hchccihilmh {
    #[prost(uint32, tag = "7")]
    pub gfjpmhjoefj: u32,
    #[prost(uint32, tag = "13")]
    pub oelcnlojhhe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8805)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Khdkpnanoin {
    #[prost(message, optional, tag = "2")]
    pub icchdgkmnlf: ::core::option::Option<Ljjfjilbnll>,
    #[prost(uint32, tag = "4")]
    pub miolbjepfgp: u32,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lfobkbcnfic {
    #[prost(uint32, tag = "2")]
    pub pajkkmdpffa: u32,
    #[prost(uint32, repeated, tag = "6")]
    pub dcmmnmahaco: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "9")]
    pub config_id: u32,
    #[prost(uint32, tag = "12")]
    pub dfdnfddccpb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(613)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hincgjmjknj {
    #[prost(uint32, tag = "2")]
    pub parent_quest_id: u32,
    #[prost(uint32, repeated, tag = "5")]
    pub mdifampdnhd: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Baenjdfennh {
    #[prost(uint32, tag = "1")]
    pub laognpoplpj: u32,
    #[prost(string, tag = "2")]
    pub ggaionkifce: ::prost::alloc::string::String,
    #[prost(uint32, tag = "3")]
    pub pnbfdejoopd: u32,
    #[prost(uint32, tag = "4")]
    pub mamimjheflo: u32,
    #[prost(uint32, tag = "5")]
    pub eoihallmgal: u32,
    #[prost(string, tag = "6")]
    pub omckighppbc: ::prost::alloc::string::String,
    #[prost(uint32, tag = "7")]
    pub jhlnibamgaa: u32,
    #[prost(uint32, tag = "8")]
    pub jabgacillec: u32,
    #[prost(uint32, tag = "9")]
    pub ojifaacgkgm: u32,
    #[prost(uint32, tag = "10")]
    pub iibdnlhomfn: u32,
    #[prost(string, tag = "11")]
    pub epfapkbpnpe: ::prost::alloc::string::String,
    #[prost(uint32, tag = "12")]
    pub dnbefljlamb: u32,
    #[prost(string, tag = "13")]
    pub ahlgecbcgjn: ::prost::alloc::string::String,
    #[prost(uint32, tag = "14")]
    pub aaklcmpdpeg: u32,
    #[prost(uint32, tag = "15")]
    pub end_time: u32,
    #[prost(string, tag = "103")]
    pub eamcfgdphaf: ::prost::alloc::string::String,
    #[prost(uint32, repeated, tag = "220")]
    pub iginmgppimp: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "309")]
    pub djmkacepjbn: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "319")]
    pub balnpbdeeoj: ::prost::alloc::vec::Vec<Gjnaealcbff>,
    #[prost(string, tag = "460")]
    pub dgiaceiaopl: ::prost::alloc::string::String,
    #[prost(uint32, tag = "720")]
    pub hadjcafoofe: u32,
    #[prost(uint32, tag = "1001")]
    pub gllebfhmbbe: u32,
    #[prost(bool, tag = "1335")]
    pub nhjnmgamppe: bool,
    #[prost(string, tag = "1536")]
    pub mcnpjlmhcjh: ::prost::alloc::string::String,
    #[prost(uint32, repeated, tag = "1637")]
    pub ehgcbgpefjk: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "1780")]
    pub jkoalmbcjfe: u32,
    #[prost(uint32, tag = "1792")]
    pub kaalkocaohk: u32,
    #[prost(bool, tag = "1822")]
    pub jnpbimpgnno: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Njimnjonhcg {
    #[prost(uint32, tag = "1")]
    pub level_id: u32,
    #[prost(uint32, tag = "2")]
    pub score: u32,
    #[prost(bool, tag = "4")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "5")]
    pub bodiejclgmb: u32,
    #[prost(uint32, tag = "7")]
    pub chaaoabikmo: u32,
    #[prost(uint32, tag = "12")]
    pub abhfnlpdmcc: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7666)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cdpnldcjohg {
    #[prost(message, optional, tag = "12")]
    pub idgilhdfgjb: ::core::option::Option<Fembhmjoegm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5975)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Edjlmabajda {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(uint32, tag = "9")]
    pub promote_level: u32,
    #[prost(uint32, tag = "11")]
    pub jcmchgnnlmj: u32,
    #[prost(uint64, tag = "13")]
    pub avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23582)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hfjmmkadgan {
    #[prost(message, repeated, tag = "9")]
    pub kfmhaijcmdb: ::prost::alloc::vec::Vec<Nbdhfhkmlfd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24528)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Babbmlikode {
    #[prost(uint64, tag = "8")]
    pub avatar_guid: u64,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
    #[prost(uint32, tag = "11")]
    pub hokogiodlci: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27032)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eilaajbhnld {
    #[prost(map = "uint32, int64", tag = "5")]
    pub prop_map: ::std::collections::HashMap<u32, i64>,
    #[prost(uint64, tag = "7")]
    pub avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23506)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct NpcTalkReq {
    #[prost(uint32, tag = "5")]
    pub npc_entity_id: u32,
    #[prost(uint32, tag = "6")]
    pub entity_id: u32,
    #[prost(uint32, tag = "9")]
    pub talk_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(92)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Makgblhibfl {
    #[prost(uint32, tag = "4")]
    pub lbeinahahka: u32,
    #[prost(uint32, tag = "5")]
    pub nilalkpfcco: u32,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(162)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dpiakllmohc {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(uint64, repeated, tag = "12")]
    pub jbpmefjklcn: ::prost::alloc::vec::Vec<u64>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22291)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aklgfgeilha {
    #[prost(uint32, tag = "8")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8978)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ejppaikchng {
    #[prost(enumeration = "Kpfoblalblc", tag = "3")]
    pub daakpcoabep: i32,
    #[prost(uint64, tag = "12")]
    pub ihgjlfcgfin: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20437)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Giebpdbkgpl {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5579)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Igmmajfifdc {
    #[prost(message, repeated, tag = "11")]
    pub idkldmnofej: ::prost::alloc::vec::Vec<Jhjiliaanko>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25970)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Imihbllbdpf {
    #[prost(int32, tag = "2")]
    pub boddbdmmege: i32,
    #[prost(bool, tag = "3")]
    pub kchmjifneba: bool,
    #[prost(bool, tag = "4")]
    pub poncfcpcfin: bool,
    #[prost(uint32, tag = "6")]
    pub jgoffbcmmbo: u32,
    #[prost(uint32, tag = "8")]
    pub coppljhgaoh: u32,
    #[prost(message, optional, tag = "11")]
    pub kpbblfbbpnf: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "13")]
    pub gjagabenaln: u32,
    #[prost(uint32, tag = "15")]
    pub dgiakfbgnjk: u32,
    #[prost(oneof = "imihbllbdpf::Ificmkdabaa", tags = "238, 789, 1157, 1816")]
    pub ificmkdabaa: ::core::option::Option<imihbllbdpf::Ificmkdabaa>,
}
/// Nested message and enum types in `IMIHBLLBDPF`.
pub mod imihbllbdpf {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Ificmkdabaa {
        #[prost(message, tag = "238")]
        CylinderSize(super::Omdefnfdgcf),
        #[prost(message, tag = "789")]
        CubicSize(super::Vector),
        #[prost(message, tag = "1157")]
        PolygonSize(super::Hmffljogoia),
        #[prost(float, tag = "1816")]
        SphereRadius(f32),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26842)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mjdipgbpogl {
    #[prost(map = "uint32, uint32", tag = "8")]
    pub open_state_map: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jkgejfiajpp {
    #[prost(uint32, repeated, tag = "7")]
    pub keeeomgcllo: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28421)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dljmbflcjch {
    #[prost(message, optional, tag = "5")]
    pub efamipoaaek: ::core::option::Option<Cbggfcjfplh>,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cbimlmhcmln {
    #[prost(int32, repeated, tag = "1")]
    pub mkbnmcmmjnp: ::prost::alloc::vec::Vec<i32>,
    #[prost(enumeration = "Fcaoiofeiga", repeated, tag = "3")]
    pub cjkojofihjh: ::prost::alloc::vec::Vec<i32>,
    #[prost(int32, tag = "6")]
    pub nnoajmaadmp: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6527)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cehfkonjlld {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(uint32, tag = "11")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hegojohefib {
    #[prost(uint32, tag = "4")]
    pub level_id: u32,
    #[prost(uint32, tag = "6")]
    pub ofnmjncbnhk: u32,
    #[prost(bool, tag = "8")]
    pub pjjdjmgpnle: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27959)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dgabchdgpbp {
    #[prost(uint32, tag = "8")]
    pub gablkaaecjb: u32,
    #[prost(uint32, tag = "10")]
    pub pmgiipldaah: u32,
    #[prost(uint32, tag = "14")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26749)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eanhlddidga {
    #[prost(message, repeated, tag = "7")]
    pub mbdhjjohcko: ::prost::alloc::vec::Vec<Mifdfaihdda>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25647)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Limlobfgflb {
    #[prost(uint32, repeated, tag = "4")]
    pub dhopbdihgcg: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(285)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nplllaapemk {
    #[prost(bool, tag = "11")]
    pub hcjfdjhilam: bool,
    #[prost(int32, tag = "15")]
    pub imiogmdokcb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cjlppfedhcp {
    #[prost(uint32, repeated, tag = "8")]
    pub fkpcokdejam: ::prost::alloc::vec::Vec<u32>,
    #[prost(enumeration = "Mnlilcbgkng", repeated, tag = "11")]
    pub mkjpgmhmhbj: ::prost::alloc::vec::Vec<i32>,
    #[prost(uint32, tag = "13")]
    pub ooipgfedjmn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fgdipmphkkg {
    #[prost(message, repeated, tag = "6")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Fdpmmpgalad>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22056)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hclappmnmif {
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5649)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Djpjfgkelbh {
    #[prost(bool, tag = "8")]
    pub hcjfdjhilam: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22824)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dbigefblihi {
    #[prost(uint32, tag = "1")]
    pub najdgkjkpdp: u32,
    #[prost(uint32, tag = "5")]
    pub host_peer_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29196)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mifkgdgkfpk {
    #[prost(uint32, tag = "1")]
    pub jjnnflehjbo: u32,
    #[prost(uint32, tag = "14")]
    pub draft_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5182)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Poppljdcnii {
    #[prost(uint32, repeated, tag = "10")]
    pub dpaapoobacf: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct FoundationInfo {
    #[prost(enumeration = "FoundationStatus", tag = "1")]
    pub status: i32,
    #[prost(uint32, repeated, tag = "2")]
    pub uid_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "3")]
    pub current_building_id: u32,
    #[prost(uint32, tag = "4")]
    pub locked_by_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23412)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gkgejphkcfo {
    #[prost(uint32, repeated, tag = "14")]
    pub mjaoninhiib: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "15")]
    pub efcdelgmmkg: ::prost::alloc::vec::Vec<Phaddbeddgk>,
    #[prost(uint32, tag = "5")]
    pub aeljdiplelm: u32,
    #[prost(uint32, tag = "3")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dadnlgakamg {
    #[prost(uint32, tag = "2")]
    pub level_id: u32,
    #[prost(bool, tag = "5")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "9")]
    pub pmldnfnnjam: u32,
    #[prost(bool, tag = "11")]
    pub is_finish: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4283)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Palgogghkmg {
    #[prost(map = "uint32, string", tag = "4")]
    pub pnglgnlnbnm: ::std::collections::HashMap<u32, ::prost::alloc::string::String>,
    #[prost(uint32, tag = "10")]
    pub jofknldpgch: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7961)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ajahihkocil {
    #[prost(uint64, tag = "4")]
    pub pjgkhfmlcin: u64,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(uint32, tag = "10")]
    pub parent_quest_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Moaoopfppie {
    #[prost(uint32, tag = "7")]
    pub nmaapldbbni: u32,
    #[prost(uint32, tag = "8")]
    pub level_id: u32,
    #[prost(bool, tag = "13")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22138)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jeibadebnma {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "5")]
    pub aoegkkajean: u32,
    #[prost(bool, tag = "6")]
    pub moaelibphoi: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9335)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ocjdbcpkdpp {
    #[prost(bool, tag = "1")]
    pub ajoghlnmdnf: bool,
    #[prost(uint32, tag = "2")]
    pub entity_id: u32,
    #[prost(bool, tag = "4")]
    pub eimfakhghho: bool,
    #[prost(bool, tag = "5")]
    pub abocejikepd: bool,
    #[prost(bool, tag = "6")]
    pub jcikclkojom: bool,
    #[prost(enumeration = "ForwardType", tag = "7")]
    pub forward_type: i32,
    #[prost(message, optional, tag = "8")]
    pub jcpeclekmfe: ::core::option::Option<Vector>,
    #[prost(bool, tag = "9")]
    pub jdmpkhlpcea: bool,
    #[prost(bool, tag = "10")]
    pub belhaooabab: bool,
    #[prost(bool, tag = "11")]
    pub aobpagojnkl: bool,
    #[prost(bool, tag = "12")]
    pub fgcgljeecni: bool,
    #[prost(bool, tag = "13")]
    pub mpcikblfoaa: bool,
    #[prost(bool, tag = "15")]
    pub ccjdefcoibc: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Phaddbeddgk {
    #[prost(bool, tag = "4")]
    pub gdfoebgclhc: bool,
    #[prost(uint64, tag = "15")]
    pub avatar_id: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ablnmoieclb {
    #[prost(uint32, repeated, tag = "1")]
    pub gkbbgkbkcli: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2944)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dhhlcpebhop {
    #[prost(uint32, tag = "1")]
    pub iacgokeaoob: u32,
    #[prost(uint32, tag = "5")]
    pub id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4618)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dghjmknpoaa {
    #[prost(uint32, tag = "6")]
    pub blfoidkfggf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ejiddmifdnl {
    #[prost(uint32, tag = "1")]
    pub dnbefljlamb: u32,
    #[prost(uint32, tag = "5")]
    pub coebnijnnne: u32,
    #[prost(uint32, repeated, tag = "10")]
    pub oabgplhcbfo: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "11")]
    pub mgdkaggeoio: ::prost::alloc::vec::Vec<Eicimokgook>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1909)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ladcnmjkkgp {
    #[prost(uint32, repeated, tag = "3")]
    pub fhlkmhfgmcb: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7808)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hfobepgphcg {
    #[prost(uint32, tag = "15")]
    pub memmhgbehdh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pgccfmdjkeb {
    #[prost(message, repeated, tag = "13")]
    pub override_map: ::prost::alloc::vec::Vec<AbilityScalarValueEntry>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21019)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jebgegblgdp {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "13")]
    pub egmokfdbiln: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cdbidcbdgal {
    #[prost(map = "uint32, uint32", tag = "13")]
    pub lioflemmkck: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21206)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Beidckldhaf {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "7")]
    pub hggehlmhkmp: u32,
    #[prost(uint32, tag = "10")]
    pub dnbefljlamb: u32,
    #[prost(uint32, tag = "11")]
    pub ghlbjahjehf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27322)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ghacjjiojpm {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20803)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ecaljmabhcd {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hijdfngdbng {
    #[prost(uint32, tag = "1")]
    pub level_id: u32,
    #[prost(bool, tag = "10")]
    pub is_finish: bool,
    #[prost(bool, tag = "14")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "15")]
    pub kmnnemilfnf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9712)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Keabdplpnng {
    #[prost(uint32, tag = "12")]
    pub mliofjeoklg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(521)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hclkepnlbfh {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2834)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Olkfbnoioif {
    #[prost(bool, tag = "2")]
    pub jchhjfldlga: bool,
    #[prost(enumeration = "Dhdebbipiif", tag = "12")]
    pub ckehablghnn: i32,
    #[prost(uint32, tag = "1")]
    pub level_id: u32,
    #[prost(uint32, tag = "5")]
    pub finahglfhag: u32,
    #[prost(
        oneof = "olkfbnoioif::Detail",
        tags = "795, 218, 1295, 1612, 301, 1707, 1177"
    )]
    pub detail: ::core::option::Option<olkfbnoioif::Detail>,
}
/// Nested message and enum types in `OLKFBNOIOIF`.
pub mod olkfbnoioif {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(message, tag = "795")]
        FairyTalesFlyppyHatInfo(super::Podklccmdid),
        #[prost(message, tag = "218")]
        BirdBallClientInfo(super::Nppkgklhlod),
        #[prost(message, tag = "1295")]
        GreatFestivalV2SheetRestoreInfo(super::Llpeegbjofa),
        #[prost(message, tag = "1612")]
        FloatToyInfo(super::Gdmjgbfbfhp),
        #[prost(message, tag = "301")]
        CeremonyDoodleInfo(super::Nlchenoncbi),
        #[prost(message, tag = "1707")]
        CookGameInfo(super::Gknmalejkhn),
        #[prost(message, tag = "1177")]
        CatcafeInfo(super::Oaaflebinln),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hbmmldaacoa {
    #[prost(uint32, tag = "3")]
    pub mkcgmmganlk: u32,
    #[prost(message, optional, tag = "8")]
    pub hhaoekldnol: ::core::option::Option<Obnkiapklnb>,
    #[prost(uint32, repeated, tag = "13")]
    pub fbnmbddbndh: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "15")]
    pub dombdimffii: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26332)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Holhjcekdkh {
    #[prost(message, optional, tag = "1")]
    pub cjihnocinnm: ::core::option::Option<Fggkifngdon>,
    #[prost(uint32, tag = "2")]
    pub blmgfjbafkb: u32,
    #[prost(message, optional, tag = "3")]
    pub eomnmodedfd: ::core::option::Option<Oadjbkdjnpl>,
    #[prost(uint32, tag = "4")]
    pub pefkmbhjcdl: u32,
    #[prost(uint32, tag = "5")]
    pub jlfgopmdpdk: u32,
    #[prost(uint32, tag = "6")]
    pub ollleikdnan: u32,
    #[prost(uint32, tag = "7")]
    pub aloobpbnddh: u32,
    #[prost(bool, tag = "8")]
    pub fddehdhbabm: bool,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(map = "uint32, uint32", tag = "10")]
    pub jgckbjjgiaf: ::std::collections::HashMap<u32, u32>,
    #[prost(bool, tag = "11")]
    pub kcjgplknpcl: bool,
    #[prost(map = "uint32, uint32", tag = "12")]
    pub lokpploeofm: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "13")]
    pub gmgicopopfk: u32,
    #[prost(message, repeated, tag = "14")]
    pub fhkngcbgdjl: ::prost::alloc::vec::Vec<Mjpkecmoiga>,
    #[prost(uint32, tag = "15")]
    pub mjmlcohblpl: u32,
    #[prost(message, optional, tag = "97")]
    pub cemlgaahaom: ::core::option::Option<Oadjbkdjnpl>,
    #[prost(enumeration = "Makkgbfakjh", tag = "249")]
    pub iekondlbgag: i32,
    #[prost(uint32, tag = "998")]
    pub mgcbkemoadn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(823)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Djiecmfgemn {
    #[prost(uint32, repeated, tag = "11")]
    pub bjgelmdhibk: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27218)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dgjohiopmon {
    #[prost(uint32, tag = "4")]
    pub level_id: u32,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3724)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pofkppeilfc {
    #[prost(uint32, tag = "6")]
    pub fbabmdibfkd: u32,
    #[prost(map = "uint32, message", tag = "8")]
    pub modjgajfajl: ::std::collections::HashMap<u32, Ihklgmifgmn>,
    #[prost(uint32, repeated, tag = "11")]
    pub dmbodncjokf: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23172)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kejjbjcihjb {
    #[prost(uint32, tag = "13")]
    pub pamjcgbnofe: u32,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
    #[prost(uint32, tag = "15")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Diaodefajlo {
    #[prost(uint32, tag = "5")]
    pub score: u32,
    #[prost(uint32, tag = "12")]
    pub anblhiacjil: u32,
    #[prost(uint32, tag = "15")]
    pub jenagocpdkl: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3521)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Heimgcjdmkd {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(message, optional, tag = "3")]
    pub haefdcknfoi: ::core::option::Option<Oeednchkhad>,
    #[prost(uint32, tag = "5")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2447)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Majokjjbfhb {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1866)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ncmeepabdgn {
    #[prost(uint32, tag = "14")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1471)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gngjkpgbcik {
    #[prost(uint32, tag = "8")]
    pub fbnlohmdnhd: u32,
    #[prost(bool, tag = "14")]
    pub iecapkphljk: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hiaojlhggdk {
    #[prost(uint32, tag = "2")]
    pub team_id: u32,
    #[prost(uint32, repeated, tag = "7")]
    pub ceofallniim: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Figglddicmk {
    #[prost(uint32, tag = "2")]
    pub gnlhpocohcb: u32,
    #[prost(uint32, repeated, tag = "3")]
    pub kplhlplhghg: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "12")]
    pub mndgbjmpjjn: u32,
    #[prost(message, repeated, tag = "14")]
    pub kabodnmegek: ::prost::alloc::vec::Vec<Ajkilgiehim>,
    #[prost(message, repeated, tag = "15")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Ijdggdgkelj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ajkilgiehim {
    #[prost(uint32, repeated, tag = "2")]
    pub pdbnhiopfbf: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "3")]
    pub avatar_id: u32,
    #[prost(enumeration = "Dmlkjlijnbd", tag = "4")]
    pub pnemigcbelh: i32,
    #[prost(uint32, tag = "5")]
    pub coohemdonkj: u32,
    #[prost(uint32, tag = "7")]
    pub mibhhjedepe: u32,
    #[prost(uint32, tag = "10")]
    pub costume_id: u32,
    #[prost(uint32, tag = "13")]
    pub kmkgjolhlih: u32,
    #[prost(uint32, tag = "14")]
    pub uid: u32,
    #[prost(bool, tag = "15")]
    pub hdnildcefmg: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aadmgjlccck {
    #[prost(uint32, tag = "3")]
    pub uid: u32,
    #[prost(uint32, tag = "6")]
    pub kmkgjolhlih: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ijdggdgkelj {
    #[prost(uint32, tag = "3")]
    pub ainimhimeij: u32,
    #[prost(uint32, tag = "5")]
    pub hcemknfjfgb: u32,
    #[prost(uint32, tag = "7")]
    pub level_id: u32,
    #[prost(uint32, repeated, tag = "9")]
    pub diecolhbjga: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "10")]
    pub fphpjjmgfhj: ::prost::alloc::vec::Vec<Aadmgjlccck>,
    #[prost(bool, tag = "11")]
    pub jlaiaaekggm: bool,
    #[prost(uint32, repeated, tag = "12")]
    pub melfgidcmef: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lgnoebmgbob {
    #[prost(message, repeated, tag = "4")]
    pub pefedchcadh: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(uint32, tag = "13")]
    pub jobhfghalgd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24368)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lmjhbojcjgb {
    #[prost(message, repeated, tag = "15")]
    pub gjcfljpmnad: ::prost::alloc::vec::Vec<EntityMoveInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Amnjnfkhhgg {
    #[prost(uint32, tag = "9")]
    pub config_id: u32,
    #[prost(oneof = "amnjnfkhhgg::Nbdofgcpfej", tags = "1, 6, 8, 12, 14, 255")]
    pub nbdofgcpfej: ::core::option::Option<amnjnfkhhgg::Nbdofgcpfej>,
}
/// Nested message and enum types in `AMNJNFKHHGG`.
pub mod amnjnfkhhgg {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Nbdofgcpfej {
        #[prost(message, tag = "1")]
        ChangeGadgetState(super::Pdklicciobo),
        #[prost(message, tag = "6")]
        ActiveMonsterWave(super::Cekjigpmdio),
        #[prost(message, tag = "8")]
        DeactiveGadget(super::Abkhljombbc),
        #[prost(message, tag = "12")]
        ActiveMonsterGroup(super::Kmfnkoeikcd),
        #[prost(message, tag = "14")]
        ActiveGadget(super::Dpmmbeoncnb),
        #[prost(message, tag = "255")]
        DeactiveMonsterWaveCurrentGroup(super::Haohmpkbfbj),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Enikmkchogi {
    #[prost(bool, tag = "2")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "7")]
    pub docjdogockm: u32,
    #[prost(uint32, tag = "10")]
    pub ckphcagonkg: u32,
    #[prost(uint32, tag = "14")]
    pub ldimhbkfhif: u32,
    #[prost(map = "uint32, int32", tag = "15")]
    pub pgianmgpded: ::std::collections::HashMap<u32, i32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5333)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct SceneInitFinishRsp {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "15")]
    pub enter_scene_token: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pheepllkchj {
    #[prost(uint32, tag = "4")]
    pub nilalkpfcco: u32,
    #[prost(uint32, tag = "7")]
    pub lbeinahahka: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jkejhajabgd {
    #[prost(int32, tag = "3")]
    pub jcgigangoop: i32,
    #[prost(uint32, tag = "5")]
    pub dcedejdmlho: u32,
    #[prost(uint32, tag = "7")]
    pub dmaekjmbbhm: u32,
    #[prost(uint32, tag = "13")]
    pub klcnihlpkjd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27595)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bcfjfpencbe {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint32, tag = "11")]
    pub point_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ipffkfajbkn {
    #[prost(message, repeated, tag = "10")]
    pub pmjboegcpmh: ::prost::alloc::vec::Vec<Enofbcmaajl>,
    #[prost(map = "uint32, message", tag = "12")]
    pub gkkamppdfib: ::std::collections::HashMap<u32, Kgbkifdbepc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7371)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Debkedagolo {
    #[prost(uint32, repeated, tag = "2")]
    pub avatar_id: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7964)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ocdeaphbcce {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28644)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gogmjbhbika {
    #[prost(message, repeated, tag = "9")]
    pub efcdelgmmkg: ::prost::alloc::vec::Vec<Nhflidhfael>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9825)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Omopkakdioo {
    #[prost(uint32, tag = "2")]
    pub city_id: u32,
    #[prost(uint32, tag = "6")]
    pub hpoffmfkbdi: u32,
    #[prost(uint32, tag = "8")]
    pub fagpphacnbj: u32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6031)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kpjnbbdbaej {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "10")]
    pub jppdbkknhpa: ::prost::alloc::vec::Vec<Hpmjajcbegh>,
    #[prost(uint32, tag = "15")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gbjhpicmgfi {
    #[prost(message, repeated, tag = "13")]
    pub ceadihbigkm: ::prost::alloc::vec::Vec<Hopplbffanj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20674)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ibakadfecea {
    #[prost(uint32, tag = "4")]
    pub mdmmnleemdf: u32,
    #[prost(uint32, tag = "6")]
    pub key: u32,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24953)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eapgpnjcojj {
    #[prost(message, repeated, tag = "12")]
    pub ipclfkldkfa: ::prost::alloc::vec::Vec<Iallekkfhcl>,
    #[prost(message, repeated, tag = "14")]
    pub lanjbjgnboh: ::prost::alloc::vec::Vec<Ifpnjpjlnof>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4605)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hkbhppigclp {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9447)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ggfhdejpngl {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(message, optional, tag = "13")]
    pub hlmbfiagfac: ::core::option::Option<Cjnehmhbamo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nhflidhfael {
    #[prost(bool, tag = "12")]
    pub gdfoebgclhc: bool,
    #[prost(uint64, tag = "13")]
    pub avatar_id: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4122)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fbkbcaokbhp {
    #[prost(uint32, tag = "9")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bffdldjlhoi {
    #[prost(uint32, tag = "1")]
    pub epldglecano: u32,
    #[prost(uint32, tag = "2")]
    pub njjkmefeeih: u32,
    #[prost(uint32, tag = "9")]
    pub mkpamnickdb: u32,
    #[prost(uint32, tag = "11")]
    pub pnaiifhacpb: u32,
    #[prost(map = "uint32, uint32", tag = "13")]
    pub codadnfpicg: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21361)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eaggieajgap {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jkdhcoekbcf {
    #[prost(int32, tag = "1")]
    pub cpgojlhooal: i32,
    #[prost(int32, tag = "6")]
    pub oolpcbgejmb: i32,
    #[prost(int32, tag = "10")]
    pub godlbanknla: i32,
    #[prost(int32, tag = "13")]
    pub aeklfggbnco: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26896)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kdklldpnkhn {
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AbilityAppliedModifier {
    #[prost(int32, tag = "1")]
    pub modifier_local_id: i32,
    #[prost(uint32, tag = "2")]
    pub parent_ability_entity_id: u32,
    #[prost(message, optional, tag = "3")]
    pub parent_ability_name: ::core::option::Option<AbilityString>,
    #[prost(message, optional, tag = "4")]
    pub parent_ability_override: ::core::option::Option<AbilityString>,
    #[prost(uint32, tag = "5")]
    pub instanced_ability_id: u32,
    #[prost(uint32, tag = "6")]
    pub instanced_modifier_id: u32,
    #[prost(float, tag = "7")]
    pub exist_duration: f32,
    #[prost(message, optional, tag = "8")]
    pub attached_instanced_modifier: ::core::option::Option<AbilityAttachedModifier>,
    #[prost(uint32, tag = "9")]
    pub apply_entity_id: u32,
    #[prost(bool, tag = "10")]
    pub is_attached_parent_ability: bool,
    #[prost(message, optional, tag = "11")]
    pub modifier_durability: ::core::option::Option<ModifierDurability>,
    #[prost(uint32, tag = "12")]
    pub sbuff_uid: u32,
    #[prost(bool, tag = "13")]
    pub is_serverbuff_modifier: bool,
    #[prost(bool, tag = "14")]
    pub jhifchhafbn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28258)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iacocjlaffe {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ienjaifdnep {
    #[prost(message, repeated, tag = "13")]
    pub ofmlncimagh: ::prost::alloc::vec::Vec<Ppbiopoleib>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5969)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pafkaclapfm {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pbiigbanbhc {
    #[prost(bool, tag = "1")]
    pub bhojpbggbnn: bool,
    #[prost(uint32, tag = "2")]
    pub mffpclgbcdg: u32,
    #[prost(bool, tag = "3")]
    pub is_attached_parent_ability: bool,
    #[prost(message, repeated, tag = "4")]
    pub mcmjngokoji: ::prost::alloc::vec::Vec<Jafnaffnfld>,
    #[prost(message, optional, tag = "6")]
    pub parent_ability_override: ::core::option::Option<AbilityString>,
    #[prost(uint64, tag = "7")]
    pub ngbfpjfappe: u64,
    #[prost(enumeration = "Deihielefen", tag = "8")]
    pub gmjagibjeac: i32,
    #[prost(bool, tag = "9")]
    pub oojdcikdbok: bool,
    #[prost(int32, tag = "10")]
    pub modifier_local_id: i32,
    #[prost(message, optional, tag = "11")]
    pub attached_instanced_modifier: ::core::option::Option<AbilityAttachedModifier>,
    #[prost(message, optional, tag = "13")]
    pub parent_ability_name: ::core::option::Option<AbilityString>,
    #[prost(uint32, tag = "14")]
    pub apply_entity_id: u32,
    #[prost(float, tag = "15")]
    pub ohcnlappabo: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bgninggdpaa {
    #[prost(uint32, tag = "3")]
    pub uid: u32,
    #[prost(uint32, tag = "4")]
    pub score: u32,
    #[prost(uint32, tag = "7")]
    pub ogdcenflhjn: u32,
    #[prost(uint32, tag = "9")]
    pub fjapapjhjjd: u32,
    #[prost(bool, tag = "12")]
    pub omeniamedce: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(662)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fjnpaechmne {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "15")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8205)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kgohmfljamo {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20262)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pndlbaifgio {
    #[prost(string, tag = "2")]
    pub nkanjijnimc: ::prost::alloc::string::String,
    #[prost(uint32, tag = "4")]
    pub bilekhiened: u32,
    #[prost(uint32, tag = "8")]
    pub dmjodfmiidg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4774)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Imnkljgkoko {
    #[prost(uint32, tag = "5")]
    pub liolfafenpj: u32,
    #[prost(uint32, tag = "13")]
    pub group_id: u32,
    #[prost(uint32, tag = "15")]
    pub kpainmemhab: u32,
    #[prost(uint32, tag = "4")]
    pub dlhajheokgi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nbdblggcjbb {
    #[prost(message, repeated, tag = "15")]
    pub pndpnmbdokf: ::prost::alloc::vec::Vec<Angojdkjbbn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kjjeegegcmi {
    #[prost(uint32, tag = "1")]
    pub jcmchgnnlmj: u32,
    #[prost(message, repeated, tag = "2")]
    pub item_list: ::prost::alloc::vec::Vec<Jickppdlohc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jmblhdbaood {
    #[prost(string, tag = "1")]
    pub nkanjijnimc: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub ampbndiacmi: ::prost::alloc::string::String,
    #[prost(uint32, tag = "3")]
    pub manaanibalb: u32,
    #[prost(uint32, tag = "4")]
    pub cgclljdmche: u32,
    #[prost(uint32, tag = "5")]
    pub ggelgepjohi: u32,
    #[prost(uint32, tag = "6")]
    pub icjncaedclm: u32,
    #[prost(bool, tag = "7")]
    pub jjaffhdcefg: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(299)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ikpbnhdfcpe {
    #[prost(uint32, repeated, tag = "10")]
    pub lcghokmdncg: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5277)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aeffghnmpoh {
    #[prost(uint32, tag = "3")]
    pub nkgekomllng: u32,
    #[prost(uint32, tag = "8")]
    pub monster_config_id: u32,
    #[prost(enumeration = "Oloddmhddgc", tag = "15")]
    pub imiogmdokcb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8954)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kmdodgcoajc {
    #[prost(uint32, tag = "2")]
    pub hjjfokhfnko: u32,
    #[prost(uint32, tag = "3")]
    pub igcjkhgdhgl: u32,
    #[prost(uint32, tag = "4")]
    pub dmkkmolpglk: u32,
    #[prost(enumeration = "Lfjlgojmkeh", tag = "5")]
    pub imiogmdokcb: i32,
    #[prost(uint32, tag = "6")]
    pub mepmdcahcii: u32,
    #[prost(bool, tag = "8")]
    pub omeniamedce: bool,
    #[prost(bool, tag = "9")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
    #[prost(uint32, tag = "12")]
    pub ffhpdcibkod: u32,
    #[prost(uint32, tag = "15")]
    pub score: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9989)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pdmggfecjef {
    #[prost(uint32, tag = "7")]
    pub dnbefljlamb: u32,
    #[prost(uint32, tag = "3")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4273)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mahpfgfkali {
    #[prost(message, repeated, tag = "8")]
    pub item_list: ::prost::alloc::vec::Vec<Item>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7364)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hepceheifmg {
    #[prost(message, repeated, tag = "5")]
    pub jpfllbnmggp: ::prost::alloc::vec::Vec<EvtBeingHitInfo>,
    #[prost(enumeration = "ForwardType", tag = "14")]
    pub forward_type: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kamdlkcmhie {
    #[prost(message, optional, tag = "1")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
    #[prost(string, tag = "4")]
    pub mhpfnlkcfom: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub ijlhlcllene: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub nick_name: ::prost::alloc::string::String,
    #[prost(string, tag = "12")]
    pub efajihmnobk: ::prost::alloc::string::String,
    #[prost(uint32, tag = "15")]
    pub ooipgfedjmn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20461)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hnjkdcfnehe {
    #[prost(message, optional, tag = "10")]
    pub fhggccmddlm: ::core::option::Option<Njpkdapljfb>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cedafhjbnpc {
    #[prost(message, repeated, tag = "8")]
    pub gjihlnaeggd: ::prost::alloc::vec::Vec<Fdockhoiobj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21716)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jijpoglknjj {
    #[prost(message, repeated, tag = "12")]
    pub nhnaaiaiiin: ::prost::alloc::vec::Vec<Kdpfblecnik>,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1451)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jphcbmehdjc {
    #[prost(uint32, tag = "1")]
    pub finahglfhag: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4026)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oepllggojkf {
    #[prost(message, optional, tag = "6")]
    pub loanomjkili: ::core::option::Option<Fjbkbgpjolj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6524)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hpmgbkflnkf {
    #[prost(uint32, tag = "3")]
    pub cnaifgicldh: u32,
    #[prost(uint32, tag = "1")]
    pub pijfdbikfkb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26825)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Opblmlnfgdh {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nplemepblbm {
    #[prost(uint32, tag = "6")]
    pub progress: u32,
    #[prost(uint32, tag = "10")]
    pub nogclhfhome: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23269)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lnimmmbfpga {
    #[prost(message, repeated, tag = "15")]
    pub efcdelgmmkg: ::prost::alloc::vec::Vec<Egbjcpoimlj>,
    #[prost(uint32, tag = "14")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7672)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ipoaohehebj {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(uint32, tag = "12")]
    pub point_id: u32,
    #[prost(uint32, tag = "14")]
    pub oajoobghagm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22166)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nkeklcggngk {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7379)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hgcfkjoebbp {
    #[prost(message, repeated, tag = "8")]
    pub agelihnanhp: ::prost::alloc::vec::Vec<Gjdeepckgpm>,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27534)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jolfojjngmi {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1328)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nglhkibpeop {
    #[prost(uint32, tag = "10")]
    pub count: u32,
    #[prost(uint32, tag = "13")]
    pub lmebmmbegkm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20323)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kiaoebicgei {
    #[prost(uint32, tag = "2")]
    pub target_uid: u32,
    #[prost(enumeration = "Gmidhcnckco", tag = "3")]
    pub imiogmdokcb: i32,
    #[prost(string, tag = "7")]
    pub khmggfmbooh: ::prost::alloc::string::String,
    #[prost(bool, tag = "14")]
    pub jfjndakfjek: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2836)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ahpaebbkfbd {
    #[prost(uint32, repeated, tag = "13")]
    pub akjamlbbefk: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8356)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pcfgcoifdmm {
    #[prost(message, repeated, tag = "15")]
    pub item_list: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(uint32, tag = "10")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7780)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Adlaldihmoa {
    #[prost(uint32, tag = "9")]
    pub player_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oebgkddfdff {
    #[prost(string, tag = "8")]
    pub ippoghhbjje: ::prost::alloc::string::String,
    #[prost(string, tag = "14")]
    pub ogmkimbldeb: ::prost::alloc::string::String,
    #[prost(string, tag = "15")]
    pub glmncikdeij: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21164)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cheejhpoemo {
    #[prost(uint32, repeated, tag = "14")]
    pub meimcmlddfo: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "7")]
    pub jjanplhfpnj: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "3")]
    pub level_id: u32,
    #[prost(uint32, tag = "11")]
    pub bodiejclgmb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7116)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gnmcgecfphd {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fiagicichlj {
    #[prost(uint32, tag = "4")]
    pub ldnkcljncbf: u32,
    #[prost(uint32, tag = "6")]
    pub score: u32,
    #[prost(uint32, tag = "12")]
    pub jlgckbfjkgi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26069)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Apmakfmclkf {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20706)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ninffpjopbf {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24371)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Agjbgklpmod {
    #[prost(bool, tag = "1")]
    pub lgobplpoodk: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PropValue {
    #[prost(uint32, tag = "1")]
    pub r#type: u32,
    #[prost(int64, tag = "4")]
    pub val: i64,
    #[prost(oneof = "prop_value::Value", tags = "2, 3")]
    pub value: ::core::option::Option<prop_value::Value>,
}
/// Nested message and enum types in `PropValue`.
pub mod prop_value {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Value {
        #[prost(int64, tag = "2")]
        Ival(i64),
        #[prost(float, tag = "3")]
        Fval(f32),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28488)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Begfhnkoeac {
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gkeglhbkjpl {
    #[prost(uint32, tag = "2")]
    pub oodhonbehch: u32,
    #[prost(message, repeated, tag = "7")]
    pub pndpnmbdokf: ::prost::alloc::vec::Vec<Amjcdjnjkoi>,
    #[prost(uint32, repeated, tag = "14")]
    pub nijoknfddio: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Adelheaccbc {
    #[prost(message, optional, tag = "3")]
    pub oamebdnhedb: ::core::option::Option<Bbikbhkdnpi>,
    #[prost(bool, tag = "8")]
    pub gianjmcbaec: bool,
    #[prost(message, repeated, tag = "9")]
    pub lpcdpiimlpo: ::prost::alloc::vec::Vec<Hebabgnpnlk>,
    #[prost(uint32, repeated, tag = "10")]
    pub hobaidkkplg: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "14")]
    pub jiecnlemkbd: ::prost::alloc::vec::Vec<Ehhkcfafjfd>,
    #[prost(message, repeated, tag = "15")]
    pub elbcglmhdil: ::prost::alloc::vec::Vec<Ddgpfnoplff>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(708)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oojggeimdlj {
    #[prost(uint32, tag = "1")]
    pub room_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24754)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mnaimijkkia {
    #[prost(uint64, repeated, tag = "10")]
    pub ipbojdijfke: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint64, repeated, tag = "2")]
    pub epfpamggphk: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint32, tag = "11")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7140)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ocilfecogcg {
    #[prost(uint32, tag = "14")]
    pub kkppjfkddep: u32,
    #[prost(oneof = "ocilfecogcg::Detail", tags = "3, 12")]
    pub detail: ::core::option::Option<ocilfecogcg::Detail>,
}
/// Nested message and enum types in `OCILFECOGCG`.
pub mod ocilfecogcg {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(message, tag = "3")]
        BossSettleInfo(super::Dkpcondmmdj),
        #[prost(message, tag = "12")]
        GallerySettleInfo(super::Enikmkchogi),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20816)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kekaoidjmkp {
    #[prost(uint32, tag = "2")]
    pub mhcheinjbjj: u32,
    #[prost(uint32, tag = "3")]
    pub score: u32,
    #[prost(uint32, tag = "4")]
    pub ijniiemahdl: u32,
    #[prost(uint32, tag = "6")]
    pub level_id: u32,
    #[prost(bool, tag = "10")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "11")]
    pub feoaofcpkik: u32,
    #[prost(bool, tag = "14")]
    pub omeniamedce: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25185)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gnjombcoiaa {
    #[prost(bool, tag = "4")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "7")]
    pub level_id: u32,
    #[prost(uint32, tag = "8")]
    pub kngjhmllcnp: u32,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3785)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aopichbndlo {
    #[prost(message, optional, tag = "13")]
    pub imhbphfpabc: ::core::option::Option<Ojiidhlaocc>,
    #[prost(message, repeated, tag = "14")]
    pub fibbgldjhjk: ::prost::alloc::vec::Vec<Mdkgkhmhlmh>,
    #[prost(message, optional, tag = "11")]
    pub npfflknkfnd: ::core::option::Option<CustomGadgetTreeInfo>,
    #[prost(uint32, tag = "8")]
    pub entity_id: u32,
    #[prost(uint32, tag = "6")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26886)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ohicnaiohea {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint32, tag = "2")]
    pub id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4775)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fdnncijggdp {
    #[prost(enumeration = "Ehgpiloejjj", tag = "2")]
    pub npgfolgpbao: i32,
    #[prost(uint32, tag = "5")]
    pub mibhhjedepe: u32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jdehfaeidon {
    #[prost(uint32, tag = "2")]
    pub iejpghnlidb: u32,
    #[prost(bool, tag = "3")]
    pub glkngddnocn: bool,
    #[prost(bool, tag = "4")]
    pub okfppkhojcg: bool,
    #[prost(uint32, tag = "14")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29110)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nhaailghajk {
    #[prost(uint64, repeated, tag = "11")]
    pub avatar_guid: ::prost::alloc::vec::Vec<u64>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24130)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jglomhafhfb {
    #[prost(uint32, repeated, tag = "11")]
    pub pjgnlmnogch: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "4")]
    pub oajoobghagm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2680)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jidghopcoka {
    #[prost(message, optional, tag = "6")]
    pub dbdnmhcjfoc: ::core::option::Option<Ofoffidhian>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20229)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Holmjdcamgp {
    #[prost(uint32, tag = "8")]
    pub scene_id: u32,
    #[prost(uint32, tag = "15")]
    pub emljojllmad: u32,
    #[prost(uint32, tag = "14")]
    pub group_id: u32,
    #[prost(uint32, tag = "3")]
    pub monster_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bbhgimgpbli {
    #[prost(uint32, tag = "6")]
    pub dpcpfjdookd: u32,
    #[prost(uint32, tag = "13")]
    pub chjlfmpcgdb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6367)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pfmeglkodhc {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pdchbpphcio {
    #[prost(message, repeated, tag = "15")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Pdmembbflgb>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24672)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hcegmedkaic {
    #[prost(uint32, tag = "12")]
    pub finahglfhag: u32,
    #[prost(uint32, tag = "15")]
    pub lpgihliaipl: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26444)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cjpddpoaipl {
    #[prost(string, tag = "5")]
    pub bfpmihhhmip: ::prost::alloc::string::String,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(758)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ienhkiadfdh {
    #[prost(uint32, tag = "8")]
    pub pemggkiikih: u32,
    #[prost(uint32, tag = "9")]
    pub ffhpdcibkod: u32,
    #[prost(uint32, repeated, tag = "13")]
    pub uid_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "14")]
    pub jeilnpeliab: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21326)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gdkbkjjgmeh {
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23983)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Coocmeafbmm {
    #[prost(uint32, tag = "5")]
    pub bodiejclgmb: u32,
    #[prost(uint32, tag = "7")]
    pub ghlbjahjehf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iglpcamblno {
    #[prost(bool, tag = "2")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "4")]
    pub score: u32,
    #[prost(uint32, tag = "5")]
    pub eaipgemknpo: u32,
    #[prost(bool, tag = "15")]
    pub is_finish: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4540)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jfiokhjpene {
    #[prost(enumeration = "Ogbpbklaepc", tag = "13")]
    pub imiogmdokcb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bifeddinlod {
    #[prost(uint32, tag = "1")]
    pub key: u32,
    #[prost(uint32, tag = "2")]
    pub mdmmnleemdf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25350)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gmbdijkjbne {
    #[prost(message, repeated, tag = "1")]
    pub bpimmceamhd: ::prost::alloc::vec::Vec<Cgchkpdkpeh>,
    #[prost(uint32, tag = "2")]
    pub jhlnibamgaa: u32,
    #[prost(uint32, tag = "3")]
    pub ojifaacgkgm: u32,
    #[prost(uint32, tag = "4")]
    pub aaklcmpdpeg: u32,
    #[prost(uint32, tag = "5")]
    pub ekahchcofjd: u32,
    #[prost(uint32, tag = "6")]
    pub jkoalmbcjfe: u32,
    #[prost(uint32, tag = "7")]
    pub gllebfhmbbe: u32,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(uint32, tag = "9")]
    pub mamimjheflo: u32,
    #[prost(uint32, tag = "10")]
    pub dbkkkmekici: u32,
    #[prost(uint32, tag = "11")]
    pub kaalkocaohk: u32,
    #[prost(uint32, tag = "12")]
    pub eoihallmgal: u32,
    #[prost(uint32, tag = "13")]
    pub laognpoplpj: u32,
    #[prost(uint32, tag = "14")]
    pub bjcbfknejag: u32,
    #[prost(uint32, tag = "15")]
    pub pnbfdejoopd: u32,
    #[prost(bool, tag = "107")]
    pub kkfhjllldef: bool,
    #[prost(bool, tag = "667")]
    pub hglgiidppeo: bool,
    #[prost(uint32, tag = "1071")]
    pub hadjcafoofe: u32,
    #[prost(uint32, tag = "1410")]
    pub eijpmmbmohl: u32,
    #[prost(bool, tag = "1538")]
    pub ilgpahiahig: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5847)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PlayerDataNotify {
    #[prost(bool, tag = "5")]
    pub is_first_login_today: bool,
    #[prost(map = "uint32, message", tag = "7")]
    pub prop_map: ::std::collections::HashMap<u32, PropValue>,
    #[prost(uint64, tag = "9")]
    pub server_time: u64,
    #[prost(string, tag = "14")]
    pub nick_name: ::prost::alloc::string::String,
    #[prost(uint32, tag = "15")]
    pub region_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Amekoapgaba {
    #[prost(bool, tag = "1")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "10")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "12")]
    pub level_id: u32,
    #[prost(bool, tag = "13")]
    pub pmjlllfophk: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23047)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Phjlelopcea {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28785)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bongpgadcnl {
    #[prost(message, repeated, tag = "10")]
    pub ekbhcimfodp: ::prost::alloc::vec::Vec<Ohapjpkefkj>,
    #[prost(uint32, repeated, tag = "8")]
    pub bfdllcnleej: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "6")]
    pub hdmadegneio: u32,
    #[prost(uint32, tag = "4")]
    pub oeocpoekcmj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ohapjpkefkj {
    #[prost(oneof = "ohapjpkefkj::Detail", tags = "6, 10")]
    pub detail: ::core::option::Option<ohapjpkefkj::Detail>,
}
/// Nested message and enum types in `OHAPJPKEFKJ`.
pub mod ohapjpkefkj {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(uint64, tag = "6")]
        FormalAvatarGuid(u64),
        #[prost(uint32, tag = "10")]
        MistTrialAvatarId(u32),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24998)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MarkMapReq {
    #[prost(message, optional, tag = "3")]
    pub old: ::core::option::Option<MapMarkPoint>,
    #[prost(message, optional, tag = "8")]
    pub mark: ::core::option::Option<MapMarkPoint>,
    #[prost(enumeration = "Operation", tag = "14")]
    pub op: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ikaakklbgmb {
    #[prost(uint32, tag = "11")]
    pub trial_avatar_id: u32,
    #[prost(uint64, tag = "13")]
    pub guid: u64,
    #[prost(uint32, tag = "14")]
    pub eegaelihlpi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8892)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ahpoelhggpm {
    #[prost(message, repeated, tag = "12")]
    pub efcdelgmmkg: ::prost::alloc::vec::Vec<Gaiobfeadpd>,
    #[prost(uint32, tag = "3")]
    pub oajoobghagm: u32,
    #[prost(enumeration = "Dcdcnnpiffk", tag = "2")]
    pub fbfdaklpefb: i32,
    #[prost(uint64, tag = "10")]
    pub mcppeknbhfk: u64,
    #[prost(uint32, tag = "14")]
    pub room_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8772)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PlayerLoginReq {
    #[prost(string, tag = "15")]
    pub platform: ::prost::alloc::string::String,
    #[prost(string, tag = "1654")]
    pub mhpfnlkcfom: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "1678")]
    pub kcmilecjioi: ::core::option::Option<Migelblongc>,
    #[prost(string, tag = "10")]
    pub mgkmjmiclgp: ::prost::alloc::string::String,
    #[prost(string, tag = "1297")]
    pub kfaojibglgf: ::prost::alloc::string::String,
    #[prost(string, tag = "517")]
    pub dgpljojoboj: ::prost::alloc::string::String,
    #[prost(string, tag = "1430")]
    pub lnpffnmllic: ::prost::alloc::string::String,
    #[prost(string, tag = "255")]
    pub hcbiffmagkg: ::prost::alloc::string::String,
    #[prost(string, tag = "13")]
    pub jgndadpbfch: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub okabfcfipnh: ::prost::alloc::string::String,
    #[prost(string, tag = "1")]
    pub account_uid: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "287")]
    pub inlbffmlebe: ::core::option::Option<Ahecbkcpdag>,
    #[prost(string, tag = "9")]
    pub gplgoeehmfl: ::prost::alloc::string::String,
    #[prost(string, tag = "1932")]
    pub efajihmnobk: ::prost::alloc::string::String,
    #[prost(string, tag = "930")]
    pub imegegimalj: ::prost::alloc::string::String,
    #[prost(bytes = "vec", tag = "1780")]
    pub dfcdoocdlbl: ::prost::alloc::vec::Vec<u8>,
    #[prost(string, tag = "7")]
    pub namclhnnacj: ::prost::alloc::string::String,
    #[prost(string, tag = "1608")]
    pub kipgkkmdakn: ::prost::alloc::string::String,
    #[prost(string, tag = "132")]
    pub locfgjpgdgo: ::prost::alloc::string::String,
    #[prost(string, tag = "645")]
    pub kopbidknahn: ::prost::alloc::string::String,
    #[prost(bytes = "vec", tag = "303")]
    pub fegjghppifb: ::prost::alloc::vec::Vec<u8>,
    #[prost(string, tag = "3")]
    pub mfdajlkhgje: ::prost::alloc::string::String,
    #[prost(string, tag = "1494")]
    pub ehkmncgleme: ::prost::alloc::string::String,
    #[prost(string, tag = "942")]
    pub ijlhlcllene: ::prost::alloc::string::String,
    #[prost(bytes = "vec", tag = "1795")]
    pub bdednffohpd: ::prost::alloc::vec::Vec<u8>,
    #[prost(string, tag = "1993")]
    pub ohjnpjckgeg: ::prost::alloc::string::String,
    #[prost(string, tag = "1849")]
    pub inpdhdpnnpk: ::prost::alloc::string::String,
    #[prost(string, tag = "1827")]
    pub cedhffmblbi: ::prost::alloc::string::String,
    #[prost(string, tag = "660")]
    pub lbkdgoefebc: ::prost::alloc::string::String,
    #[prost(uint32, tag = "860")]
    pub ghejilppkal: u32,
    #[prost(uint32, tag = "1028")]
    pub jkebncdohgp: u32,
    #[prost(uint64, tag = "11")]
    pub login_rand: u64,
    #[prost(uint32, tag = "1868")]
    pub lpmhbeocjgd: u32,
    #[prost(uint32, tag = "1460")]
    pub ijcdakglmbe: u32,
    #[prost(uint32, tag = "973")]
    pub jnlgdefhndg: u32,
    #[prost(uint32, tag = "58")]
    pub client_data_version: u32,
    #[prost(uint32, tag = "12")]
    pub target_uid: u32,
    #[prost(uint32, tag = "2009")]
    pub ilijhcpifok: u32,
    #[prost(uint32, tag = "1280")]
    pub ebmobbbaibc: u32,
    #[prost(uint32, tag = "4")]
    pub ajcgkkpccgd: u32,
    #[prost(uint32, tag = "1850")]
    pub dpnadjbahem: u32,
    #[prost(uint32, tag = "872")]
    pub lladmbnfoam: u32,
    #[prost(uint32, tag = "1380")]
    pub laogockbaak: u32,
    #[prost(uint32, tag = "14")]
    pub ampeopeomad: u32,
    #[prost(bool, tag = "1857")]
    pub ngiomiknncl: bool,
    #[prost(bool, tag = "2")]
    pub gmoplpfjnja: bool,
    #[prost(bool, tag = "5")]
    pub ilahfkpdagk: bool,
    #[prost(uint32, tag = "1315")]
    pub cfncnfabbbd: u32,
    #[prost(uint32, tag = "1600")]
    pub ldeplpbklji: u32,
    #[prost(uint32, tag = "6")]
    pub gkjoeienpdi: u32,
    #[prost(uint32, tag = "481")]
    pub ngomnpfnplm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2587)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bdodabkgldc {
    #[prost(string, repeated, tag = "5")]
    pub daijgkpmkhj: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(message, optional, tag = "6")]
    pub cienokdhfod: ::core::option::Option<Dkifdgnkpld>,
    #[prost(uint32, repeated, tag = "9")]
    pub scene_tag_id_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, optional, tag = "13")]
    pub gdjkcknogbd: ::core::option::Option<Apmhhcohpld>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9884)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fniaflldkdb {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jnagmcbepjh {
    #[prost(uint32, tag = "5")]
    pub eaipgemknpo: u32,
    #[prost(message, repeated, tag = "7")]
    pub ceadnknhhoh: ::prost::alloc::vec::Vec<Gjoiicpdean>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ildklpolppb {
    #[prost(bool, tag = "1")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "2")]
    pub level_id: u32,
    #[prost(uint32, tag = "14")]
    pub score: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5193)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ggdafcpdlap {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(bool, tag = "13")]
    pub pgglabenkee: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21813)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gmmhjmijmlb {
    #[prost(uint32, repeated, tag = "2")]
    pub uid_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "3")]
    pub play_type: u32,
    #[prost(uint32, tag = "5")]
    pub op: u32,
    #[prost(uint32, repeated, tag = "9")]
    pub param_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(string, tag = "10")]
    pub jjodajockhh: ::prost::alloc::string::String,
    #[prost(uint32, tag = "11")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24823)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bdljhpcmdfo {
    #[prost(uint32, repeated, tag = "1")]
    pub lgndphgejon: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(uint32, tag = "8")]
    pub dnbefljlamb: u32,
    #[prost(uint32, tag = "15")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23307)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fjikiofoegc {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26420)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Odnkopjaomd {
    #[prost(message, repeated, tag = "9")]
    pub naeedlocmlj: ::prost::alloc::vec::Vec<Gphnoomojpd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dcnjgokkppc {
    #[prost(uint32, tag = "1")]
    pub dfjiikednig: u32,
    #[prost(uint32, tag = "6")]
    pub point_id: u32,
    #[prost(bool, tag = "9")]
    pub is_started: bool,
    #[prost(enumeration = "MovingPlatformType", tag = "11")]
    pub ajcgkkpccgd: i32,
    #[prost(uint32, tag = "12")]
    pub route_id: u32,
    #[prost(uint32, tag = "15")]
    pub jeiedfbegip: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25837)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jejfmbnpdci {
    #[prost(uint32, tag = "7")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Phcljhjjano {
    #[prost(map = "uint32, enumeration(Mnlilcbgkng)", tag = "1")]
    pub fonabjecdad: ::std::collections::HashMap<u32, i32>,
    #[prost(enumeration = "Cmgooomlaia", tag = "7")]
    pub imiogmdokcb: i32,
    #[prost(uint32, tag = "9")]
    pub ooipgfedjmn: u32,
    #[prost(int32, tag = "12")]
    pub jdcphgfiodg: i32,
    #[prost(map = "uint32, enumeration(Mnlilcbgkng)", tag = "15")]
    pub ponibkmniio: ::std::collections::HashMap<u32, i32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2822)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mnldlljpokg {
    #[prost(map = "uint32, message", tag = "4")]
    pub avatar_team_map: ::std::collections::HashMap<u32, AvatarTeam>,
    #[prost(uint32, repeated, tag = "9")]
    pub backup_avatar_team_order_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint64, repeated, tag = "11")]
    pub temp_avatar_guid_list: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint32, tag = "13")]
    pub cur_avatar_team_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jmhmljleaik {
    #[prost(bool, tag = "7")]
    pub glkngddnocn: bool,
    #[prost(uint32, repeated, tag = "13")]
    pub jjnkmbfnfaa: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "15")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20208)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aigejalkkpf {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fmgmjjhpnmk {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lhioajddipl {
    #[prost(enumeration = "Dbemgmellho", tag = "4")]
    pub state: i32,
    #[prost(uint32, tag = "5")]
    pub alkgnkpnkij: u32,
    #[prost(uint32, tag = "12")]
    pub id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5774)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pdmpnobckpk {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(enumeration = "Jnkfgjmmhma", repeated, tag = "6")]
    pub tag_list: ::prost::alloc::vec::Vec<i32>,
    #[prost(enumeration = "Ghjfblobgpa", tag = "13")]
    pub op: i32,
    #[prost(uint32, tag = "15")]
    pub kngbdmdcnhk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gpbhbcbehki {
    #[prost(message, optional, tag = "2")]
    pub dbbbakdkdnc: ::core::option::Option<Ljdoifmjaba>,
    #[prost(message, optional, tag = "4")]
    pub elfdjmafemp: ::core::option::Option<Hpbcmbfekgo>,
    #[prost(message, optional, tag = "6")]
    pub emdkfphkahc: ::core::option::Option<Ekghdlkkkpo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4467)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ofbfhfkgfjo {
    #[prost(uint32, tag = "4")]
    pub gjcdhpcaeph: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mdkcmcimndg {
    #[prost(uint32, tag = "2")]
    pub kkajofhlhjo: u32,
    #[prost(message, optional, tag = "6")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
    #[prost(string, tag = "8")]
    pub nick_name: ::prost::alloc::string::String,
    #[prost(uint32, tag = "11")]
    pub odcpaeconnd: u32,
    #[prost(string, tag = "12")]
    pub efajihmnobk: ::prost::alloc::string::String,
    #[prost(uint32, tag = "13")]
    pub uid: u32,
    #[prost(int32, tag = "15")]
    pub param: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oacpabjklfg {
    #[prost(uint32, tag = "7")]
    pub eaipgemknpo: u32,
    #[prost(bool, tag = "8")]
    pub meailaofhpb: bool,
    #[prost(message, repeated, tag = "12")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Cjgpoamedng>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4336)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Macbikdpodf {
    #[prost(message, repeated, tag = "5")]
    pub fpkeigkadab: ::prost::alloc::vec::Vec<Lmlbfoeldff>,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(uint32, tag = "7")]
    pub kdmjfhdppdp: u32,
    #[prost(uint32, tag = "9")]
    pub finahglfhag: u32,
    #[prost(uint32, tag = "13")]
    pub cdchfgfjnoi: u32,
    #[prost(uint32, tag = "14")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5319)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ajgjlikcjpf {
    #[prost(message, repeated, tag = "1")]
    pub oniniihmhcp: ::prost::alloc::vec::Vec<Nedlfhjjonk>,
    #[prost(uint32, tag = "2")]
    pub item_id: u32,
    #[prost(string, tag = "7")]
    pub ckiecfillbc: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26065)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ahchdflnofn {
    #[prost(uint32, repeated, tag = "6")]
    pub gamebfgekhl: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "11")]
    pub pbfkcfdmjdb: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nohoklhhnkd {
    #[prost(message, repeated, tag = "5")]
    pub dopjdkedcbn: ::prost::alloc::vec::Vec<Knpkgphandb>,
    #[prost(int32, tag = "15")]
    pub level: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2421)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fidoepeddjc {
    #[prost(uint32, repeated, tag = "4")]
    pub amlnldnjjid: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(uint32, tag = "10")]
    pub bfdhepejdpo: u32,
    #[prost(uint32, tag = "13")]
    pub index: u32,
    #[prost(uint32, tag = "14")]
    pub area_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8787)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ohoedaljmgp {
    #[prost(bool, tag = "4")]
    pub fpfpigiiaod: bool,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21260)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cdcijncneee {
    #[prost(message, repeated, tag = "4")]
    pub cchalmbofie: ::prost::alloc::vec::Vec<Clekknmlmcd>,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bcdhnjpildb {
    #[prost(bool, tag = "4")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "8")]
    pub ajjeblpnahp: u32,
    #[prost(bool, tag = "9")]
    pub jkjibnjgail: bool,
    #[prost(uint32, tag = "12")]
    pub aemocbabopf: u32,
    #[prost(uint32, tag = "14")]
    pub gfdlfnmfala: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kgphjfjggdj {
    #[prost(message, optional, tag = "2")]
    pub emfknkecaef: ::core::option::Option<BreakoutSnapShot>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ikhjefkkpjp {
    #[prost(message, optional, tag = "7")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "15")]
    pub rot: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8955)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ioigffpjpil {
    #[prost(uint32, tag = "1")]
    pub pjabefajbgb: u32,
    #[prost(bool, tag = "12")]
    pub hniefkiainn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fnmjnfhdlfa {
    #[prost(uint32, repeated, tag = "7")]
    pub lgcbfnjngpd: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "8")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Iodejfjnicp>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Blfgkjcpjho {
    #[prost(string, tag = "6")]
    pub title: ::prost::alloc::string::String,
    #[prost(message, repeated, tag = "15")]
    pub jncepkpdicg: ::prost::alloc::vec::Vec<Pknoabhffko>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mmcjndkihhg {
    #[prost(bool, tag = "10")]
    pub lndcjmfdkbi: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mjogigomgjo {
    #[prost(message, repeated, tag = "5")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Pngjbppmghc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2494)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cidnmfcjgaj {
    #[prost(uint32, tag = "3")]
    pub godogijjjia: u32,
    #[prost(map = "uint32, message", tag = "13")]
    pub nmoocjnbeoh: ::std::collections::HashMap<u32, Oieplejogjc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hnaicnealfh {
    #[prost(map = "uint32, uint32", tag = "9")]
    pub dapnigonhgn: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bmkeddjhkne {
    #[prost(uint32, tag = "13")]
    pub uid: u32,
    #[prost(message, repeated, tag = "14")]
    pub jhbcbieobep: ::prost::alloc::vec::Vec<Jickppdlohc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29286)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Efglhminkof {
    #[prost(uint32, tag = "5")]
    pub ffhpdcibkod: u32,
    #[prost(enumeration = "Lfjlgojmkeh", tag = "8")]
    pub hcemknfjfgb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kdpfblecnik {
    #[prost(uint32, tag = "8")]
    pub uid: u32,
    #[prost(message, repeated, tag = "10")]
    pub lldhcgbalea: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(message, repeated, tag = "15")]
    pub dgappijfoep: ::prost::alloc::vec::Vec<Jickppdlohc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(348)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gojdckfledg {
    #[prost(message, optional, tag = "6")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "10")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "3")]
    pub jdlenedglfl: u32,
    #[prost(uint32, tag = "7")]
    pub daniohgihml: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gokkddgjomb {
    #[prost(uint32, tag = "5")]
    pub monster_id: u32,
    #[prost(uint32, tag = "8")]
    pub level: u32,
    #[prost(uint32, repeated, tag = "10")]
    pub affix_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pcbpkglmoap {
    #[prost(message, repeated, tag = "14")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Hijdfngdbng>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28036)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ibohgdlbdfc {
    #[prost(uint32, tag = "6")]
    pub opcgoapbjha: u32,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29761)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hlcllfmigin {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "7")]
    pub jggobknpmfj: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "10")]
    pub lchbeahgheo: u32,
    #[prost(uint32, tag = "12")]
    pub point_id: u32,
    #[prost(uint32, tag = "14")]
    pub hggehlmhkmp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29955)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Camakdnepfh {
    #[prost(uint32, tag = "10")]
    pub area_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27097)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pogaocoohei {
    #[prost(uint32, repeated, tag = "1")]
    pub hdfmeefdpjj: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25759)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pglkodfjoeb {
    #[prost(uint32, repeated, tag = "11")]
    pub mjaoninhiib: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cekjigpmdio {
    #[prost(uint32, tag = "14")]
    pub fpbjlpalnpe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bgegonkipil {
    #[prost(uint32, tag = "2")]
    pub level_id: u32,
    #[prost(uint32, tag = "8")]
    pub camp_id: u32,
    #[prost(bool, tag = "11")]
    pub glkngddnocn: bool,
    #[prost(bool, tag = "12")]
    pub is_finish: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ddiakffcpdh {
    #[prost(uint32, tag = "2")]
    pub meiogocohle: u32,
    #[prost(uint32, tag = "5")]
    pub elfllalhgeg: u32,
    #[prost(uint32, tag = "11")]
    pub cifobokoekm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20749)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eokgoiacagb {
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27704)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jmhogadnpce {
    #[prost(uint32, tag = "1")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "7")]
    pub level_id: u32,
    #[prost(uint32, tag = "8")]
    pub aeljdiplelm: u32,
    #[prost(message, repeated, tag = "11")]
    pub oenahheeflg: ::prost::alloc::vec::Vec<Pahoicknmep>,
    #[prost(uint32, tag = "13")]
    pub jbfdogpakkc: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4918)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gihhepfnlpg {
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3733)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iajeligdmhm {
    #[prost(uint32, tag = "5")]
    pub live_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27004)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cagbdakchhi {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5366)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pdkdkfgmkgi {
    #[prost(message, repeated, tag = "10")]
    pub lhiolfiiinp: ::prost::alloc::vec::Vec<Liiekancgmn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gkmckhddefi {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9858)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jddifgbdmek {
    #[prost(message, repeated, tag = "5")]
    pub ggdlbohkmll: ::prost::alloc::vec::Vec<Igkafpdnpba>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3934)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ajdoggpggen {
    #[prost(uint32, tag = "1")]
    pub jnfdnflbejo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1519)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cdbmohffipm {
    #[prost(uint32, repeated, tag = "1")]
    pub gohagohhglk: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "2")]
    pub entity_id: u32,
    #[prost(uint32, tag = "4")]
    pub core_proud_skill_level: u32,
    #[prost(map = "uint32, uint32", tag = "5")]
    pub skill_level_map: ::std::collections::HashMap<u32, u32>,
    #[prost(uint64, tag = "6")]
    pub avatar_guid: u64,
    #[prost(uint32, tag = "8")]
    pub skill_depot_id: u32,
    #[prost(uint32, repeated, tag = "11")]
    pub talent_id_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(map = "uint32, uint32", tag = "13")]
    pub proud_skill_extra_level_map: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kcbmfcpadfo {
    #[prost(uint32, repeated, tag = "4")]
    pub ibgbhimfgol: ::prost::alloc::vec::Vec<u32>,
    #[prost(map = "uint32, uint32", tag = "6")]
    pub gbeeedlgpob: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5134)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kfaklcmikgh {
    #[prost(uint32, repeated, tag = "4")]
    pub labbnckddcf: ::prost::alloc::vec::Vec<u32>,
    #[prost(string, tag = "12")]
    pub version: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25933)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pbbkbjffgod {
    #[prost(uint32, tag = "1")]
    pub city_id: u32,
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "5")]
    pub bdbgopiikfo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20452)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fjldlcephfd {
    #[prost(uint32, tag = "4")]
    pub dnbefljlamb: u32,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(uint32, tag = "12")]
    pub eejdlgkmpdj: u32,
    #[prost(message, optional, tag = "15")]
    pub pigklkciapc: ::core::option::Option<Jmaelbngomj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ipkliahkmof {
    #[prost(float, tag = "5")]
    pub damage: f32,
    #[prost(message, optional, tag = "13")]
    pub ojmnkhejedf: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27922)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bhblmhbljcb {
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Olfnmjhabbo {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Plnefheeekb {
    #[prost(uint32, tag = "7")]
    pub eaipgemknpo: u32,
    #[prost(bool, tag = "15")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Haiaenbcdme {
    #[prost(string, tag = "1")]
    pub efajihmnobk: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub omknbnmebik: ::prost::alloc::string::String,
    #[prost(uint32, tag = "6")]
    pub dojlekienil: u32,
    #[prost(message, optional, tag = "11")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
    #[prost(uint32, tag = "13")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28292)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Enedlljploe {
    #[prost(message, repeated, tag = "5")]
    pub kjcoibdijdm: ::prost::alloc::vec::Vec<Mijlnffdioc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22057)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kmmfpbkapjd {
    #[prost(message, repeated, tag = "5")]
    pub bfjmpdlmbid: ::prost::alloc::vec::Vec<Gjgimkmldjm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gjgimkmldjm {
    #[prost(uint32, tag = "5")]
    pub cfnkiaeelhn: u32,
    #[prost(uint32, tag = "11")]
    pub obbkdonjjmn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ejibhkpofag {
    #[prost(message, repeated, tag = "3")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Gkjfmmkllno>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kmakdildplk {
    #[prost(message, repeated, tag = "1")]
    pub ejofemflhgf: ::prost::alloc::vec::Vec<Bjdnjdhfgok>,
    #[prost(message, repeated, tag = "9")]
    pub dhkobkpndmp: ::prost::alloc::vec::Vec<Bjdnjdhfgok>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kjcafaphgpa {
    #[prost(uint32, tag = "1")]
    pub kegocippfin: u32,
    #[prost(uint32, tag = "2")]
    pub fppfkjelhdo: u32,
    #[prost(uint32, tag = "3")]
    pub joiefhbhfjk: u32,
    #[prost(uint32, tag = "5")]
    pub mgikekafhpk: u32,
    #[prost(uint32, tag = "6")]
    pub owner_uid: u32,
    #[prost(uint32, tag = "7")]
    pub pcepaceobhm: u32,
    #[prost(uint32, tag = "8")]
    pub mkchdhagkkk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Icpgnilejnn {
    #[prost(message, repeated, tag = "12")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Affadalamjj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29861)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mfbdgnkfdfk {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(133)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jdlhclfnkgd {
    #[prost(uint32, tag = "3")]
    pub mmbgkomhddi: u32,
    #[prost(bool, tag = "4")]
    pub jfjndakfjek: bool,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(uint32, tag = "13")]
    pub param: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Keincdamkem {
    #[prost(uint32, tag = "2")]
    pub lbgllpjcdog: u32,
    #[prost(uint32, tag = "3")]
    pub dmlnkpnoono: u32,
    #[prost(uint32, tag = "4")]
    pub state: u32,
    #[prost(uint32, tag = "5")]
    pub aoikhjcanfc: u32,
    #[prost(uint32, tag = "6")]
    pub hkegebjnjjd: u32,
    #[prost(uint32, tag = "7")]
    pub progress: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(147)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ahemmkkdgia {
    #[prost(uint32, repeated, tag = "5")]
    pub qualify_uid_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "9")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cdghiaofoef {
    #[prost(enumeration = "Kbaiomioccp", tag = "3")]
    pub lapfikcfdfl: i32,
    #[prost(uint32, tag = "4")]
    pub pos: u32,
    #[prost(uint32, repeated, tag = "8")]
    pub cdgikfolbgh: ::prost::alloc::vec::Vec<u32>,
    #[prost(enumeration = "Cmgooomlaia", tag = "11")]
    pub imiogmdokcb: i32,
    #[prost(uint32, tag = "12")]
    pub ooipgfedjmn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Okfhjlfojep {
    #[prost(uint32, tag = "1")]
    pub lhmdbbfaifm: u32,
    #[prost(uint32, tag = "2")]
    pub npoallhcpjd: u32,
    #[prost(message, repeated, tag = "3")]
    pub bahejmippji: ::prost::alloc::vec::Vec<Bcbohnagdhm>,
    #[prost(uint32, tag = "4")]
    pub fapojdbbaef: u32,
    #[prost(uint32, repeated, tag = "5")]
    pub tag_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "6")]
    pub babhielkklc: bool,
    #[prost(bool, tag = "7")]
    pub blbkmofkbki: bool,
    #[prost(uint32, tag = "8")]
    pub level: u32,
    #[prost(uint32, repeated, tag = "9")]
    pub gfllbcgnokj: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "10")]
    pub ginemciffnb: u32,
    #[prost(uint32, repeated, tag = "11")]
    pub iicdmajajln: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "12")]
    pub mbbnhobfoed: u32,
    #[prost(bool, tag = "14")]
    pub lmhcggololm: bool,
    #[prost(uint32, tag = "15")]
    pub guid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29600)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Olllddaaipg {
    #[prost(uint32, tag = "2")]
    pub uid: u32,
    #[prost(bool, tag = "8")]
    pub nonhlhoihnl: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26523)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bmoehlnnkgc {
    #[prost(uint32, tag = "7")]
    pub level_id: u32,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lojhflgpfcl {
    #[prost(uint32, tag = "2")]
    pub uid: u32,
    #[prost(fixed64, tag = "3")]
    pub hecdfnofppd: u64,
    #[prost(fixed64, tag = "6")]
    pub mlgfpgidgno: u64,
    #[prost(string, tag = "7")]
    pub bmfkoonmmee: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub omknbnmebik: ::prost::alloc::string::String,
    #[prost(map = "uint32, uint32", tag = "9")]
    pub ijlfkccoonm: ::std::collections::HashMap<u32, u32>,
    #[prost(message, optional, tag = "10")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
    #[prost(bool, tag = "15")]
    pub pfbjfcmonkp: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25006)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Afebaijgpld {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(bool, tag = "7")]
    pub bejeldkadfi: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4840)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pllplklhkoc {
    #[prost(uint32, tag = "13")]
    pub dnbefljlamb: u32,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lojlabaafoa {
    #[prost(message, repeated, tag = "1")]
    pub cnajaflibed: ::prost::alloc::vec::Vec<Jcmlpbaemdc>,
    #[prost(uint32, tag = "13")]
    pub eaipgemknpo: u32,
    #[prost(bool, tag = "14")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21950)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dpbjbkhkdfe {
    #[prost(uint32, tag = "9")]
    pub param: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hlaibkpeplk {
    #[prost(bool, tag = "1")]
    pub bnaccmflpko: bool,
    #[prost(uint32, tag = "3")]
    pub nmaapldbbni: u32,
    #[prost(uint32, tag = "9")]
    pub max_combo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(462)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ngdegppljcg {
    #[prost(uint64, tag = "1")]
    pub hjpjaekakdf: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7320)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Goflnbpkoll {
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29778)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ajhedehnphf {
    #[prost(uint32, tag = "11")]
    pub oajoobghagm: u32,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22505)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dlgmpcdiobk {
    #[prost(uint32, tag = "14")]
    pub parent_quest_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct EntityClientExtraInfo {
    #[prost(message, optional, tag = "1")]
    pub skill_anchor_position: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hdaafccggfe {
    #[prost(uint32, tag = "2")]
    pub key: u32,
    #[prost(int32, repeated, tag = "9")]
    pub jeilnpeliab: ::prost::alloc::vec::Vec<i32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27750)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jeolianfopb {
    #[prost(message, optional, tag = "2")]
    pub nffhjlhemmb: ::core::option::Option<Ppdgbnhkljj>,
    #[prost(uint32, tag = "4")]
    pub finahglfhag: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29852)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mcjoklpogli {
    #[prost(uint32, tag = "10")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26076)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gimbconeepo {
    #[prost(uint32, tag = "1")]
    pub mp_play_id: u32,
    #[prost(bool, tag = "3")]
    pub mihonjccajc: bool,
    #[prost(uint32, tag = "6")]
    pub fcfopolhlof: u32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26683)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cmhopagllff {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1290)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bmengdndceo {
    #[prost(uint32, tag = "5")]
    pub level_id: u32,
    #[prost(uint32, tag = "6")]
    pub hggehlmhkmp: u32,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "14")]
    pub pmjgjnilmbp: ::prost::alloc::vec::Vec<Cgoihcdffej>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fcgobfgpopj {
    #[prost(uint32, tag = "7")]
    pub level_id: u32,
    #[prost(uint32, tag = "9")]
    pub kngjhmllcnp: u32,
    #[prost(uint32, tag = "10")]
    pub oaicfbdhdhj: u32,
    #[prost(bool, tag = "14")]
    pub omeniamedce: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Epjopbfflfl {
    #[prost(message, repeated, tag = "1")]
    pub omfehmjibef: ::prost::alloc::vec::Vec<Kamdlkcmhie>,
    #[prost(uint32, tag = "2")]
    pub hkegebjnjjd: u32,
    #[prost(uint32, tag = "3")]
    pub fbnlohmdnhd: u32,
    #[prost(uint32, tag = "4")]
    pub konankaciem: u32,
    #[prost(uint32, tag = "5")]
    pub bfplmlgjbjp: u32,
    #[prost(uint32, tag = "6")]
    pub ooipgfedjmn: u32,
    #[prost(enumeration = "Nlobhempbem", tag = "7")]
    pub igcfekljnmj: i32,
    #[prost(message, repeated, tag = "8")]
    pub oebneeaghin: ::prost::alloc::vec::Vec<Pganmgpelld>,
    #[prost(message, repeated, tag = "9")]
    pub aaehpgkinop: ::prost::alloc::vec::Vec<Eblcblofahh>,
    #[prost(uint32, tag = "10")]
    pub cgjmpocgljc: u32,
    #[prost(message, optional, tag = "12")]
    pub phcidgfobba: ::core::option::Option<Hekghbfomii>,
    #[prost(message, repeated, tag = "13")]
    pub jahppelnedf: ::prost::alloc::vec::Vec<Mkbmdcgmieo>,
    #[prost(uint32, repeated, tag = "14")]
    pub oaopaoomipb: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, optional, tag = "15")]
    pub pchjnhfoiem: ::core::option::Option<Mmcbilljlmk>,
    #[prost(message, repeated, tag = "485")]
    pub negckmbalpm: ::prost::alloc::vec::Vec<Becbkbinebd>,
    #[prost(bool, tag = "718")]
    pub ogahncegfol: bool,
    #[prost(map = "uint32, message", tag = "919")]
    pub ohanfelamae: ::std::collections::HashMap<u32, Hnaicnealfh>,
    #[prost(message, repeated, tag = "1263")]
    pub mallffajnbm: ::prost::alloc::vec::Vec<Mkbmdcgmieo>,
    #[prost(message, repeated, tag = "1367")]
    pub nlgcbmlflle: ::prost::alloc::vec::Vec<Gbjbjkbneke>,
    #[prost(message, repeated, tag = "1614")]
    pub egfceedeeik: ::prost::alloc::vec::Vec<Kndfjagilpi>,
    #[prost(message, repeated, tag = "1690")]
    pub looglcjladb: ::prost::alloc::vec::Vec<Pbdbfhjjlpb>,
    #[prost(uint32, repeated, tag = "1907")]
    pub jdpohckaoah: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "1952")]
    pub djkoiamlecb: ::prost::alloc::vec::Vec<Eblcblofahh>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29958)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mnkbmngcaai {
    #[prost(uint32, tag = "8")]
    pub digdljieock: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23301)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lpcoagjckgh {
    #[prost(uint32, tag = "3")]
    pub kngjhmllcnp: u32,
    #[prost(uint32, tag = "6")]
    pub level_id: u32,
    #[prost(uint32, tag = "8")]
    pub jbfdogpakkc: u32,
    #[prost(bool, tag = "11")]
    pub kodnaagljdl: bool,
    #[prost(bool, tag = "15")]
    pub omeniamedce: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9271)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ahfedofjcnh {
    #[prost(uint32, tag = "6")]
    pub scene_time: u32,
    #[prost(uint32, tag = "11")]
    pub entity_id: u32,
    #[prost(message, optional, tag = "15")]
    pub platform: ::core::option::Option<PlatformInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nbnniigacnc {
    #[prost(uint32, tag = "1")]
    pub nachbolpjjn: u32,
    #[prost(uint32, tag = "3")]
    pub bafcbngfddi: u32,
    #[prost(uint32, tag = "5")]
    pub lifnclihicj: u32,
    #[prost(uint32, tag = "13")]
    pub epfcidiklkg: u32,
    #[prost(uint32, tag = "15")]
    pub ppeafanbgka: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(564)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ijmfaapjcol {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(bool, tag = "9")]
    pub nhbjbljlofk: bool,
    #[prost(uint32, tag = "10")]
    pub ofhapaohpjb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mnnegehjiik {
    #[prost(uint32, tag = "3")]
    pub entity_id: u32,
    #[prost(message, optional, tag = "9")]
    pub skill_anchor_position: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Clpbkemplnm {
    #[prost(uint32, tag = "10")]
    pub iejpghnlidb: u32,
    #[prost(uint32, tag = "11")]
    pub eaipgemknpo: u32,
    #[prost(bool, tag = "15")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9136)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jmmfkkjdgbg {
    #[prost(message, optional, tag = "8")]
    pub dbdnmhcjfoc: ::core::option::Option<Gfnbecnpkge>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21545)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ifjhblnfbcc {
    #[prost(uint32, tag = "9")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Chgnhdchndd {
    #[prost(enumeration = "Fdigdfdcnjc", tag = "13")]
    pub ambdafcliag: i32,
    #[prost(enumeration = "Hjkiglgddon", tag = "14")]
    pub pemalbhpmkf: i32,
    #[prost(uint32, tag = "15")]
    pub ddiggfpifnb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29149)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hiagmdokbpm {
    #[prost(uint32, tag = "2")]
    pub pjhiljjcffp: u32,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3902)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hehfofjdkoc {
    #[prost(uint32, tag = "7")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2679)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hmljdkjmjjn {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(bool, tag = "8")]
    pub goolnhoalgd: bool,
    #[prost(message, optional, tag = "13")]
    pub pemoigkjagh: ::core::option::Option<Okfhjlfojep>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gbgpedlahil {
    #[prost(uint32, tag = "1")]
    pub dombdimffii: u32,
    #[prost(bool, tag = "4")]
    pub edojgafakda: bool,
    #[prost(uint32, tag = "6")]
    pub nekecfnahom: u32,
    #[prost(uint32, repeated, tag = "12")]
    pub pdhekmemblg: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22233)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aldliicaoih {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22162)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lnndfiaonea {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
    #[prost(uint32, tag = "13")]
    pub lkmgmhhkknb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gnimgoihnmc {
    #[prost(uint32, tag = "8")]
    pub element_type: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29508)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pfefcmijjfl {
    #[prost(uint32, tag = "1")]
    pub cbpdgcponhm: u32,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8533)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jiggiipgfpi {
    #[prost(uint32, tag = "1")]
    pub group_id: u32,
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "5")]
    pub lpkdbfnijda: ::prost::alloc::vec::Vec<Mkkmacfgjbg>,
    #[prost(uint32, tag = "10")]
    pub nfickllnfgn: u32,
    #[prost(message, optional, tag = "14")]
    pub kbjbnejobnm: ::core::option::Option<Mkdhkgknkbo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27794)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jmifocnlafn {
    #[prost(message, optional, tag = "10")]
    pub plfkpdnhhmk: ::core::option::Option<Lfjndjlgphf>,
    #[prost(message, optional, tag = "7")]
    pub fneidkdpgnj: ::core::option::Option<Jgbhhlonijj>,
    #[prost(message, optional, tag = "11")]
    pub opdehnconid: ::core::option::Option<Jmblhdbaood>,
    #[prost(message, optional, tag = "8")]
    pub kpchlichjhi: ::core::option::Option<Aejdjaepham>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AvatarInfo {
    #[prost(uint32, tag = "1")]
    pub avatar_id: u32,
    #[prost(uint64, tag = "2")]
    pub guid: u64,
    #[prost(map = "uint32, message", tag = "3")]
    pub prop_map: ::std::collections::HashMap<u32, PropValue>,
    #[prost(uint32, tag = "4")]
    pub life_state: u32,
    #[prost(uint64, repeated, tag = "5")]
    pub equip_guid_list: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint32, repeated, tag = "6")]
    pub talent_id_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(map = "uint32, float", tag = "7")]
    pub fight_prop_map: ::std::collections::HashMap<u32, f32>,
    #[prost(message, optional, tag = "9")]
    pub trial_avatar_info: ::core::option::Option<TrialAvatarInfo>,
    #[prost(map = "uint32, message", tag = "10")]
    pub skill_map: ::std::collections::HashMap<u32, AvatarSkillInfo>,
    #[prost(uint32, tag = "11")]
    pub skill_depot_id: u32,
    #[prost(message, optional, tag = "12")]
    pub fetter_info: ::core::option::Option<AvatarFetterInfo>,
    #[prost(uint32, tag = "13")]
    pub core_proud_skill_level: u32,
    #[prost(uint32, repeated, tag = "14")]
    pub inherent_proud_skill_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(map = "uint32, uint32", tag = "15")]
    pub skill_level_map: ::std::collections::HashMap<u32, u32>,
    #[prost(enumeration = "AvatarExpeditionState", tag = "16")]
    pub expedition_state: i32,
    #[prost(map = "uint32, uint32", tag = "17")]
    pub proud_skill_extra_level_map: ::std::collections::HashMap<u32, u32>,
    #[prost(bool, tag = "18")]
    pub is_focus: bool,
    #[prost(uint32, tag = "19")]
    pub avatar_type: u32,
    #[prost(uint32, repeated, tag = "20")]
    pub team_resonance_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "21")]
    pub wearing_flycloak_id: u32,
    #[prost(message, repeated, tag = "22")]
    pub equip_affix_list: ::prost::alloc::vec::Vec<AvatarEquipAffixInfo>,
    #[prost(uint32, tag = "23")]
    pub born_time: u32,
    #[prost(uint32, repeated, tag = "24")]
    pub pending_promote_reward_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "25")]
    pub costume_id: u32,
    #[prost(message, optional, tag = "26")]
    pub excel_info: ::core::option::Option<AvatarExcelInfo>,
    #[prost(uint32, tag = "27")]
    pub anim_hash: u32,
    #[prost(message, optional, tag = "28")]
    pub mirror_avatar_info: ::core::option::Option<MirrorAvatarInfo>,
    #[prost(uint32, tag = "29")]
    pub pihjhgkfclh: u32,
    #[prost(uint32, tag = "30")]
    pub mfmiphlgdfl: u32,
    #[prost(uint32, tag = "31")]
    pub dpmaabplgdp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26048)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Llkoekpgege {
    #[prost(enumeration = "Lngojpfiioo", tag = "1")]
    pub poclliajmdd: i32,
    #[prost(uint32, tag = "7")]
    pub kngbdmdcnhk: u32,
    #[prost(uint32, tag = "10")]
    pub fgommpiofpb: u32,
    #[prost(message, optional, tag = "11")]
    pub jfkkiiljjga: ::core::option::Option<Iljbekegpif>,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nkpfmnbhpdg {
    #[prost(enumeration = "Bkeodgbcbki", tag = "1")]
    pub state: i32,
    #[prost(uint32, tag = "8")]
    pub start_time: u32,
    #[prost(uint32, tag = "15")]
    pub bcjfngonabb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8540)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pckbmacnjma {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "4")]
    pub ldompjcloco: u32,
    #[prost(uint32, tag = "12")]
    pub jpbajglafge: u32,
    #[prost(uint32, tag = "13")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SceneEntityInfo {
    #[prost(enumeration = "ProtEntityType", tag = "1")]
    pub entity_type: i32,
    #[prost(uint32, tag = "2")]
    pub entity_id: u32,
    #[prost(string, tag = "3")]
    pub name: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "4")]
    pub motion_info: ::core::option::Option<MotionInfo>,
    #[prost(message, repeated, tag = "5")]
    pub prop_list: ::prost::alloc::vec::Vec<PropPair>,
    #[prost(message, repeated, tag = "6")]
    pub fight_prop_list: ::prost::alloc::vec::Vec<FightPropPair>,
    #[prost(uint32, tag = "7")]
    pub life_state: u32,
    #[prost(message, repeated, tag = "9")]
    pub animator_para_list: ::prost::alloc::vec::Vec<AnimatorParameterValueInfoPair>,
    #[prost(uint32, tag = "17")]
    pub last_move_scene_time_ms: u32,
    #[prost(uint32, tag = "18")]
    pub last_move_reliable_seq: u32,
    #[prost(message, optional, tag = "19")]
    pub entity_client_data: ::core::option::Option<EntityClientData>,
    #[prost(message, repeated, tag = "20")]
    pub entity_environment_info_list: ::prost::alloc::vec::Vec<EntityEnvironmentInfo>,
    #[prost(message, optional, tag = "21")]
    pub entity_authority_info: ::core::option::Option<EntityAuthorityInfo>,
    #[prost(string, repeated, tag = "22")]
    pub tag_list: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(message, repeated, tag = "23")]
    pub server_buff_list: ::prost::alloc::vec::Vec<ServerBuff>,
    #[prost(oneof = "scene_entity_info::Entity", tags = "10, 11, 12, 13")]
    pub entity: ::core::option::Option<scene_entity_info::Entity>,
}
/// Nested message and enum types in `SceneEntityInfo`.
pub mod scene_entity_info {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Entity {
        #[prost(message, tag = "10")]
        Avatar(super::SceneAvatarInfo),
        #[prost(message, tag = "11")]
        Monster(super::SceneMonsterInfo),
        #[prost(message, tag = "12")]
        Npc(super::SceneNpcInfo),
        #[prost(message, tag = "13")]
        Gadget(super::SceneGadgetInfo),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29381)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dbfogepcjjd {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1625)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gbokbkalnda {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(message, optional, tag = "9")]
    pub enmfbnnlako: ::core::option::Option<Pkaphpkfafj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eogmdmbjgjp {
    #[prost(bool, tag = "4")]
    pub nlpnmnnifpi: bool,
    #[prost(uint32, repeated, tag = "15")]
    pub ohimeijlkjb: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4332)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Phccjmdomhp {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jpmfmbpmdfn {
    #[prost(uint32, repeated, tag = "2")]
    pub ocmcggcjlbb: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "4")]
    pub fjcnnenekbm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5116)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cgcbhgemmlk {
    #[prost(uint32, tag = "7")]
    pub ffhpdcibkod: u32,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jkffgchklaa {
    #[prost(uint64, tag = "5")]
    pub avatar_guid: u64,
    #[prost(bool, tag = "9")]
    pub gdfoebgclhc: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hjkeejmimjm {
    #[prost(message, optional, tag = "1")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
    #[prost(uint32, tag = "2")]
    pub uid: u32,
    #[prost(uint32, repeated, tag = "5")]
    pub fbhbheaommc: ::prost::alloc::vec::Vec<u32>,
    #[prost(string, tag = "11")]
    pub omknbnmebik: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1831)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pcfmkjbnadb {
    #[prost(bool, tag = "2")]
    pub nonhlhoihnl: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1376)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jkdlgfjjome {
    #[prost(message, repeated, tag = "1")]
    pub mlobacjpfek: ::prost::alloc::vec::Vec<Ngbdcgmninn>,
    #[prost(bool, tag = "2")]
    pub ohnfaanfobo: bool,
    #[prost(uint32, tag = "4")]
    pub lkmgmhhkknb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21965)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cdkodhahlbf {
    #[prost(uint32, tag = "6")]
    pub start_time: u32,
    #[prost(uint32, tag = "10")]
    pub owner_uid: u32,
    #[prost(uint32, tag = "11")]
    pub mabnefajhej: u32,
    #[prost(uint32, tag = "14")]
    pub end_time: u32,
    #[prost(uint32, tag = "15")]
    pub ffhpdcibkod: u32,
    #[prost(oneof = "cdkodhahlbf::Detail", tags = "4, 8")]
    pub detail: ::core::option::Option<cdkodhahlbf::Detail>,
}
/// Nested message and enum types in `CDKODHAHLBF`.
pub mod cdkodhahlbf {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(message, tag = "4")]
        ElectroherculesStartParam(super::Mknbfihehne),
        #[prost(message, tag = "8")]
        FlowerStartParam(super::Dalcchibohb),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(576)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dpjmjcppdhd {
    #[prost(message, repeated, tag = "10")]
    pub ofhlodepmej: ::prost::alloc::vec::Vec<Nbdhfhkmlfd>,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22403)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hiajejcfeal {
    #[prost(uint32, tag = "4")]
    pub kepfgcgpmfp: u32,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(uint64, tag = "7")]
    pub avatar_guid: u64,
    #[prost(uint32, tag = "10")]
    pub jcmchgnnlmj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26116)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bkipaoccgip {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2321)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gfagpbkllmf {
    #[prost(uint32, tag = "1")]
    pub scene_id: u32,
    #[prost(int32, repeated, tag = "6")]
    pub acphegpgpoh: ::prost::alloc::vec::Vec<i32>,
    #[prost(message, repeated, tag = "9")]
    pub gjdpcoomajk: ::prost::alloc::vec::Vec<Gffiokdnclp>,
    #[prost(int32, repeated, tag = "12")]
    pub dlcdfkiobcl: ::prost::alloc::vec::Vec<i32>,
    #[prost(int32, repeated, tag = "13")]
    pub felndgjjjif: ::prost::alloc::vec::Vec<i32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(378)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mblikegfmcf {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8586)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cddbffjamcb {
    #[prost(uint32, tag = "9")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ecgpildgakp {
    #[prost(int32, tag = "1")]
    pub nimmilccdoo: i32,
    #[prost(string, tag = "2")]
    pub attack_tag: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "3")]
    pub ability_name: ::core::option::Option<AbilityString>,
    #[prost(uint32, tag = "4")]
    pub cejkbikgfbo: u32,
    #[prost(int32, tag = "6")]
    pub ocjeeeefpjm: i32,
    #[prost(uint32, tag = "10")]
    pub lknpjahailb: u32,
    #[prost(int32, tag = "12")]
    pub aegnldmdkjl: i32,
    #[prost(string, repeated, tag = "15")]
    pub ohmkbgameim: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9621)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gjoffmhieek {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "7")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "9")]
    pub finahglfhag: u32,
    #[prost(uint32, tag = "12")]
    pub hggehlmhkmp: u32,
    #[prost(message, repeated, tag = "14")]
    pub bbopfhaodop: ::prost::alloc::vec::Vec<Ajmimbmcabe>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4813)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cfknceicjnl {
    #[prost(message, optional, tag = "11")]
    pub djedaeiklom: ::core::option::Option<Gfnbecnpkge>,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28751)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gpgkbiebana {
    #[prost(message, repeated, tag = "2")]
    pub kihkadfpgpp: ::prost::alloc::vec::Vec<Mkkmacfgjbg>,
    #[prost(uint32, tag = "7")]
    pub group_id: u32,
    #[prost(uint32, tag = "8")]
    pub nfickllnfgn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nnhfmcjogpo {
    #[prost(uint64, tag = "1")]
    pub mcppeknbhfk: u64,
    #[prost(uint32, tag = "2")]
    pub room_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(785)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aaehmbankjp {
    #[prost(uint32, tag = "8")]
    pub bdeflcdkdbi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3637)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cghehaachda {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "6")]
    pub gdeocliiemf: u32,
    #[prost(uint32, tag = "7")]
    pub cbefacangnc: u32,
    #[prost(uint32, tag = "10")]
    pub jofggbnalgp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3079)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ppblfbbjbgm {
    #[prost(uint32, tag = "4")]
    pub scene_id: u32,
    #[prost(uint32, tag = "6")]
    pub entity_id: u32,
    #[prost(uint32, tag = "13")]
    pub pjabefajbgb: u32,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3216)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kdaoifddlnm {
    #[prost(bool, tag = "1")]
    pub omeniamedce: bool,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(uint32, tag = "10")]
    pub hgbeodjlopj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kapljmblbme {
    #[prost(bool, tag = "1")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "9")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28387)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ihhncmnjoaa {
    #[prost(uint32, tag = "14")]
    pub id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ennopjofajk {
    #[prost(uint64, repeated, tag = "3")]
    pub avatar_guid_list: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint32, tag = "5")]
    pub fbgabmhmpgj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cgoihcdffej {
    #[prost(message, repeated, tag = "2")]
    pub nehpgmldkmf: ::prost::alloc::vec::Vec<Gldpgoifkkj>,
    #[prost(message, repeated, tag = "8")]
    pub efcdelgmmkg: ::prost::alloc::vec::Vec<Kipkgcacpbk>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25986)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Opcpmjolife {
    #[prost(uint32, tag = "1")]
    pub dpmaabplgdp: u32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
    #[prost(uint64, tag = "15")]
    pub avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24269)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hgegehhjlbh {
    #[prost(uint32, repeated, tag = "4")]
    pub adbbiphblie: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "7")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1819)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Llihpghcmfe {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Liiekancgmn {
    #[prost(uint32, tag = "4")]
    pub group_id: u32,
    #[prost(uint32, tag = "5")]
    pub config_id: u32,
    #[prost(message, optional, tag = "7")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "12")]
    pub scene_id: u32,
    #[prost(uint32, tag = "14")]
    pub ffobionlmoj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7276)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Emepbgalgki {
    #[prost(uint32, tag = "5")]
    pub id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3893)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dolpaanhlhk {
    #[prost(uint32, tag = "7")]
    pub id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23242)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aeneinmfiae {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mkidcponehl {
    #[prost(message, optional, tag = "5")]
    pub oipcdlondgp: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "13")]
    pub entity_id: u32,
    #[prost(message, optional, tag = "14")]
    pub oaejfloeaog: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2913)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct EnterScenePeerNotify {
    #[prost(uint32, tag = "1")]
    pub host_peer_id: u32,
    #[prost(uint32, tag = "5")]
    pub peer_id: u32,
    #[prost(uint32, tag = "14")]
    pub dest_scene_id: u32,
    #[prost(uint32, tag = "15")]
    pub enter_scene_token: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cepgfgmpkmk {
    #[prost(bool, tag = "2")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "7")]
    pub level_id: u32,
    #[prost(uint32, tag = "14")]
    pub bcikfedkcea: u32,
    #[prost(uint32, tag = "15")]
    pub hfaleccdfif: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pobobnimglk {
    #[prost(uint32, tag = "2")]
    pub iejpghnlidb: u32,
    #[prost(uint32, repeated, tag = "4")]
    pub jkheeakmjbg: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "9")]
    pub pjhiljjcffp: u32,
    #[prost(bool, tag = "10")]
    pub glkngddnocn: bool,
    #[prost(bool, tag = "12")]
    pub ngjflelcfin: bool,
    #[prost(message, optional, tag = "14")]
    pub hpoeckekafa: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jcfcdconmkb {
    #[prost(uint32, repeated, tag = "5")]
    pub ceofallniim: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1414)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kigcgpkhcnh {
    #[prost(uint64, repeated, tag = "6")]
    pub dokagagpmca: ::prost::alloc::vec::Vec<u64>,
    #[prost(message, repeated, tag = "13")]
    pub amfbnejghma: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(oneof = "kigcgpkhcnh::Accefdlpfgh", tags = "1205, 284")]
    pub accefdlpfgh: ::core::option::Option<kigcgpkhcnh::Accefdlpfgh>,
}
/// Nested message and enum types in `KIGCGPKHCNH`.
pub mod kigcgpkhcnh {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Accefdlpfgh {
        #[prost(uint32, tag = "1205")]
        FurnitureSuiteId(u32),
        #[prost(uint32, tag = "284")]
        SlotId(u32),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20782)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ofebjoneecb {
    #[prost(uint32, tag = "1")]
    pub dicgdofabkp: u32,
    #[prost(uint32, tag = "2")]
    pub eaipgemknpo: u32,
    #[prost(bool, tag = "5")]
    pub ihponiojkpg: bool,
    #[prost(bool, tag = "6")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "8")]
    pub jbhmgfebacc: u32,
    #[prost(oneof = "ofebjoneecb::Dapnlkepgjn", tags = "9, 12, 13")]
    pub dapnlkepgjn: ::core::option::Option<ofebjoneecb::Dapnlkepgjn>,
}
/// Nested message and enum types in `OFEBJONEECB`.
pub mod ofebjoneecb {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Dapnlkepgjn {
        #[prost(message, tag = "9")]
        FirstStageInfo(super::Fjbdcmmfcbp),
        #[prost(message, tag = "12")]
        ThirdStageInfo(super::Imccamjndaa),
        #[prost(message, tag = "13")]
        SecondStageInfo(super::Bkjefhmccnm),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kndfjagilpi {
    #[prost(uint32, tag = "5")]
    pub ooipgfedjmn: u32,
    #[prost(fixed64, tag = "8")]
    pub cojobikfhod: u64,
    #[prost(fixed64, tag = "14")]
    pub jabgacillec: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29038)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct WindSeedClientNotify {
    #[prost(oneof = "wind_seed_client_notify::Notify", tags = "4, 6, 8")]
    pub notify: ::core::option::Option<wind_seed_client_notify::Notify>,
}
/// Nested message and enum types in `WindSeedClientNotify`.
pub mod wind_seed_client_notify {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Notify {
        #[prost(message, tag = "4")]
        AddWindBulletNotify(super::AddWindBulletNotify),
        #[prost(message, tag = "6")]
        AreaNotify(super::AreaNotify),
        #[prost(message, tag = "8")]
        RefreshNotify(super::RefreshNotify),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct RefreshNotify {
    #[prost(uint32, tag = "2")]
    pub refresh_num: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct AddWindBulletNotify {
    #[prost(uint32, tag = "8")]
    pub ijmfkbgnjhd: u32,
    #[prost(message, optional, tag = "13")]
    pub megkkfpcfej: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "15")]
    pub ckpbjjapkmg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AreaNotify {
    #[prost(uint32, tag = "2")]
    pub area_type: u32,
    #[prost(uint32, tag = "5")]
    pub area_id: u32,
    #[prost(bytes = "vec", tag = "8")]
    pub area_code: ::prost::alloc::vec::Vec<u8>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iepeohakkmi {
    #[prost(uint32, tag = "2")]
    pub hfaleccdfif: u32,
    #[prost(uint32, tag = "14")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kcicahcpbgb {
    #[prost(uint32, tag = "4")]
    pub oajoobghagm: u32,
    #[prost(message, repeated, tag = "6")]
    pub gidleklahap: ::prost::alloc::vec::Vec<Gaghifffhoi>,
    #[prost(uint32, tag = "7")]
    pub jkpcjabbgjb: u32,
    #[prost(uint32, repeated, tag = "10")]
    pub hggkgchkcfb: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "12")]
    pub mmabhbcildg: u32,
    #[prost(message, repeated, tag = "13")]
    pub cfmghcakeae: ::prost::alloc::vec::Vec<Kokdnepggbh>,
    #[prost(uint32, repeated, tag = "15")]
    pub phnidopebah: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bigmholkpek {
    #[prost(uint32, tag = "3")]
    pub pankkdhfmgo: u32,
    #[prost(bool, tag = "4")]
    pub hmlmhbffipi: bool,
    #[prost(uint32, tag = "14")]
    pub ehdjapfbmje: u32,
    #[prost(bool, tag = "15")]
    pub cffhniooeof: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7602)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ejbnniglklg {
    #[prost(uint32, tag = "1")]
    pub ffhpdcibkod: u32,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2187)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Agfjkglggck {
    #[prost(uint64, tag = "3")]
    pub ihgjlfcgfin: u64,
    #[prost(uint32, tag = "5")]
    pub ggcfiehankk: u32,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(bool, tag = "11")]
    pub omeniamedce: bool,
    #[prost(bool, tag = "15")]
    pub jemmgilnbpa: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1790)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nlmpjpidden {
    #[prost(message, repeated, tag = "5")]
    pub agelihnanhp: ::prost::alloc::vec::Vec<Gjdeepckgpm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28277)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Picinpefgla {
    #[prost(uint32, tag = "4")]
    pub ffhpdcibkod: u32,
    #[prost(uint32, tag = "8")]
    pub lhmdbbfaifm: u32,
    #[prost(message, optional, tag = "13")]
    pub nganceicghc: ::core::option::Option<Abencjfjifl>,
    #[prost(bool, tag = "15")]
    pub omeniamedce: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26201)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bpbnegbcdgp {
    #[prost(uint32, tag = "5")]
    pub oajoobghagm: u32,
    #[prost(uint32, tag = "8")]
    pub point_id: u32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28508)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lapmmpncnbk {
    #[prost(int32, tag = "12")]
    pub retcode: i32,
    #[prost(uint32, tag = "15")]
    pub nedifglmcln: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22651)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ipjhmbalmcc {
    #[prost(uint32, tag = "11")]
    pub laahcnefemp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oehgbgealhn {
    #[prost(uint32, tag = "1")]
    pub config_id: u32,
    #[prost(bool, tag = "3")]
    pub jingillofcc: bool,
    #[prost(uint32, tag = "8")]
    pub gmbfnpljddk: u32,
    #[prost(uint32, tag = "9")]
    pub group_id: u32,
    #[prost(uint32, tag = "10")]
    pub cehggcbcmfi: u32,
    #[prost(uint32, tag = "11")]
    pub scene_id: u32,
    #[prost(uint32, tag = "12")]
    pub kngbdmdcnhk: u32,
    #[prost(bool, tag = "13")]
    pub mfgbaibkpfo: bool,
    #[prost(uint32, tag = "14")]
    pub ffobionlmoj: u32,
    #[prost(message, optional, tag = "15")]
    pub ecmnhbjiojk: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4608)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iolnknafdgc {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3080)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jhjbohodcfa {
    #[prost(uint32, tag = "5")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct GadgetCrucibleInfo {
    #[prost(uint32, tag = "1")]
    pub mp_play_id: u32,
    #[prost(uint32, tag = "2")]
    pub prepare_end_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20512)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fdcegjaeaco {
    #[prost(uint32, tag = "13")]
    pub jnfdnflbejo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6318)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eefnjhachja {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27188)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nkdiabjoepj {
    #[prost(uint32, tag = "2")]
    pub kepfgcgpmfp: u32,
    #[prost(uint64, tag = "5")]
    pub avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7778)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ffmmfhodpbc {
    #[prost(uint32, repeated, tag = "9")]
    pub chponmfhcfe: ::prost::alloc::vec::Vec<u32>,
    #[prost(map = "uint32, message", tag = "13")]
    pub modjgajfajl: ::std::collections::HashMap<u32, Ihklgmifgmn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26078)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fjodinefocd {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "11")]
    pub item_list: ::prost::alloc::vec::Vec<Jickppdlohc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9786)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cambbpfdnhb {
    #[prost(message, repeated, tag = "8")]
    pub fokhejbnohm: ::prost::alloc::vec::Vec<Mhnlgbpcbcj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3715)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pndbghaaboa {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
    #[prost(message, optional, tag = "11")]
    pub mcdogialdkp: ::core::option::Option<Lfobkbcnfic>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fofbdkcpidc {
    #[prost(bool, tag = "6")]
    pub fapdamimcmh: bool,
    #[prost(bool, tag = "8")]
    pub oeednmalmif: bool,
    #[prost(message, repeated, tag = "11")]
    pub akafecacnjl: ::prost::alloc::vec::Vec<Kmjjchgblhb>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5117)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mmddadnlmbc {
    #[prost(uint32, tag = "2")]
    pub colmkmkejpm: u32,
    #[prost(enumeration = "Kpadkhdbgcb", tag = "7")]
    pub imiogmdokcb: i32,
    #[prost(bool, tag = "14")]
    pub kodnaagljdl: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6899)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ndmmabneajp {
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Plielhlgadj {
    #[prost(uint32, tag = "1")]
    pub uid: u32,
    #[prost(string, tag = "2")]
    pub omknbnmebik: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "3")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
    #[prost(string, tag = "4")]
    pub bmfkoonmmee: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub efajihmnobk: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub ijlhlcllene: ::prost::alloc::string::String,
    #[prost(uint32, tag = "7")]
    pub avatar_id: u32,
    #[prost(uint32, tag = "8")]
    pub costume_id: u32,
    #[prost(uint32, tag = "9")]
    pub hainniimjan: u32,
    #[prost(uint32, tag = "10")]
    pub mbbjboepghd: u32,
    #[prost(uint32, tag = "11")]
    pub hnlbjephjhl: u32,
    #[prost(fixed32, tag = "12")]
    pub ggigcllhefm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22359)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iloahahbmdj {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25217)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cjhcceifgcb {
    #[prost(message, repeated, tag = "2")]
    pub pmjgjnilmbp: ::prost::alloc::vec::Vec<Bffaldpokfe>,
    #[prost(uint32, tag = "6")]
    pub bodiejclgmb: u32,
    #[prost(uint32, tag = "4")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hdcgflbnllp {
    #[prost(uint32, tag = "5")]
    pub gdhbcegibhg: u32,
    #[prost(uint32, tag = "7")]
    pub bcajincifmd: u32,
    #[prost(uint32, tag = "8")]
    pub cjhdmkllkpa: u32,
    #[prost(uint32, tag = "12")]
    pub mjmjhpjjlib: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Odopfpdabeo {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(246)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pkdiidolmfh {
    #[prost(uint32, tag = "4")]
    pub dkgeembkbcd: u32,
    #[prost(uint32, tag = "6")]
    pub bolbblmgkfi: u32,
    #[prost(bool, tag = "9")]
    pub hmfjnffmieg: bool,
    #[prost(uint32, tag = "10")]
    pub ghlbjahjehf: u32,
    #[prost(uint32, tag = "15")]
    pub kejelnblmhl: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bgpahbmkbag {
    #[prost(uint32, tag = "9")]
    pub coohemdonkj: u32,
    #[prost(uint32, tag = "10")]
    pub avatar_id: u32,
    #[prost(uint32, tag = "13")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23478)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pmkifenpebp {
    #[prost(uint32, tag = "2")]
    pub bhgdnciojdj: u32,
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "4")]
    pub ofnogjpgbna: u32,
    #[prost(message, optional, tag = "8")]
    pub bdaledoahfa: ::core::option::Option<Ngofpeolopf>,
    #[prost(message, repeated, tag = "15")]
    pub djmchfpiflm: ::prost::alloc::vec::Vec<Ngofpeolopf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pankpdjhcbk {
    #[prost(uint32, tag = "2")]
    pub gohhbggcmjp: u32,
    #[prost(uint32, tag = "6")]
    pub kkiaaalfchp: u32,
    #[prost(uint32, tag = "7")]
    pub lkhgjkgdegb: u32,
    #[prost(uint32, tag = "14")]
    pub pofoakhfmco: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27677)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ibahngncagc {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21327)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gpaaknlbohd {
    #[prost(message, optional, tag = "6")]
    pub jekmekmmijd: ::core::option::Option<Mkdhkgknkbo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21905)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Clkkifgcdcg {
    #[prost(message, repeated, tag = "6")]
    pub cidmbdphchj: ::prost::alloc::vec::Vec<Oaodpgjompf>,
    #[prost(enumeration = "Kpfoblalblc", tag = "9")]
    pub daakpcoabep: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2434)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Olalhnmdeen {
    #[prost(message, repeated, tag = "10")]
    pub cciknjdkndi: ::prost::alloc::vec::Vec<Jkpcbhippnc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Malkbobpbgg {
    #[prost(uint32, tag = "1")]
    pub lladmbnfoam: u32,
    #[prost(message, repeated, tag = "3")]
    pub moonneccikh: ::prost::alloc::vec::Vec<Ibijgojjoia>,
    #[prost(uint32, tag = "8")]
    pub kngjhmllcnp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gppndkhnobm {
    #[prost(bool, tag = "1")]
    pub bjnikakpona: bool,
    #[prost(uint32, tag = "4")]
    pub akjpodmjneh: u32,
    #[prost(bool, tag = "7")]
    pub mjpedpoiflm: bool,
    #[prost(message, optional, tag = "9")]
    pub ljidohladhc: ::core::option::Option<Ndoedpndpbh>,
    #[prost(message, optional, tag = "10")]
    pub eomnmodedfd: ::core::option::Option<Oadjbkdjnpl>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(987)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jbfehgdmlpb {
    #[prost(uint32, tag = "4")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(308)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bklpglhikom {
    #[prost(bool, tag = "3")]
    pub jfjndakfjek: bool,
    #[prost(enumeration = "Ckleegmpdgn", tag = "2")]
    pub agmhmdhefkd: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Igkghhbkpdk {
    #[prost(message, optional, tag = "3")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "7")]
    pub pos: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26829)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aegiimjnobc {
    #[prost(message, optional, tag = "12")]
    pub dkicoicljcd: ::core::option::Option<Afdnkldihkd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(502)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ikkeomggjfe {
    #[prost(uint32, tag = "7")]
    pub memeffoingb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5358)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mmndofbmkfe {
    #[prost(message, optional, tag = "1")]
    pub abehjooaeom: ::core::option::Option<Nbdhfhkmlfd>,
    #[prost(uint32, tag = "13")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mcblkomkohb {
    #[prost(message, repeated, tag = "3")]
    pub djmchfpiflm: ::prost::alloc::vec::Vec<Llgcdcdhdpd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7325)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nhhkelkaefp {
    #[prost(uint32, repeated, tag = "13")]
    pub hdhjfcbnlml: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ciknkblabff {
    #[prost(uint32, tag = "2")]
    pub lcddidljedn: u32,
    #[prost(bool, tag = "6")]
    pub immdnddnopg: bool,
    #[prost(bool, tag = "7")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "12")]
    pub icidpjhbdji: u32,
    #[prost(uint32, tag = "13")]
    pub lchbeahgheo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3456)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hlggdeoffeb {
    #[prost(uint32, tag = "1")]
    pub cooohjmdokg: u32,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26833)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jnnmdojaknj {
    #[prost(map = "uint32, message", tag = "5")]
    pub hhpljcpfnkf: ::std::collections::HashMap<u32, Gcaapklddne>,
    #[prost(uint32, tag = "8")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1680)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lciigmcepkd {
    #[prost(message, repeated, tag = "11")]
    pub pcibmjmpabh: ::prost::alloc::vec::Vec<Chomfemehnl>,
    #[prost(uint32, tag = "15")]
    pub parent_quest_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pliajbgkcmd {
    #[prost(string, tag = "2")]
    pub efajihmnobk: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub omknbnmebik: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "4")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
    #[prost(uint32, tag = "5")]
    pub uid: u32,
    #[prost(message, repeated, tag = "15")]
    pub jahppelnedf: ::prost::alloc::vec::Vec<Hfhjkhoplmn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1272)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lekllnaepik {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5571)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nappagfpdna {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2383)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Didmffkoggc {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28495)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Iibolaenlcf {
    #[prost(message, repeated, tag = "7")]
    pub llegfdicegl: ::prost::alloc::vec::Vec<Mgaijnjiojk>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22129)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hihpnadpoep {
    #[prost(message, optional, tag = "8")]
    pub gjghbnmpknc: ::core::option::Option<Cegmhfpbajj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1430)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Amdfjbleife {
    #[prost(message, optional, tag = "7")]
    pub nhnaaiaiiin: ::core::option::Option<Kdpfblecnik>,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2252)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Indmkcnmmbb {
    #[prost(message, optional, tag = "1")]
    pub hbidfelecff: ::core::option::Option<Ldkjnpenphg>,
    #[prost(message, optional, tag = "2")]
    pub imelonlckii: ::core::option::Option<Ldkjnpenphg>,
    #[prost(message, optional, tag = "3")]
    pub pejijnijgoo: ::core::option::Option<Ldkjnpenphg>,
    #[prost(message, optional, tag = "9")]
    pub fadgnfkgnog: ::core::option::Option<Ldkjnpenphg>,
    #[prost(message, optional, tag = "13")]
    pub cnlhmfmmmol: ::core::option::Option<Ldkjnpenphg>,
    #[prost(message, optional, tag = "15")]
    pub kjadohhdhnj: ::core::option::Option<Ldkjnpenphg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20059)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bjggaoealhj {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2105)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kkginabkidc {
    #[prost(uint32, tag = "15")]
    pub kjimmfdaflh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3288)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dndahafambd {
    #[prost(uint32, tag = "14")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29973)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iieijdgbplo {
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6707)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hfdnbinkfgj {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(message, optional, tag = "2")]
    pub inbkgniehng: ::core::option::Option<Fhmmnelmnmd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6926)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jflidacbeni {
    #[prost(uint32, tag = "7")]
    pub ebjejlglodb: u32,
    #[prost(uint32, tag = "15")]
    pub jofggbnalgp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nbnoomekhie {
    #[prost(message, optional, tag = "4")]
    pub bfmeomiaeek: ::core::option::Option<Apddlgfjonm>,
    #[prost(message, optional, tag = "5")]
    pub bfaficcjaaa: ::core::option::Option<Nfpllbbapim>,
    #[prost(message, optional, tag = "12")]
    pub nbkmbdeopei: ::core::option::Option<Jehlcimijgn>,
    #[prost(message, optional, tag = "15")]
    pub kcbmipfeadj: ::core::option::Option<Alcmfillbkd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1279)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fdbkcmbjmhm {
    #[prost(uint32, tag = "2")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9431)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bmihddhlngk {
    #[prost(uint32, tag = "1")]
    pub offering_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29715)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jlajepkbnil {
    #[prost(bool, tag = "12")]
    pub kjaocadpmbk: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hdhmianbihc {
    #[prost(uint32, tag = "1")]
    pub end_time: u32,
    #[prost(uint32, tag = "10")]
    pub finahglfhag: u32,
    #[prost(uint32, tag = "12")]
    pub dnbefljlamb: u32,
    #[prost(uint32, tag = "14")]
    pub jabgacillec: u32,
    #[prost(bool, tag = "15")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8364)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mlgapbiheni {
    #[prost(message, repeated, tag = "6")]
    pub ikmdadcopeg: ::prost::alloc::vec::Vec<Ibfdcgeoeie>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28301)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cjndoibmnel {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27594)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hpmaenkjcoj {
    #[prost(message, repeated, tag = "2")]
    pub cnajaflibed: ::prost::alloc::vec::Vec<Bdkcbbnpjhm>,
    #[prost(message, repeated, tag = "3")]
    pub mgdpfniifea: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(bool, tag = "6")]
    pub fbcekpomnai: bool,
    #[prost(uint32, tag = "12")]
    pub hgbbglkplfi: u32,
    #[prost(uint32, tag = "14")]
    pub fdpppbpoemp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Olheklkendn {
    #[prost(uint32, tag = "1")]
    pub uid: u32,
    #[prost(string, tag = "2")]
    pub omknbnmebik: ::prost::alloc::string::String,
    #[prost(uint32, tag = "3")]
    pub lcjpdljbpke: u32,
    #[prost(uint32, tag = "4")]
    pub avatar_id: u32,
    #[prost(enumeration = "Olahjgdbfjl", tag = "5")]
    pub amhjeomfeol: i32,
    #[prost(uint32, tag = "6")]
    pub nmhglbokgde: u32,
    #[prost(uint32, tag = "7")]
    pub hdbfknjhboo: u32,
    #[prost(string, tag = "8")]
    pub efajihmnobk: ::prost::alloc::string::String,
    #[prost(uint32, tag = "9")]
    pub mkhendmflmf: u32,
    #[prost(uint32, repeated, tag = "10")]
    pub iegphpcnobk: ::prost::alloc::vec::Vec<u32>,
    #[prost(string, tag = "11")]
    pub dkhhpajbjif: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "12")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
    #[prost(string, tag = "13")]
    pub mhpfnlkcfom: ::prost::alloc::string::String,
    #[prost(string, tag = "14")]
    pub lbkdgoefebc: ::prost::alloc::string::String,
    #[prost(string, tag = "15")]
    pub ijlhlcllene: ::prost::alloc::string::String,
    #[prost(enumeration = "Nfonhfamdne", tag = "16")]
    pub ajcgkkpccgd: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hblkljkhkoo {
    #[prost(bool, tag = "3")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "6")]
    pub iejpghnlidb: u32,
    #[prost(uint32, tag = "15")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1211)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mblfgdmpogc {
    #[prost(uint32, tag = "1")]
    pub agocibjaihf: u32,
    #[prost(uint32, tag = "9")]
    pub lkclogboocf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Clihejnniec {
    #[prost(bool, tag = "2")]
    pub pmjlllfophk: bool,
    #[prost(bool, tag = "3")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "10")]
    pub dmjodfmkbab: u32,
    #[prost(uint32, tag = "12")]
    pub mafdjfnephk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Blglpaigifd {
    #[prost(uint32, tag = "3")]
    pub iieilnhpcji: u32,
    #[prost(uint32, tag = "7")]
    pub gofhghokepn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hebabgnpnlk {
    #[prost(bool, tag = "4")]
    pub cbcfbnpmigf: bool,
    #[prost(bool, tag = "5")]
    pub gmphlcgddge: bool,
    #[prost(uint32, tag = "7")]
    pub mkcgmmganlk: u32,
    #[prost(uint32, tag = "9")]
    pub level_id: u32,
    #[prost(uint32, repeated, tag = "10")]
    pub njpebemeifi: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "12")]
    pub oijccdbdmol: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23646)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Coaaapomhnd {
    #[prost(message, repeated, tag = "4")]
    pub njopajdobce: ::prost::alloc::vec::Vec<Mpggmjodjao>,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "12")]
    pub nbjnbcmhjfb: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Paeceabmfno {
    #[prost(float, tag = "5")]
    pub bhalbioilce: f32,
    #[prost(uint64, tag = "6")]
    pub avatar_guid: u64,
    #[prost(float, tag = "14")]
    pub oelcnlojhhe: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MapMarkPoint {
    #[prost(uint32, tag = "1")]
    pub scene_id: u32,
    #[prost(string, tag = "2")]
    pub name: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "3")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(enumeration = "MapMarkPointType", tag = "4")]
    pub point_type: i32,
    #[prost(uint32, tag = "5")]
    pub monster_id: u32,
    #[prost(enumeration = "Dmdininefdg", tag = "6")]
    pub bihhikjciah: i32,
    #[prost(uint32, tag = "7")]
    pub pjabefajbgb: u32,
    #[prost(uint32, tag = "8")]
    pub ffobionlmoj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27178)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kpkjchdpjak {
    #[prost(uint32, tag = "1")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(344)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kkomaldhhgj {
    #[prost(uint32, tag = "14")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7993)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eandjgjjbhk {
    #[prost(uint32, tag = "3")]
    pub oibooeeaidh: u32,
    #[prost(uint32, tag = "5")]
    pub eaipgemknpo: u32,
    #[prost(message, repeated, tag = "7")]
    pub fpkeigkadab: ::prost::alloc::vec::Vec<Lmlbfoeldff>,
    #[prost(uint32, tag = "11")]
    pub kdmjfhdppdp: u32,
    #[prost(uint32, tag = "14")]
    pub cdchfgfjnoi: u32,
    #[prost(uint32, tag = "15")]
    pub finahglfhag: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1836)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bgbpofjdojk {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(uint32, tag = "13")]
    pub id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9285)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bdgcfpbnaam {
    #[prost(uint32, tag = "6")]
    pub oajoobghagm: u32,
    #[prost(enumeration = "PlayerDieType", tag = "12")]
    pub die_type: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8375)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ookagnkaobb {
    #[prost(bool, tag = "7")]
    pub gmjgmhajamh: bool,
    #[prost(uint32, tag = "13")]
    pub fiddpfbimif: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5286)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Omiefjapdok {
    #[prost(int32, tag = "12")]
    pub retcode: i32,
    #[prost(uint32, tag = "15")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20717)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jkiojnpileo {
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dglnflcmpkn {
    #[prost(enumeration = "Binoocjmlcb", tag = "1")]
    pub cejabhlhhac: i32,
    #[prost(uint32, tag = "3")]
    pub lcddidljedn: u32,
    #[prost(uint32, repeated, tag = "8")]
    pub amlnldnjjid: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "11")]
    pub fapmpnadddf: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "12")]
    pub area_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4378)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lohiihfipll {
    #[prost(message, repeated, tag = "3")]
    pub adonaediebg: ::prost::alloc::vec::Vec<Becbkbinebd>,
    #[prost(uint32, tag = "14")]
    pub fbnlohmdnhd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3920)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Haiddolepbe {
    #[prost(bool, tag = "12")]
    pub is_focus: bool,
    #[prost(uint64, tag = "8")]
    pub avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21660)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hiiepjmpgjo {
    #[prost(message, optional, tag = "3")]
    pub fciibbajibk: ::core::option::Option<Fnloebiajie>,
    #[prost(uint32, tag = "4")]
    pub jnlgdefhndg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pbkkceocheb {
    #[prost(message, optional, tag = "2")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(uint32, repeated, tag = "3")]
    pub gjhdeaibali: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "6")]
    pub uid: u32,
    #[prost(message, optional, tag = "15")]
    pub pos: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25267)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jagnpfjicin {
    #[prost(uint32, repeated, tag = "1")]
    pub kkpkggpfpim: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4842)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetSceneAreaRsp {
    #[prost(uint32, tag = "4")]
    pub scene_id: u32,
    #[prost(message, repeated, tag = "6")]
    pub city_info_list: ::prost::alloc::vec::Vec<CityInfo>,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "15")]
    pub area_id_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3683)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Abanphgppaa {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(461)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ikoklhaicdc {
    #[prost(uint32, tag = "2")]
    pub group_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4123)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dijhlbndjog {
    #[prost(uint32, tag = "4")]
    pub iemhhjbanld: u32,
    #[prost(uint32, tag = "8")]
    pub caeoniplbjc: u32,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1948)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Heegiffeljn {
    #[prost(message, optional, tag = "3")]
    pub najjacopagi: ::core::option::Option<Kdmidlbhjjd>,
    #[prost(enumeration = "ForwardType", tag = "8")]
    pub forward_type: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28372)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pfokcbiekgi {
    #[prost(message, repeated, tag = "5")]
    pub jihicaoehol: ::prost::alloc::vec::Vec<Cegmhfpbajj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nejpgchkklf {
    #[prost(uint32, tag = "1")]
    pub bodiejclgmb: u32,
    #[prost(bool, tag = "2")]
    pub nbonodmnfok: bool,
    #[prost(uint32, tag = "8")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "12")]
    pub kngjhmllcnp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Akpmjoialfd {
    #[prost(uint32, tag = "1")]
    pub avatar_id: u32,
    #[prost(bool, tag = "2")]
    pub gdfoebgclhc: bool,
    #[prost(uint32, tag = "3")]
    pub costume_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3988)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bkokijgheoa {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2042)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eeinamgkpjk {
    #[prost(enumeration = "Nppcjphmhbm", tag = "8")]
    pub mmdaifbdglj: i32,
    #[prost(uint64, tag = "14")]
    pub nkcolnajdca: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(961)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ldllpbeaehm {
    #[prost(bool, tag = "6")]
    pub kgknlkebilg: bool,
    #[prost(uint32, repeated, tag = "8")]
    pub klcdkpnmnln: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
    #[prost(uint32, tag = "12")]
    pub fiddpfbimif: u32,
    #[prost(bool, tag = "13")]
    pub hecncammjdo: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4829)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ccfgmlaaomm {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8706)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jpimmkpjicl {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jicmpnojhli {
    #[prost(uint32, repeated, tag = "1")]
    pub lonjoaagemm: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "7")]
    pub hhnmcjfeghe: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "10")]
    pub skill_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Olkpfenblgf {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21074)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kakpoakmkcl {
    #[prost(message, repeated, tag = "9")]
    pub jgkhhflnfem: ::prost::alloc::vec::Vec<Ombeifnnedf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2138)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Namadigdlfk {
    #[prost(uint32, tag = "6")]
    pub id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1595)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Polddcgelnh {
    #[prost(uint32, tag = "12")]
    pub mmbgkomhddi: u32,
    #[prost(bool, tag = "7")]
    pub jfjndakfjek: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AbilityString {
    #[prost(oneof = "ability_string::Type", tags = "1, 2")]
    pub r#type: ::core::option::Option<ability_string::Type>,
}
/// Nested message and enum types in `AbilityString`.
pub mod ability_string {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Type {
        #[prost(string, tag = "1")]
        Str(::prost::alloc::string::String),
        #[prost(uint32, tag = "2")]
        Hash(u32),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Igcdehpiifm {
    #[prost(uint32, tag = "2")]
    pub dbpaikamkkg: u32,
    #[prost(uint32, tag = "7")]
    pub state: u32,
    #[prost(uint32, tag = "13")]
    pub pjabefajbgb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6873)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eklncdbahph {
    #[prost(message, optional, tag = "6")]
    pub mllkgfamkfh: ::core::option::Option<Lfljdeihldm>,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(uint32, tag = "9")]
    pub phbfokpbfil: u32,
    #[prost(bool, tag = "14")]
    pub ccjpkbgbiia: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gmcjndhelfg {
    #[prost(message, repeated, tag = "10")]
    pub aadbjjjejjp: ::prost::alloc::vec::Vec<Bbhgimgpbli>,
    #[prost(uint32, tag = "15")]
    pub skill_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jenocmlchok {
    #[prost(uint32, tag = "2")]
    pub idgfdigpldd: u32,
    #[prost(uint32, tag = "8")]
    pub glmelcigmag: u32,
    #[prost(uint32, tag = "11")]
    pub imjenfjpgnp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nmnaeoabpgd {
    #[prost(uint32, tag = "2")]
    pub level_id: u32,
    #[prost(uint32, tag = "6")]
    pub bodiejclgmb: u32,
    #[prost(uint32, tag = "9")]
    pub score: u32,
    #[prost(bool, tag = "12")]
    pub omeniamedce: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dejmibobpoe {
    #[prost(uint32, tag = "1")]
    pub uid: u32,
    #[prost(string, tag = "4")]
    pub name: ::prost::alloc::string::String,
    #[prost(bool, tag = "5")]
    pub hpddgghmbme: bool,
    #[prost(uint32, tag = "6")]
    pub scene_id: u32,
    #[prost(message, optional, tag = "8")]
    pub ehilknjimpb: ::core::option::Option<Olheklkendn>,
    #[prost(uint32, tag = "15")]
    pub peer_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Idgpddogepo {
    #[prost(float, tag = "1")]
    pub licidpgeiaj: f32,
    #[prost(message, optional, tag = "3")]
    pub oipcdlondgp: ::core::option::Option<Vector>,
    #[prost(uint32, repeated, tag = "5")]
    pub pmedeininbj: ::prost::alloc::vec::Vec<u32>,
    #[prost(string, tag = "6")]
    pub hebpmhdicod: ::prost::alloc::string::String,
    #[prost(int32, tag = "8")]
    pub gbpipbcjchj: i32,
    #[prost(bool, tag = "9")]
    pub hadpellmaok: bool,
    #[prost(uint32, tag = "10")]
    pub entity_id: u32,
    #[prost(float, tag = "13")]
    pub minlilbmflm: f32,
    #[prost(bool, tag = "14")]
    pub doggikkpbmf: bool,
    #[prost(float, tag = "15")]
    pub speed: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4863)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ljogikolnij {
    #[prost(uint32, tag = "3")]
    pub dnbefljlamb: u32,
    #[prost(uint32, tag = "6")]
    pub finahglfhag: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25829)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hhenoadjnkb {
    #[prost(uint32, tag = "14")]
    pub player_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Djnokaemjai {
    #[prost(message, optional, tag = "1")]
    pub abanhbbodcf: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "3")]
    pub ncjhcpepnbj: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "5")]
    pub omanbkckojg: u32,
    #[prost(float, tag = "6")]
    pub hjheehgopfd: f32,
    #[prost(message, optional, tag = "8")]
    pub cbmhgffjbpe: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "10")]
    pub fdndlgaming: ::core::option::Option<Vector>,
    #[prost(float, tag = "11")]
    pub lgihijlefdf: f32,
    #[prost(float, tag = "14")]
    pub knfficifccn: f32,
    #[prost(float, tag = "15")]
    pub ohghmocodlg: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2260)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lmfbfgjedkn {
    #[prost(message, repeated, tag = "4")]
    pub hdcjfkpplfc: ::prost::alloc::vec::Vec<Hmgbjnndkem>,
    #[prost(message, optional, tag = "7")]
    pub jajakiiiapi: ::core::option::Option<Kkhblipjobe>,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29369)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Glinbnfejlc {
    #[prost(uint32, tag = "15")]
    pub dpmaabplgdp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9144)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nbcdmdodapp {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3887)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Egmnjibckcn {
    #[prost(uint32, tag = "1")]
    pub acjciejimlk: u32,
    #[prost(uint32, tag = "2")]
    pub eaipgemknpo: u32,
    #[prost(message, repeated, tag = "4")]
    pub mfhdjfobnla: ::prost::alloc::vec::Vec<Ohnbiglkkhd>,
    #[prost(uint32, tag = "5")]
    pub jbbclapjpoe: u32,
    #[prost(uint32, tag = "7")]
    pub lchbeahgheo: u32,
    #[prost(uint32, tag = "10")]
    pub bnlhpfjkdif: u32,
    #[prost(message, repeated, tag = "11")]
    pub dfpjjijgmpf: ::prost::alloc::vec::Vec<Mliikoadnpe>,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
    #[prost(uint32, tag = "15")]
    pub cmokgpfljei: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aeflpkaejde {
    #[prost(uint32, tag = "1")]
    pub pjloniblaae: u32,
    #[prost(bool, tag = "3")]
    pub mpfldfdogai: bool,
    #[prost(uint32, tag = "6")]
    pub hdbchcemajc: u32,
    #[prost(message, repeated, tag = "13")]
    pub lebkpfcakfl: ::prost::alloc::vec::Vec<Jdehfaeidon>,
    #[prost(message, repeated, tag = "15")]
    pub fgefhbepfaa: ::prost::alloc::vec::Vec<Hlbnlhgcpfc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nedlfhjjonk {
    #[prost(uint32, tag = "1")]
    pub ffobionlmoj: u32,
    #[prost(message, optional, tag = "7")]
    pub hpoeckekafa: ::core::option::Option<Ijpadigmnph>,
    #[prost(float, tag = "9")]
    pub cckjpdchobj: f32,
    #[prost(uint32, tag = "10")]
    pub scene_id: u32,
    #[prost(uint32, tag = "13")]
    pub klmmambhjdm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cdmobolhbjl {
    #[prost(message, optional, tag = "1")]
    pub occdlhphnih: ::core::option::Option<Oamhdlmdfkp>,
    #[prost(message, optional, tag = "3")]
    pub bclbhobhbim: ::core::option::Option<Gndppdjeihi>,
    #[prost(message, optional, tag = "11")]
    pub bfaficcjaaa: ::core::option::Option<Ipdfpejjfjl>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7748)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kaedhnmlnom {
    #[prost(uint32, tag = "14")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GadgetPlayInfo {
    #[prost(uint32, tag = "1")]
    pub play_type: u32,
    #[prost(uint32, tag = "2")]
    pub duration: u32,
    #[prost(uint32, repeated, tag = "3")]
    pub progress_stage_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "4")]
    pub start_cd: u32,
    #[prost(uint32, tag = "5")]
    pub start_time: u32,
    #[prost(uint32, tag = "6")]
    pub progress: u32,
    #[prost(oneof = "gadget_play_info::Ncmnbddimhe", tags = "21")]
    pub ncmnbddimhe: ::core::option::Option<gadget_play_info::Ncmnbddimhe>,
}
/// Nested message and enum types in `GadgetPlayInfo`.
pub mod gadget_play_info {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Ncmnbddimhe {
        #[prost(message, tag = "21")]
        CrucibleInfo(super::GadgetCrucibleInfo),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24457)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Coocgbbbiio {
    #[prost(message, optional, tag = "11")]
    pub ekdkeobgnmm: ::core::option::Option<SceneEntityInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3411)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ickfccagjpf {
    #[prost(uint32, tag = "13")]
    pub mp_play_id: u32,
    #[prost(bool, tag = "6")]
    pub mihonjccajc: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3287)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mkajonkkofh {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "7")]
    pub aldlofknhcn: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7487)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ikcblghmdaa {
    #[prost(uint32, tag = "4")]
    pub godogijjjia: u32,
    #[prost(map = "uint32, message", tag = "8")]
    pub nmoocjnbeoh: ::std::collections::HashMap<u32, Bphpdccaegc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aggnddndhfl {
    #[prost(bool, tag = "10")]
    pub pmjlllfophk: bool,
    #[prost(bool, tag = "12")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "13")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22147)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Llkijpghadk {
    #[prost(message, repeated, tag = "12")]
    pub info_list: ::prost::alloc::vec::Vec<Ackhdoigjcc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27092)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aiilenoabhc {
    #[prost(message, repeated, tag = "11")]
    pub hboichgieom: ::prost::alloc::vec::Vec<Olncpfjiekm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fidflfbfhhh {
    #[prost(bool, tag = "6")]
    pub pmjlllfophk: bool,
    #[prost(uint32, tag = "10")]
    pub gabgnkoioch: u32,
    #[prost(uint32, tag = "15")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Material {
    #[prost(uint32, tag = "1")]
    pub count: u32,
    #[prost(message, optional, tag = "2")]
    pub delete_info: ::core::option::Option<MaterialDeleteInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1687)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bihjndjonhi {
    #[prost(message, optional, tag = "11")]
    pub fbedpgncbll: ::core::option::Option<Jlfkagacplj>,
    #[prost(bool, tag = "9")]
    pub pknbcifedmf: bool,
    #[prost(uint32, tag = "12")]
    pub oajoobghagm: u32,
    #[prost(uint32, tag = "8")]
    pub point_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23785)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cgaagiediec {
    #[prost(message, optional, tag = "3")]
    pub mcdogialdkp: ::core::option::Option<Lfobkbcnfic>,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23278)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lpeffnfgmfk {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oamilbdlaid {
    #[prost(message, repeated, tag = "4")]
    pub admkpepmoah: ::prost::alloc::vec::Vec<Fidflfbfhhh>,
    #[prost(message, repeated, tag = "14")]
    pub lildonieldm: ::prost::alloc::vec::Vec<Lkkfhdfbahj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nijkankibla {
    #[prost(uint32, tag = "13")]
    pub config_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Phlkjjnbnhc {
    #[prost(message, repeated, tag = "11")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Abgkedbgbln>,
    #[prost(message, repeated, tag = "14")]
    pub pgejgjmggog: ::prost::alloc::vec::Vec<Pheepllkchj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bphpdccaegc {
    #[prost(bool, tag = "3")]
    pub omeniamedce: bool,
    #[prost(message, optional, tag = "9")]
    pub nganceicghc: ::core::option::Option<Fpoeaodohgo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6409)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hnagcjhdjpj {
    #[prost(message, repeated, tag = "5")]
    pub nanahpgnbpk: ::prost::alloc::vec::Vec<Ephhnheddgl>,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2412)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dlnfijhpccn {
    #[prost(uint32, tag = "2")]
    pub ebhokcegldb: u32,
    #[prost(uint32, tag = "12")]
    pub point_id: u32,
    #[prost(uint32, tag = "15")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SceneWeaponInfo {
    #[prost(uint32, tag = "1")]
    pub entity_id: u32,
    #[prost(uint32, tag = "2")]
    pub gadget_id: u32,
    #[prost(uint32, tag = "3")]
    pub item_id: u32,
    #[prost(uint64, tag = "4")]
    pub guid: u64,
    #[prost(uint32, tag = "5")]
    pub level: u32,
    #[prost(uint32, tag = "6")]
    pub promote_level: u32,
    #[prost(message, optional, tag = "7")]
    pub ability_info: ::core::option::Option<AbilitySyncStateInfo>,
    #[prost(map = "uint32, uint32", tag = "8")]
    pub affix_map: ::std::collections::HashMap<u32, u32>,
    #[prost(message, optional, tag = "9")]
    pub renderer_changed_info: ::core::option::Option<EntityRendererChangedInfo>,
    #[prost(bool, tag = "10")]
    pub jafjmobleni: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7376)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ojmnlhnfgbm {
    #[prost(message, repeated, tag = "8")]
    pub flpnidhnffm: ::prost::alloc::vec::Vec<Hhlmfpohmch>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2039)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mdooapopclp {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(enumeration = "Ckleegmpdgn", tag = "13")]
    pub agmhmdhefkd: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26956)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mflhjljnfkc {
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6541)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Njahcgbbemj {
    #[prost(uint32, tag = "6")]
    pub entity_id: u32,
    #[prost(enumeration = "ForwardType", tag = "9")]
    pub forward_type: i32,
    #[prost(uint32, tag = "10")]
    pub faehehjeooh: u32,
    #[prost(bool, tag = "13")]
    pub jejjboelche: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Haljnijmecg {
    #[prost(uint32, repeated, tag = "4")]
    pub abmofhgmljl: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "6")]
    pub equip_type: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Naddoalalbk {
    #[prost(bool, tag = "7")]
    pub cjohojmcmfh: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(818)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kkeefdkndmj {
    #[prost(uint32, tag = "3")]
    pub level: u32,
    #[prost(uint32, tag = "12")]
    pub exp: u32,
    #[prost(uint32, repeated, tag = "14")]
    pub hdhjfcbnlml: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(897)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ccdaodbboll {
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct CoinCollectOperatorInfo {
    #[prost(uint32, tag = "1")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6647)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mjehdhdnjhd {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint64, tag = "6")]
    pub ihgjlfcgfin: u64,
    #[prost(enumeration = "Kpfoblalblc", tag = "13")]
    pub daakpcoabep: i32,
    #[prost(oneof = "mjehdhdnjhd::Fdjmhhhdkae", tags = "5")]
    pub fdjmhhhdkae: ::core::option::Option<mjehdhdnjhd::Fdjmhhhdkae>,
}
/// Nested message and enum types in `MJEHDHDNJHD`.
pub mod mjehdhdnjhd {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Fdjmhhhdkae {
        #[prost(message, tag = "5")]
        MusicRecord(super::Ookjdbingha),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5988)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Obhgpfdomkn {
    #[prost(bool, tag = "13")]
    pub pcmcmnlgdap: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3804)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mcpihbijhda {
    #[prost(uint32, repeated, tag = "10")]
    pub ckbbaoimlla: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jcdklogibbp {
    #[prost(uint32, tag = "2")]
    pub entity_id: u32,
    #[prost(uint32, tag = "8")]
    pub hiiacifpnee: u32,
    #[prost(uint32, tag = "12")]
    pub jamaakmphfg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6371)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Iahnfaghckk {
    #[prost(uint32, tag = "1")]
    pub draft_id: u32,
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "9")]
    pub bbhiohpmbml: ::prost::alloc::vec::Vec<Agfmpdbglop>,
    #[prost(uint32, tag = "10")]
    pub fcfopolhlof: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Emgfcaeogkb {
    #[prost(message, optional, tag = "3")]
    pub move_dir: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "4")]
    pub afhajacfljb: u32,
    #[prost(message, optional, tag = "7")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "10")]
    pub rot: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gmpkodpacgm {
    #[prost(bool, tag = "2")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "9")]
    pub pnkgnhiedfa: u32,
    #[prost(uint32, tag = "14")]
    pub iejpghnlidb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4955)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jneajdmdmni {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dlfncklbgif {
    #[prost(uint32, tag = "11")]
    pub iimiolenble: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Peomgjehone {
    #[prost(message, repeated, tag = "6")]
    pub gjihlnaeggd: ::prost::alloc::vec::Vec<Fdockhoiobj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22823)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hohjelgpcae {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3612)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Boamiegldph {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct BlossomChestInfo {
    #[prost(uint32, tag = "1")]
    pub resin: u32,
    #[prost(uint32, repeated, tag = "2")]
    pub qualify_uid_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "3")]
    pub remain_uid_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "4")]
    pub ddnkdjjnnci: u32,
    #[prost(uint32, tag = "5")]
    pub kadknclikao: u32,
    #[prost(uint32, tag = "6")]
    pub lbgllpjcdog: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26228)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pbmfjehfgmp {
    #[prost(uint32, tag = "3")]
    pub room_id: u32,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5354)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cnmfhfmfolo {
    #[prost(uint32, repeated, tag = "14")]
    pub cchgpjgoehb: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5872)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Efchlmjmoao {
    #[prost(uint64, tag = "10")]
    pub avatar_guid: u64,
    #[prost(uint32, tag = "1")]
    pub kdmeanhoaaa: u32,
    #[prost(uint32, tag = "4")]
    pub hokogiodlci: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ofbhcgggggn {
    #[prost(uint32, tag = "1")]
    pub fdhijfpbnfm: u32,
    #[prost(uint32, tag = "5")]
    pub alpobpidfla: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5687)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nabjgeafilj {
    #[prost(uint32, tag = "7")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AvatarEnterSceneInfo {
    #[prost(uint64, tag = "3")]
    pub weapon_guid: u64,
    #[prost(uint32, tag = "4")]
    pub weapon_entity_id: u32,
    #[prost(message, repeated, tag = "7")]
    pub server_buff_list: ::prost::alloc::vec::Vec<ServerBuff>,
    #[prost(uint64, tag = "8")]
    pub avatar_guid: u64,
    #[prost(uint32, tag = "9")]
    pub avatar_entity_id: u32,
    #[prost(uint32, repeated, tag = "12")]
    pub mjaoninhiib: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, optional, tag = "13")]
    pub avatar_ability_info: ::core::option::Option<AbilitySyncStateInfo>,
    #[prost(message, optional, tag = "15")]
    pub weapon_ability_info: ::core::option::Option<AbilitySyncStateInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cmgddneleop {
    #[prost(message, repeated, tag = "4")]
    pub gbabbbabohn: ::prost::alloc::vec::Vec<Gmeakpmbhmg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2928)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pnmelfmjldi {
    #[prost(uint32, tag = "1")]
    pub pmldnfnnjam: u32,
    #[prost(uint32, tag = "4")]
    pub ofelbpiccea: u32,
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
    #[prost(enumeration = "Lfjlgojmkeh", tag = "12")]
    pub imiogmdokcb: i32,
    #[prost(bool, tag = "13")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "15")]
    pub annfnkgkjph: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27118)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Molbkjiompe {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26333)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mnndoajbmdb {
    #[prost(uint32, tag = "9")]
    pub cnaifgicldh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jidjecipkcp {
    #[prost(uint32, tag = "1")]
    pub kdeokgnpeej: u32,
    #[prost(uint32, tag = "2")]
    pub neikciohndh: u32,
    #[prost(uint32, tag = "3")]
    pub fjamcdjdjoa: u32,
    #[prost(uint32, tag = "7")]
    pub ldnkcljncbf: u32,
    #[prost(uint32, tag = "11")]
    pub caelanbjhfp: u32,
    #[prost(uint32, tag = "13")]
    pub ffhpdcibkod: u32,
    #[prost(uint32, tag = "14")]
    pub jlgckbfjkgi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28806)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pddliciijko {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct EvtBeingHitInfo {
    #[prost(uint32, tag = "1")]
    pub peer_id: u32,
    #[prost(uint32, tag = "8")]
    pub frame_num: u32,
    #[prost(message, optional, tag = "13")]
    pub attack_result: ::core::option::Option<AttackResult>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25234)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iehdoppijpo {
    #[prost(bool, tag = "13")]
    pub mimgkddgbpc: bool,
    #[prost(bool, tag = "5")]
    pub hnadlalnmio: bool,
    #[prost(uint32, tag = "6")]
    pub guid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(34)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Khdhmepfffj {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nfklnncfjlj {
    #[prost(map = "uint32, uint32", tag = "4")]
    pub fjkfkdlgfbf: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1874)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Leofppeclaj {
    #[prost(message, repeated, tag = "7")]
    pub jdmjcnbiaoh: ::prost::alloc::vec::Vec<Manlpkpnaoj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Coebeadnaio {
    #[prost(uint32, tag = "10")]
    pub team_entity_id: u32,
    #[prost(message, optional, tag = "13")]
    pub team_ability_info: ::core::option::Option<AbilitySyncStateInfo>,
    #[prost(uint32, tag = "14")]
    pub authority_peer_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26935)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nfbnagfnlbh {
    #[prost(bool, tag = "1")]
    pub mihonjccajc: bool,
    #[prost(uint32, tag = "4")]
    pub aoegkkajean: u32,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7429)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pgnkenigmbd {
    #[prost(message, optional, tag = "2")]
    pub op: ::core::option::Option<Jnebbaffgpj>,
    #[prost(uint32, tag = "10")]
    pub aphibljmpcc: u32,
    #[prost(uint32, tag = "4")]
    pub lihhcnjjaja: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct AbilityIdentifier {
    #[prost(uint32, tag = "6")]
    pub instanced_modifier_id: u32,
    #[prost(uint32, tag = "7")]
    pub lplickefhfd: u32,
    #[prost(uint32, tag = "8")]
    pub instanced_ability_id: u32,
    #[prost(bool, tag = "10")]
    pub is_serverbuff_modifier: bool,
    #[prost(int32, tag = "11")]
    pub local_id: i32,
    #[prost(uint32, tag = "13")]
    pub jejepaeokdn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27241)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Khdihoaokfi {
    #[prost(message, optional, tag = "6")]
    pub lcngkmhhdbl: ::core::option::Option<Vector>,
    #[prost(enumeration = "Cdnoeaaolmh", tag = "13")]
    pub play_type: i32,
    #[prost(string, tag = "15")]
    pub hbneffbfenk: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25458)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Noookkhokdp {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6657)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mahncodncci {
    #[prost(uint64, tag = "3")]
    pub ihgjlfcgfin: u64,
    #[prost(enumeration = "Kpfoblalblc", tag = "4")]
    pub daakpcoabep: i32,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6580)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pjipiipdanh {
    #[prost(uint32, tag = "13")]
    pub entity_id: u32,
    #[prost(uint32, tag = "2")]
    pub iecejkopppm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kcjmdcfpobf {
    #[prost(uint32, tag = "1")]
    pub iieilnhpcji: u32,
    #[prost(message, repeated, tag = "7")]
    pub mifplaakkfp: ::prost::alloc::vec::Vec<Mdkgkhmhlmh>,
    #[prost(uint32, tag = "14")]
    pub bfbmafjfhja: u32,
    #[prost(uint32, tag = "15")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21637)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gbnfejhlljh {
    #[prost(message, repeated, tag = "2")]
    pub kpnbohhnkhe: ::prost::alloc::vec::Vec<Pimeinbajfb>,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "10")]
    pub fidflablfmo: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "12")]
    pub city_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24997)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cffffodfnem {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1161)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hdjpdgjjlbp {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23747)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gmllnccoeao {
    #[prost(uint32, tag = "6")]
    pub akckjlabnhd: u32,
    #[prost(uint32, tag = "12")]
    pub lenjloinpff: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2993)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lmoniiiahbj {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3728)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hibengbckle {
    #[prost(message, repeated, tag = "6")]
    pub pmjgjnilmbp: ::prost::alloc::vec::Vec<Ofifgoopcdo>,
    #[prost(uint32, tag = "8")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "7")]
    pub bodiejclgmb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23826)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pnpkjdmlblp {
    #[prost(map = "uint32, message", tag = "4")]
    pub iddoablmblp: ::std::collections::HashMap<u32, Bhdnhbgeaeh>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ddjmmdlakli {
    #[prost(uint32, tag = "5")]
    pub level_id: u32,
    #[prost(bool, tag = "9")]
    pub glkngddnocn: bool,
    #[prost(bool, tag = "11")]
    pub is_finish: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6598)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gpbfahdfpih {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(enumeration = "Kpfoblalblc", tag = "10")]
    pub daakpcoabep: i32,
    #[prost(bool, tag = "14")]
    pub hlalmdgmpfm: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29468)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bokhopdnoge {
    #[prost(bool, tag = "5")]
    pub fkmojgneedg: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7770)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hlbabjncdog {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29224)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dilmlkkhonk {
    #[prost(uint32, tag = "5")]
    pub bhcegggpkeb: u32,
    #[prost(uint32, tag = "1")]
    pub jbfdogpakkc: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29935)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Obhmoonjlcd {
    #[prost(uint32, tag = "3")]
    pub group_id: u32,
    #[prost(uint32, tag = "9")]
    pub gadget_config_id: u32,
    #[prost(uint32, tag = "11")]
    pub dmnligdadgb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21311)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pfnfjminkml {
    #[prost(message, optional, tag = "1")]
    pub jiagfelmpec: ::core::option::Option<Lleoikmgaeo>,
    #[prost(float, tag = "3")]
    pub gmmcakmdmpp: f32,
    #[prost(float, tag = "4")]
    pub bpifpgnjcjj: f32,
    #[prost(bool, tag = "5")]
    pub pcfiaibhkoa: bool,
    #[prost(uint32, tag = "6")]
    pub gjlmnohpjka: u32,
    #[prost(uint32, tag = "7")]
    pub entity_id: u32,
    #[prost(float, tag = "8")]
    pub duration: f32,
    #[prost(message, optional, tag = "9")]
    pub pbobneoccag: ::core::option::Option<Lleoikmgaeo>,
    #[prost(message, optional, tag = "10")]
    pub pgndbmlkdma: ::core::option::Option<Vector>,
    #[prost(bool, tag = "11")]
    pub jfgaoihicbf: bool,
    #[prost(message, optional, tag = "12")]
    pub clejachpnaf: ::core::option::Option<Vector>,
    #[prost(bool, tag = "13")]
    pub iehmmahbimn: bool,
    #[prost(enumeration = "Gekhgcjeafi", tag = "14")]
    pub lljkjmfhegf: i32,
    #[prost(string, repeated, tag = "15")]
    pub gklephhpnld: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5454)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gbligiecaon {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23239)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cdjfffeaddn {
    #[prost(uint32, tag = "4")]
    pub cebhhjpnhna: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pfpjekbjjbg {
    #[prost(uint32, repeated, tag = "10")]
    pub dlceifkffaa: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, optional, tag = "11")]
    pub hhaoekldnol: ::core::option::Option<Obnkiapklnb>,
    #[prost(uint32, repeated, tag = "12")]
    pub annckmohnle: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Egbghopmdob {
    #[prost(uint32, tag = "3")]
    pub nekecfnahom: u32,
    #[prost(message, repeated, tag = "13")]
    pub kabodnmegek: ::prost::alloc::vec::Vec<Pbhoneekpmb>,
    #[prost(uint32, tag = "14")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28641)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gaofhobgjnl {
    #[prost(message, optional, tag = "1")]
    pub ahlcpipebnp: ::core::option::Option<Bkheifhdkfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dalcchibohb {
    #[prost(uint32, tag = "5")]
    pub glciaekdpgl: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29506)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Agmimgiknhg {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6125)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mfkeijikfdl {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Enofbcmaajl {
    #[prost(uint32, tag = "1")]
    pub ogaadhhjeec: u32,
    #[prost(bool, tag = "2")]
    pub omeniamedce: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26824)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pegihdmcahj {
    #[prost(uint64, tag = "6")]
    pub jiocjmljchl: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nfilmagdngj {
    #[prost(message, repeated, tag = "4")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Kapljmblbme>,
    #[prost(bool, tag = "8")]
    pub oadmkdgjlam: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20968)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ikdpndblblg {
    #[prost(uint32, tag = "9")]
    pub entity_id: u32,
    #[prost(message, repeated, tag = "10")]
    pub jjblblmdphc: ::prost::alloc::vec::Vec<Ldkjnpenphg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mbghhpnoild {
    #[prost(message, repeated, tag = "1")]
    pub glhkopmfggn: ::prost::alloc::vec::Vec<Jenocmlchok>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Odcehfpdnek {
    #[prost(bool, tag = "2")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "3")]
    pub nmaapldbbni: u32,
    #[prost(uint32, tag = "4")]
    pub level_id: u32,
    #[prost(bool, tag = "7")]
    pub pmjlllfophk: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fpahdflmhnd {
    #[prost(string, tag = "2")]
    pub omknbnmebik: ::prost::alloc::string::String,
    #[prost(uint32, tag = "15")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gbjbjkbneke {
    #[prost(string, tag = "4")]
    pub nick_name: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "8")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
    #[prost(string, tag = "9")]
    pub ijlhlcllene: ::prost::alloc::string::String,
    #[prost(uint32, tag = "10")]
    pub uid: u32,
    #[prost(string, tag = "12")]
    pub efajihmnobk: ::prost::alloc::string::String,
    #[prost(string, tag = "15")]
    pub mhpfnlkcfom: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21138)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Olknefbhbnj {
    #[prost(message, repeated, tag = "1")]
    pub lanjbjgnboh: ::prost::alloc::vec::Vec<Ifpnjpjlnof>,
    #[prost(message, repeated, tag = "9")]
    pub ipclfkldkfa: ::prost::alloc::vec::Vec<Iallekkfhcl>,
    #[prost(uint32, tag = "13")]
    pub oajoobghagm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bbgdglphgbl {
    #[prost(uint32, tag = "6")]
    pub dopolepiica: u32,
    #[prost(uint32, tag = "8")]
    pub mkcgmmganlk: u32,
    #[prost(bool, tag = "13")]
    pub mpfldfdogai: bool,
    #[prost(bool, tag = "15")]
    pub pjkkpodcegi: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ebpbojinpgp {
    #[prost(message, repeated, tag = "15")]
    pub pndpnmbdokf: ::prost::alloc::vec::Vec<Dgbkpbinnje>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oefgijnblkg {
    #[prost(message, repeated, tag = "4")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Ddjmmdlakli>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22437)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jcjckdobfcc {
    #[prost(uint32, repeated, tag = "1")]
    pub param_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7405)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kjfpdpieibc {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "13")]
    pub bejpdehppgl: ::prost::alloc::vec::Vec<Jpkegghaecg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7391)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cdpdjdcdnjf {
    #[prost(message, optional, tag = "10")]
    pub holkpjjeeim: ::core::option::Option<Cjceknnabgi>,
    #[prost(message, repeated, tag = "5")]
    pub peebjaoikfc: ::prost::alloc::vec::Vec<Ldcechmbpfh>,
    #[prost(uint64, tag = "9")]
    pub guid: u64,
    #[prost(bool, tag = "8")]
    pub nklkdpabdgi: bool,
    #[prost(bool, tag = "13")]
    pub hpfccafchdh: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7046)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pgphnommdeb {
    #[prost(uint32, repeated, tag = "5")]
    pub mnchcggmlpa: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "8")]
    pub uid: u32,
    #[prost(uint32, repeated, tag = "14")]
    pub ilcfmfpnmna: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22141)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hmbaaelemjd {
    #[prost(uint32, repeated, tag = "10")]
    pub pakjgmcbadf: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23521)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Blfapemeiaf {
    #[prost(message, repeated, tag = "3")]
    pub cihgnhkebip: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "9")]
    pub ohompjglpji: ::prost::alloc::vec::Vec<Jickppdlohc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22546)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct EvtAvatarLockChairRsp {
    #[prost(uint64, tag = "1")]
    pub chair_id: u64,
    #[prost(uint32, tag = "3")]
    pub entity_id: u32,
    #[prost(int32, tag = "10")]
    pub direction: i32,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
    #[prost(message, optional, tag = "15")]
    pub position: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(851)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ikpieedibaf {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "7")]
    pub ggcfiehankk: u32,
    #[prost(uint64, tag = "9")]
    pub ihgjlfcgfin: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9507)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lbgegilmbia {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "5")]
    pub jggobknpmfj: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "10")]
    pub hggehlmhkmp: u32,
    #[prost(uint32, tag = "13")]
    pub point_id: u32,
    #[prost(uint32, tag = "14")]
    pub ajjeblpnahp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4009)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pldhgncaleh {
    #[prost(message, repeated, tag = "8")]
    pub mgkkjahfcah: ::prost::alloc::vec::Vec<Gophdegagdj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gophdegagdj {
    #[prost(enumeration = "Nfonhfamdne", repeated, tag = "8")]
    pub ancflfipdei: ::prost::alloc::vec::Vec<i32>,
    #[prost(uint32, repeated, tag = "12")]
    pub jhlbppfggpg: ::prost::alloc::vec::Vec<u32>,
    #[prost(string, tag = "13")]
    pub faapanhdoge: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(438)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bnniodkjgof {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(bool, tag = "7")]
    pub gcacpomlgmj: bool,
    #[prost(message, repeated, tag = "10")]
    pub hilllclaile: ::prost::alloc::vec::Vec<Jiiomjgcklo>,
    #[prost(uint32, repeated, tag = "15")]
    pub dgdchjkcjip: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26288)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fddkllpfdll {
    #[prost(uint32, tag = "4")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gobhfjnbfkn {
    #[prost(bool, tag = "2")]
    pub is_finish: bool,
    #[prost(uint32, tag = "8")]
    pub ogdcenflhjn: u32,
    #[prost(uint32, tag = "10")]
    pub nmaapldbbni: u32,
    #[prost(uint32, tag = "14")]
    pub level_id: u32,
    #[prost(bool, tag = "15")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24481)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ngcifdjdhhb {
    #[prost(uint32, tag = "4")]
    pub gnpfegingko: u32,
    #[prost(bool, tag = "5")]
    pub is_finish: bool,
    #[prost(uint32, tag = "3")]
    pub level_id: u32,
    #[prost(uint32, tag = "7")]
    pub ggagmenijdb: u32,
    #[prost(uint32, tag = "13")]
    pub ffjekiljmjc: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct RegionInfo {
    #[prost(string, tag = "1")]
    pub gateserver_ip: ::prost::alloc::string::String,
    #[prost(uint32, tag = "2")]
    pub gateserver_port: u32,
    #[prost(string, tag = "3")]
    pub pay_callback_url: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub area_type: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub resource_url: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub data_url: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub feedback_url: ::prost::alloc::string::String,
    #[prost(string, tag = "11")]
    pub bulletin_url: ::prost::alloc::string::String,
    #[prost(string, tag = "12")]
    pub resource_url_bak: ::prost::alloc::string::String,
    #[prost(string, tag = "13")]
    pub data_url_bak: ::prost::alloc::string::String,
    #[prost(uint32, tag = "14")]
    pub client_data_version: u32,
    #[prost(string, tag = "16")]
    pub handbook_url: ::prost::alloc::string::String,
    #[prost(uint32, tag = "18")]
    pub client_silence_data_version: u32,
    #[prost(string, tag = "19")]
    pub client_data_md5: ::prost::alloc::string::String,
    #[prost(string, tag = "20")]
    pub client_silence_data_md5: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "22")]
    pub res_version_config: ::core::option::Option<ResVersionConfig>,
    #[prost(bytes = "vec", tag = "23")]
    pub secret_key: ::prost::alloc::vec::Vec<u8>,
    #[prost(string, tag = "24")]
    pub official_community_url: ::prost::alloc::string::String,
    #[prost(string, tag = "26")]
    pub client_version_suffix: ::prost::alloc::string::String,
    #[prost(string, tag = "27")]
    pub client_silence_version_suffix: ::prost::alloc::string::String,
    #[prost(bool, tag = "28")]
    pub use_gateserver_domain_name: bool,
    #[prost(string, tag = "29")]
    pub gateserver_domain_name: ::prost::alloc::string::String,
    #[prost(string, tag = "30")]
    pub user_center_url: ::prost::alloc::string::String,
    #[prost(string, tag = "31")]
    pub account_bind_url: ::prost::alloc::string::String,
    #[prost(string, tag = "32")]
    pub cdkey_url: ::prost::alloc::string::String,
    #[prost(string, tag = "33")]
    pub privacy_policy_url: ::prost::alloc::string::String,
    #[prost(string, tag = "34")]
    pub next_resource_url: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "35")]
    pub next_res_version_config: ::core::option::Option<ResVersionConfig>,
    #[prost(string, tag = "36")]
    pub game_biz: ::prost::alloc::string::String,
    #[prost(string, tag = "37")]
    pub jlkbpbjpnag: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9960)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mcbgnabnnoj {
    #[prost(uint32, repeated, tag = "10")]
    pub hfdblmejkgj: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pfnopcldnil {
    #[prost(message, optional, tag = "1")]
    pub hkndhdnkkji: ::core::option::Option<MotionInfo>,
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "4")]
    pub entity_id: u32,
    #[prost(uint32, tag = "12")]
    pub reliable_seq: u32,
    #[prost(uint32, tag = "13")]
    pub scene_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29897)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nokkcdmailm {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(bool, tag = "9")]
    pub ogkgndickkl: bool,
    #[prost(string, tag = "14")]
    pub nkanjijnimc: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ahlfieejihl {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(enumeration = "Abbfnmpefpj", tag = "14")]
    pub enoekklhbnh: i32,
    #[prost(oneof = "ahlfieejihl::Hkfoeceoobo", tags = "3, 7, 8, 10, 13")]
    pub hkfoeceoobo: ::core::option::Option<ahlfieejihl::Hkfoeceoobo>,
}
/// Nested message and enum types in `AHLFIEEJIHL`.
pub mod ahlfieejihl {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Hkfoeceoobo {
        #[prost(message, tag = "3")]
        SyncAction(super::Khmodclefpe),
        #[prost(message, tag = "7")]
        SyncFinishGame(super::Elbnimpamfp),
        #[prost(message, tag = "8")]
        SyncPing(super::Emndgkkckgo),
        #[prost(message, tag = "10")]
        SyncCreateConnect(super::Hgjdncckhae),
        #[prost(message, tag = "13")]
        SyncSnapShot(super::Opgmggfecmj),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kglmkabnmmm {
    #[prost(int32, repeated, tag = "2")]
    pub ppgkldflino: ::prost::alloc::vec::Vec<i32>,
    #[prost(message, optional, tag = "7")]
    pub gfgfkcjaeob: ::core::option::Option<Vector>,
    #[prost(int32, tag = "8")]
    pub mdcjioheeem: i32,
    #[prost(message, optional, tag = "10")]
    pub okanhemddpn: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2120)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ljehmmnldcp {
    #[prost(message, optional, tag = "3")]
    pub apjdfnanbdo: ::core::option::Option<Kjdpjhlalai>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23597)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jljbhoafgaf {
    #[prost(uint32, tag = "2")]
    pub parent_quest_id: u32,
    #[prost(map = "uint32, uint32", tag = "13")]
    pub mjdaohhpppc: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gifmlkjcbmp {
    #[prost(uint32, tag = "1")]
    pub aadkglakicj: u32,
    #[prost(uint32, tag = "2")]
    pub count: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8128)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dajdkekdpab {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Clindendfkl {
    #[prost(message, repeated, tag = "15")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Aggnddndhfl>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ololckgipjn {
    #[prost(uint32, tag = "1")]
    pub nmikcmlkndm: u32,
    #[prost(bool, tag = "3")]
    pub lailpnooajc: bool,
    #[prost(bool, tag = "4")]
    pub mpfldfdogai: bool,
    #[prost(uint32, tag = "6")]
    pub hgbbglkplfi: u32,
    #[prost(uint32, tag = "9")]
    pub fbejhlodcfn: u32,
    #[prost(map = "uint32, uint32", tag = "11")]
    pub gbhbblghdlj: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "14")]
    pub emneihdpfpm: u32,
    #[prost(uint32, tag = "15")]
    pub appigjmkegg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5295)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kaidlndjfem {
    #[prost(message, optional, tag = "1")]
    pub dbdnmhcjfoc: ::core::option::Option<Cfbphnmcpne>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nljpjjgepmh {
    #[prost(uint32, tag = "4")]
    pub nflakfjlcme: u32,
    #[prost(uint32, tag = "7")]
    pub noajnmhaoep: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4455)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bcimgpoaanc {
    #[prost(uint32, tag = "7")]
    pub level_id: u32,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(bool, tag = "12")]
    pub hcjfdjhilam: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Agfmpdbglop {
    #[prost(enumeration = "Hckoghgenic", tag = "6")]
    pub imiogmdokcb: i32,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(uint32, tag = "9")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8358)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nklbmcccibe {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(uint32, tag = "11")]
    pub mkhendmflmf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bkbnobjbonj {
    #[prost(uint32, tag = "8")]
    pub city_id: u32,
    #[prost(uint32, tag = "15")]
    pub level: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ikoplpgjpje {
    #[prost(message, optional, tag = "4")]
    pub gafmcjbmfae: ::core::option::Option<Hpccmbdadfi>,
    #[prost(message, optional, tag = "8")]
    pub pikphkjinib: ::core::option::Option<Iebkhmdmhii>,
    #[prost(message, optional, tag = "15")]
    pub addhbjkmoim: ::core::option::Option<Ebpbojinpgp>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9552)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Heffigkchda {
    #[prost(uint32, tag = "3")]
    pub gknilmnmiob: u32,
    #[prost(uint32, tag = "6")]
    pub ndcdmpindoi: u32,
    #[prost(uint32, tag = "10")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4766)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ocbkfcdcpfm {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub coegonfeekd: u32,
    #[prost(uint32, tag = "15")]
    pub lddcajjpoah: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22388)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cpfadlikenp {
    #[prost(uint32, tag = "8")]
    pub lchbeahgheo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27298)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Boapeceogge {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26819)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mmaghkpmajh {
    #[prost(uint32, tag = "1")]
    pub oeocpoekcmj: u32,
    #[prost(message, repeated, tag = "6")]
    pub lecpnadejoo: ::prost::alloc::vec::Vec<Dojjhjacoha>,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4085)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jjmpchmgggf {
    #[prost(uint32, tag = "8")]
    pub kngjhmllcnp: u32,
    #[prost(uint32, tag = "9")]
    pub score: u32,
    #[prost(uint32, tag = "12")]
    pub play_type: u32,
    #[prost(uint32, tag = "13")]
    pub entity_id: u32,
    #[prost(bool, tag = "14")]
    pub fadincnpbmd: bool,
    #[prost(message, repeated, tag = "15")]
    pub uid_info_list: ::prost::alloc::vec::Vec<Lncnfmeioli>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(342)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Odjhhjifjjg {
    #[prost(uint32, tag = "3")]
    pub pjabefajbgb: u32,
    #[prost(uint32, repeated, tag = "11")]
    pub fkileobobpk: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8422)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dhpofhaigag {
    #[prost(uint32, tag = "5")]
    pub dcedejdmlho: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kifaknnkdpc {
    #[prost(message, optional, tag = "1")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "2")]
    pub rot: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ehlkdkhkifl {
    #[prost(message, repeated, tag = "5")]
    pub bhmhdgkhbce: ::prost::alloc::vec::Vec<Gmcjndhelfg>,
    #[prost(uint32, tag = "10")]
    pub dajhkhflndj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29285)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fhliiegoleo {
    #[prost(uint32, tag = "2")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21276)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Acnonnhlgfn {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint32, tag = "11")]
    pub mlinpdnfaio: u32,
    #[prost(uint32, tag = "13")]
    pub bilekhiened: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3140)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gegkobeijda {
    #[prost(uint32, tag = "4")]
    pub avatar_id: u32,
    #[prost(uint32, tag = "6")]
    pub r#type: u32,
    #[prost(oneof = "gegkobeijda::Detail", tags = "424, 1543, 981, 1058, 110, 886, 338")]
    pub detail: ::core::option::Option<gegkobeijda::Detail>,
}
/// Nested message and enum types in `GEGKOBEIJDA`.
pub mod gegkobeijda {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(message, tag = "424")]
        ElementReliquarySetRequest(super::Gnimgoihnmc),
        #[prost(message, tag = "1543")]
        WeaponRequest(super::Minggpmedia),
        #[prost(message, tag = "981")]
        ReliquaryRequest(super::Kmhhoephmjo),
        #[prost(message, tag = "1058")]
        ElementReliquaryRequest(super::Lkhdonhbjag),
        #[prost(message, tag = "110")]
        ElementWeaponRequest(super::Phpoheggimp),
        #[prost(message, tag = "886")]
        ReliquarySetRequest(super::Cbghnfjjjod),
        #[prost(message, tag = "338")]
        SkillRequest(super::Cliigmpcidh),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29694)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jkbobohmeoe {
    #[prost(string, tag = "1")]
    pub kpiogbmlmem: ::prost::alloc::string::String,
    #[prost(enumeration = "Hmbfchkmegd", tag = "3")]
    pub oofabehbcbh: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21755)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Akdpgdocdng {
    #[prost(uint32, repeated, tag = "8")]
    pub oddcjjmgeoh: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20359)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nockpcbipce {
    #[prost(uint32, tag = "3")]
    pub city_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hdhblkglpnf {
    #[prost(bool, tag = "2")]
    pub is_finish: bool,
    #[prost(uint32, tag = "5")]
    pub mafdjfnephk: u32,
    #[prost(bool, tag = "8")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "13")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6348)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gmlgicfejba {
    #[prost(bool, tag = "2")]
    pub akcljoalodi: bool,
    #[prost(uint32, tag = "4")]
    pub bodiejclgmb: u32,
    #[prost(uint32, tag = "8")]
    pub hkegebjnjjd: u32,
    #[prost(uint32, tag = "10")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "12")]
    pub level_id: u32,
    #[prost(uint32, repeated, tag = "14")]
    pub meikgboldgh: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "15")]
    pub kfddkagjihb: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7973)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eadbaclaefg {
    #[prost(uint32, tag = "2")]
    pub hbdhcecokgp: u32,
    #[prost(uint32, tag = "1")]
    pub guid: u32,
    #[prost(uint32, tag = "15")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2869)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hldkojlibba {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24328)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bpjbcjmiapi {
    #[prost(uint32, tag = "13")]
    pub level_id: u32,
    #[prost(bool, tag = "3")]
    pub fnjegaacabo: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mdkgkhmhlmh {
    #[prost(uint32, tag = "3")]
    pub oegjaildlbk: u32,
    #[prost(uint32, tag = "8")]
    pub eldgcnigdge: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lkpclfanofb {
    #[prost(message, repeated, tag = "6")]
    pub ophejhkgdgj: ::prost::alloc::vec::Vec<Famdmpnckjb>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22306)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kkaocealjgd {
    #[prost(uint32, tag = "7")]
    pub avatar_id: u32,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Idodjeokcpo {
    #[prost(uint32, repeated, tag = "6")]
    pub mnchcggmlpa: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1168)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eglhealkplo {
    #[prost(uint32, tag = "14")]
    pub ddmbgnhphpc: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dhghpdpjnnl {
    #[prost(uint32, tag = "6")]
    pub level: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9298)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bdkckdibglh {
    #[prost(uint64, tag = "8")]
    pub guid: u64,
    #[prost(bool, tag = "6")]
    pub hlalmdgmpfm: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21522)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Heifpjambig {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(uint64, tag = "14")]
    pub guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gjnaealcbff {
    #[prost(uint32, repeated, tag = "5")]
    pub fbhbheaommc: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "10")]
    pub iinfbbkjlnj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2702)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lcjmnajpgpf {
    #[prost(uint32, repeated, tag = "11")]
    pub dhpclkchdim: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2572)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fhmdhcmeoaj {
    #[prost(uint32, tag = "3")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ndoedpndpbh {
    #[prost(message, repeated, tag = "2")]
    pub oniokncfckf: ::prost::alloc::vec::Vec<Hlembohkfkm>,
    #[prost(message, optional, tag = "3")]
    pub efdioldoahn: ::core::option::Option<Hlembohkfkm>,
    #[prost(message, optional, tag = "11")]
    pub phcalcpdjem: ::core::option::Option<Hlembohkfkm>,
    #[prost(message, optional, tag = "13")]
    pub kolmahgloac: ::core::option::Option<Hlembohkfkm>,
    #[prost(message, optional, tag = "14")]
    pub obgncfpkknm: ::core::option::Option<Hlembohkfkm>,
    #[prost(message, optional, tag = "15")]
    pub kakmdnfmmol: ::core::option::Option<Hlembohkfkm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lonmfjnldae {
    #[prost(enumeration = "Faoppmcikhj", tag = "14")]
    pub fadiffdnpgf: i32,
    #[prost(uint32, tag = "15")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Liamhbehdad {
    #[prost(uint32, tag = "10")]
    pub nadehjhondg: u32,
    #[prost(string, tag = "11")]
    pub efajihmnobk: ::prost::alloc::string::String,
    #[prost(uint32, tag = "12")]
    pub avatar_id: u32,
    #[prost(string, tag = "14")]
    pub hkighcjkpfd: ::prost::alloc::string::String,
    #[prost(uint32, tag = "15")]
    pub costume_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ijginkjgdpd {
    #[prost(uint32, repeated, tag = "1")]
    pub doalegicgkl: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "6")]
    pub pcnkbakohba: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5848)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hgmajhckmmk {
    #[prost(bool, tag = "2")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "4")]
    pub level_id: u32,
    #[prost(bool, tag = "5")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "8")]
    pub dgdfkilnplh: u32,
    #[prost(uint32, tag = "9")]
    pub score: u32,
    #[prost(uint32, tag = "14")]
    pub bodiejclgmb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28130)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Npmngdpfoja {
    #[prost(uint32, tag = "1")]
    pub ofnogjpgbna: u32,
    #[prost(message, repeated, tag = "9")]
    pub nddobgmdgla: ::prost::alloc::vec::Vec<Mlobecpaoca>,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "15")]
    pub djmchfpiflm: ::prost::alloc::vec::Vec<Ngofpeolopf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5095)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eihebniggbl {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(uint32, tag = "7")]
    pub epfcidiklkg: u32,
    #[prost(uint32, tag = "9")]
    pub jimelgdjmlf: u32,
    #[prost(uint32, tag = "14")]
    pub group_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gmjkgjhncbl {
    #[prost(uint32, tag = "9")]
    pub ekljijgdkjo: u32,
    #[prost(uint32, tag = "13")]
    pub peidgdbjgjl: u32,
    #[prost(bytes = "vec", tag = "14")]
    pub olkacabnmfp: ::prost::alloc::vec::Vec<u8>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4617)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hlgadmhlppa {
    #[prost(message, optional, tag = "9")]
    pub oamkfpjbbbg: ::core::option::Option<Kmjmklpgpkk>,
    #[prost(bool, tag = "14")]
    pub oeaaeiaemgl: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25155)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oljccigkikh {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6856)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pcmmbleaoaj {
    #[prost(enumeration = "Illbojclabl", tag = "7")]
    pub bodiejclgmb: i32,
    #[prost(uint32, tag = "9")]
    pub oajoobghagm: u32,
    #[prost(uint32, tag = "10")]
    pub cell_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21616)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cgccigogkha {
    #[prost(message, repeated, tag = "8")]
    pub fbgdijjipnn: ::prost::alloc::vec::Vec<Lfljdeihldm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7622)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Clafllelgbn {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fafpicgbafb {
    #[prost(uint32, repeated, tag = "14")]
    pub njbfjidbeph: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26424)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pliiodaihec {
    #[prost(message, repeated, tag = "5")]
    pub mefppngaoph: ::prost::alloc::vec::Vec<Jaifgfijcno>,
    #[prost(uint32, repeated, tag = "10")]
    pub cbdlbdpplko: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23458)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mhoekdkdlod {
    #[prost(uint32, tag = "2")]
    pub group_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20481)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct EnterSceneReadyRsp {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub enter_scene_token: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20195)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ijknjjajopc {
    #[prost(uint32, tag = "10")]
    pub kanginkegao: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25392)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aapdkjnkkii {
    #[prost(uint32, tag = "11")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27916)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aegagmkdgjh {
    #[prost(uint32, tag = "4")]
    pub target_uid: u32,
    #[prost(oneof = "aegagmkdgjh::Aghglnefdhk", tags = "7, 10")]
    pub aghglnefdhk: ::core::option::Option<aegagmkdgjh::Aghglnefdhk>,
}
/// Nested message and enum types in `AEGAGMKDGJH`.
pub mod aegagmkdgjh {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Aghglnefdhk {
        #[prost(uint32, tag = "7")]
        Icon(u32),
        #[prost(string, tag = "10")]
        Text(::prost::alloc::string::String),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9791)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gnkfccjfdbh {
    #[prost(uint32, tag = "8")]
    pub poecpaaaloe: u32,
    #[prost(uint32, tag = "14")]
    pub epfcidiklkg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20663)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oeioaigfkbh {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28153)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ahmboogjkdj {
    #[prost(map = "uint32, int32", tag = "6")]
    pub jnofeohimob: ::std::collections::HashMap<u32, i32>,
    #[prost(map = "uint32, int32", tag = "7")]
    pub lemcpfecpmb: ::std::collections::HashMap<u32, i32>,
    #[prost(uint32, tag = "2")]
    pub kachbhbogol: u32,
    #[prost(uint32, tag = "11")]
    pub alkgnkpnkij: u32,
    #[prost(uint32, tag = "13")]
    pub id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5493)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Emddlnhpejh {
    #[prost(uint32, tag = "2")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ajemjecfbak {
    #[prost(uint32, tag = "7")]
    pub end_time: u32,
    #[prost(map = "uint32, message", tag = "12")]
    pub hkpcchjeobl: ::std::collections::HashMap<u32, Ndjflpjbaej>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7404)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ggcfgpmeddd {
    #[prost(uint32, tag = "2")]
    pub ckklkbcdnoe: u32,
    #[prost(uint32, tag = "11")]
    pub cell_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24068)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lmjfldimiic {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26602)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mfhglbjedki {
    #[prost(string, tag = "3")]
    pub jfckfgnobbp: ::prost::alloc::string::String,
    #[prost(uint32, tag = "5")]
    pub finahglfhag: u32,
    #[prost(enumeration = "Dhdebbipiif", tag = "7")]
    pub ckehablghnn: i32,
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24347)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dongchdkpee {
    #[prost(uint32, tag = "6")]
    pub room_id: u32,
    #[prost(bool, tag = "7")]
    pub is_add: bool,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
    #[prost(uint64, tag = "14")]
    pub mcppeknbhfk: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26002)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Egomaccdobo {
    #[prost(message, repeated, tag = "10")]
    pub kabodnmegek: ::prost::alloc::vec::Vec<Dejmibobpoe>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6149)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jahkniedafh {
    #[prost(string, tag = "2")]
    pub version: ::prost::alloc::string::String,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2460)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mjhbhejnbcm {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27927)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Apclcmamkni {
    #[prost(uint32, repeated, tag = "13")]
    pub ihflgbgnaje: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23192)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cdghgcfgfem {
    #[prost(uint32, tag = "5")]
    pub uid: u32,
    #[prost(uint32, repeated, tag = "12")]
    pub skill_id_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2736)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pljjfejcjmd {
    #[prost(uint32, tag = "1")]
    pub dnbefljlamb: u32,
    #[prost(uint32, tag = "14")]
    pub group_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fdpihnkleaj {
    #[prost(bool, tag = "2")]
    pub mpfldfdogai: bool,
    #[prost(map = "uint32, message", tag = "3")]
    pub ihgkaeckdib: ::std::collections::HashMap<u32, Mhojpfgmmhl>,
    #[prost(message, optional, tag = "5")]
    pub kclffkgnlbd: ::core::option::Option<Ckbfjjmakcd>,
    #[prost(message, optional, tag = "6")]
    pub jegbaicfcig: ::core::option::Option<Hoflbhdipii>,
    #[prost(map = "uint32, message", tag = "10")]
    pub gjofkdgpkhn: ::std::collections::HashMap<u32, Dbolcjjilgp>,
    #[prost(map = "uint32, message", tag = "11")]
    pub gcjjehicmha: ::std::collections::HashMap<u32, Nnfdihpaghc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5867)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Emaidcnelfm {
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Okaehfflkad {
    #[prost(map = "uint32, message", tag = "1")]
    pub eanpnhbomkn: ::std::collections::HashMap<u32, Mbghhpnoild>,
    #[prost(map = "uint32, message", tag = "3")]
    pub cjdbdfgejao: ::std::collections::HashMap<u32, Odoahmkgpel>,
    #[prost(uint32, tag = "5")]
    pub skill_id: u32,
    #[prost(uint32, tag = "6")]
    pub lglockfjodi: u32,
    #[prost(map = "uint32, message", tag = "7")]
    pub fagaeeglepe: ::std::collections::HashMap<u32, Afailbmmkka>,
    #[prost(message, repeated, tag = "8")]
    pub ecnpnklkbln: ::prost::alloc::vec::Vec<Ajcpmkdebkj>,
    #[prost(map = "uint32, message", tag = "9")]
    pub ocpdfcfciee: ::std::collections::HashMap<u32, Ndaiehpfolj>,
    #[prost(message, repeated, tag = "10")]
    pub koocjbijkaa: ::prost::alloc::vec::Vec<Ajcpmkdebkj>,
    #[prost(message, optional, tag = "12")]
    pub mgfldkelpmf: ::core::option::Option<Fegojcjloln>,
    #[prost(message, repeated, tag = "14")]
    pub faplkgmkaca: ::prost::alloc::vec::Vec<Fgjpipdnehd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4764)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ihffhfgokpg {
    #[prost(enumeration = "Gkfginklnch", repeated, tag = "5")]
    pub indfgankppo: ::prost::alloc::vec::Vec<i32>,
    #[prost(uint32, tag = "9")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4701)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hebifigglig {
    #[prost(uint32, repeated, tag = "14")]
    pub balpdamodlc: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3036)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jkfcdinhiil {
    #[prost(uint32, tag = "4")]
    pub level_id: u32,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lnjhdkepbfo {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8381)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Neldihcmabo {
    #[prost(uint32, tag = "6")]
    pub entity_id: u32,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ekedbcobigb {
    #[prost(bool, tag = "7")]
    pub gdbffjfbkha: bool,
    #[prost(bool, tag = "11")]
    pub efclmbmgcgh: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ehjplmeenap {
    #[prost(uint32, tag = "2")]
    pub eefeelicbnf: u32,
    #[prost(uint32, tag = "6")]
    pub avatar_id: u32,
    #[prost(uint32, tag = "9")]
    pub hnogkehflhe: u32,
    #[prost(uint32, tag = "12")]
    pub mcamfbcaoio: u32,
    #[prost(uint32, tag = "13")]
    pub hbdhcecokgp: u32,
    #[prost(uint32, tag = "15")]
    pub guid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bijijpeaggg {
    #[prost(uint32, tag = "2")]
    pub hdbchcemajc: u32,
    #[prost(bool, tag = "12")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "14")]
    pub pjloniblaae: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29777)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Picdajmihjn {
    #[prost(uint32, tag = "14")]
    pub lcehpfcejen: u32,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9487)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nghmbegkcbf {
    #[prost(enumeration = "Lfjlgojmkeh", tag = "3")]
    pub imiogmdokcb: i32,
    #[prost(message, optional, tag = "7")]
    pub gekbolfibnk: ::core::option::Option<Ckbmklicbbo>,
    #[prost(uint32, tag = "11")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1741)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ikcpcpoomna {
    #[prost(uint32, tag = "4")]
    pub parent_quest_id: u32,
    #[prost(uint32, repeated, tag = "5")]
    pub mdifampdnhd: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(bool, tag = "10")]
    pub cdbajhkaeii: bool,
    #[prost(uint32, repeated, tag = "13")]
    pub dgikfcmbkmf: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct MathQuaternion {
    #[prost(float, tag = "1")]
    pub x: f32,
    #[prost(float, tag = "2")]
    pub y: f32,
    #[prost(float, tag = "3")]
    pub z: f32,
    #[prost(float, tag = "4")]
    pub w: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lkdphefmbfm {
    #[prost(uint32, tag = "3")]
    pub pdphllcmfbe: u32,
    #[prost(uint32, repeated, tag = "8")]
    pub jjalolnjajd: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "9")]
    pub caeoniplbjc: u32,
    #[prost(uint32, tag = "13")]
    pub apcgohkbfkn: u32,
    #[prost(uint32, repeated, tag = "15")]
    pub cjiieiogbfo: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29514)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gjfdpbkhjjg {
    #[prost(uint64, tag = "4")]
    pub avatar_guid: u64,
    #[prost(uint32, tag = "10")]
    pub debogmdglmi: u32,
    #[prost(uint32, tag = "12")]
    pub oacjabibpdd: u32,
    #[prost(uint32, tag = "13")]
    pub nkgdgkcidjj: u32,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2751)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mdicecfbgbg {
    #[prost(message, optional, tag = "8")]
    pub ghihaidbacf: ::core::option::Option<Jkejhajabgd>,
    #[prost(uint32, tag = "10")]
    pub dcedejdmlho: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Affadalamjj {
    #[prost(uint32, tag = "2")]
    pub bhicnbodfkp: u32,
    #[prost(bool, tag = "6")]
    pub is_finish: bool,
    #[prost(bool, tag = "10")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "12")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pbeodmmdbgb {
    #[prost(message, repeated, tag = "9")]
    pub efcdelgmmkg: ::prost::alloc::vec::Vec<Nhflidhfael>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26029)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cfnacijfodl {
    #[prost(uint32, repeated, tag = "2")]
    pub algponnihmj: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Djciabfhkpm {
    #[prost(uint32, tag = "1")]
    pub config_id: u32,
    #[prost(uint32, tag = "2")]
    pub end_time: u32,
    #[prost(string, tag = "5")]
    pub mnlgecfagbc: ::prost::alloc::string::String,
    #[prost(bool, tag = "7")]
    pub dbobicglhcg: bool,
    #[prost(uint32, tag = "9")]
    pub hfgmncbojol: u32,
    #[prost(uint32, tag = "10")]
    pub jabgacillec: u32,
    #[prost(uint32, tag = "12")]
    pub dilacpfbakg: u32,
    #[prost(string, tag = "13")]
    pub pnhcooiibhl: ::prost::alloc::string::String,
    #[prost(string, tag = "14")]
    pub mlflpjnmbob: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2861)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Onkoenjocfb {
    #[prost(uint32, tag = "3")]
    pub index: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kocmnhbmnne {
    #[prost(message, repeated, tag = "15")]
    pub mnmbinfiphb: ::prost::alloc::vec::Vec<Hbpjookkejm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27347)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nkhbpghflnn {
    #[prost(uint64, repeated, tag = "3")]
    pub ipbojdijfke: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint64, repeated, tag = "4")]
    pub epfpamggphk: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint32, tag = "7")]
    pub oajoobghagm: u32,
    #[prost(uint32, tag = "8")]
    pub cell_id: u32,
    #[prost(uint64, tag = "12")]
    pub cur_avatar_guid: u64,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4571)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ckfecpgkdlb {
    #[prost(uint32, tag = "8")]
    pub cooohjmdokg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Giibefajgbk {
    #[prost(uint32, tag = "2")]
    pub skill_id: u32,
    #[prost(message, repeated, tag = "4")]
    pub lapnpeiacnl: ::prost::alloc::vec::Vec<Ombeifnnedf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29374)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dcclappmfcb {
    #[prost(uint32, repeated, tag = "10")]
    pub dcmmnmahaco: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7804)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nohpegagdmi {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bffaldpokfe {
    #[prost(uint32, repeated, tag = "2")]
    pub nkicbobidaf: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "11")]
    pub efcdelgmmkg: ::prost::alloc::vec::Vec<Mpcbginjkkd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24167)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lcfpcbjafdd {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "10")]
    pub oclmggoliee: ::prost::alloc::vec::Vec<Plielhlgadj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7195)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hmfkpodoebc {
    #[prost(message, repeated, tag = "6")]
    pub bnjojbopmfj: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(map = "uint64, uint32", tag = "10")]
    pub anhcghnlbne: ::std::collections::HashMap<u64, u32>,
    #[prost(uint32, tag = "12")]
    pub adjnolplkoa: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2707)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mdocdfmhpfm {
    #[prost(message, optional, tag = "12")]
    pub gafblbiicbn: ::core::option::Option<Mpggmjodjao>,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gbjdliamnim {
    #[prost(enumeration = "Ljcngngdgph", tag = "2")]
    pub pchjnhfoiem: i32,
    #[prost(uint32, tag = "8")]
    pub ooipgfedjmn: u32,
    #[prost(fixed64, tag = "12")]
    pub cojobikfhod: u64,
    #[prost(fixed64, tag = "15")]
    pub jabgacillec: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22845)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Omfllahlijh {
    #[prost(message, repeated, tag = "7")]
    pub lpjgleegipl: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(uint32, tag = "15")]
    pub jobhfghalgd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23126)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fcmnmcpedee {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28894)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kebbemfccca {
    #[prost(message, repeated, tag = "5")]
    pub bmpmehfcdkc: ::prost::alloc::vec::Vec<Kkiaddodloi>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3251)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bjmplhgnfel {
    #[prost(uint32, tag = "5")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9802)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Iiodlohmklk {
    #[prost(message, repeated, tag = "1")]
    pub afchppjlpfg: ::prost::alloc::vec::Vec<Iklmhgdlkoa>,
    #[prost(message, optional, tag = "5")]
    pub bhppnhljkpk: ::core::option::Option<Iklmhgdlkoa>,
    #[prost(message, repeated, tag = "14")]
    pub ibebgjffbpe: ::prost::alloc::vec::Vec<Iklmhgdlkoa>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(820)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Deaoogpdnil {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(uint32, tag = "12")]
    pub oajoobghagm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29099)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hlbnbhkdikn {
    #[prost(uint32, tag = "6")]
    pub group_id: u32,
    #[prost(uint32, tag = "12")]
    pub config_id: u32,
    #[prost(uint32, tag = "13")]
    pub scene_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20033)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nhknmhbfcmi {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "7")]
    pub offering_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pkkdehoadbf {
    #[prost(uint32, repeated, tag = "1")]
    pub cdgikfolbgh: ::prost::alloc::vec::Vec<u32>,
    #[prost(enumeration = "Cmgooomlaia", tag = "4")]
    pub imiogmdokcb: i32,
    #[prost(uint32, tag = "9")]
    pub ooipgfedjmn: u32,
    #[prost(uint32, tag = "14")]
    pub abeaibhkcjn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct WorktopInfo {
    #[prost(uint32, repeated, tag = "1")]
    pub option_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "2")]
    pub is_guest_can_operate: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kmggjmiflpf {
    #[prost(uint32, repeated, tag = "10")]
    pub dcgnkoolhfc: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "14")]
    pub ookjobdfeah: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24829)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nncddjkgoag {
    #[prost(uint32, repeated, tag = "3")]
    pub jkheeakmjbg: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "8")]
    pub fnhdigfhpem: bool,
    #[prost(bool, tag = "13")]
    pub kodnaagljdl: bool,
    #[prost(uint32, tag = "9")]
    pub pjhiljjcffp: u32,
    #[prost(uint32, tag = "1")]
    pub pldlclomedf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Daaelfamfea {
    #[prost(bool, tag = "3")]
    pub pgpkmokbfam: bool,
    #[prost(uint32, tag = "8")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ejccpjjdien {
    #[prost(message, repeated, tag = "1")]
    pub hgaibenioci: ::prost::alloc::vec::Vec<Niajpbbjmjb>,
    #[prost(message, repeated, tag = "4")]
    pub pndpnmbdokf: ::prost::alloc::vec::Vec<Eejagbcfpna>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21803)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kgkemboicod {
    #[prost(uint32, tag = "6")]
    pub finahglfhag: u32,
    #[prost(uint32, tag = "3")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20374)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cmeninidldk {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "15")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3286)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iddgcnecklf {
    #[prost(bool, tag = "2")]
    pub ekmdfdhhobo: bool,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
    #[prost(uint32, tag = "13")]
    pub id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3995)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PlayerNormalLuaShellNotify {
    #[prost(uint32, tag = "5")]
    pub config_id: u32,
    #[prost(bytes = "vec", tag = "7")]
    pub luashell: ::prost::alloc::vec::Vec<u8>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24557)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cjhokamcien {
    #[prost(uint64, tag = "11")]
    pub ihgjlfcgfin: u64,
    #[prost(bool, tag = "10")]
    pub ikljlkbldfb: bool,
    #[prost(uint32, tag = "8")]
    pub ggcfiehankk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6139)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jodofejcjkp {
    #[prost(message, optional, tag = "1")]
    pub pfeldffpklp: ::core::option::Option<Feemcgmmdci>,
    #[prost(int32, tag = "10")]
    pub query_id: i32,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6885)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bdobojkdnok {
    #[prost(uint32, repeated, tag = "15")]
    pub onioldaalan: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "349")]
    pub pgimckfgipd: ::prost::alloc::vec::Vec<u32>,
    #[prost(float, tag = "2028")]
    pub speed: f32,
    #[prost(uint32, tag = "13")]
    pub score: u32,
    #[prost(uint32, tag = "12")]
    pub jgcddbfmogl: u32,
    #[prost(uint32, tag = "14")]
    pub bnmjbhhkcbk: u32,
    #[prost(bool, tag = "2044")]
    pub cakhipmgflf: bool,
    #[prost(bool, tag = "273")]
    pub ocdcdndkkmn: bool,
    #[prost(bool, tag = "4")]
    pub daphocnhdfm: bool,
    #[prost(uint32, tag = "738")]
    pub lojfdjclfcc: u32,
    #[prost(uint32, tag = "6")]
    pub max_combo: u32,
    #[prost(uint32, tag = "2")]
    pub pgccobeibdk: u32,
    #[prost(uint64, tag = "7")]
    pub ihgjlfcgfin: u64,
    #[prost(uint32, tag = "1816")]
    pub jlikdmfeohl: u32,
    #[prost(uint32, tag = "1494")]
    pub kapobbfgpeg: u32,
    #[prost(uint32, tag = "5")]
    pub ggcfiehankk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25490)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lepbfoknfac {
    #[prost(bool, tag = "7")]
    pub eemkoelpgba: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ckbfjjmakcd {
    #[prost(bool, tag = "5")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "8")]
    pub gadget_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5849)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hgmbbcipmgg {
    #[prost(uint32, tag = "3")]
    pub ffhpdcibkod: u32,
    #[prost(message, optional, tag = "11")]
    pub nganceicghc: ::core::option::Option<Pnhdmgcfepk>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7635)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lbaococoind {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint64, tag = "4")]
    pub avatar_guid: u64,
    #[prost(uint32, tag = "6")]
    pub fnojnpdbbhd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6939)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gljbckfoelj {
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bkjkchoklkg {
    #[prost(message, optional, tag = "3")]
    pub bnheafcgijm: ::core::option::Option<Vector>,
    #[prost(int32, tag = "4")]
    pub abcgfhbkbpe: i32,
    #[prost(uint32, tag = "6")]
    pub oegjaildlbk: u32,
    #[prost(uint32, tag = "7")]
    pub guid: u32,
    #[prost(message, optional, tag = "8")]
    pub dhkjkgigjdg: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "15")]
    pub version: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aagbfdbkejl {
    #[prost(float, tag = "2")]
    pub mfehfneiffa: f32,
    #[prost(float, tag = "3")]
    pub odmegpdigef: f32,
    #[prost(uint32, tag = "6")]
    pub plgcfdaenlc: u32,
    #[prost(bool, tag = "7")]
    pub inmccbgiiig: bool,
    #[prost(uint32, tag = "8")]
    pub dmbmindcbok: u32,
    #[prost(float, tag = "14")]
    pub jglicghgnfp: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20670)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Imeacoiejcn {
    #[prost(bool, tag = "1")]
    pub apgdcodhnlj: bool,
    #[prost(uint32, tag = "5")]
    pub jnlgdefhndg: u32,
    #[prost(uint32, tag = "11")]
    pub oajoobghagm: u32,
    #[prost(message, optional, tag = "12")]
    pub fdghgbmejgm: ::core::option::Option<Iallekkfhcl>,
    #[prost(message, optional, tag = "13")]
    pub hckdfmkemci: ::core::option::Option<Ifpnjpjlnof>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3669)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mdoijdeffhj {
    #[prost(uint64, repeated, tag = "13")]
    pub equip_guid_list: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint64, tag = "3")]
    pub avatar_guid: u64,
    #[prost(enumeration = "Edapkoefnda", tag = "2")]
    pub fnbmmfbmkdo: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5342)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gbgkhbokfkc {
    #[prost(uint32, tag = "13")]
    pub holalickcpe: u32,
    #[prost(uint32, tag = "5")]
    pub lhkpdiddcme: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Legkibhihfa {
    #[prost(message, repeated, tag = "9")]
    pub kbdilmdkjgb: ::prost::alloc::vec::Vec<Ckpijbmmbgj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3867)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Clfjjkhiack {
    #[prost(bool, tag = "5")]
    pub fpgeopbmajh: bool,
    #[prost(bool, tag = "6")]
    pub kcfdpkkbecp: bool,
    #[prost(uint32, tag = "11")]
    pub epfcidiklkg: u32,
    #[prost(map = "uint32, uint32", tag = "14")]
    pub pcafmbnpebm: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28473)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fnnocfjpmng {
    #[prost(int32, tag = "12")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ihfcifdkmpa {
    #[prost(uint32, tag = "1")]
    pub iejpghnlidb: u32,
    #[prost(bool, tag = "9")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "11")]
    pub ocoliglolno: u32,
    #[prost(message, optional, tag = "13")]
    pub pos: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct OfferingInfo {
    #[prost(uint32, tag = "1")]
    pub offering_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gebhfejnjge {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21690)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jeoodhebjjp {
    #[prost(message, optional, tag = "2")]
    pub avatar_info: ::core::option::Option<AvatarInfo>,
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(message, optional, tag = "10")]
    pub lhfdndcnaio: ::core::option::Option<AvatarInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22871)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ggojhmiheda {
    #[prost(uint32, tag = "4")]
    pub bodiejclgmb: u32,
    #[prost(uint32, tag = "8")]
    pub eaipgemknpo: u32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22643)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Plaacgljion {
    #[prost(uint32, tag = "15")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hgnefonjjnm {
    #[prost(uint32, tag = "4")]
    pub level_id: u32,
    #[prost(uint32, tag = "8")]
    pub mkcgmmganlk: u32,
    #[prost(bool, tag = "10")]
    pub is_finish: bool,
    #[prost(bool, tag = "14")]
    pub kodnaagljdl: bool,
    #[prost(bool, tag = "15")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1510)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fkcohehkefa {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(message, optional, tag = "10")]
    pub next_res_version_config: ::core::option::Option<ResVersionConfig>,
    #[prost(string, tag = "14")]
    pub next_resource_url: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8410)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Igbgpbkclbd {
    #[prost(uint32, tag = "3")]
    pub prepare_end_time: u32,
    #[prost(uint32, tag = "11")]
    pub mp_play_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7464)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jnbjlblgdcc {
    #[prost(bool, tag = "9")]
    pub nkaogolciad: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7897)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PlayerStoreNotify {
    #[prost(message, repeated, tag = "1")]
    pub item_list: ::prost::alloc::vec::Vec<Item>,
    #[prost(uint32, tag = "8")]
    pub weight_limit: u32,
    #[prost(enumeration = "StoreType", tag = "13")]
    pub store_type: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5925)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Odejndlndgm {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cbghnfjjjod {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bjocdgnjeib {
    #[prost(message, repeated, tag = "4")]
    pub gdgkaadbogp: ::prost::alloc::vec::Vec<Deeeiegakad>,
    #[prost(message, repeated, tag = "7")]
    pub cnajaflibed: ::prost::alloc::vec::Vec<Eoddbeanmoj>,
    #[prost(uint32, tag = "8")]
    pub gbndpifjbli: u32,
    #[prost(bool, tag = "10")]
    pub mpfldfdogai: bool,
    #[prost(uint32, tag = "12")]
    pub nmikcmlkndm: u32,
    #[prost(uint32, tag = "13")]
    pub fcdbbleiacf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(343)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Elckhdlpecb {
    #[prost(int32, tag = "2")]
    pub icockdaocmg: i32,
    #[prost(bool, tag = "9")]
    pub hniefkiainn: bool,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
    #[prost(uint32, tag = "13")]
    pub pjabefajbgb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22987)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mifealmhomp {
    #[prost(uint32, tag = "9")]
    pub jennmghpfee: u32,
    #[prost(uint32, tag = "10")]
    pub johpbfklfki: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jdnlhbmjfia {
    #[prost(message, repeated, tag = "10")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Hdhblkglpnf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23270)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ddjchbgmmni {
    #[prost(uint32, tag = "14")]
    pub neclmcoligg: u32,
    #[prost(bool, tag = "5")]
    pub hhgjdnkjcjo: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24230)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nkfgchnpflh {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3333)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ncoibccfaom {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lgficdfcpmp {
    #[prost(message, optional, tag = "4")]
    pub gbdoibooebo: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Afmdlhnnbel {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4211)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gpemlcbajii {
    #[prost(uint32, tag = "1")]
    pub prop_type: u32,
    #[prost(float, tag = "4")]
    pub nljejpgcpci: f32,
    #[prost(enumeration = "Ioeoeimkmjd", tag = "5")]
    pub imiogmdokcb: i32,
    #[prost(uint64, tag = "9")]
    pub avatar_guid: u64,
    #[prost(float, tag = "11")]
    pub jhccpfipjpm: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7071)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ibblkblamae {
    #[prost(uint32, tag = "13")]
    pub kngbdmdcnhk: u32,
    #[prost(bool, tag = "15")]
    pub cmolpamhika: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gicfhmmmklk {
    #[prost(message, optional, tag = "2")]
    pub hkbojjffmae: ::core::option::Option<Mkofgokekil>,
    #[prost(message, optional, tag = "3")]
    pub eniambbbldi: ::core::option::Option<Abpihfanhob>,
    #[prost(uint32, tag = "4")]
    pub baibdagpmgn: u32,
    #[prost(message, optional, tag = "5")]
    pub ancjckndklk: ::core::option::Option<Ofoffidhian>,
    #[prost(bool, tag = "6")]
    pub mpfldfdogai: bool,
    #[prost(message, optional, tag = "9")]
    pub ocblpgflfao: ::core::option::Option<Cfbphnmcpne>,
    #[prost(uint32, tag = "11")]
    pub djhoanjinad: u32,
    #[prost(uint32, tag = "12")]
    pub nmikcmlkndm: u32,
    #[prost(bool, tag = "13")]
    pub hcfaplkljho: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26309)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct SceneInitFinishReq {
    #[prost(uint32, tag = "12")]
    pub enter_scene_token: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20492)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gkpmnbjebgk {
    #[prost(message, repeated, tag = "12")]
    pub hkkejcogpca: ::prost::alloc::vec::Vec<Ffbmiohkkhe>,
    #[prost(uint32, tag = "14")]
    pub jldfioopjdm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27099)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eojobmaagah {
    #[prost(uint32, tag = "4")]
    pub point_id: u32,
    #[prost(uint32, tag = "13")]
    pub scene_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lkofcbnnoam {
    #[prost(uint64, tag = "4")]
    pub mcppeknbhfk: u64,
    #[prost(message, repeated, tag = "6")]
    pub peebjaoikfc: ::prost::alloc::vec::Vec<Khjmikaafhb>,
    #[prost(uint32, tag = "10")]
    pub oajoobghagm: u32,
    #[prost(message, optional, tag = "11")]
    pub amolhefinek: ::core::option::Option<Nhnljibhpmj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1169)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ginbibeeaej {
    #[prost(uint32, tag = "1")]
    pub fkblkllalib: u32,
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "3")]
    pub jnhdkjdbicl: u32,
    #[prost(uint32, tag = "8")]
    pub lchhfcembal: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jhncnpcidbe {
    #[prost(message, repeated, tag = "15")]
    pub avatar_list: ::prost::alloc::vec::Vec<Gaiiaabdpnb>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21786)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fkcjpgnhjil {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20222)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pnimkbjefjm {
    #[prost(uint64, tag = "5")]
    pub jahlenghnmj: u64,
    #[prost(bool, tag = "11")]
    pub lceenmifapm: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7910)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eomggppgkai {
    #[prost(message, repeated, tag = "10")]
    pub aldmogbahni: ::prost::alloc::vec::Vec<Aldkffogbbd>,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub ofnogjpgbna: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Egbjcpoimlj {
    #[prost(uint32, tag = "5")]
    pub avatar_id: u32,
    #[prost(bool, tag = "9")]
    pub gdfoebgclhc: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22631)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jilbgcmgfdh {
    #[prost(uint32, tag = "5")]
    pub level_id: u32,
    #[prost(uint32, tag = "6")]
    pub pgichlhdgjp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24688)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hmjohoapkeo {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21225)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jbihfmolgjm {
    #[prost(uint32, tag = "4")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5548)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jdjkecdajcg {
    #[prost(enumeration = "Ihpggfgcdph", tag = "3")]
    pub imiogmdokcb: i32,
    #[prost(enumeration = "Ckleegmpdgn", tag = "10")]
    pub agmhmdhefkd: i32,
    #[prost(uint32, tag = "12")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22817)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mkjpocdbfjk {
    #[prost(message, optional, tag = "1")]
    pub nbkmbdeopei: ::core::option::Option<Denadbadmph>,
    #[prost(uint32, tag = "12")]
    pub aadkglakicj: u32,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1017)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ocogpancfoc {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Abpihfanhob {
    #[prost(uint32, tag = "6")]
    pub obefphjlido: u32,
    #[prost(uint32, tag = "9")]
    pub count: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9614)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Obhaaopcgie {
    #[prost(uint32, tag = "2")]
    pub jnlgdefhndg: u32,
    #[prost(message, optional, tag = "5")]
    pub fciibbajibk: ::core::option::Option<Fnloebiajie>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9780)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Djkgofilcka {
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26642)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fhfmagdpcnf {
    #[prost(bool, tag = "8")]
    pub ggaimjbdgnl: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Igeemlenjph {
    #[prost(uint32, tag = "8")]
    pub level_id: u32,
    #[prost(bool, tag = "10")]
    pub pmjlllfophk: bool,
    #[prost(uint32, tag = "13")]
    pub nmaapldbbni: u32,
    #[prost(bool, tag = "15")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gkjfmmkllno {
    #[prost(uint32, tag = "3")]
    pub ofnmjncbnhk: u32,
    #[prost(uint32, tag = "5")]
    pub level_id: u32,
    #[prost(bool, tag = "13")]
    pub pmjlllfophk: bool,
    #[prost(bool, tag = "15")]
    pub pjjdjmgpnle: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hoflbhdipii {
    #[prost(uint32, repeated, tag = "1")]
    pub ojocdklpepe: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "2")]
    pub eojiccehgal: u32,
    #[prost(bool, tag = "3")]
    pub cdmkdehljoc: bool,
    #[prost(uint32, tag = "4")]
    pub edgchcipegp: u32,
    #[prost(map = "uint32, bool", tag = "5")]
    pub ngbmdgkfgfl: ::std::collections::HashMap<u32, bool>,
    #[prost(uint32, repeated, tag = "6")]
    pub ikkmdalleed: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "7")]
    pub igchpohflmk: ::prost::alloc::vec::Vec<Jghgpmmambl>,
    #[prost(message, optional, tag = "8")]
    pub ijpjicfkdjl: ::core::option::Option<Ahppbjiakai>,
    #[prost(uint32, tag = "9")]
    pub blficefplcf: u32,
    #[prost(uint32, repeated, tag = "10")]
    pub jknglhemphb: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "11")]
    pub gjhadcdabgh: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "12")]
    pub hgmealljdbk: bool,
    #[prost(bool, tag = "13")]
    pub mjecdheifod: bool,
    #[prost(bool, tag = "14")]
    pub lcpgdmcifgd: bool,
    #[prost(bool, tag = "15")]
    pub pmjdnbgfonp: bool,
    #[prost(bool, tag = "619")]
    pub napelfjmijo: bool,
    #[prost(uint32, tag = "1070")]
    pub bcdnpokeonc: u32,
    #[prost(bool, tag = "1081")]
    pub nhaihcmdmdd: bool,
    #[prost(uint32, tag = "1293")]
    pub bpecfmclhlf: u32,
    #[prost(uint32, repeated, tag = "1533")]
    pub engandfgapn: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "1643")]
    pub pdoagpdfdlg: bool,
    #[prost(uint32, tag = "1684")]
    pub apcgohkbfkn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23818)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fkkddcjedkd {
    #[prost(uint32, tag = "1")]
    pub kngbdmdcnhk: u32,
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jhobgfmheni {
    #[prost(uint32, tag = "13")]
    pub hbabejhkhck: u32,
    #[prost(uint32, tag = "14")]
    pub nceljjknfng: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mfgkdapglbg {
    #[prost(uint32, tag = "2")]
    pub mbmdeajodmi: u32,
    #[prost(uint32, tag = "4")]
    pub aadkglakicj: u32,
    #[prost(uint32, tag = "6")]
    pub lhmdbbfaifm: u32,
    #[prost(uint32, tag = "7")]
    pub exp: u32,
    #[prost(uint32, tag = "11")]
    pub moonphndcno: u32,
    #[prost(bool, tag = "12")]
    pub hpmjinlnncp: bool,
    #[prost(bool, tag = "13")]
    pub lmhcggololm: bool,
    #[prost(bool, tag = "14")]
    pub cmikmdknkel: bool,
    #[prost(uint32, tag = "15")]
    pub count: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ojafghalcgn {
    #[prost(uint32, repeated, tag = "4")]
    pub jheeejohgjf: ::prost::alloc::vec::Vec<u32>,
    #[prost(enumeration = "Kdpdiddopii", tag = "6")]
    pub dpkpkfpnofb: i32,
    #[prost(bool, tag = "7")]
    pub npbjnkjipcn: bool,
    #[prost(uint32, tag = "8")]
    pub jifgkhhnpmn: u32,
    #[prost(uint32, tag = "10")]
    pub niikjgmjklc: u32,
    #[prost(uint32, tag = "12")]
    pub icdbkeeenmd: u32,
    #[prost(uint32, tag = "13")]
    pub lcianoehoco: u32,
    #[prost(uint32, tag = "14")]
    pub dlodcggelae: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2766)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pfhmpagclpl {
    #[prost(uint32, tag = "15")]
    pub point_id: u32,
    #[prost(bool, tag = "5")]
    pub ahblfgaemmf: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20009)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fdcggafndpk {
    #[prost(uint32, tag = "6")]
    pub target_uid: u32,
    #[prost(uint32, tag = "15")]
    pub mnbbhbdcdil: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21658)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jpmiaemaiao {
    #[prost(uint32, tag = "14")]
    pub cmdbcgaecdp: u32,
    #[prost(uint32, tag = "8")]
    pub aadkglakicj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Elbnimpamfp {
    #[prost(uint64, tag = "12")]
    pub server_game_time: u64,
    #[prost(bool, tag = "14")]
    pub fadincnpbmd: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6354)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Codepalickp {
    #[prost(uint32, tag = "3")]
    pub ghlbjahjehf: u32,
    #[prost(enumeration = "Iacmanpjhji", tag = "9")]
    pub kgconldgjpg: i32,
    #[prost(uint32, tag = "10")]
    pub gadget_id: u32,
    #[prost(enumeration = "Pcpkmbjdjak", tag = "12")]
    pub gaakalgobcf: i32,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24358)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Doflmcmlofn {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub pjhiljjcffp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3191)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oohjbohfadf {
    #[prost(uint32, tag = "1")]
    pub cbpdgcponhm: u32,
    #[prost(bool, tag = "2")]
    pub nhnplcpploc: bool,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(uint32, tag = "10")]
    pub mlnmecigdmh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29797)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Heniondecnp {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9093)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hldipdhggfd {
    #[prost(uint32, tag = "1")]
    pub cpkdjidiijo: u32,
    #[prost(uint32, repeated, tag = "7")]
    pub fenojplgmge: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6132)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Agoblngldnp {
    #[prost(message, repeated, tag = "3")]
    pub dopjdkedcbn: ::prost::alloc::vec::Vec<Ignbahodbee>,
    #[prost(int32, repeated, tag = "10")]
    pub cbdkndmejjb: ::prost::alloc::vec::Vec<i32>,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Abohmmgdige {
    #[prost(uint32, tag = "2")]
    pub progress: u32,
    #[prost(uint32, tag = "3")]
    pub nogclhfhome: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20819)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct EntityFightPropUpdateNotify {
    #[prost(uint32, tag = "1")]
    pub entity_id: u32,
    #[prost(map = "uint32, float", tag = "14")]
    pub fight_prop_map: ::std::collections::HashMap<u32, f32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ihcbfibhglh {
    #[prost(uint32, tag = "3")]
    pub olekbaakakh: u32,
    #[prost(message, optional, tag = "11")]
    pub pkccmlambda: ::core::option::Option<Okaehfflkad>,
    #[prost(uint32, tag = "12")]
    pub helhgnnddmp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6144)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ojfaildjeij {
    #[prost(message, optional, tag = "9")]
    pub mklgaeceklc: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "5")]
    pub hpoeckekafa: ::core::option::Option<Vector>,
    #[prost(int32, tag = "11")]
    pub uid: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct DeshretObeliskGadgetInfo {
    #[prost(uint32, repeated, tag = "1")]
    pub argument_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ohnbiglkkhd {
    #[prost(uint32, tag = "8")]
    pub ikelgeofone: u32,
    #[prost(uint32, tag = "12")]
    pub emhicnfjopo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27031)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bdcbkmopmli {
    #[prost(message, optional, tag = "11")]
    pub jeaofagmkof: ::core::option::Option<Lccnnipfkne>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gppomegkdfi {
    #[prost(bool, tag = "1")]
    pub hhnbgoneihh: bool,
    #[prost(bool, tag = "2")]
    pub bgicakmcbmh: bool,
    #[prost(uint32, repeated, tag = "4")]
    pub hobaidkkplg: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "12")]
    pub mark_list: ::prost::alloc::vec::Vec<Lgidoebepcl>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25068)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Njnpheeoohe {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25439)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hahlmoppedh {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5093)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jdnadbfhocd {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3817)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mljebejfkgk {
    #[prost(enumeration = "Kpfoblalblc", tag = "14")]
    pub daakpcoabep: i32,
    #[prost(uint64, tag = "8")]
    pub ihgjlfcgfin: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fmokbejlkem {
    #[prost(float, tag = "1")]
    pub cgjnmmhdjgp: f32,
    #[prost(uint32, tag = "2")]
    pub entity_id: u32,
    #[prost(float, tag = "3")]
    pub dhghlafocgo: f32,
    #[prost(float, tag = "4")]
    pub nbaenajiefg: f32,
    #[prost(float, tag = "5")]
    pub speed: f32,
    #[prost(message, optional, tag = "6")]
    pub oipcdlondgp: ::core::option::Option<Vector>,
    #[prost(float, tag = "8")]
    pub npmhilmhgio: f32,
    #[prost(uint32, repeated, tag = "9")]
    pub pmedeininbj: ::prost::alloc::vec::Vec<u32>,
    #[prost(string, tag = "11")]
    pub hebpmhdicod: ::prost::alloc::string::String,
    #[prost(int32, tag = "12")]
    pub gbpipbcjchj: i32,
    #[prost(bool, tag = "13")]
    pub hadpellmaok: bool,
    #[prost(bool, tag = "14")]
    pub doggikkpbmf: bool,
    #[prost(float, tag = "15")]
    pub licidpgeiaj: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lgkbcfaiiaa {
    #[prost(uint32, repeated, tag = "1")]
    pub iicdmajajln: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "2")]
    pub count: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Apmhhcohpld {
    #[prost(uint32, repeated, tag = "4")]
    pub dhnojoakmdc: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "12")]
    pub emfphlifhee: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "14")]
    pub epaihblmmjl: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6551)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SetUpAvatarTeamReq {
    #[prost(uint64, repeated, tag = "4")]
    pub avatar_team_guid_list: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint32, tag = "3")]
    pub team_id: u32,
    #[prost(uint64, tag = "5")]
    pub cur_avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24093)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kebomljpngc {
    #[prost(message, optional, tag = "4")]
    pub hkmnijnmhbf: ::core::option::Option<Pcnomcdhbia>,
    #[prost(uint32, tag = "5")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6917)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Joclcoagedo {
    #[prost(uint32, tag = "7")]
    pub ghmeilnkhpf: u32,
    #[prost(uint32, tag = "12")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24532)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lgnibachngb {
    #[prost(message, repeated, tag = "2")]
    pub item_list: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "14")]
    pub fenojplgmge: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8357)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ggnghdcahkn {
    #[prost(uint32, tag = "15")]
    pub gipjimbgfbd: u32,
    #[prost(uint32, tag = "4")]
    pub lohjecfldmo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21224)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ehdfpaflhil {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(message, optional, tag = "6")]
    pub iikblhjbcio: ::core::option::Option<Jcjcmaibcao>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Beobmomncmk {
    #[prost(uint32, repeated, tag = "1")]
    pub lonjoaagemm: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "3")]
    pub mleaakppggm: u32,
    #[prost(uint32, tag = "10")]
    pub dajhkhflndj: u32,
    #[prost(uint32, repeated, tag = "12")]
    pub hhnmcjfeghe: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gdffbgabind {
    #[prost(uint32, tag = "1")]
    pub mlnmecigdmh: u32,
    #[prost(uint64, tag = "6")]
    pub bckampaepjc: u64,
    #[prost(uint64, tag = "13")]
    pub ccebbinlhmj: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mclpeeklgmc {
    #[prost(uint32, repeated, tag = "9")]
    pub eekfelfangn: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jnebbaffgpj {
    #[prost(
        oneof = "jnebbaffgpj::Domlgaalond",
        tags = "1, 2, 5, 6, 7, 8, 11, 12, 13, 14, 15"
    )]
    pub domlgaalond: ::core::option::Option<jnebbaffgpj::Domlgaalond>,
}
/// Nested message and enum types in `JNEBBAFFGPJ`.
pub mod jnebbaffgpj {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Domlgaalond {
        #[prost(message, tag = "1")]
        OpAttack(super::Ainomebmcnd),
        #[prost(message, tag = "2")]
        OpSurrender(super::Fgfcbnjmmia),
        #[prost(message, tag = "5")]
        OpPlayCard(super::Beobmomncmk),
        #[prost(message, tag = "6")]
        OpDiscover(super::Ddlccifiimc),
        #[prost(message, tag = "7")]
        OpSelectOnStage(super::Jiieflhjode),
        #[prost(message, tag = "8")]
        OpVehicle(super::Jicmpnojhli),
        #[prost(message, tag = "11")]
        OpRedraw(super::Aabbeiifped),
        #[prost(message, tag = "12")]
        OpReroll(super::Joecmemnpfa),
        #[prost(message, tag = "13")]
        OpPass(super::Afmdlhnnbel),
        #[prost(message, tag = "14")]
        OpChangeCharacterIndex(super::Fogejoffjpp),
        #[prost(message, tag = "15")]
        OpReboot(super::Khfhhgcmakk),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Agoohiedaip {
    #[prost(bool, tag = "6")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "9")]
    pub eaipgemknpo: u32,
    #[prost(uint32, repeated, tag = "11")]
    pub kclaoonlhgf: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "14")]
    pub bodiejclgmb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23674)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cdhahbinjmh {
    #[prost(uint32, tag = "1")]
    pub avatar_id: u32,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5516)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Blbmjcbdbmi {
    #[prost(uint32, tag = "6")]
    pub nekecfnahom: u32,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(uint32, tag = "13")]
    pub mhjhgimlhln: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25329)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Paolaadlneh {
    #[prost(message, optional, tag = "11")]
    pub jknhpfobgjb: ::core::option::Option<Piccfjidmml>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23094)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Okpnncbebng {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "10")]
    pub ajapmehfeen: ::prost::alloc::vec::Vec<Ejiddmifdnl>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2615)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fbamlcfifdj {
    #[prost(message, repeated, tag = "8")]
    pub pkhpcjogdbb: ::prost::alloc::vec::Vec<Ddiakffcpdh>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gneajfolmbm {
    #[prost(enumeration = "Khbdllkplfg", tag = "3")]
    pub avatar_type: i32,
    #[prost(uint64, tag = "4")]
    pub avatar_guid: u64,
    #[prost(uint32, tag = "10")]
    pub monejdbpolb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6040)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hbnlkghkofi {
    #[prost(uint32, tag = "3")]
    pub room_id: u32,
    #[prost(uint64, tag = "8")]
    pub guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8790)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gcfofdeophc {
    #[prost(message, repeated, tag = "6")]
    pub bnjojbopmfj: ::prost::alloc::vec::Vec<Jickppdlohc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Okonenhbhdj {
    #[prost(message, repeated, tag = "6")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Clmndafklel>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27587)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Midigbfjfai {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4600)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Akdmajfhbpf {
    #[prost(uint32, tag = "9")]
    pub dnbefljlamb: u32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2175)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hkhaokhdlgk {
    #[prost(message, repeated, tag = "1")]
    pub cekdojeecdl: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(message, repeated, tag = "2")]
    pub idffmpoifgh: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(message, repeated, tag = "3")]
    pub jplkhapgpao: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(message, repeated, tag = "4")]
    pub agckbjlkecd: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(message, repeated, tag = "6")]
    pub noamfpkjbon: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(uint32, tag = "7")]
    pub goafakcddfj: u32,
    #[prost(message, repeated, tag = "10")]
    pub aichgelikfm: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
    #[prost(uint64, tag = "13")]
    pub avatar_guid: u64,
    #[prost(uint32, tag = "15")]
    pub dplieaghmco: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Famlaplkgjm {
    #[prost(uint32, tag = "4")]
    pub bgmdlpabefa: u32,
    #[prost(uint32, tag = "8")]
    pub jcmchgnnlmj: u32,
    #[prost(bool, tag = "14")]
    pub oplmjpaalnf: bool,
    #[prost(bool, tag = "15")]
    pub gcehepceakh: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fiibnlchgmo {
    #[prost(uint32, tag = "3")]
    pub klgccghifok: u32,
    #[prost(int32, tag = "4")]
    pub dmmdjommjik: i32,
    #[prost(uint32, tag = "10")]
    pub pnljnepogna: u32,
    #[prost(message, optional, tag = "11")]
    pub apkgnhgdghi: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "14")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ddlccifiimc {
    #[prost(uint32, tag = "1")]
    pub dajhkhflndj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26488)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nedgmpbbmod {
    #[prost(uint32, repeated, tag = "2")]
    pub jggobknpmfj: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "8")]
    pub hggehlmhkmp: u32,
    #[prost(uint32, tag = "6")]
    pub ajjeblpnahp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3385)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fjlaaihplji {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "3")]
    pub mfmnelmjahp: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29980)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gghalookkaf {
    #[prost(bool, tag = "2")]
    pub iecapkphljk: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22118)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bloikonahip {
    #[prost(enumeration = "Cmhliijinhm", tag = "10")]
    pub mjkamafcbfk: i32,
    #[prost(uint32, tag = "15")]
    pub jfifngcmoac: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20332)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gdefgjmkbik {
    #[prost(uint32, tag = "13")]
    pub lkkifhknkfe: u32,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ljdoifmjaba {
    #[prost(message, repeated, tag = "11")]
    pub npkklggkald: ::prost::alloc::vec::Vec<Iglpcamblno>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3219)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mbgknkkofdg {
    #[prost(bool, tag = "11")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "14")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26489)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aioonlfgpoi {
    #[prost(uint32, repeated, tag = "7")]
    pub gcffnlekkjh: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "3")]
    pub fagpphacnbj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9622)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cjilmlogbpe {
    #[prost(uint32, tag = "13")]
    pub oajoobghagm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mmgpmbahfom {
    #[prost(bool, tag = "4")]
    pub doejlmekjen: bool,
    #[prost(uint32, tag = "7")]
    pub ainmdgnodnc: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1107)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ppconofjiod {
    #[prost(uint32, tag = "13")]
    pub avatar_id: u32,
    #[prost(uint32, tag = "10")]
    pub talk_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25666)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jedbcabenmn {
    #[prost(bool, tag = "8")]
    pub ghajnbeheej: bool,
    #[prost(uint32, tag = "9")]
    pub cnaifgicldh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3419)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dgmjfbbendj {
    #[prost(uint32, tag = "13")]
    pub aljbjcgknlp: u32,
    #[prost(uint32, tag = "4")]
    pub ohfpbgenphb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ipdfpejjfjl {
    #[prost(map = "uint32, message", tag = "10")]
    pub cpieainbkdh: ::std::collections::HashMap<u32, Hofcoaifplb>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9777)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Locnacebnnn {
    #[prost(bool, tag = "286")]
    pub kjfppjkhcao: bool,
    #[prost(oneof = "locnacebnnn::Nbdofgcpfej", tags = "582, 1559, 1563, 1814, 1552")]
    pub nbdofgcpfej: ::core::option::Option<locnacebnnn::Nbdofgcpfej>,
}
/// Nested message and enum types in `LOCNACEBNNN`.
pub mod locnacebnnn {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Nbdofgcpfej {
        #[prost(message, tag = "582")]
        CameraInfo(super::Jgcgfhpeijm),
        #[prost(message, tag = "1559")]
        LocationInfo(super::Emekkiandle),
        #[prost(message, tag = "1563")]
        ThunderBirdFeatherInfo(super::Mclpeeklgmc),
        #[prost(message, tag = "1814")]
        SorushInfo(super::Iboepabcdmc),
        #[prost(message, tag = "1552")]
        CreatorInfo(super::Fdnffenofkf),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20758)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dmdkogogdob {
    #[prost(uint32, tag = "12")]
    pub aoegkkajean: u32,
    #[prost(bool, tag = "14")]
    pub mihonjccajc: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29850)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cdkeanlhhhe {
    #[prost(bool, tag = "13")]
    pub dkchjaghomm: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22730)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Amoajbhkpmo {
    #[prost(string, tag = "6")]
    pub cmnefjfhpaj: ::prost::alloc::string::String,
    #[prost(uint32, tag = "12")]
    pub source_entity_id: u32,
    #[prost(int32, tag = "4")]
    pub param1: i32,
    #[prost(uint32, tag = "10")]
    pub target_entity_id: u32,
    #[prost(int32, tag = "11")]
    pub param2: i32,
    #[prost(int32, tag = "7")]
    pub param3: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28639)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Idkicmoibcj {
    #[prost(bool, tag = "4")]
    pub coggiaapekj: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1785)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kfigihakhop {
    #[prost(uint32, tag = "2")]
    pub oajoobghagm: u32,
    #[prost(uint32, tag = "8")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3064)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bpjfpelhgde {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "4")]
    pub jahppelnedf: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "7")]
    pub mfonfjeahdd: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2542)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Plahgllaelg {
    #[prost(uint32, repeated, tag = "4")]
    pub oaopaoomipb: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "5")]
    pub kegocippfin: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6494)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Edahlobbond {
    #[prost(message, repeated, tag = "4")]
    pub ckhllidjcde: ::prost::alloc::vec::Vec<Coebeadnaio>,
    #[prost(uint32, tag = "15")]
    pub scene_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Clnagpokmih {
    #[prost(bool, tag = "4")]
    pub jmoandaalcd: bool,
    #[prost(uint32, tag = "5")]
    pub jmjlnmpdaie: u32,
    #[prost(uint32, tag = "6")]
    pub cjhdmkllkpa: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5386)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pffboienfgf {
    #[prost(uint32, tag = "7")]
    pub target_uid: u32,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3491)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gacdggffapm {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pebkjghepnc {
    #[prost(uint32, tag = "3")]
    pub legefcpmoon: u32,
    #[prost(uint32, tag = "5")]
    pub progress: u32,
    #[prost(string, tag = "6")]
    pub key: ::prost::alloc::string::String,
    #[prost(uint32, repeated, tag = "7")]
    pub progress_stage_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9927)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ofibhidmkep {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1437)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Laabbplenef {
    #[prost(uint32, tag = "2")]
    pub kegocippfin: u32,
    #[prost(uint32, tag = "11")]
    pub ghlbjahjehf: u32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub fppfkjelhdo: u32,
    #[prost(enumeration = "Nkkkbohmanl", tag = "15")]
    pub kgconldgjpg: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ncgpmhoihhl {
    #[prost(uint32, repeated, tag = "6")]
    pub jggobknpmfj: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "8")]
    pub level_id: u32,
    #[prost(uint32, tag = "12")]
    pub bodiejclgmb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26084)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nihonljffin {
    #[prost(uint32, tag = "5")]
    pub dnbefljlamb: u32,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8259)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hmllbopjcji {
    #[prost(enumeration = "Ckleegmpdgn", tag = "1")]
    pub agmhmdhefkd: i32,
    #[prost(uint32, tag = "2")]
    pub gbcmdopclik: u32,
    #[prost(message, optional, tag = "15")]
    pub nnpmlgapaan: ::core::option::Option<Olheklkendn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2955)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oabgdgdhpnn {
    #[prost(uint32, repeated, tag = "8")]
    pub gmpncfjlpab: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4093)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cmneicgnhap {
    #[prost(uint32, tag = "13")]
    pub colmkmkejpm: u32,
    #[prost(message, optional, tag = "15")]
    pub pos: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ahdcnhcibnm {
    #[prost(int32, tag = "1")]
    pub x: i32,
    #[prost(int32, tag = "2")]
    pub y: i32,
    #[prost(int32, tag = "3")]
    pub z: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gekcbfmhpam {
    #[prost(message, repeated, tag = "9")]
    pub gjihlnaeggd: ::prost::alloc::vec::Vec<Gdmlpoedpjo>,
    #[prost(bool, tag = "13")]
    pub hlalmdgmpfm: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Boefbfnpoko {
    #[prost(uint32, tag = "5")]
    pub point_id: u32,
    #[prost(uint32, tag = "8")]
    pub costume_id: u32,
    #[prost(enumeration = "Khbdllkplfg", tag = "9")]
    pub avatar_type: i32,
    #[prost(uint32, tag = "13")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mkofgokekil {
    #[prost(message, repeated, tag = "3")]
    pub ibpcfnmmbib: ::prost::alloc::vec::Vec<Ljiemnnkpjo>,
    #[prost(uint32, tag = "4")]
    pub ghlomkmlpjj: u32,
    #[prost(uint32, tag = "9")]
    pub jabgacillec: u32,
    #[prost(bool, tag = "12")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27969)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fnclcganpom {
    #[prost(uint32, tag = "2")]
    pub group_id: u32,
    #[prost(uint32, tag = "3")]
    pub dnbefljlamb: u32,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ckjcchipmdc {
    #[prost(message, repeated, tag = "3")]
    pub pndpnmbdokf: ::prost::alloc::vec::Vec<Fifpjpaggod>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hijlleihoda {
    #[prost(uint32, tag = "7")]
    pub idibobefkja: u32,
    #[prost(map = "uint32, uint32", tag = "9")]
    pub lcgabjijcbf: ::std::collections::HashMap<u32, u32>,
    #[prost(bool, tag = "11")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "14")]
    pub cdijinmejlj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29213)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fcahfhajcck {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8125)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kmbbebmpelm {
    #[prost(uint32, tag = "4")]
    pub lihgofdjmma: u32,
    #[prost(uint32, tag = "6")]
    pub hggehlmhkmp: u32,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "13")]
    pub dkmafjlfodg: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24378)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Okhbohiefpi {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ojiaihboabh {
    #[prost(uint32, tag = "4")]
    pub kbhdphnaeao: u32,
    #[prost(uint32, tag = "6")]
    pub cfkgeelkobh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2002)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lpmgmfincch {
    #[prost(uint32, tag = "7")]
    pub point_id: u32,
    #[prost(uint32, tag = "11")]
    pub scene_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bjjpihmlnkl {
    #[prost(uint32, tag = "12")]
    pub gadget_id: u32,
    #[prost(uint32, repeated, tag = "15")]
    pub plheojpoopi: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gmfojoggobg {
    #[prost(uint32, tag = "3")]
    pub uid: u32,
    #[prost(map = "uint32, uint32", tag = "9")]
    pub agjojgpdnal: ::std::collections::HashMap<u32, u32>,
    #[prost(map = "uint32, uint32", tag = "12")]
    pub cggjdkllgle: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct BreakoutPhysicalObject {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub index: u32,
    #[prost(bool, tag = "3")]
    pub is_active: bool,
    #[prost(message, optional, tag = "4")]
    pub pos: ::core::option::Option<BreakoutVector2>,
    #[prost(message, optional, tag = "5")]
    pub move_dir: ::core::option::Option<BreakoutVector2>,
    #[prost(int32, tag = "6")]
    pub speed: i32,
    #[prost(uint32, tag = "7")]
    pub init_peer_id: u32,
    #[prost(uint32, tag = "8")]
    pub state: u32,
    #[prost(uint32, tag = "9")]
    pub element_type: u32,
    #[prost(uint32, tag = "10")]
    pub element_reaction_buff: u32,
    #[prost(message, repeated, tag = "11")]
    pub modifier_list: ::prost::alloc::vec::Vec<BreakoutPhysicalObjectModifier>,
    #[prost(int32, tag = "12")]
    pub total_rotation: i32,
    #[prost(message, repeated, tag = "13")]
    pub info_list: ::prost::alloc::vec::Vec<BreakoutBrickInfo>,
    #[prost(uint32, tag = "14")]
    pub last_hit_peer_id: u32,
    #[prost(uint32, tag = "15")]
    pub speed_increase_count: u32,
    #[prost(int32, tag = "16")]
    pub offset: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29332)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Celbplgidma {
    #[prost(uint32, tag = "8")]
    pub cifobokoekm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26279)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nbobgcfhkpd {
    #[prost(uint32, repeated, tag = "13")]
    pub meimcmlddfo: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "1")]
    pub apaaphbhhmk: u32,
    #[prost(uint32, tag = "14")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5498)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jbkaldhiadi {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21220)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fkibjhneeje {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7815)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nopfehejleh {
    #[prost(enumeration = "Kabbepllgoj", tag = "1")]
    pub imiogmdokcb: i32,
    #[prost(message, repeated, tag = "2")]
    pub jhbcbieobep: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(uint32, tag = "6")]
    pub konankaciem: u32,
    #[prost(message, optional, tag = "7")]
    pub ofpgjhpifpo: ::core::option::Option<Kbbajaaleej>,
    #[prost(uint32, repeated, tag = "9")]
    pub jdpohckaoah: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "10")]
    pub plmddoeifpl: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "13")]
    pub fadincnpbmd: bool,
    #[prost(enumeration = "Nlobhempbem", tag = "14")]
    pub igcfekljnmj: i32,
    #[prost(uint32, tag = "15")]
    pub eofhloimpmk: u32,
    #[prost(oneof = "nopfehejleh::Detail", tags = "731, 1107, 1202, 1751")]
    pub detail: ::core::option::Option<nopfehejleh::Detail>,
}
/// Nested message and enum types in `NOPFEHEJLEH`.
pub mod nopfehejleh {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(message, tag = "731")]
        PveActivitySettle(super::Oecomgeahbm),
        #[prost(message, tag = "1107")]
        ArenaSettle(super::Kdmbbdaeopf),
        #[prost(message, tag = "1202")]
        PveInfiniteActivitySettle(super::Igchnkkoahe),
        #[prost(message, tag = "1751")]
        AutoBattleCardActivitySettle(super::Idcfoiddcpc),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gaiobfeadpd {
    #[prost(uint32, tag = "1")]
    pub costume_id: u32,
    #[prost(uint32, tag = "10")]
    pub echjdbkmigg: u32,
    #[prost(enumeration = "Obdlodpceji", tag = "13")]
    pub avatar_type: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Llhhhpfoaik {
    #[prost(uint32, tag = "6")]
    pub ljaikbehodc: u32,
    #[prost(uint32, tag = "10")]
    pub lcddidljedn: u32,
    #[prost(uint32, tag = "11")]
    pub ndcjnbnfbbf: u32,
    #[prost(uint32, tag = "14")]
    pub lchbeahgheo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7210)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aehnpmdajik {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4350)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jaiboipemhc {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jbjfcekclge {
    #[prost(uint32, tag = "7")]
    pub mkcgmmganlk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27426)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hlohfgefoha {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct FishPoolInfo {
    #[prost(uint32, tag = "1")]
    pub pool_id: u32,
    #[prost(uint32, repeated, tag = "2")]
    pub fish_area_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "3")]
    pub today_fish_num: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24972)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hlfcanllpbi {
    #[prost(uint32, repeated, tag = "4")]
    pub pgejgjmggog: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20806)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kpkgoegnkda {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(18)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Abcmiildjmo {
    #[prost(uint32, repeated, tag = "15")]
    pub ihflgbgnaje: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "5")]
    pub akochlgclgn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6519)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Blpgohhkkpe {
    #[prost(uint32, tag = "7")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23702)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cphnodmoomd {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(uint32, tag = "8")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5300)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bmjafbdkfjc {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oadjbkdjnpl {
    #[prost(uint32, tag = "5")]
    pub cmhapeddhpf: u32,
    #[prost(uint32, tag = "9")]
    pub ejnommcaihp: u32,
    #[prost(uint32, tag = "11")]
    pub aloobpbnddh: u32,
    #[prost(uint32, tag = "12")]
    pub jlnngifdanl: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(951)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iblpfkjefoh {
    #[prost(uint32, tag = "4")]
    pub item_id: u32,
    #[prost(uint32, tag = "8")]
    pub gofhghokepn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24917)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ekjfjmfnkep {
    #[prost(uint32, repeated, tag = "13")]
    pub gcffnlekkjh: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "12")]
    pub city_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ljmjokloeml {
    #[prost(message, optional, tag = "1")]
    pub bfjjpncmhlm: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "2")]
    pub jioigfoffff: ::core::option::Option<Dkiblfiglap>,
    #[prost(message, optional, tag = "9")]
    pub lfolaeolekk: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "12")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8047)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hkeikjnojjf {
    #[prost(message, repeated, tag = "4")]
    pub kabodnmegek: ::prost::alloc::vec::Vec<Olheklkendn>,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kjjdiddjiij {
    #[prost(message, repeated, tag = "9")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Ngmpcgloeac>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20233)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Adiknileflb {
    #[prost(uint32, tag = "1")]
    pub fhcpckfnjal: u32,
    #[prost(uint32, tag = "8")]
    pub name_id: u32,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7705)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aiebogbhfgp {
    #[prost(uint32, repeated, tag = "9")]
    pub gmpncfjlpab: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct StopServerInfo {
    #[prost(uint32, tag = "1")]
    pub stop_begin_time: u32,
    #[prost(uint32, tag = "2")]
    pub stop_end_time: u32,
    #[prost(string, tag = "3")]
    pub url: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub content_msg: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hicmpfmfljc {
    #[prost(uint32, tag = "2")]
    pub ldnkcljncbf: u32,
    #[prost(uint32, tag = "8")]
    pub score: u32,
    #[prost(uint32, tag = "11")]
    pub jlgckbfjkgi: u32,
    #[prost(uint32, tag = "13")]
    pub hikkhmhikgd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(616)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cbeanjobnal {
    #[prost(message, repeated, tag = "10")]
    pub aooedbjibil: ::prost::alloc::vec::Vec<Caimbamkdal>,
    #[prost(uint32, tag = "12")]
    pub gfpdhhihbpn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23623)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kdcichffiog {
    #[prost(uint32, tag = "11")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23488)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fkfglkljmfd {
    #[prost(uint32, tag = "4")]
    pub ibfoilmphdd: u32,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(uint32, tag = "9")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8373)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fhpjcgobhlb {
    #[prost(uint32, tag = "5")]
    pub ggcfiehankk: u32,
    #[prost(uint64, tag = "8")]
    pub ihgjlfcgfin: u64,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24115)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dlknfjkhepg {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "6")]
    pub ebjejlglodb: u32,
    #[prost(uint32, tag = "9")]
    pub jaaekgkmado: u32,
    #[prost(message, optional, tag = "10")]
    pub lfimdgikmmn: ::core::option::Option<Nglcjleibdh>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20053)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mokbeachieb {
    #[prost(message, repeated, tag = "11")]
    pub pmjgjnilmbp: ::prost::alloc::vec::Vec<Jcfcdconmkb>,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4173)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kedkbddjggf {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(message, optional, tag = "4")]
    pub apefohjkiik: ::core::option::Option<Clnagpokmih>,
    #[prost(message, optional, tag = "7")]
    pub nkkcadbjedl: ::core::option::Option<Epangooiecn>,
    #[prost(message, optional, tag = "13")]
    pub iopgomdhnba: ::core::option::Option<Bhdohigejan>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21653)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gkbdkadichp {
    #[prost(message, repeated, tag = "8")]
    pub jgkhhflnfem: ::prost::alloc::vec::Vec<Ombeifnnedf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4808)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fjcgkfglnjb {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "9")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pnhdmgcfepk {
    #[prost(message, optional, tag = "1")]
    pub nganceicghc: ::core::option::Option<Lhhomfpbfoe>,
    #[prost(bool, tag = "6")]
    pub omeniamedce: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24944)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bnecghfnfpf {
    #[prost(uint32, tag = "6")]
    pub jimelgdjmlf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2817)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fpikkdklkkj {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bjfpgdpgbkc {
    #[prost(message, repeated, tag = "4")]
    pub ieicckjighh: ::prost::alloc::vec::Vec<Cfbijpoajhg>,
    #[prost(uint32, tag = "13")]
    pub cpddbbokdca: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27335)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ljappobjneh {
    #[prost(map = "uint32, uint32", tag = "1")]
    pub ijlfkccoonm: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "14")]
    pub uid: u32,
    #[prost(uint32, tag = "5")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29685)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bmmkmbbccpo {
    #[prost(enumeration = "Kpfoblalblc", tag = "5")]
    pub daakpcoabep: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27525)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pacgnpnfjbh {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jdeneddimao {
    #[prost(message, repeated, tag = "2")]
    pub oncfekcfkmo: ::prost::alloc::vec::Vec<Nbjpchjjcnj>,
    #[prost(uint32, tag = "3")]
    pub level_id: u32,
    #[prost(enumeration = "Pimmbidldcl", tag = "7")]
    pub kkppjfkddep: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6558)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Amabiiafgbj {
    #[prost(uint32, tag = "2")]
    pub group_id: u32,
    #[prost(uint32, tag = "13")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26492)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dppbijcbeeh {
    #[prost(uint32, tag = "2")]
    pub gfdlfnmfala: u32,
    #[prost(uint32, repeated, tag = "5")]
    pub jggobknpmfj: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "13")]
    pub lchbeahgheo: u32,
    #[prost(uint32, tag = "15")]
    pub hggehlmhkmp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23575)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kagklebigab {
    #[prost(uint64, tag = "13")]
    pub guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5827)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ohplbmabiff {
    #[prost(message, optional, tag = "14")]
    pub gifedgemmma: ::core::option::Option<Dalekdkmmbf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23141)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jppjmclbhdj {
    #[prost(uint32, tag = "2")]
    pub entity_id: u32,
    #[prost(uint32, tag = "9")]
    pub kgconldgjpg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mknbfihehne {
    #[prost(uint32, tag = "13")]
    pub bodiejclgmb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28973)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bbkbgfpihih {
    #[prost(uint32, tag = "5")]
    pub entity_id: u32,
    #[prost(uint32, tag = "7")]
    pub progress: u32,
    #[prost(uint32, tag = "15")]
    pub play_type: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mlhdjcgehab {
    #[prost(uint32, tag = "15")]
    pub hkegebjnjjd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28030)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oanpfjbjoba {
    #[prost(uint32, repeated, tag = "8")]
    pub hlhllfeobjg: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3516)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cnkjphpfido {
    #[prost(uint32, repeated, tag = "2")]
    pub bompjddhgin: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6176)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nbffjojcpcl {
    #[prost(int32, tag = "12")]
    pub njpbhnfkjdk: i32,
    #[prost(uint32, tag = "10")]
    pub scene_id: u32,
    #[prost(int32, tag = "1")]
    pub query_id: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25330)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ieajkejijco {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "4")]
    pub eifailjdgdg: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "5")]
    pub objdmajdhfh: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "14")]
    pub hbfcoilbhmc: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct CurVehicleInfo {
    #[prost(uint32, tag = "1")]
    pub entity_id: u32,
    #[prost(uint32, tag = "2")]
    pub pos: u32,
    #[prost(uint32, tag = "3")]
    pub gadget_id: u32,
    #[prost(message, optional, tag = "4")]
    pub enter_pos: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "5")]
    pub vehicle_type: u32,
    #[prost(message, optional, tag = "6")]
    pub enter_rot: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1830)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fcbdchfcfid {
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bgapieakhec {
    #[prost(uint32, tag = "2")]
    pub nekecfnahom: u32,
    #[prost(message, repeated, tag = "7")]
    pub ophejhkgdgj: ::prost::alloc::vec::Vec<Famdmpnckjb>,
    #[prost(uint32, tag = "9")]
    pub ggbmeemgmid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21599)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jfnkdieinjk {
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26727)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kkehamjkjon {
    #[prost(message, optional, tag = "4")]
    pub kehkbepdnbd: ::core::option::Option<Lioffogfcgc>,
    #[prost(bool, tag = "2")]
    pub ldcfadnknge: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20646)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lnodbjglcgf {
    #[prost(uint32, tag = "2")]
    pub kngbdmdcnhk: u32,
    #[prost(oneof = "lnodbjglcgf::Bplojmbimle", tags = "1555, 677")]
    pub bplojmbimle: ::core::option::Option<lnodbjglcgf::Bplojmbimle>,
}
/// Nested message and enum types in `LNODBJGLCGF`.
pub mod lnodbjglcgf {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Bplojmbimle {
        #[prost(message, tag = "1555")]
        WidgetCreatorInfo(super::Fdnffenofkf),
        #[prost(message, tag = "677")]
        LocationInfo(super::Emekkiandle),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pkaphpkfafj {
    #[prost(uint32, repeated, tag = "1")]
    pub dkmafjlfodg: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, optional, tag = "2")]
    pub najkbndadma: ::core::option::Option<Jlmijcegcob>,
    #[prost(enumeration = "Cpfpaboolgk", tag = "3")]
    pub ebjcfmkmnmi: i32,
    #[prost(message, optional, tag = "4")]
    pub gndjlkapkmc: ::core::option::Option<Pmlbokpcdmg>,
    #[prost(message, repeated, tag = "5")]
    pub gnopgjkigpc: ::prost::alloc::vec::Vec<Ombeifnnedf>,
    #[prost(message, repeated, tag = "6")]
    pub hgnbgoglemg: ::prost::alloc::vec::Vec<Boefbfnpoko>,
    #[prost(uint64, repeated, tag = "7")]
    pub avatar_guid_list: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint32, tag = "8")]
    pub oiobnfophlo: u32,
    #[prost(message, repeated, tag = "9")]
    pub iejmomdhima: ::prost::alloc::vec::Vec<Hellfllbjmi>,
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
    #[prost(message, repeated, tag = "11")]
    pub cgpomedgfcf: ::prost::alloc::vec::Vec<Gneajfolmbm>,
    #[prost(uint32, tag = "12")]
    pub aekageebaaa: u32,
    #[prost(uint32, tag = "14")]
    pub lihgofdjmma: u32,
    #[prost(uint32, tag = "15")]
    pub fcpecpmogoj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25381)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mpalgmgdidh {
    #[prost(uint32, repeated, tag = "1")]
    pub fbhbheaommc: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hgmnlagdfdc {
    #[prost(uint32, tag = "6")]
    pub uid: u32,
    #[prost(uint32, tag = "10")]
    pub score: u32,
    #[prost(message, repeated, tag = "12")]
    pub ceadnknhhoh: ::prost::alloc::vec::Vec<Nljpjjgepmh>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27793)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pjoghgbeogj {
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lodgaokfcgn {
    #[prost(uint32, repeated, tag = "14")]
    pub ddkbflgfcoi: ::prost::alloc::vec::Vec<u32>,
    #[prost(oneof = "lodgaokfcgn::Detail", tags = "1, 13")]
    pub detail: ::core::option::Option<lodgaokfcgn::Detail>,
}
/// Nested message and enum types in `LODGAOKFCGN`.
pub mod lodgaokfcgn {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(message, tag = "1")]
        OrderInfo(super::Pkbdlalmjml),
        #[prost(message, tag = "13")]
        ExamInfo(super::Ielanafkgko),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2439)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lmdpfoolglk {
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29716)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hmoepmgnfmc {
    #[prost(uint32, tag = "4")]
    pub pnjecejeopo: u32,
    #[prost(uint32, tag = "6")]
    pub bmhpfibinmn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1823)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mpnihenjcoa {
    #[prost(message, repeated, tag = "3")]
    pub item_list: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(uint32, repeated, tag = "2")]
    pub hpbfohojkdh: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "10")]
    pub mcmhepoeold: u32,
    #[prost(bool, tag = "8")]
    pub fkhkcpimfki: bool,
    #[prost(uint32, tag = "13")]
    pub jidjcmodoea: u32,
    #[prost(uint32, tag = "1")]
    pub pjabefajbgb: u32,
    #[prost(uint32, tag = "12")]
    pub bjlagmaidbi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lameaodojid {
    #[prost(message, repeated, tag = "2")]
    pub avatar_list: ::prost::alloc::vec::Vec<Gooockgeefh>,
    #[prost(uint32, tag = "6")]
    pub pokhdgjnlmf: u32,
    #[prost(uint32, tag = "9")]
    pub fmoonpcghdb: u32,
    #[prost(uint32, tag = "15")]
    pub bghklcfcjcp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21031)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fopmkehgbfh {
    #[prost(uint64, tag = "4")]
    pub mcppeknbhfk: u64,
    #[prost(bool, tag = "10")]
    pub bpnkheifahp: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dhlbgcekggd {
    #[prost(uint32, tag = "2")]
    pub miolbjepfgp: u32,
    #[prost(uint32, tag = "5")]
    pub index: u32,
    #[prost(uint32, tag = "7")]
    pub avatar_id: u32,
    #[prost(uint32, tag = "8")]
    pub mjckdidpgld: u32,
    #[prost(fixed32, tag = "11")]
    pub lleiggalfig: u32,
    #[prost(fixed32, tag = "14")]
    pub jabgacillec: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oaaflebinln {
    #[prost(uint32, tag = "11")]
    pub bfbmafjfhja: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nbjpchjjcnj {
    #[prost(bool, tag = "2")]
    pub hdnildcefmg: bool,
    #[prost(uint32, repeated, tag = "4")]
    pub costume_id: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "7")]
    pub uid: u32,
    #[prost(string, tag = "8")]
    pub omknbnmebik: ::prost::alloc::string::String,
    #[prost(bool, tag = "9")]
    pub ggoecigkpaa: bool,
    #[prost(uint32, repeated, tag = "13")]
    pub fiekpelikle: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "15")]
    pub avatar_id: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nbhhiaknanm {
    #[prost(uint32, tag = "3")]
    pub id: u32,
    #[prost(uint32, tag = "6")]
    pub iejpghnlidb: u32,
    #[prost(uint32, tag = "13")]
    pub nmaapldbbni: u32,
    #[prost(message, optional, tag = "14")]
    pub pos: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4043)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nfojjmofdll {
    #[prost(enumeration = "Afogmhlhodn", tag = "2")]
    pub imiogmdokcb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29786)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bbbmggolapk {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21838)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ighhljefbbh {
    #[prost(message, repeated, tag = "1")]
    pub fagjdjiglon: ::prost::alloc::vec::Vec<Elhhgieoicp>,
    #[prost(bool, tag = "2")]
    pub jlaiaaekggm: bool,
    #[prost(uint32, tag = "3")]
    pub jimelgdjmlf: u32,
    #[prost(uint32, repeated, tag = "7")]
    pub cljikpeplec: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "8")]
    pub kkppjfkddep: u32,
    #[prost(message, repeated, tag = "9")]
    pub meikgboldgh: ::prost::alloc::vec::Vec<Hfhjkhoplmn>,
    #[prost(uint32, tag = "10")]
    pub duration: u32,
    #[prost(bool, tag = "11")]
    pub edojgafakda: bool,
    #[prost(uint32, tag = "14")]
    pub jabgacillec: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gdeomcclabg {
    #[prost(uint32, tag = "14")]
    pub mfhnfaomiba: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oeipmhmdadf {
    #[prost(uint32, tag = "1")]
    pub monster_id: u32,
    #[prost(uint32, repeated, tag = "2")]
    pub affix_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "11")]
    pub level: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eplphilhohe {
    #[prost(uint32, tag = "1")]
    pub pemggkiikih: u32,
    #[prost(uint32, tag = "2")]
    pub mffpclgbcdg: u32,
    #[prost(int32, tag = "3")]
    pub local_id: i32,
    #[prost(int32, tag = "9")]
    pub hljhhfickmg: i32,
    #[prost(uint32, tag = "10")]
    pub instanced_ability_id: u32,
    #[prost(uint32, tag = "12")]
    pub instanced_modifier_id: u32,
    #[prost(bool, tag = "15")]
    pub is_serverbuff_modifier: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29983)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lnlfihmicap {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3536)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fllfpgjcdee {
    #[prost(map = "uint32, uint32", tag = "6")]
    pub ijlfkccoonm: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "8")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27262)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hmhmgcnlnmd {
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gknmalejkhn {
    #[prost(uint32, tag = "1")]
    pub dhaapnonjpj: u32,
    #[prost(uint32, tag = "2")]
    pub fefpocnjien: u32,
    #[prost(uint32, tag = "3")]
    pub jhafedefhhg: u32,
    #[prost(uint32, tag = "6")]
    pub ilbplcfdefo: u32,
    #[prost(uint32, tag = "7")]
    pub ipjlgafcdke: u32,
    #[prost(uint32, tag = "11")]
    pub dlohciiifdh: u32,
    #[prost(uint32, tag = "12")]
    pub mjdaeegpjon: u32,
    #[prost(uint32, tag = "13")]
    pub gbglldincmh: u32,
    #[prost(uint32, tag = "15")]
    pub maoaglbjnnp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2191)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fkbojbnbfen {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint32, tag = "7")]
    pub oeocpoekcmj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26130)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gfihdkccjgn {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3802)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ookikgdnjmm {
    #[prost(uint32, tag = "1")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct UgcSpecialGadgetInfo {
    #[prost(uint32, tag = "1")]
    pub group_id: u32,
    #[prost(uint32, tag = "2")]
    pub guid: u32,
    #[prost(uint32, tag = "3")]
    pub ugc_gadget_config_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26680)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pbmdmdakcdo {
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1615)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dheonekmalb {
    #[prost(uint32, tag = "9")]
    pub kcenfcebeha: u32,
    #[prost(uint32, tag = "11")]
    pub khkaghhoibi: u32,
    #[prost(bool, tag = "15")]
    pub kjpfbjchlci: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fjkeekcohpl {
    #[prost(bool, tag = "1")]
    pub is_finish: bool,
    #[prost(uint32, tag = "4")]
    pub level_id: u32,
    #[prost(bool, tag = "15")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Imokhhljpie {
    #[prost(uint32, tag = "7")]
    pub progress: u32,
    #[prost(enumeration = "Olbpkdjigfi", tag = "8")]
    pub state: i32,
    #[prost(uint32, tag = "10")]
    pub id: u32,
    #[prost(uint32, tag = "14")]
    pub kljcagkgilp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2060)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SceneForceUnlockNotify {
    #[prost(bool, tag = "9")]
    pub is_add: bool,
    #[prost(uint32, repeated, tag = "13")]
    pub force_id_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5695)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pbmdicgahkn {
    #[prost(uint32, tag = "5")]
    pub costume_id: u32,
    #[prost(uint32, tag = "14")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20590)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oapfjijbjmk {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(uint32, tag = "11")]
    pub gmfoeebfncd: u32,
    #[prost(uint32, repeated, tag = "15")]
    pub cjiieiogbfo: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6232)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gpcmimodgbm {
    #[prost(uint32, tag = "9")]
    pub coegonfeekd: u32,
    #[prost(uint32, tag = "1")]
    pub lddcajjpoah: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21051)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kmppdfmndpc {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26408)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fijijffokal {
    #[prost(bool, tag = "10")]
    pub kdmkhcbjhoe: bool,
    #[prost(uint32, tag = "12")]
    pub mlnmecigdmh: u32,
    #[prost(uint32, tag = "14")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6291)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bocjombcnep {
    #[prost(uint32, tag = "11")]
    pub aoegkkajean: u32,
    #[prost(bool, tag = "2")]
    pub mihonjccajc: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kooomjkkomo {
    #[prost(uint32, tag = "11")]
    pub eaipgemknpo: u32,
    #[prost(oneof = "kooomjkkomo::Dapnlkepgjn", tags = "3, 7, 9")]
    pub dapnlkepgjn: ::core::option::Option<kooomjkkomo::Dapnlkepgjn>,
}
/// Nested message and enum types in `KOOOMJKKOMO`.
pub mod kooomjkkomo {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Dapnlkepgjn {
        #[prost(message, tag = "3")]
        FirstStageInfo(super::Gdejplceoko),
        #[prost(message, tag = "7")]
        ThirdStageInfo(super::Lnjhdkepbfo),
        #[prost(message, tag = "9")]
        SecondStageInfo(super::Flmmaaoddgd),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21675)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kklnmohaimc {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3915)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Faaecpijhko {
    #[prost(uint32, tag = "7")]
    pub level: u32,
    #[prost(uint32, tag = "4")]
    pub fagpphacnbj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fdljmdjjnkd {
    #[prost(uint32, repeated, tag = "3")]
    pub cfpcdolpjbf: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "6")]
    pub aebmekgcefp: ::prost::alloc::vec::Vec<Pcnomcdhbia>,
    #[prost(message, repeated, tag = "9")]
    pub jhomlehhifk: ::prost::alloc::vec::Vec<Kiappnbmobo>,
    #[prost(bool, tag = "10")]
    pub mghaichppck: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6163)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jnpmcocigmn {
    #[prost(int32, repeated, tag = "2")]
    pub cbdkndmejjb: ::prost::alloc::vec::Vec<i32>,
    #[prost(message, repeated, tag = "8")]
    pub dopjdkedcbn: ::prost::alloc::vec::Vec<Ignbahodbee>,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22032)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lgnnfdhphoi {
    #[prost(string, tag = "9")]
    pub bmfkoonmmee: ::prost::alloc::string::String,
    #[prost(uint32, tag = "11")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21446)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kgifnlfcmkb {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "6")]
    pub kanginkegao: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21246)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hmhahcheiaa {
    #[prost(bool, tag = "1")]
    pub ldcfadnknge: bool,
    #[prost(string, tag = "2")]
    pub name: ::prost::alloc::string::String,
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "7")]
    pub lnbgblbmadj: u32,
    #[prost(message, optional, tag = "11")]
    pub ienmpnlkpmh: ::core::option::Option<Nbgckgbplal>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26180)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oigpjfpohdn {
    #[prost(enumeration = "Bdkodfccnci", tag = "4")]
    pub apbkapmjmib: i32,
    #[prost(message, optional, tag = "6")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "14")]
    pub entity_id: u32,
    #[prost(message, optional, tag = "15")]
    pub pos: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gpcmgdakoem {
    #[prost(message, optional, tag = "4")]
    pub mcjcfhaijaj: ::core::option::Option<Pbkkceocheb>,
    #[prost(uint32, tag = "9")]
    pub scene_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6057)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aafioogbaag {
    #[prost(message, repeated, tag = "13")]
    pub ghflobgmgnc: ::prost::alloc::vec::Vec<Gegkobeijda>,
    #[prost(bool, tag = "10")]
    pub bnffigfaiao: bool,
    #[prost(uint32, tag = "15")]
    pub imiogmdokcb: u32,
    #[prost(uint32, tag = "6")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9575)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fldlcebinnb {
    #[prost(uint32, repeated, tag = "6")]
    pub uid_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nfdgafnbigp {
    #[prost(uint32, tag = "8")]
    pub dfbaippcedg: u32,
    #[prost(uint32, tag = "10")]
    pub kdbmlgdddon: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hjepdhkiacb {
    #[prost(message, repeated, tag = "1")]
    pub mieafinbndk: ::prost::alloc::vec::Vec<Lcfcocgnpom>,
    #[prost(bool, tag = "2")]
    pub is_finish: bool,
    #[prost(bool, tag = "11")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "15")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20109)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Acadehencnp {
    #[prost(map = "uint32, message", tag = "5")]
    pub belokfabijf: ::std::collections::HashMap<u32, Hiaojlhggdk>,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5200)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Edfdnhpimeb {
    #[prost(uint32, tag = "4")]
    pub anim_hash: u32,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pjplljjmeed {
    #[prost(message, repeated, tag = "7")]
    pub loihngedhea: ::prost::alloc::vec::Vec<Bkjkchoklkg>,
    #[prost(uint32, tag = "11")]
    pub ekeackkiegh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Apnkbhelnbc {
    #[prost(uint32, tag = "5")]
    pub dajhkhflndj: u32,
    #[prost(uint32, tag = "8")]
    pub ooipgfedjmn: u32,
    #[prost(uint32, tag = "12")]
    pub skill_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9206)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hdklddhdebp {
    #[prost(message, repeated, tag = "11")]
    pub bbopfhaodop: ::prost::alloc::vec::Vec<Ajmimbmcabe>,
    #[prost(uint32, tag = "6")]
    pub finahglfhag: u32,
    #[prost(uint32, tag = "7")]
    pub hggehlmhkmp: u32,
    #[prost(uint32, tag = "5")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26093)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lfcaliocepn {
    #[prost(uint32, tag = "4")]
    pub pjhiljjcffp: u32,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2979)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Adpfdhdgfli {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oojgokpcgnj {
    #[prost(bool, tag = "4")]
    pub fadincnpbmd: bool,
    #[prost(bool, tag = "10")]
    pub dopdmfendkh: bool,
    #[prost(uint64, tag = "15")]
    pub server_game_time: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23636)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Glgmkbmelaj {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2646)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eifnhagbpco {
    #[prost(uint32, repeated, tag = "11")]
    pub balpdamodlc: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26423)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jnlbhmiiodi {
    #[prost(uint32, repeated, tag = "9")]
    pub pjgnlmnogch: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "14")]
    pub oajoobghagm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct AiSyncInfo {
    #[prost(uint32, tag = "9")]
    pub entity_id: u32,
    #[prost(bool, tag = "11")]
    pub is_self_killing: bool,
    #[prost(bool, tag = "12")]
    pub has_path_to_target: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20879)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iifgkfeffpl {
    #[prost(uint32, tag = "5")]
    pub cell_id: u32,
    #[prost(uint32, tag = "7")]
    pub oajoobghagm: u32,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mkdekefnklf {
    #[prost(uint32, tag = "1")]
    pub kljcagkgilp: u32,
    #[prost(uint32, tag = "3")]
    pub hpodkdccikj: u32,
    #[prost(enumeration = "Mopophaajpd", tag = "5")]
    pub kpgfmcemaie: i32,
    #[prost(uint32, tag = "7")]
    pub iigdiofhlga: u32,
    #[prost(uint32, tag = "11")]
    pub alcplgmldlk: u32,
    #[prost(uint32, tag = "13")]
    pub jaaekgkmado: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2090)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nkfjcbgmjab {
    #[prost(string, repeated, tag = "4")]
    pub ndfkojopdkc: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2637)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pahlkkebdnn {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6201)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Llokkehflhg {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6362)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ngindeefeaa {
    #[prost(message, optional, tag = "1")]
    pub okkjcbojaod: ::core::option::Option<Ncgpmhoihhl>,
    #[prost(uint32, tag = "13")]
    pub hkegebjnjjd: u32,
    #[prost(message, repeated, tag = "15")]
    pub kabodnmegek: ::prost::alloc::vec::Vec<Kiblanedmoa>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21518)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bnldbhbmfnf {
    #[prost(uint32, tag = "3")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9607)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kbmefjhmkdm {
    #[prost(int32, tag = "11")]
    pub retcode: i32,
    #[prost(enumeration = "Dcdcnnpiffk", tag = "13")]
    pub fbfdaklpefb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gpjghadeoen {
    #[prost(message, optional, tag = "1")]
    pub olaoagcjjea: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "2")]
    pub obbgjelhibg: u32,
    #[prost(bool, tag = "3")]
    pub bimakeidcma: bool,
    #[prost(message, repeated, tag = "5")]
    pub jiljhcibbdm: ::prost::alloc::vec::Vec<Bkjkchoklkg>,
    #[prost(message, optional, tag = "6")]
    pub dhkeokelocd: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "7")]
    pub scene_id: u32,
    #[prost(bool, tag = "8")]
    pub hlaggkaibjj: bool,
    #[prost(message, repeated, tag = "9")]
    pub nemlamghnbn: ::prost::alloc::vec::Vec<Bkjkchoklkg>,
    #[prost(message, optional, tag = "10")]
    pub gjiacagjkdj: ::core::option::Option<Bkjkchoklkg>,
    #[prost(message, optional, tag = "11")]
    pub born_pos: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "12")]
    pub djhlnegadip: ::core::option::Option<Vector>,
    #[prost(message, repeated, tag = "13")]
    pub lnljakecgee: ::prost::alloc::vec::Vec<Bidjmbkeiib>,
    #[prost(uint32, tag = "14")]
    pub ppbjohamleb: u32,
    #[prost(uint32, tag = "15")]
    pub onidnjmjncj: u32,
    #[prost(message, optional, tag = "1647")]
    pub henedojpljj: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4876)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mflfljfdlik {
    #[prost(string, tag = "15")]
    pub pgadgfmdmof: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9163)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mdoicbjenpn {
    #[prost(uint32, tag = "2")]
    pub lhiaaemjecg: u32,
    #[prost(uint32, tag = "5")]
    pub ahmcfoppbfn: u32,
    #[prost(uint32, tag = "11")]
    pub eojiccehgal: u32,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9220)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kmomohbenja {
    #[prost(uint64, tag = "2")]
    pub avatar_guid: u64,
    #[prost(uint32, tag = "12")]
    pub cmhgdldahdm: u32,
    #[prost(uint32, tag = "13")]
    pub skill_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3152)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lmoljoejnpp {
    #[prost(uint32, tag = "8")]
    pub kngbdmdcnhk: u32,
    #[prost(uint32, tag = "1")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1333)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eecfnmlelfj {
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8719)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mmpjaelafgm {
    #[prost(message, optional, tag = "3")]
    pub mnpoiilnkob: ::core::option::Option<Pkaphpkfafj>,
    #[prost(message, optional, tag = "9")]
    pub edjlngfglcp: ::core::option::Option<Hpdpklfdmce>,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7734)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oahffanddgd {
    #[prost(uint32, tag = "1")]
    pub mkchdhagkkk: u32,
    #[prost(message, repeated, tag = "2")]
    pub ccadhohdbgj: ::prost::alloc::vec::Vec<Kjcafaphgpa>,
    #[prost(uint32, tag = "9")]
    pub pcepaceobhm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3685)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ibekppogojb {
    #[prost(uint32, tag = "11")]
    pub ckphcagonkg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ooimbbpdcmm {
    #[prost(uint32, repeated, tag = "1")]
    pub jpdlcdgllac: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "8")]
    pub level_id: u32,
    #[prost(bool, tag = "14")]
    pub glkngddnocn: bool,
    #[prost(bool, tag = "15")]
    pub is_finish: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Egocjgkcmgf {
    #[prost(uint32, tag = "2")]
    pub level: u32,
    #[prost(uint32, tag = "3")]
    pub exp: u32,
    #[prost(uint32, tag = "5")]
    pub hepibkmfgji: u32,
    #[prost(uint32, tag = "7")]
    pub fagpphacnbj: u32,
    #[prost(uint32, tag = "8")]
    pub fmhpjlfhlfm: u32,
    #[prost(uint32, tag = "11")]
    pub hgbbglkplfi: u32,
    #[prost(uint32, repeated, tag = "12")]
    pub cggmedeicfl: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, optional, tag = "117")]
    pub bcifjfnnjjm: ::core::option::Option<Pendpgjgckd>,
    #[prost(message, optional, tag = "1085")]
    pub nplocjaeibe: ::core::option::Option<Pdepcehjhjj>,
    #[prost(message, optional, tag = "1213")]
    pub jadiddibhpf: ::core::option::Option<Kccfehjjdgl>,
    #[prost(message, optional, tag = "2011")]
    pub kcblafeckch: ::core::option::Option<Fihnkibglha>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6122)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bidhcokohei {
    #[prost(uint32, tag = "1")]
    pub version: u32,
    #[prost(uint32, tag = "9")]
    pub hhaiifodeoo: u32,
    #[prost(uint32, tag = "11")]
    pub scene_id: u32,
    #[prost(uint32, tag = "12")]
    pub egjdkpkgdib: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5232)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mcimnooohjd {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aphhkpjpmpl {
    #[prost(bool, tag = "2")]
    pub cbcfbnpmigf: bool,
    #[prost(uint32, tag = "6")]
    pub level_id: u32,
    #[prost(bool, tag = "9")]
    pub gmphlcgddge: bool,
    #[prost(uint32, tag = "15")]
    pub mkcgmmganlk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct EntityAuthorityInfo {
    #[prost(message, optional, tag = "1")]
    pub ability_info: ::core::option::Option<AbilitySyncStateInfo>,
    #[prost(message, optional, tag = "2")]
    pub renderer_changed_info: ::core::option::Option<EntityRendererChangedInfo>,
    #[prost(message, optional, tag = "3")]
    pub ai_info: ::core::option::Option<SceneEntityAiInfo>,
    #[prost(message, optional, tag = "4")]
    pub born_pos: ::core::option::Option<Vector>,
    #[prost(message, repeated, tag = "5")]
    pub pose_para_list: ::prost::alloc::vec::Vec<AnimatorParameterValueInfoPair>,
    #[prost(message, optional, tag = "6")]
    pub client_extra_info: ::core::option::Option<EntityClientExtraInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3092)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Momjnlpjael {
    #[prost(uint32, tag = "14")]
    pub pcfiaajeoij: u32,
    #[prost(uint32, tag = "15")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4818)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pfkjggmclcf {
    #[prost(uint32, tag = "4")]
    pub ghokenboone: u32,
    #[prost(uint32, tag = "8")]
    pub bbegbafkkjd: u32,
    #[prost(enumeration = "Ekdaephbgii", tag = "12")]
    pub gpcemphglje: i32,
    #[prost(enumeration = "Ekdaephbgii", tag = "15")]
    pub ehddlfcgnhb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct BreakoutAction {
    #[prost(enumeration = "BreakoutActionType", tag = "1")]
    pub action_type: i32,
    #[prost(uint64, tag = "2")]
    pub client_game_time: u64,
    #[prost(uint64, tag = "3")]
    pub server_game_time: u64,
    #[prost(bool, tag = "4")]
    pub is_failed: bool,
    #[prost(uint32, tag = "5")]
    pub pre_index: u32,
    #[prost(uint32, tag = "6")]
    pub new_index: u32,
    #[prost(message, optional, tag = "7")]
    pub pos: ::core::option::Option<BreakoutVector2>,
    #[prost(message, optional, tag = "8")]
    pub move_dir: ::core::option::Option<BreakoutVector2>,
    #[prost(int32, tag = "9")]
    pub speed: i32,
    #[prost(uint32, tag = "10")]
    pub peer_id: u32,
    #[prost(uint32, tag = "11")]
    pub element_type: u32,
    #[prost(uint32, tag = "12")]
    pub element_reaction_buff: u32,
    #[prost(uint32, tag = "13")]
    pub speed_increase_count: u32,
    #[prost(bool, tag = "14")]
    pub has_extra_ball: bool,
    #[prost(message, optional, tag = "15")]
    pub extra_ball_dir: ::core::option::Option<BreakoutVector2>,
    #[prost(uint32, tag = "16")]
    pub extra_ball_index: u32,
    #[prost(int32, tag = "17")]
    pub offset: i32,
    #[prost(uint64, tag = "18")]
    pub execution_game_time: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dhnjbdcklkb {
    #[prost(uint32, repeated, tag = "9")]
    pub keeeomgcllo: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3931)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mfpanadfdlg {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22908)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hhcpcgcbgoh {
    #[prost(string, tag = "8")]
    pub kpiogbmlmem: ::prost::alloc::string::String,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(message, optional, tag = "11")]
    pub acpeigepold: ::core::option::Option<Gpjghadeoen>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22559)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gbogddlojpk {
    #[prost(uint32, tag = "4")]
    pub poaficpfpcj: u32,
    #[prost(string, tag = "12")]
    pub title: ::prost::alloc::string::String,
    #[prost(string, tag = "15")]
    pub lkfgeagbpga: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(656)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cdbllmdkion {
    #[prost(uint32, repeated, tag = "3")]
    pub pdeipgdakhg: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "6")]
    pub dhlpcpbpffg: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "15")]
    pub gjcdhpcaeph: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mghcahckcgh {
    #[prost(message, repeated, tag = "1")]
    pub mljeopcicfm: ::prost::alloc::vec::Vec<Fdockhoiobj>,
    #[prost(message, repeated, tag = "9")]
    pub jnnghpphopi: ::prost::alloc::vec::Vec<Fdockhoiobj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29350)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eimkbicmpfc {
    #[prost(message, optional, tag = "15")]
    pub fgaeincckdk: ::core::option::Option<Ajkilgiehim>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Npnjinmablf {
    #[prost(bool, tag = "9")]
    pub eemkoelpgba: bool,
    #[prost(oneof = "npnjinmablf::Detail", tags = "2, 8, 13")]
    pub detail: ::core::option::Option<npnjinmablf::Detail>,
}
/// Nested message and enum types in `NPNJINMABLF`.
pub mod npnjinmablf {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(uint32, tag = "2")]
        TrialConfigId(u32),
        #[prost(uint32, tag = "8")]
        AvatarId(u32),
        #[prost(uint32, tag = "13")]
        RentAvatarId(u32),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21820)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nmnklcemddi {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6019)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fdlmadnkipb {
    #[prost(uint32, tag = "5")]
    pub mp_play_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mlcfpmblkjj {
    #[prost(uint32, tag = "9")]
    pub llfecpnpmha: u32,
    #[prost(uint32, tag = "15")]
    pub okghpcoefii: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22089)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bkjkoljeoia {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct BreakoutElementReactionCounter {
    #[prost(uint32, tag = "1")]
    pub element_reaction: u32,
    #[prost(uint32, tag = "2")]
    pub count: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mciacaglljh {
    #[prost(bool, tag = "3")]
    pub kcfdpkkbecp: bool,
    #[prost(int64, repeated, tag = "14")]
    pub pgckhigjbfe: ::prost::alloc::vec::Vec<i64>,
    #[prost(message, repeated, tag = "15")]
    pub massive_prop_list: ::prost::alloc::vec::Vec<MassivePropSyncInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gfehnonhkkn {
    #[prost(bool, tag = "3")]
    pub fgomalejcph: bool,
    #[prost(bool, tag = "4")]
    pub iecapkphljk: bool,
    #[prost(message, optional, tag = "10")]
    pub ibgceiifojj: ::core::option::Option<Hekghbfomii>,
    #[prost(message, optional, tag = "15")]
    pub dnkjojhbjld: ::core::option::Option<Epjopbfflfl>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jihhhapkbeh {
    #[prost(uint32, tag = "2")]
    pub avatar_id: u32,
    #[prost(uint32, tag = "3")]
    pub costume_id: u32,
    #[prost(uint64, tag = "9")]
    pub guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5283)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gehenbjmpef {
    #[prost(message, optional, tag = "1")]
    pub res_version_config: ::core::option::Option<ResVersionConfig>,
    #[prost(string, tag = "3")]
    pub nhhmoabafhn: ::prost::alloc::string::String,
    #[prost(uint32, tag = "5")]
    pub client_data_version: u32,
    #[prost(string, tag = "6")]
    pub client_silence_version_suffix: ::prost::alloc::string::String,
    #[prost(bool, tag = "7")]
    pub mflnkipgbhh: bool,
    #[prost(uint32, tag = "8")]
    pub client_silence_data_version: u32,
    #[prost(enumeration = "Bpojddinjga", tag = "11")]
    pub kgconldgjpg: i32,
    #[prost(string, tag = "12")]
    pub client_version_suffix: ::prost::alloc::string::String,
    #[prost(string, tag = "14")]
    pub hlghfffpnbb: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Joecmemnpfa {
    #[prost(uint32, repeated, tag = "7")]
    pub loaclkkmdfm: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8288)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kfhjfnamjfk {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20845)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mfgefkbbdee {
    #[prost(uint32, repeated, tag = "5")]
    pub dpfknniaocl: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "8")]
    pub bbopghnoadn: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Clmndafklel {
    #[prost(bool, tag = "3")]
    pub is_finish: bool,
    #[prost(message, repeated, tag = "6")]
    pub lcfaehibkfb: ::prost::alloc::vec::Vec<Akkloinfcpm>,
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
    #[prost(uint32, tag = "12")]
    pub score: u32,
    #[prost(bool, tag = "15")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(67)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Akdocmlnkfd {
    #[prost(uint32, repeated, tag = "10")]
    pub gkomohkjnek: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "15")]
    pub olaehfohihl: ::prost::alloc::vec::Vec<Lojadoadkgd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9252)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lkepcicgofe {
    #[prost(int32, tag = "11")]
    pub jcgigangoop: i32,
    #[prost(enumeration = "Ppphamdoacd", tag = "12")]
    pub jkiciamgohe: i32,
    #[prost(uint32, tag = "14")]
    pub klhogamigkm: u32,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jaepbkgeddl {
    #[prost(uint32, tag = "6")]
    pub mkcgmmganlk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25354)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ekogboagein {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29908)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ScenePointUnlockNotify {
    #[prost(uint32, repeated, tag = "4")]
    pub kngiechcbdh: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "7")]
    pub point_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "8")]
    pub pnnkjhbfkka: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "9")]
    pub scene_id: u32,
    #[prost(uint32, repeated, tag = "14")]
    pub dfgocmalaap: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25709)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Anmdidododk {
    #[prost(uint32, repeated, tag = "8")]
    pub fbhbheaommc: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "12")]
    pub jbogdlnfgmh: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26912)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eacomiklbea {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29832)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ehmbocgaokn {
    #[prost(uint32, tag = "4")]
    pub lolkpnagefi: u32,
    #[prost(message, optional, tag = "13")]
    pub inejfncooil: ::core::option::Option<Bemnaikefon>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20990)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dpomkogepje {
    #[prost(enumeration = "Mggahfoamjf", tag = "9")]
    pub fnipbjghmcf: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28881)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bpilihnappp {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26672)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ffgeaaoglfe {
    #[prost(uint64, tag = "7")]
    pub nfcnddlgklh: u64,
    #[prost(uint64, tag = "13")]
    pub edhgohlggck: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(971)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Njpkbhlglaf {
    #[prost(uint32, tag = "9")]
    pub city_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hopplbffanj {
    #[prost(uint32, tag = "1")]
    pub nmaapldbbni: u32,
    #[prost(bool, tag = "3")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "12")]
    pub level_id: u32,
    #[prost(bool, tag = "14")]
    pub is_finish: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23994)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kamdaocpikp {
    #[prost(uint32, tag = "2")]
    pub ffhpdcibkod: u32,
    #[prost(uint32, tag = "15")]
    pub end_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nekmgkeapid {
    #[prost(uint32, tag = "1")]
    pub jglicghgnfp: u32,
    #[prost(uint32, tag = "7")]
    pub plgcfdaenlc: u32,
    #[prost(uint32, tag = "9")]
    pub mfehfneiffa: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eoddbeanmoj {
    #[prost(uint32, tag = "11")]
    pub iejpghnlidb: u32,
    #[prost(uint32, tag = "12")]
    pub id: u32,
    #[prost(bool, tag = "13")]
    pub pmjlllfophk: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4001)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hdlciocpckc {
    #[prost(message, repeated, tag = "4")]
    pub oljbfdfkgjl: ::prost::alloc::vec::Vec<Fjbkbgpjolj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lmlbfoeldff {
    #[prost(message, repeated, tag = "15")]
    pub oenahheeflg: ::prost::alloc::vec::Vec<Accdeldokha>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6357)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mlgcbeanbah {
    #[prost(uint32, repeated, tag = "3")]
    pub fbhbheaommc: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2324)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nkmkafhpckm {
    #[prost(string, tag = "2")]
    pub version: ::prost::alloc::string::String,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3465)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ngkgkpncaif {
    #[prost(message, repeated, tag = "9")]
    pub pjmiheedbdb: ::prost::alloc::vec::Vec<Cjeimokenam>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct AvatarExcelInfo {
    #[prost(uint64, tag = "1")]
    pub prefab_path_hash: u64,
    #[prost(uint64, tag = "2")]
    pub prefab_path_remote_hash: u64,
    #[prost(uint64, tag = "3")]
    pub controller_path_hash: u64,
    #[prost(uint64, tag = "4")]
    pub controller_path_remote_hash: u64,
    #[prost(uint64, tag = "5")]
    pub combat_config_hash: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(953)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lgghhlmdkeg {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
    #[prost(uint32, tag = "11")]
    pub finahglfhag: u32,
    #[prost(uint32, repeated, tag = "13")]
    pub lebbfoaggjj: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7856)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Omekkoapodp {
    #[prost(uint32, tag = "1")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9540)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jdddaagegoo {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2374)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nmfcagfgeib {
    #[prost(message, repeated, tag = "8")]
    pub fhcfdlflkno: ::prost::alloc::vec::Vec<Nilmhfaanpl>,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21577)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kdgjieeepel {
    #[prost(uint32, repeated, tag = "14")]
    pub pdeipgdakhg: ::prost::alloc::vec::Vec<u32>,
    #[prost(enumeration = "Mkgdmhjgphc", tag = "11")]
    pub bcflcmfhamk: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9801)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hbgbipfofgf {
    #[prost(enumeration = "ForwardType", tag = "1")]
    pub forward_type: i32,
    #[prost(message, optional, tag = "2")]
    pub bklgjmlhlgi: ::core::option::Option<Mpehmgifbmm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Adhdjknmeke {
    #[prost(uint32, tag = "2")]
    pub oafinmepnhl: u32,
    #[prost(uint32, tag = "3")]
    pub score: u32,
    #[prost(uint32, tag = "6")]
    pub ogdcenflhjn: u32,
    #[prost(uint32, tag = "9")]
    pub fjapapjhjjd: u32,
    #[prost(uint32, tag = "12")]
    pub monejdbpolb: u32,
    #[prost(bool, tag = "13")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "15")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2969)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Igbljahmdhp {
    #[prost(message, repeated, tag = "1")]
    pub ondfgdnmabn: ::prost::alloc::vec::Vec<Fhmmnelmnmd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ekhmdfiddod {
    #[prost(uint32, tag = "4")]
    pub guid: u32,
    #[prost(message, repeated, tag = "10")]
    pub action_list: ::prost::alloc::vec::Vec<Amnjnfkhhgg>,
    #[prost(message, repeated, tag = "13")]
    pub bemmohcgonk: ::prost::alloc::vec::Vec<Ldfoehikkml>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27244)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jljgkeckbhe {
    #[prost(uint32, repeated, tag = "11")]
    pub dafmfimglge: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3648)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ocnemhedbpl {
    #[prost(uint64, tag = "10")]
    pub eehlmdngeln: u64,
    #[prost(uint32, tag = "8")]
    pub nnpnljflkej: u32,
    #[prost(uint32, tag = "5")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2794)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gbnelincnco {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1191)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Caemphnefjp {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4686)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fhpgcmmnoih {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2033)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ncjebbadgjh {
    #[prost(uint32, tag = "4")]
    pub level_id: u32,
    #[prost(uint32, repeated, tag = "13")]
    pub fmeeoommcaf: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "14")]
    pub fmdolmmajcg: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23565)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pimgpijjhne {
    #[prost(int32, tag = "4")]
    pub hanlnhaofom: i32,
    #[prost(message, repeated, tag = "10")]
    pub kbiadbffpgk: ::prost::alloc::vec::Vec<Mebchbgnffa>,
    #[prost(uint32, tag = "11")]
    pub lmpmkjjfcai: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3046)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetPlayerTokenReq {
    #[prost(string, tag = "5")]
    pub mhpfnlkcfom: ::prost::alloc::string::String,
    #[prost(string, tag = "1932")]
    pub lbkdgoefebc: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub lnojmeceebk: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub kipgkkmdakn: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub token: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub efajihmnobk: ::prost::alloc::string::String,
    #[prost(string, tag = "13")]
    pub account_uid: ::prost::alloc::string::String,
    #[prost(string, tag = "1580")]
    pub adioghfepmp: ::prost::alloc::string::String,
    #[prost(string, tag = "1048")]
    pub kolacojomfh: ::prost::alloc::string::String,
    #[prost(string, tag = "1685")]
    pub client_rand_key: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub ombjebikhhi: ::prost::alloc::string::String,
    #[prost(string, tag = "1036")]
    pub ijlhlcllene: ::prost::alloc::string::String,
    #[prost(string, tag = "471")]
    pub ohjnpjckgeg: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub hopdeoapnob: ::prost::alloc::string::String,
    #[prost(string, tag = "1359")]
    pub ehkmncgleme: ::prost::alloc::string::String,
    #[prost(uint32, tag = "1935")]
    pub adelhepcneb: u32,
    #[prost(uint32, tag = "1")]
    pub uid: u32,
    #[prost(uint32, tag = "7")]
    pub ldeplpbklji: u32,
    #[prost(uint32, tag = "675")]
    pub mndbnjhoaee: u32,
    #[prost(uint32, tag = "1749")]
    pub nclcelgnipj: u32,
    #[prost(uint32, tag = "646")]
    pub key_id: u32,
    #[prost(uint32, tag = "9")]
    pub jnlgdefhndg: u32,
    #[prost(uint32, tag = "14")]
    pub gkjoeienpdi: u32,
    #[prost(uint32, tag = "15")]
    pub ebmobbbaibc: u32,
    #[prost(uint32, tag = "12")]
    pub ajcgkkpccgd: u32,
    #[prost(uint32, tag = "1674")]
    pub afadlkfagdn: u32,
    #[prost(bool, tag = "11")]
    pub gmoplpfjnja: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7889)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kohneccilio {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct EntityEnvironmentInfo {
    #[prost(uint32, tag = "1")]
    pub json_climate_type: u32,
    #[prost(uint32, tag = "2")]
    pub climate_area_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25463)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bdhjcamlnhb {
    #[prost(uint32, tag = "2")]
    pub eaipgemknpo: u32,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(uint32, tag = "7")]
    pub hggehlmhkmp: u32,
    #[prost(message, repeated, tag = "10")]
    pub bbopfhaodop: ::prost::alloc::vec::Vec<Ajmimbmcabe>,
    #[prost(uint32, tag = "12")]
    pub finahglfhag: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Abhocfilgjl {
    #[prost(uint64, tag = "1")]
    pub pnnmihfhfnk: u64,
    #[prost(uint32, tag = "2")]
    pub nmgamknnojd: u32,
    #[prost(uint64, tag = "3")]
    pub nghbfmbjgcl: u64,
    #[prost(uint32, tag = "5")]
    pub beglapfgfaf: u32,
    #[prost(uint32, tag = "6")]
    pub kkladhfcbfj: u32,
    #[prost(uint32, tag = "7")]
    pub aipkcnhfdfn: u32,
    #[prost(uint32, repeated, tag = "8")]
    pub ecckebkeiog: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "10")]
    pub gpcdknknmnl: u32,
    #[prost(map = "uint64, uint32", tag = "12")]
    pub cdjjohndchn: ::std::collections::HashMap<u64, u32>,
    #[prost(message, repeated, tag = "13")]
    pub mgmgoljinmn: ::prost::alloc::vec::Vec<Emeajkniefa>,
    #[prost(map = "uint64, uint32", tag = "15")]
    pub ipfoimlfpik: ::std::collections::HashMap<u64, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4945)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nchhnegkgne {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint32, tag = "10")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27148)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pcidhapehip {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20627)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mfncadpfmjj {
    #[prost(message, repeated, tag = "14")]
    pub nehpgmldkmf: ::prost::alloc::vec::Vec<Lhdnohdmimo>,
    #[prost(message, repeated, tag = "4")]
    pub lkkkdnohcig: ::prost::alloc::vec::Vec<Dokknidhjob>,
    #[prost(uint32, tag = "7")]
    pub game_time: u32,
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
    #[prost(uint32, tag = "8")]
    pub onkgkhgafhj: u32,
    #[prost(uint32, tag = "5")]
    pub amlijkeniin: u32,
    #[prost(bool, tag = "11")]
    pub hcjfdjhilam: bool,
    #[prost(bool, tag = "9")]
    pub ncppelgefpn: bool,
    #[prost(uint32, tag = "12")]
    pub monejdbpolb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6280)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bjhgmjgofja {
    #[prost(bool, tag = "6")]
    pub hcjfdjhilam: bool,
    #[prost(string, tag = "9")]
    pub pjjjleplpkj: ::prost::alloc::string::String,
    #[prost(string, tag = "12")]
    pub dadhbnkcohb: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(188)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pjpmimkdbhg {
    #[prost(uint32, tag = "12")]
    pub gofhghokepn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hgpbonojdoa {
    #[prost(message, optional, tag = "1")]
    pub move_dir: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "3")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "5")]
    pub pos: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27409)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gdmjndeoflf {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1338)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bmkbidehhhf {
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iodejfjnicp {
    #[prost(bool, tag = "7")]
    pub joejchcfdpe: bool,
    #[prost(bool, tag = "8")]
    pub abhdemelcdn: bool,
    #[prost(uint32, tag = "10")]
    pub camp_id: u32,
    #[prost(uint32, tag = "12")]
    pub level_id: u32,
    #[prost(bool, tag = "15")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ngdfaggmlhb {
    #[prost(bool, tag = "2")]
    pub ncallphknad: bool,
    #[prost(bool, tag = "9")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "10")]
    pub pcclnbdipde: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oagnclpgikc {
    #[prost(message, optional, tag = "14")]
    pub loalbblhdii: ::core::option::Option<Mkbmdcgmieo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2871)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oioankdfebb {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "6")]
    pub hgpdopnhkkh: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(uint32, tag = "7")]
    pub ekngogijfok: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2633)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mknaccchmnl {
    #[prost(uint32, tag = "1")]
    pub gofhghokepn: u32,
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "6")]
    pub oopflkkhhel: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(491)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fibikeelcen {
    #[prost(uint32, tag = "1")]
    pub ggaancbkcbf: u32,
    #[prost(uint32, tag = "14")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20016)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kplgfgffmgi {
    #[prost(uint32, repeated, tag = "1")]
    pub cjiieiogbfo: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "6")]
    pub gmfoeebfncd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5524)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kdpjdhajkan {
    #[prost(message, repeated, tag = "3")]
    pub jbphchjpdem: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(uint32, tag = "4")]
    pub miolbjepfgp: u32,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "11")]
    pub empejfognpa: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(message, optional, tag = "13")]
    pub icchdgkmnlf: ::core::option::Option<Ljjfjilbnll>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7435)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bcghdfbpmnl {
    #[prost(uint32, tag = "6")]
    pub pjhiljjcffp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22658)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Idfinfmmaed {
    #[prost(uint32, tag = "11")]
    pub city_id: u32,
    #[prost(uint32, tag = "7")]
    pub config_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ddggnmcaglo {
    #[prost(bool, tag = "11")]
    pub cellikhhodl: bool,
    #[prost(uint32, tag = "13")]
    pub config_id: u32,
    #[prost(message, repeated, tag = "15")]
    pub mdkplbdanef: ::prost::alloc::vec::Vec<Ombeifnnedf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1665)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nfbdjailmhk {
    #[prost(string, tag = "1")]
    pub eemccmneckn: ::prost::alloc::string::String,
    #[prost(bool, tag = "5")]
    pub okgalcdapfd: bool,
    #[prost(bool, tag = "9")]
    pub ekhencachjm: bool,
    #[prost(uint32, tag = "13")]
    pub play_type: u32,
    #[prost(message, repeated, tag = "14")]
    pub bdefoigangn: ::prost::alloc::vec::Vec<Ojpkagfjmmm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22288)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hkbmkjmkpjd {
    #[prost(map = "uint32, uint32", tag = "1")]
    pub pifmpamgpae: ::std::collections::HashMap<u32, u32>,
    #[prost(uint64, tag = "2")]
    pub avatar_guid: u64,
    #[prost(map = "uint32, uint32", tag = "3")]
    pub nghjeebkgej: ::std::collections::HashMap<u32, u32>,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(uint64, tag = "10")]
    pub aghciclcick: u64,
    #[prost(uint32, tag = "13")]
    pub llhjggdnlfd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2305)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fbdggdgdgmo {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "13")]
    pub mimhkbcfmcn: ::prost::alloc::vec::Vec<Djfjjgedfph>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct BreakoutPhysicalObjectModifier {
    #[prost(uint32, tag = "1")]
    pub r#type: u32,
    #[prost(uint32, tag = "2")]
    pub id: u32,
    #[prost(int32, tag = "3")]
    pub param1: i32,
    #[prost(int32, tag = "4")]
    pub param2: i32,
    #[prost(int32, tag = "5")]
    pub param3: i32,
    #[prost(int32, tag = "6")]
    pub param4: i32,
    #[prost(int32, tag = "7")]
    pub param5: i32,
    #[prost(int32, tag = "8")]
    pub param6: i32,
    #[prost(bool, tag = "9")]
    pub bool1: bool,
    #[prost(int32, tag = "10")]
    pub duration: i32,
    #[prost(int32, tag = "11")]
    pub end_time: i32,
    #[prost(uint32, tag = "12")]
    pub combo: u32,
    #[prost(uint32, tag = "13")]
    pub peer_id: u32,
    #[prost(uint32, tag = "14")]
    pub skill_type: u32,
    #[prost(uint32, tag = "15")]
    pub level: u32,
    #[prost(uint32, tag = "16")]
    pub choose_player_count: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23240)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mdgfmkkgflk {
    #[prost(uint32, tag = "1")]
    pub cljmncbnifn: u32,
    #[prost(bool, tag = "3")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "4")]
    pub score: u32,
    #[prost(uint32, tag = "5")]
    pub ffhpdcibkod: u32,
    #[prost(uint32, tag = "9")]
    pub kgnlghagebl: u32,
    #[prost(bool, tag = "11")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "12")]
    pub jjcllljankn: u32,
    #[prost(uint32, tag = "13")]
    pub hjjfokhfnko: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26397)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Affcgejbalj {
    #[prost(uint64, tag = "1")]
    pub mcppeknbhfk: u64,
    #[prost(enumeration = "Jkbbekkccee", tag = "5")]
    pub kgconldgjpg: i32,
    #[prost(enumeration = "Aciafkoacao", tag = "10")]
    pub fnbmmfbmkdo: i32,
    #[prost(uint32, tag = "3")]
    pub room_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21880)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mhlcclocgba {
    #[prost(message, repeated, tag = "10")]
    pub fhkngcbgdjl: ::prost::alloc::vec::Vec<Mjpkecmoiga>,
    #[prost(bool, tag = "11")]
    pub fddehdhbabm: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mehbmjjamhe {
    #[prost(message, repeated, tag = "9")]
    pub data_list: ::prost::alloc::vec::Vec<Blfgkjcpjho>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8762)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lgogoiimjne {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1096)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nmflicikekf {
    #[prost(message, optional, tag = "10")]
    pub ibeakhhnohb: ::core::option::Option<Hcjgifnjppj>,
    #[prost(uint32, tag = "5")]
    pub city_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1237)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nppneikcngk {
    #[prost(uint32, repeated, tag = "6")]
    pub efpngiafjpk: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "1")]
    pub finahglfhag: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24309)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gaafjfcdmfb {
    #[prost(float, tag = "2")]
    pub nkhoocjmign: f32,
    #[prost(map = "uint32, string", tag = "4")]
    pub pnglgnlnbnm: ::std::collections::HashMap<u32, ::prost::alloc::string::String>,
    #[prost(uint32, tag = "8")]
    pub mdanmnceigo: u32,
    #[prost(uint32, tag = "9")]
    pub jofknldpgch: u32,
    #[prost(uint32, tag = "11")]
    pub weather_area_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Abencjfjifl {
    #[prost(enumeration = "Lfjlgojmkeh", tag = "5")]
    pub imiogmdokcb: i32,
    #[prost(uint32, tag = "9")]
    pub ckhbgadjgcm: u32,
    #[prost(uint32, tag = "10")]
    pub monejdbpolb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23860)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gmcnijladbp {
    #[prost(uint32, tag = "7")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5479)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mbmccoppfbl {
    #[prost(uint32, tag = "4")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "15")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3033)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fdglfahohod {
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(756)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bhcabmopbff {
    #[prost(message, optional, tag = "4")]
    pub ocldgohiiml: ::core::option::Option<Khpfeknjdof>,
    #[prost(uint32, tag = "7")]
    pub score: u32,
    #[prost(bool, tag = "2")]
    pub pmjlllfophk: bool,
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(598)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gkdjdcckfli {
    #[prost(message, repeated, tag = "7")]
    pub mmoidifgglp: ::prost::alloc::vec::Vec<Ddaakfefaib>,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1894)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dimgofopmcj {
    #[prost(uint32, repeated, tag = "11")]
    pub bcihgddiijo: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "2")]
    pub lcccemmmgki: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26521)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hcpfpmcdlpp {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Agadfdcmglk {
    #[prost(uint32, tag = "6")]
    pub fiddpfbimif: u32,
    #[prost(message, optional, tag = "9")]
    pub dpnadjbahem: ::core::option::Option<Fphkaopdehn>,
    #[prost(uint32, tag = "11")]
    pub ipkaaincemp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lpebmilppag {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26689)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nlokbnfahlj {
    #[prost(bool, tag = "12")]
    pub bkfhphpgdnh: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8662)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jkhminfohpo {
    #[prost(uint32, tag = "7")]
    pub poecpaaaloe: u32,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8149)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lcffbbdlbjb {
    #[prost(uint32, tag = "11")]
    pub ffobionlmoj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mifikpohmng {
    #[prost(uint32, tag = "3")]
    pub level_id: u32,
    #[prost(message, repeated, tag = "5")]
    pub nkkcadbjedl: ::prost::alloc::vec::Vec<Bblghldonid>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gifhmopimph {
    #[prost(message, optional, tag = "1")]
    pub ofknmnpegam: ::core::option::Option<Pinogoecnfa>,
    #[prost(uint32, tag = "3")]
    pub algddkoleom: u32,
    #[prost(bool, tag = "4")]
    pub oheipldjfii: bool,
    #[prost(uint32, tag = "6")]
    pub njmeeogdmhe: u32,
    #[prost(bool, tag = "14")]
    pub dpffadgbhif: bool,
    #[prost(uint32, tag = "15")]
    pub lkkifhknkfe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21921)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct UnlockTransPointReq {
    #[prost(uint32, tag = "5")]
    pub point_id: u32,
    #[prost(uint32, tag = "6")]
    pub scene_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ipkaainfgnb {
    #[prost(uint32, tag = "2")]
    pub config_id: u32,
    #[prost(uint32, tag = "3")]
    pub ffobionlmoj: u32,
    #[prost(uint32, tag = "4")]
    pub llclaehfkgf: u32,
    #[prost(message, optional, tag = "7")]
    pub position: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "8")]
    pub scene_id: u32,
    #[prost(uint32, tag = "9")]
    pub cehggcbcmfi: u32,
    #[prost(uint32, tag = "10")]
    pub oifjknpcndf: u32,
    #[prost(uint32, tag = "13")]
    pub group_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28496)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iigihdhkmgk {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9469)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cfibkekgdbp {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7699)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bmchkkmhpfh {
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25628)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eplgadkalko {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "2")]
    pub param_list: ::prost::alloc::vec::Vec<Cacglibjiie>,
    #[prost(enumeration = "Kpfoblalblc", tag = "4")]
    pub daakpcoabep: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dccljikdbfg {
    #[prost(uint32, tag = "3")]
    pub jlilgmdeacg: u32,
    #[prost(message, repeated, tag = "5")]
    pub ibpcfnmmbib: ::prost::alloc::vec::Vec<Nmhgcoajhhd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4533)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hahbkodaghp {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7728)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Abmcjlmomkg {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(uint32, tag = "10")]
    pub fmkhegbnbah: u32,
    #[prost(uint32, tag = "15")]
    pub cifobokoekm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27168)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ehiogclpann {
    #[prost(message, optional, tag = "4")]
    pub ekdkeobgnmm: ::core::option::Option<SceneEntityInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25876)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Inpffhnaaof {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "10")]
    pub ennbdoajdml: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Caeikhmplff {
    #[prost(uint32, tag = "2")]
    pub level_id: u32,
    #[prost(uint32, repeated, tag = "3")]
    pub ddbdiflnhdg: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "6")]
    pub cpmfmphhfki: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "7")]
    pub nmaapldbbni: u32,
    #[prost(bool, tag = "10")]
    pub ihoapgijkeg: bool,
    #[prost(bool, tag = "11")]
    pub is_finish: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6458)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ipkbeipjncf {
    #[prost(bool, tag = "2")]
    pub apgdcodhnlj: bool,
    #[prost(message, optional, tag = "9")]
    pub hckdfmkemci: ::core::option::Option<Ifpnjpjlnof>,
    #[prost(uint32, tag = "10")]
    pub jnlgdefhndg: u32,
    #[prost(message, optional, tag = "15")]
    pub fdghgbmejgm: ::core::option::Option<Iallekkfhcl>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22825)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gmmchflbefh {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ndaiehpfolj {
    #[prost(uint32, repeated, tag = "7")]
    pub iimnkboidbk: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "12")]
    pub bllipodndha: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "13")]
    pub pokjglhpeej: ::prost::alloc::vec::Vec<Nfdgafnbigp>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nacpblgdmne {
    #[prost(message, repeated, tag = "13")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Ggmacifdebm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gaiiaabdpnb {
    #[prost(uint32, tag = "5")]
    pub avatar_id: u32,
    #[prost(bool, tag = "6")]
    pub eogpkjnngca: bool,
    #[prost(bool, tag = "14")]
    pub afdkaabkkcc: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4268)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pdeehegcnjb {
    #[prost(uint32, tag = "9")]
    pub pjabefajbgb: u32,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8234)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cmdklkobioo {
    #[prost(message, repeated, tag = "3")]
    pub cbnmcbchmna: ::prost::alloc::vec::Vec<Jielmamphli>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20193)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jgalffodofo {
    #[prost(message, optional, tag = "9")]
    pub hglbjjilkje: ::core::option::Option<GadgetGeneralRewardInfo>,
    #[prost(uint32, tag = "14")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7681)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dcageanddfn {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24724)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cehckmonmgi {
    #[prost(uint64, repeated, tag = "15")]
    pub mnchcggmlpa: ::prost::alloc::vec::Vec<u64>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mlecmfllogc {
    #[prost(uint32, tag = "1")]
    pub aggfenmfaib: u32,
    #[prost(uint32, tag = "4")]
    pub gcpohinjpej: u32,
    #[prost(uint32, tag = "6")]
    pub guid: u32,
    #[prost(uint32, tag = "9")]
    pub hhkognnmkhl: u32,
    #[prost(uint32, tag = "10")]
    pub epfcidiklkg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8494)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Koakcfijeol {
    #[prost(uint32, repeated, tag = "3")]
    pub jggobknpmfj: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "14")]
    pub lchbeahgheo: u32,
    #[prost(uint32, tag = "11")]
    pub point_id: u32,
    #[prost(uint32, tag = "5")]
    pub hggehlmhkmp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Objfdbheakj {
    #[prost(bool, tag = "2")]
    pub pmjlllfophk: bool,
    #[prost(uint32, tag = "11")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "12")]
    pub iejpghnlidb: u32,
    #[prost(bool, tag = "15")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1918)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gclgopffnmc {
    #[prost(message, optional, tag = "4")]
    pub npfflknkfnd: ::core::option::Option<CustomGadgetTreeInfo>,
    #[prost(uint32, tag = "14")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9490)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pbflkadcaoc {
    #[prost(uint32, tag = "1")]
    pub level_id: u32,
    #[prost(bool, tag = "2")]
    pub omeniamedce: bool,
    #[prost(bool, tag = "7")]
    pub kodnaagljdl: bool,
    #[prost(uint32, tag = "10")]
    pub kngjhmllcnp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25637)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Phgegdoiegh {
    #[prost(uint32, tag = "3")]
    pub fjamcdjdjoa: u32,
    #[prost(bool, tag = "7")]
    pub omeniamedce: bool,
    #[prost(bool, tag = "11")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "14")]
    pub level_id: u32,
    #[prost(uint32, tag = "15")]
    pub ggaancbkcbf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ljiemnnkpjo {
    #[prost(uint32, tag = "2")]
    pub camp_id: u32,
    #[prost(message, optional, tag = "14")]
    pub pos: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mgjcpolajad {
    #[prost(uint32, tag = "2")]
    pub dnhlmkmlppb: u32,
    #[prost(uint32, tag = "3")]
    pub cclbephgcek: u32,
    #[prost(uint32, tag = "6")]
    pub penjgiijfpg: u32,
    #[prost(uint32, tag = "8")]
    pub nmbonkfllie: u32,
    #[prost(uint32, tag = "9")]
    pub khhinalflhp: u32,
    #[prost(uint32, tag = "10")]
    pub ohdengdfndp: u32,
    #[prost(uint32, tag = "13")]
    pub pdeihlekapj: u32,
    #[prost(uint32, tag = "14")]
    pub fcpecpmogoj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20245)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dmceoindeba {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Joejjofmcib {
    #[prost(uint32, tag = "2")]
    pub level_id: u32,
    #[prost(bool, tag = "8")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21674)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Odlfncadhig {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "11")]
    pub heibobldeip: ::prost::alloc::vec::Vec<Dgdfibcmhgj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mhojpfgmmhl {
    #[prost(uint32, tag = "1")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "2")]
    pub iejpghnlidb: u32,
    #[prost(map = "uint32, message", tag = "4")]
    pub pjnimnlmiop: ::std::collections::HashMap<u32, Hkihlaepcpl>,
    #[prost(uint32, tag = "5")]
    pub epienmjehfo: u32,
    #[prost(bool, tag = "8")]
    pub is_finish: bool,
    #[prost(bool, tag = "9")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6046)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pcldabgfdof {
    #[prost(enumeration = "Ainahdonfeo", tag = "12")]
    pub fbfdaklpefb: i32,
    #[prost(uint32, tag = "10")]
    pub oajoobghagm: u32,
    #[prost(uint64, tag = "7")]
    pub mcppeknbhfk: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9653)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jlhneggfdhm {
    #[prost(message, optional, tag = "5")]
    pub ohjnpjckgeg: ::core::option::Option<Cppnhdpjmec>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9235)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jhkdbmlpjni {
    #[prost(bool, tag = "9")]
    pub ggoecigkpaa: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nilmhfaanpl {
    #[prost(int64, tag = "3")]
    pub lladmbnfoam: i64,
    #[prost(message, optional, tag = "5")]
    pub ejnocldgpef: ::core::option::Option<Ahdcnhcibnm>,
    #[prost(message, optional, tag = "7")]
    pub hpoeckekafa: ::core::option::Option<Vector>,
    #[prost(enumeration = "Baeckbpljag", tag = "8")]
    pub mcjnlbadfin: i32,
    #[prost(int32, tag = "9")]
    pub dgocefofcnk: i32,
    #[prost(message, optional, tag = "13")]
    pub bjcabobcjce: ::core::option::Option<MathQuaternion>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9242)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hhghphmaben {
    #[prost(message, repeated, tag = "3")]
    pub gfckaoeolbl: ::prost::alloc::vec::Vec<Nlcdhfnmhld>,
    #[prost(enumeration = "Mgobeipgija", tag = "8")]
    pub hibekddofhb: i32,
    #[prost(message, repeated, tag = "9")]
    pub empejfognpa: ::prost::alloc::vec::Vec<Nlcdhfnmhld>,
    #[prost(message, repeated, tag = "14")]
    pub jbphchjpdem: ::prost::alloc::vec::Vec<Nlcdhfnmhld>,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fdockhoiobj {
    #[prost(uint32, tag = "1")]
    pub bgkochiajce: u32,
    #[prost(uint32, tag = "2")]
    pub nmaapldbbni: u32,
    #[prost(uint32, tag = "3")]
    pub pjoclcgmmhn: u32,
    #[prost(uint32, tag = "4")]
    pub bpbigeapbok: u32,
    #[prost(uint32, tag = "5")]
    pub hdgmialkfmc: u32,
    #[prost(bool, tag = "6")]
    pub hlalmdgmpfm: bool,
    #[prost(bool, tag = "7")]
    pub bdbnkngijlp: bool,
    #[prost(bool, tag = "8")]
    pub lpjchcadnpj: bool,
    #[prost(bool, tag = "9")]
    pub acbcepmacil: bool,
    #[prost(string, tag = "10")]
    pub ejhdnlgggmd: ::prost::alloc::string::String,
    #[prost(uint32, tag = "11")]
    pub fikahjgpnff: u32,
    #[prost(uint64, tag = "12")]
    pub ihgjlfcgfin: u64,
    #[prost(message, optional, tag = "13")]
    pub jniokocnmll: ::core::option::Option<Ojiaihboabh>,
    #[prost(uint32, tag = "14")]
    pub apgnpjbhhhg: u32,
    #[prost(uint32, tag = "15")]
    pub ichiomnhini: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5782)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AvatarFightPropUpdateNotify {
    #[prost(map = "uint32, float", tag = "2")]
    pub fight_prop_map: ::std::collections::HashMap<u32, f32>,
    #[prost(uint64, tag = "10")]
    pub avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29814)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oapieahfkci {
    #[prost(uint32, tag = "5")]
    pub finahglfhag: u32,
    #[prost(uint32, tag = "8")]
    pub ikiechdjnab: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(626)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fpomokianga {
    #[prost(uint32, repeated, tag = "2")]
    pub flakaccnnlo: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28949)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ngpcemfkpfg {
    #[prost(message, optional, tag = "6")]
    pub pkcbbbhckki: ::core::option::Option<Hgdjmickhak>,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2761)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aehfemdbbbk {
    #[prost(uint32, tag = "3")]
    pub param: u32,
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "8")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28813)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ihfoagkkopj {
    #[prost(uint32, tag = "11")]
    pub gfjpmhjoefj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Npjdjdeckme {
    #[prost(uint32, tag = "11")]
    pub item_id: u32,
    #[prost(uint32, tag = "15")]
    pub jlgjbaleioi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ojicceilgmk {
    #[prost(uint32, tag = "2")]
    pub nlcicjlpjhk: u32,
    #[prost(uint32, tag = "12")]
    pub jmehmgcpfbo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gndppdjeihi {
    #[prost(message, repeated, tag = "14")]
    pub jpahjddeilm: ::prost::alloc::vec::Vec<Lnjoeebpgnm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4275)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Opoledbppfo {
    #[prost(uint32, tag = "2")]
    pub nkgekomllng: u32,
    #[prost(uint32, tag = "12")]
    pub city_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23392)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pflcjgfbcfb {
    #[prost(uint32, tag = "8")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29660)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ghpelhngpdm {
    #[prost(uint32, tag = "1")]
    pub entity_id: u32,
    #[prost(enumeration = "Jjhobjbapei", tag = "3")]
    pub gaakalgobcf: i32,
    #[prost(uint32, tag = "4")]
    pub gadget_id: u32,
    #[prost(message, optional, tag = "6")]
    pub enter_pos: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "8")]
    pub enter_rot: ::core::option::Option<Vector>,
    #[prost(enumeration = "Kfbhhddeagb", tag = "9")]
    pub ccpgfcdfblo: i32,
    #[prost(message, optional, tag = "10")]
    pub mdpfkppiknh: ::core::option::Option<VehicleMember>,
    #[prost(uint32, tag = "11")]
    pub vehicle_type: u32,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20900)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kiklgfappmg {
    #[prost(uint32, tag = "11")]
    pub ghlbjahjehf: u32,
    #[prost(enumeration = "Iacmanpjhji", tag = "5")]
    pub kgconldgjpg: i32,
    #[prost(uint32, tag = "15")]
    pub mofipihbekb: u32,
    #[prost(bool, tag = "13")]
    pub ckljmdglihf: bool,
    #[prost(uint32, tag = "7")]
    pub ddjfglfngjc: u32,
    #[prost(uint32, tag = "9")]
    pub gadget_id: u32,
    #[prost(enumeration = "Iebmahkgipd", tag = "4")]
    pub hkbdfpjiolc: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28559)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ekhmibffkaa {
    #[prost(uint32, repeated, tag = "7")]
    pub cagdohebhei: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint64, tag = "8")]
    pub dbdofjbbjnh: u64,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hlbnlhgcpfc {
    #[prost(uint32, tag = "2")]
    pub iejpghnlidb: u32,
    #[prost(uint32, tag = "3")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "4")]
    pub mkcgmmganlk: u32,
    #[prost(bool, tag = "8")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22199)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gbbmobbeoag {
    #[prost(uint32, tag = "2")]
    pub ppbhndfadkd: u32,
    #[prost(bool, tag = "6")]
    pub gkeocobfifi: bool,
    #[prost(uint32, tag = "10")]
    pub jdemboodmgl: u32,
    #[prost(uint32, repeated, tag = "11")]
    pub affix_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
    #[prost(uint32, tag = "13")]
    pub pjabefajbgb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6905)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Booahmdhema {
    #[prost(uint32, tag = "15")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mfpiodoealk {
    #[prost(string, tag = "2")]
    pub ajehffmcfpf: ::prost::alloc::string::String,
    #[prost(uint32, tag = "3")]
    pub eofehcpknbc: u32,
    #[prost(uint32, tag = "8")]
    pub kefkhhanadm: u32,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(uint32, tag = "10")]
    pub offset: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1484)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dbjmegkncdg {
    #[prost(message, optional, tag = "5")]
    pub icchdgkmnlf: ::core::option::Option<Ljjfjilbnll>,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Khjmikaafhb {
    #[prost(uint32, tag = "6")]
    pub room_id: u32,
    #[prost(message, repeated, tag = "14")]
    pub fgeljjabbil: ::prost::alloc::vec::Vec<Bpnpapaahgn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1031)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pjbmjphjgno {
    #[prost(uint32, tag = "1")]
    pub blmgfjbafkb: u32,
    #[prost(uint32, tag = "2")]
    pub mgcbkemoadn: u32,
    #[prost(uint32, tag = "3")]
    pub aloobpbnddh: u32,
    #[prost(uint32, tag = "9")]
    pub hddfdhiikfb: u32,
    #[prost(bool, tag = "10")]
    pub fddehdhbabm: bool,
    #[prost(uint32, tag = "13")]
    pub imgmodnlcpl: u32,
    #[prost(uint32, tag = "15")]
    pub fklgjhbjbij: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nldmkaepdkp {
    #[prost(uint32, tag = "14")]
    pub score: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7578)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Onpiflpdboj {
    #[prost(uint32, repeated, tag = "2")]
    pub fdddhjlalce: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "3")]
    pub hbbgjdedhef: bool,
    #[prost(uint32, tag = "8")]
    pub aidcfmdeboe: u32,
    #[prost(uint32, tag = "14")]
    pub oclofjkcebb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ibjfefggedo {
    #[prost(message, repeated, tag = "4")]
    pub efcdelgmmkg: ::prost::alloc::vec::Vec<Nnbcmpfjcka>,
    #[prost(uint32, tag = "5")]
    pub aknmpooopnp: u32,
    #[prost(message, optional, tag = "6")]
    pub eomnmodedfd: ::core::option::Option<Jkikpomkppi>,
    #[prost(uint32, repeated, tag = "7")]
    pub cljldmknegd: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "9")]
    pub kenkkgdimja: u32,
    #[prost(uint32, tag = "11")]
    pub fcpecpmogoj: u32,
    #[prost(uint32, tag = "14")]
    pub hcjjhghgbkn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nnbcmpfjcka {
    #[prost(uint32, tag = "2")]
    pub avatar_id: u32,
    #[prost(uint32, tag = "4")]
    pub costume_id: u32,
    #[prost(uint32, tag = "6")]
    pub bbpgijfjhen: u32,
    #[prost(enumeration = "Khbdllkplfg", tag = "8")]
    pub avatar_type: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Clcjfnmkmgl {
    #[prost(uint32, tag = "1")]
    pub pjabefajbgb: u32,
    #[prost(uint32, tag = "2")]
    pub state: u32,
    #[prost(uint32, tag = "4")]
    pub start_time: u32,
    #[prost(bool, tag = "5")]
    pub ghjafbkdidn: bool,
    #[prost(uint32, tag = "6")]
    pub parent_quest_id: u32,
    #[prost(uint32, tag = "7")]
    pub dbpaikamkkg: u32,
    #[prost(uint32, tag = "8")]
    pub mfopkkigjon: u32,
    #[prost(uint32, tag = "9")]
    pub mlgfpgidgno: u32,
    #[prost(uint32, repeated, tag = "10")]
    pub ihgfdoebbgk: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "11")]
    pub iipdboidffp: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "12")]
    pub fkileobobpk: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, optional, tag = "13")]
    pub nckeckmmkdk: ::core::option::Option<Illmmcdpfam>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26755)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fgdnjpjjkoh {
    #[prost(uint32, repeated, tag = "2")]
    pub ihflgbgnaje: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "9")]
    pub item_list: ::prost::alloc::vec::Vec<Bomacpdepid>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct TrialAvatarInfo {
    #[prost(uint32, tag = "1")]
    pub trial_avatar_id: u32,
    #[prost(message, repeated, tag = "2")]
    pub trial_equip_list: ::prost::alloc::vec::Vec<Item>,
    #[prost(message, optional, tag = "3")]
    pub grant_record: ::core::option::Option<TrialAvatarGrantRecord>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2223)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cjidbhjnpkb {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28042)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SceneTeamUpdateNotify {
    #[prost(message, repeated, tag = "8")]
    pub scene_team_avatar_list: ::prost::alloc::vec::Vec<SceneTeamAvatar>,
    #[prost(bool, tag = "13")]
    pub is_in_mp: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9132)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Obibpanehco {
    #[prost(message, optional, tag = "4")]
    pub olkacabnmfp: ::core::option::Option<Blfgkjcpjho>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23246)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eijonnfbbjm {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "4")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29586)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kgmoepdlpaf {
    #[prost(uint32, tag = "6")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20035)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Npfjfipiaoc {
    #[prost(uint32, tag = "3")]
    pub hloccmmedjl: u32,
    #[prost(uint32, tag = "8")]
    pub jjagbkhdlpf: u32,
    #[prost(uint32, tag = "9")]
    pub kfhdnedjjnc: u32,
    #[prost(uint32, tag = "12")]
    pub ilfdmjimgei: u32,
    #[prost(message, repeated, tag = "14")]
    pub jmodocbicjf: ::prost::alloc::vec::Vec<Ekoeophmbjo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(889)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Glhljocpnoj {
    #[prost(message, repeated, tag = "2")]
    pub aafllahknje: ::prost::alloc::vec::Vec<Mbjeplkjnig>,
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "11")]
    pub pcpcbeballb: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(enumeration = "Mhjjgcmmglo", tag = "12")]
    pub jfonahfnhka: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24518)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ailkiocmcgd {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25031)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nnclflmmcdn {
    #[prost(uint64, tag = "14")]
    pub guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nfbmjkmeflm {
    #[prost(uint32, tag = "3")]
    pub nekecfnahom: u32,
    #[prost(message, repeated, tag = "5")]
    pub copaafjhpgd: ::prost::alloc::vec::Vec<Ocaabicbpni>,
    #[prost(uint32, tag = "9")]
    pub level_id: u32,
    #[prost(message, repeated, tag = "11")]
    pub kabodnmegek: ::prost::alloc::vec::Vec<Fpahdflmhnd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gcmhkmflobd {
    #[prost(message, repeated, tag = "6")]
    pub bigkkeoicgl: ::prost::alloc::vec::Vec<Lkiamjcjlak>,
    #[prost(message, repeated, tag = "15")]
    pub eeoedhcieha: ::prost::alloc::vec::Vec<Dglnflcmpkn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Piamlhkgkee {
    #[prost(uint32, tag = "4")]
    pub id: u32,
    #[prost(uint32, repeated, tag = "5")]
    pub knhmdmaajph: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lagpigmkkca {
    #[prost(enumeration = "Himopciifhk", tag = "9")]
    pub bpahndmaimb: i32,
    #[prost(bool, tag = "10")]
    pub pmlkgcgnoam: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20599)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fjfpoppcjlp {
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26773)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gdihfgckieg {
    #[prost(message, optional, tag = "15")]
    pub hgdgjjfbfnd: ::core::option::Option<Deigilfodbd>,
    #[prost(uint32, tag = "14")]
    pub parent_quest_id: u32,
    #[prost(bool, tag = "7")]
    pub pohoiclcbkl: bool,
    #[prost(uint32, tag = "1")]
    pub pjabefajbgb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25254)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hnnelmhhcbc {
    #[prost(message, repeated, tag = "9")]
    pub peenhkpgmfj: ::prost::alloc::vec::Vec<Afdnkldihkd>,
    #[prost(uint32, tag = "11")]
    pub oolkhdlpdfn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7426)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CombatInvocationsNotify {
    #[prost(message, repeated, tag = "13")]
    pub invoke_list: ::prost::alloc::vec::Vec<CombatInvokeEntry>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21614)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fljonkedjdk {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26506)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Flbgigabkob {
    #[prost(enumeration = "Glnndhihpdf", tag = "6")]
    pub ngfmchnlnpi: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gilgdmkhmaj {
    #[prost(message, optional, tag = "11")]
    pub bnheafcgijm: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "12")]
    pub guid: u32,
    #[prost(int32, repeated, tag = "15")]
    pub madgndnllei: ::prost::alloc::vec::Vec<i32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lfhbfkhjibo {
    #[prost(uint32, tag = "3")]
    pub ldimhbkfhif: u32,
    #[prost(uint32, tag = "5")]
    pub lnbhdcgdenp: u32,
    #[prost(uint32, repeated, tag = "6")]
    pub hkdjgknnffi: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "9")]
    pub dmmelimgoaj: u32,
    #[prost(uint32, repeated, tag = "11")]
    pub miljblpfhgd: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23225)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Njehfdgmbhf {
    #[prost(enumeration = "Kpfoblalblc", tag = "3")]
    pub daakpcoabep: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27978)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Npiphdjihkb {
    #[prost(uint64, tag = "15")]
    pub mcppeknbhfk: u64,
    #[prost(bool, tag = "7")]
    pub ekaacgolhfp: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21319)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bjhkddmeodi {
    #[prost(uint32, tag = "7")]
    pub config_id: u32,
    #[prost(bytes = "vec", tag = "13")]
    pub luashell: ::prost::alloc::vec::Vec<u8>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Afigaifiepl {
    #[prost(uint32, repeated, tag = "9")]
    pub param_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(enumeration = "Kbdonbeeifa", tag = "13")]
    pub edkmcbobefp: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4176)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Abeehoehhni {
    #[prost(message, repeated, tag = "3")]
    pub jahppelnedf: ::prost::alloc::vec::Vec<Mcciikojnil>,
    #[prost(message, repeated, tag = "15")]
    pub addblloopol: ::prost::alloc::vec::Vec<Mcciikojnil>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2157)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bndgmffhdie {
    #[prost(message, repeated, tag = "1")]
    pub jflllbiccih: ::prost::alloc::vec::Vec<Bbicghbhcba>,
    #[prost(message, optional, tag = "2")]
    pub labbimkclje: ::core::option::Option<Bbicghbhcba>,
    #[prost(map = "uint32, uint32", tag = "9")]
    pub jjkejdkmjlg: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "10")]
    pub lkclogboocf: u32,
    #[prost(uint32, tag = "12")]
    pub djaiidldajm: u32,
    #[prost(map = "uint32, uint32", tag = "15")]
    pub fbpgmongmjh: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4210)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Klidlaoaddg {
    #[prost(uint32, tag = "4")]
    pub level_id: u32,
    #[prost(bool, tag = "6")]
    pub lkllcbimibf: bool,
    #[prost(uint32, tag = "2")]
    pub jimelgdjmlf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cfbphnmcpne {
    #[prost(enumeration = "Jekgegjbglf", tag = "4")]
    pub hdnbcjckkfl: i32,
    #[prost(uint32, tag = "9")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "10")]
    pub jabgacillec: u32,
    #[prost(bool, tag = "12")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "13")]
    pub ccenfgcdlnp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22802)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iedpgnidmen {
    #[prost(bool, tag = "2")]
    pub bdocffkiahh: bool,
    #[prost(bool, tag = "6")]
    pub kodnaagljdl: bool,
    #[prost(uint32, tag = "8")]
    pub kngjhmllcnp: u32,
    #[prost(uint32, tag = "13")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25461)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dppbebcdkcj {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ophoiiminjj {
    #[prost(uint32, tag = "1")]
    pub npc_id: u32,
    #[prost(message, optional, tag = "2")]
    pub pos: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MaterialDeleteInfo {
    #[prost(bool, tag = "1")]
    pub has_delete_config: bool,
    #[prost(oneof = "material_delete_info::DeleteInfo", tags = "2, 3, 4")]
    pub delete_info: ::core::option::Option<material_delete_info::DeleteInfo>,
}
/// Nested message and enum types in `MaterialDeleteInfo`.
pub mod material_delete_info {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum DeleteInfo {
        #[prost(message, tag = "2")]
        CountDownDelete(super::CountDownDelete),
        #[prost(message, tag = "3")]
        DateDelete(super::DateTimeDelete),
        #[prost(message, tag = "4")]
        DelayWeekCountDownDelete(super::DelayWeekCountDownDelete),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CountDownDelete {
    #[prost(map = "uint32, uint32", tag = "1")]
    pub delete_time_num_map: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "2")]
    pub config_count_down_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct DateTimeDelete {
    #[prost(uint32, tag = "1")]
    pub delete_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct DelayWeekCountDownDelete {
    #[prost(map = "uint32, uint32", tag = "1")]
    pub delete_time_num_map: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "2")]
    pub config_delay_week: u32,
    #[prost(uint32, tag = "3")]
    pub config_count_down_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22898)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ikankbbiaol {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21272)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Egjmfdjemma {
    #[prost(uint32, repeated, tag = "11")]
    pub fiekpelikle: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26661)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ckpljmjkfih {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "3")]
    pub bgmdlpabefa: u32,
    #[prost(uint32, tag = "11")]
    pub finahglfhag: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21910)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cgnlnbhbcll {
    #[prost(uint32, tag = "14")]
    pub dfgnlkjbcif: u32,
    #[prost(uint32, tag = "11")]
    pub pjabefajbgb: u32,
    #[prost(uint32, tag = "4")]
    pub point_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jfcakdiblko {
    #[prost(bool, tag = "5")]
    pub gflgeleeeda: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1084)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Chnlmhcndla {
    #[prost(map = "uint32, uint32", tag = "6")]
    pub ciagbmamdnj: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "12")]
    pub jnhdkjdbicl: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eooapdhfobe {
    #[prost(uint32, repeated, tag = "3")]
    pub penademlgkk: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "6")]
    pub lnfkcefiabm: bool,
    #[prost(uint32, tag = "10")]
    pub oaliohamlgn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6638)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jiofajpcnac {
    #[prost(enumeration = "Pcpkmbjdjak", tag = "4")]
    pub gaakalgobcf: i32,
    #[prost(uint32, tag = "6")]
    pub gadget_id: u32,
    #[prost(uint32, tag = "7")]
    pub ddjfglfngjc: u32,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
    #[prost(enumeration = "Iacmanpjhji", tag = "14")]
    pub kgconldgjpg: i32,
    #[prost(uint32, tag = "15")]
    pub ghlbjahjehf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21586)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Angjecdgboi {
    #[prost(message, optional, tag = "2")]
    pub hknmikeopcc: ::core::option::Option<Vector>,
    #[prost(enumeration = "ForwardType", tag = "8")]
    pub forward_type: i32,
    #[prost(uint32, tag = "12")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25705)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gbflkijekdf {
    #[prost(message, optional, tag = "6")]
    pub platform: ::core::option::Option<PlatformInfo>,
    #[prost(uint32, tag = "7")]
    pub scene_time: u32,
    #[prost(uint32, tag = "15")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(363)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jpginagifah {
    #[prost(message, optional, tag = "6")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(int32, tag = "8")]
    pub param: i32,
    #[prost(uint32, tag = "13")]
    pub item_id: u32,
    #[prost(uint32, tag = "15")]
    pub jlgjbaleioi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eejagbcfpna {
    #[prost(bool, tag = "1")]
    pub pmjlllfophk: bool,
    #[prost(bool, tag = "10")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "13")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4613)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iokmhmjbddm {
    #[prost(uint32, tag = "2")]
    pub bdeflcdkdbi: u32,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jlkjgaphbkj {
    #[prost(message, optional, tag = "13")]
    pub akgooiibcom: ::core::option::Option<Nijkankibla>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22620)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jdkhikogiff {
    #[prost(uint32, tag = "7")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3843)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hhageidehfb {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fdnffenofkf {
    #[prost(enumeration = "Inooiehhkli", tag = "4")]
    pub kgconldgjpg: i32,
    #[prost(uint32, tag = "6")]
    pub entity_id: u32,
    #[prost(message, optional, tag = "15")]
    pub aldipffjeoi: ::core::option::Option<Emekkiandle>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26402)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ljdiophapfd {
    #[prost(uint32, tag = "7")]
    pub game_time: u32,
    #[prost(uint32, tag = "10")]
    pub pjejcbkpchc: u32,
    #[prost(uint32, tag = "13")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20815)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jjfjddeljki {
    #[prost(message, repeated, tag = "4")]
    pub item_list: ::prost::alloc::vec::Vec<Bnijmeiknij>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aejdjaepham {
    #[prost(string, tag = "1")]
    pub nkanjijnimc: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub ampbndiacmi: ::prost::alloc::string::String,
    #[prost(uint32, tag = "3")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Debenkfigjp {
    #[prost(uint32, tag = "3")]
    pub olghckdnmbi: u32,
    #[prost(uint32, tag = "4")]
    pub pjabefajbgb: u32,
    #[prost(uint32, tag = "9")]
    pub kljcagkgilp: u32,
    #[prost(uint32, tag = "12")]
    pub progress: u32,
    #[prost(enumeration = "Jnflmhachji", tag = "14")]
    pub state: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29276)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Amapmagflcb {
    #[prost(uint32, repeated, tag = "2")]
    pub gmpncfjlpab: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "9")]
    pub hggehlmhkmp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2312)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct QueryPathRsp {
    #[prost(enumeration = "QueryPathRspPathStatusType", tag = "3")]
    pub query_status: i32,
    #[prost(message, repeated, tag = "4")]
    pub corners: ::prost::alloc::vec::Vec<Vector>,
    #[prost(int32, tag = "10")]
    pub query_id: i32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21238)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jmbbkdfeeek {
    #[prost(uint32, tag = "8")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29311)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cfcdamffhhh {
    #[prost(message, repeated, tag = "10")]
    pub mlgjmalpgoc: ::prost::alloc::vec::Vec<Gcncgdnfabi>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lfbopoggbpm {
    #[prost(uint32, tag = "1")]
    pub level_id: u32,
    #[prost(uint32, repeated, tag = "11")]
    pub plmddoeifpl: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5626)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pdpfikkkdhe {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "12")]
    pub bikoakjlpbe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pieoeomnfkc {
    #[prost(uint32, tag = "4")]
    pub dajhkhflndj: u32,
    #[prost(uint32, tag = "14")]
    pub ooipgfedjmn: u32,
    #[prost(bool, tag = "15")]
    pub pnechcnfdng: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bpnpapaahgn {
    #[prost(message, optional, tag = "1")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "4")]
    pub block_id: u32,
    #[prost(message, optional, tag = "12")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "14")]
    pub guid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1546)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pnnkamoheph {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6145)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dblkcddfcnf {
    #[prost(message, optional, tag = "8")]
    pub destination_pos: ::core::option::Option<Vector>,
    #[prost(message, repeated, tag = "1")]
    pub mibdmkipnfp: ::prost::alloc::vec::Vec<Vector>,
    #[prost(message, optional, tag = "11")]
    pub source_pos: ::core::option::Option<Vector>,
    #[prost(int32, repeated, tag = "6")]
    pub ppgkldflino: ::prost::alloc::vec::Vec<i32>,
    #[prost(enumeration = "Mblmioimcfg", tag = "10")]
    pub lhhggkienpc: i32,
    #[prost(enumeration = "Ddoipmkaohc", tag = "12")]
    pub bjlkihfokof: i32,
    #[prost(bool, tag = "15")]
    pub abbcmejdgfl: bool,
    #[prost(uint32, tag = "14")]
    pub scene_id: u32,
    #[prost(int32, tag = "7")]
    pub query_id: i32,
    #[prost(int32, tag = "9")]
    pub cjbfdoflmem: i32,
    #[prost(enumeration = "Pnkbkdloeij", tag = "4")]
    pub fnefmpaldbe: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Enfmopieema {
    #[prost(map = "uint32, message", tag = "2")]
    pub gphhkgmaaee: ::std::collections::HashMap<u32, Hlaibkpeplk>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1128)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gfjafjapdjd {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20487)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ljnocmbappd {
    #[prost(message, repeated, tag = "3")]
    pub nlhegbionin: ::prost::alloc::vec::Vec<Likogpgghfj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22710)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gnjdknkokhc {
    #[prost(uint32, tag = "8")]
    pub dnbefljlamb: u32,
    #[prost(message, repeated, tag = "13")]
    pub aciapnaahbg: ::prost::alloc::vec::Vec<Gmfojoggobg>,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24380)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jikkegjaaon {
    #[prost(uint32, tag = "10")]
    pub oefocnpdokd: u32,
    #[prost(bool, tag = "12")]
    pub gflcijnopdi: bool,
    #[prost(fixed32, tag = "14")]
    pub poaficpfpcj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28461)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Idpnegepinb {
    #[prost(uint32, tag = "13")]
    pub bbpgijfjhen: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24235)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lclfnobcoih {
    #[prost(uint32, tag = "8")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9230)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aofiohmmgam {
    #[prost(bool, tag = "7")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "12")]
    pub oelcnlojhhe: u32,
    #[prost(bool, tag = "13")]
    pub kodnaagljdl: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23300)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aejhhpndgbm {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2302)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Omkjoegcofp {
    #[prost(int32, tag = "15")]
    pub uid: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27202)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pmjddneacff {
    #[prost(message, optional, tag = "4")]
    pub opnhjoldpnb: ::core::option::Option<Ijlhhneflkk>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4582)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nmigcmcjndn {
    #[prost(uint32, tag = "11")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21401)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bghacefimhh {
    #[prost(string, repeated, tag = "7")]
    pub bfhjmpmmkkk: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27648)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lahjcnlegkd {
    #[prost(uint32, tag = "2")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29399)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hfdfocafpjp {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1046)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pfpaajbgdkb {
    #[prost(uint32, tag = "8")]
    pub level_id: u32,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20730)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Embehpppelj {
    #[prost(uint32, repeated, tag = "6")]
    pub param_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "5")]
    pub jofggbnalgp: u32,
    #[prost(uint32, tag = "9")]
    pub cbjakhbjene: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3782)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ilojonjaloh {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ogokjblkohf {
    #[prost(uint64, tag = "2")]
    pub jphoponkclm: u64,
    #[prost(uint32, tag = "14")]
    pub mhngnedgkcf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Flmmaaoddgd {
    #[prost(uint32, tag = "1")]
    pub gefnmjhabgj: u32,
    #[prost(uint32, tag = "6")]
    pub acapmhjcchp: u32,
    #[prost(uint32, tag = "7")]
    pub oaglncfkoni: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9261)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Opdokalgpog {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(uint32, tag = "13")]
    pub id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oiplmjplebg {
    #[prost(uint32, tag = "4")]
    pub oaicfbdhdhj: u32,
    #[prost(uint32, tag = "6")]
    pub dpddfijioln: u32,
    #[prost(uint32, tag = "8")]
    pub cbpohhkkbgo: u32,
    #[prost(bool, tag = "11")]
    pub hadjfbnjmfo: bool,
    #[prost(uint32, tag = "13")]
    pub hcmcegihlba: u32,
    #[prost(float, tag = "14")]
    pub cdgfmjbofaa: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22063)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ggnbbjmidma {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "5")]
    pub scene_time: u32,
    #[prost(message, optional, tag = "8")]
    pub hkndhdnkkji: ::core::option::Option<MotionInfo>,
    #[prost(uint32, tag = "10")]
    pub entity_id: u32,
    #[prost(uint32, tag = "12")]
    pub reliable_seq: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27401)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aimjamgjlpd {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "7")]
    pub aggjlmmapkn: ::prost::alloc::vec::Vec<Lpkldjkfmda>,
    #[prost(uint32, tag = "10")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23421)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bokbppdlken {
    #[prost(float, tag = "2")]
    pub dagofmogopn: f32,
    #[prost(message, repeated, tag = "5")]
    pub dlhakokjino: ::prost::alloc::vec::Vec<Majeeohebab>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2966)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aondmmhedcl {
    #[prost(bool, tag = "6")]
    pub ccgjikpgdbo: bool,
    #[prost(bool, tag = "13")]
    pub jddkkhmgfcd: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1287)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Foephfgblhl {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bejmllcjcfa {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(uint32, tag = "7")]
    pub uid: u32,
    #[prost(uint32, tag = "8")]
    pub ofebpljjnkh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7040)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cdednidbdei {
    #[prost(bool, tag = "9")]
    pub ekmdfdhhobo: bool,
    #[prost(uint32, tag = "15")]
    pub id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jielmamphli {
    #[prost(uint32, tag = "1")]
    pub uid: u32,
    #[prost(uint32, tag = "3")]
    pub oafklbdfljg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8506)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aedeglhacgo {
    #[prost(uint32, tag = "2")]
    pub ganldaammol: u32,
    #[prost(uint32, tag = "3")]
    pub oajoobghagm: u32,
    #[prost(uint32, tag = "15")]
    pub fajnkpafddg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25089)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Edcflfljogj {
    #[prost(uint32, repeated, tag = "10")]
    pub pbjedabpaki: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5558)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Icjhldaofik {
    #[prost(uint32, tag = "2")]
    pub icanppgebkk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24158)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Albfkipfcdj {
    #[prost(message, repeated, tag = "13")]
    pub hkjfpoeikob: ::prost::alloc::vec::Vec<Paeceabmfno>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bceacnakpnm {
    #[prost(uint32, tag = "9")]
    pub hjflpbncngm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7178)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jhaaogmohpg {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1900)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Geghgchgegg {
    #[prost(uint32, tag = "6")]
    pub ikbcggmlmhp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3137)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Efehpihnpgn {
    #[prost(uint32, tag = "14")]
    pub position: u32,
    #[prost(uint32, tag = "11")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3834)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lclmkocjlod {
    #[prost(uint64, tag = "12")]
    pub ihgjlfcgfin: u64,
    #[prost(enumeration = "Kpfoblalblc", tag = "10")]
    pub daakpcoabep: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23294)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dmnjgmfjfnk {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "6")]
    pub target_uid: u32,
    #[prost(uint32, tag = "12")]
    pub param: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28954)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mpgkcgcaeal {
    #[prost(uint32, tag = "15")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7767)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bpiocgcicap {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kdpbgpnncld {
    #[prost(uint32, tag = "1")]
    pub fcpecpmogoj: u32,
    #[prost(uint32, tag = "15")]
    pub falcgikeeno: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ambnedakhfp {
    #[prost(string, tag = "1")]
    pub omknbnmebik: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub mhpfnlkcfom: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub lbkdgoefebc: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "8")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
    #[prost(string, tag = "11")]
    pub efajihmnobk: ::prost::alloc::string::String,
    #[prost(uint32, tag = "12")]
    pub lcjpdljbpke: u32,
    #[prost(string, tag = "13")]
    pub ijlhlcllene: ::prost::alloc::string::String,
    #[prost(uint32, tag = "14")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kkjdcdopfeb {
    #[prost(uint32, tag = "15")]
    pub pnkgnhiedfa: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fihnkibglha {
    #[prost(bool, tag = "2")]
    pub glkngddnocn: bool,
    #[prost(uint32, repeated, tag = "4")]
    pub lokddcbonah: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "12")]
    pub mcjebmejiic: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oecomgeahbm {
    #[prost(uint32, tag = "7")]
    pub level_id: u32,
    #[prost(bool, tag = "14")]
    pub omeniamedce: bool,
    #[prost(uint32, repeated, tag = "15")]
    pub meikgboldgh: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20802)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lcicbcbfplc {
    #[prost(bool, tag = "11")]
    pub pkggncglppn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28170)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oilfnhkjddi {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26963)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Doafbfifloj {
    #[prost(message, repeated, tag = "11")]
    pub info_list: ::prost::alloc::vec::Vec<Pcikoddfkmk>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24324)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hhdebopjjln {
    #[prost(map = "uint32, uint32", tag = "3")]
    pub fanbcghplhd: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ckpijbmmbgj {
    #[prost(uint32, repeated, tag = "8")]
    pub nbhagakfigf: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "10")]
    pub gnojcafhfch: u32,
    #[prost(uint32, repeated, tag = "11")]
    pub hbbogdgajea: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "13")]
    pub cnkpoojgokb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7824)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Amgdambekdg {
    #[prost(uint32, tag = "2")]
    pub pihjhgkfclh: u32,
    #[prost(uint64, tag = "15")]
    pub avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aakbijikbnm {
    #[prost(message, repeated, tag = "1")]
    pub ialagdbikkd: ::prost::alloc::vec::Vec<Aodebpfbiml>,
    #[prost(uint32, repeated, tag = "3")]
    pub dhhfppccned: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "13")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hpccmbdadfi {
    #[prost(message, repeated, tag = "3")]
    pub pndpnmbdokf: ::prost::alloc::vec::Vec<Amekoapgaba>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4191)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lehodlmifgg {
    #[prost(bool, tag = "3")]
    pub is_started: bool,
    #[prost(message, optional, tag = "5")]
    pub ibeakhhnohb: ::core::option::Option<Hcjgifnjppj>,
    #[prost(uint32, tag = "7")]
    pub cilmghamedd: u32,
    #[prost(uint32, tag = "8")]
    pub ngihokcibpe: u32,
    #[prost(message, optional, tag = "10")]
    pub bopfdfdnlgf: ::core::option::Option<Vector>,
    #[prost(bool, tag = "15")]
    pub ddlklkogood: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29847)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ehikoofiedp {
    #[prost(uint32, tag = "15")]
    pub gfdibgdcmcp: u32,
    #[prost(bool, tag = "10")]
    pub hnadlalnmio: bool,
    #[prost(bool, tag = "13")]
    pub mimgkddgbpc: bool,
    #[prost(uint32, tag = "5")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24315)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fdhoinmalgk {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(bool, tag = "9")]
    pub hcjfdjhilam: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26077)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Flmbckjcdnk {
    #[prost(message, repeated, tag = "12")]
    pub ahllkjjemlg: ::prost::alloc::vec::Vec<Fndlklbaapg>,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25889)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gabkmnhmpgn {
    #[prost(bool, tag = "2")]
    pub bmogedhcjlo: bool,
    #[prost(bool, tag = "5")]
    pub dlaiggifaff: bool,
    #[prost(bool, tag = "9")]
    pub kkpidnfhgcj: bool,
    #[prost(bool, tag = "12")]
    pub eeghhiamkjn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lhdnohdmimo {
    #[prost(uint32, tag = "8")]
    pub mlnmecigdmh: u32,
    #[prost(uint32, tag = "12")]
    pub ggigcllhefm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Flmademmjjh {
    #[prost(uint32, tag = "1")]
    pub item_id: u32,
    #[prost(oneof = "flmademmjjh::Detail", tags = "2, 3")]
    pub detail: ::core::option::Option<flmademmjjh::Detail>,
}
/// Nested message and enum types in `FLMADEMMJJH`.
pub mod flmademmjjh {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(message, tag = "2")]
        Reliquary(super::Reliquary),
        #[prost(message, tag = "3")]
        Weapon(super::Weapon),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Blpmijepglf {
    #[prost(message, optional, tag = "2")]
    pub ocoliglolno: ::core::option::Option<Ginehphefdb>,
    #[prost(bool, tag = "6")]
    pub bklgcihiapa: bool,
    #[prost(uint32, tag = "10")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ajmimbmcabe {
    #[prost(uint32, repeated, tag = "9")]
    pub skill_id_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "11")]
    pub efcdelgmmkg: ::prost::alloc::vec::Vec<Nahmoaolmpl>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CombatInvokeEntry {
    #[prost(bytes = "vec", tag = "6")]
    pub combat_data: ::prost::alloc::vec::Vec<u8>,
    #[prost(enumeration = "CombatTypeArgument", tag = "10")]
    pub argument_type: i32,
    #[prost(enumeration = "ForwardType", tag = "13")]
    pub forward_type: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Piccfjidmml {
    #[prost(uint32, tag = "1")]
    pub fclohomhhho: u32,
    #[prost(uint32, tag = "6")]
    pub nmipkmflacp: u32,
    #[prost(message, repeated, tag = "8")]
    pub nidhjmljjii: ::prost::alloc::vec::Vec<Lmpinlnnpbd>,
    #[prost(uint32, repeated, tag = "11")]
    pub kkpkggpfpim: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "12")]
    pub hkegebjnjjd: u32,
    #[prost(fixed32, tag = "15")]
    pub mhjhgimlhln: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21978)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fcidgigpmlp {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint32, tag = "2")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1527)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bplojpoadai {
    #[prost(message, optional, tag = "3")]
    pub mlofdlfgkim: ::core::option::Option<Kjjeegegcmi>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Migelblongc {
    #[prost(string, tag = "8")]
    pub dpjaeaeemdg: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub jnpannnblpj: ::prost::alloc::string::String,
    #[prost(string, tag = "11")]
    pub lfilmiagpjc: ::prost::alloc::string::String,
    #[prost(string, tag = "12")]
    pub cjongoengpk: ::prost::alloc::string::String,
    #[prost(string, tag = "14")]
    pub algehhamioh: ::prost::alloc::string::String,
    #[prost(string, tag = "15")]
    pub cgnendpeilc: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fiedppjlade {
    #[prost(uint32, tag = "8")]
    pub level_id: u32,
    #[prost(bool, tag = "11")]
    pub is_finish: bool,
    #[prost(bool, tag = "12")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Agdiepohjch {
    #[prost(uint32, tag = "1")]
    pub cmdbcgaecdp: u32,
    #[prost(uint32, tag = "5")]
    pub aadkglakicj: u32,
    #[prost(uint32, tag = "12")]
    pub ipjdipncfdn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Onjimnmdbia {
    #[prost(message, optional, tag = "1")]
    pub jamfdabajbb: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "3")]
    pub doiihabehko: u32,
    #[prost(message, optional, tag = "4")]
    pub oicfbjmlifc: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "6")]
    pub ref_id: u32,
    #[prost(message, optional, tag = "7")]
    pub ghniillngkc: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "8")]
    pub fnkgobllfoh: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "9")]
    pub lgepidaghea: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "11")]
    pub ref_pos: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "15")]
    pub oipcdlondgp: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nloibnmgbmj {
    #[prost(uint32, tag = "3")]
    pub cclbephgcek: u32,
    #[prost(uint32, tag = "7")]
    pub pieapgepmlf: u32,
    #[prost(uint32, tag = "8")]
    pub start_time: u32,
    #[prost(uint32, tag = "10")]
    pub fcpecpmogoj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21680)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gkffkaogdab {
    #[prost(uint32, tag = "14")]
    pub epolbfpaoci: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2811)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mlhihhfbalo {
    #[prost(message, optional, tag = "2")]
    pub jgepcnmgkjn: ::core::option::Option<Epangooiecn>,
    #[prost(int32, tag = "3")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fmpagifcmlj {
    #[prost(message, repeated, tag = "3")]
    pub ifipfmljpgc: ::prost::alloc::vec::Vec<Bgpahbmkbag>,
    #[prost(message, optional, tag = "10")]
    pub npmiagmnman: ::core::option::Option<Bodfnfidfod>,
    #[prost(message, optional, tag = "13")]
    pub icfgkpfafnd: ::core::option::Option<Bodfnfidfod>,
    #[prost(uint32, repeated, tag = "14")]
    pub mjaoninhiib: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dpdmgojjjle {
    #[prost(bool, tag = "2")]
    pub is_invalid: bool,
    #[prost(uint32, tag = "3")]
    pub id: u32,
    #[prost(message, repeated, tag = "5")]
    pub kdojkdmiaom: ::prost::alloc::vec::Vec<Ombeifnnedf>,
    #[prost(uint32, tag = "7")]
    pub ooipgfedjmn: u32,
    #[prost(fixed32, tag = "8")]
    pub mhjhgimlhln: u32,
    #[prost(enumeration = "Nlobhempbem", tag = "9")]
    pub igcfekljnmj: i32,
    #[prost(fixed32, tag = "10")]
    pub cojobikfhod: u32,
    #[prost(uint32, tag = "11")]
    pub eofhloimpmk: u32,
    #[prost(message, repeated, tag = "13")]
    pub dngffhfbbkl: ::prost::alloc::vec::Vec<Hjpeiaodcbk>,
    #[prost(uint32, tag = "15")]
    pub konankaciem: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24939)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pbnfnimpkgn {
    #[prost(message, repeated, tag = "10")]
    pub fbgdijjipnn: ::prost::alloc::vec::Vec<Lfljdeihldm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1313)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Inojfjkpaff {
    #[prost(message, repeated, tag = "9")]
    pub pmjgjnilmbp: ::prost::alloc::vec::Vec<Cgoihcdffej>,
    #[prost(uint32, tag = "7")]
    pub level_id: u32,
    #[prost(uint32, tag = "1")]
    pub hggehlmhkmp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nfpllbbapim {
    #[prost(message, repeated, tag = "15")]
    pub ehgcmjbncie: ::prost::alloc::vec::Vec<Eenofofcohf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23657)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gmjbechkild {
    #[prost(uint32, tag = "8")]
    pub kejelnblmhl: u32,
    #[prost(int32, tag = "11")]
    pub jocachhlkjh: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CustomGadgetTreeInfo {
    #[prost(message, repeated, tag = "1")]
    pub node_list: ::prost::alloc::vec::Vec<CustomCommonNodeInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28916)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Affnlbajial {
    #[prost(message, optional, tag = "10")]
    pub adkgodgchnd: ::core::option::Option<Njpkdapljfb>,
    #[prost(bool, tag = "15")]
    pub hhhgmcfkgif: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9164)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Npffjbkdpni {
    #[prost(uint32, repeated, tag = "12")]
    pub ckmgfnkccej: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iljbekegpif {
    #[prost(uint64, tag = "4")]
    pub hpgifohkdoa: u64,
    #[prost(bool, tag = "8")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "10")]
    pub id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Famdmpnckjb {
    #[prost(message, optional, tag = "8")]
    pub fgaeincckdk: ::core::option::Option<Olheklkendn>,
    #[prost(bool, tag = "10")]
    pub jfjndakfjek: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1254)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hfmfbdiaklm {
    #[prost(uint32, tag = "7")]
    pub eoobhpaodnc: u32,
    #[prost(uint32, tag = "9")]
    pub group_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21128)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cpblkcachae {
    #[prost(uint32, tag = "5")]
    pub jaaekgkmado: u32,
    #[prost(uint32, tag = "3")]
    pub jcmchgnnlmj: u32,
    #[prost(uint32, tag = "10")]
    pub poecpaaaloe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25357)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jhpjnblebea {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "4")]
    pub dnbefljlamb: u32,
    #[prost(uint32, tag = "14")]
    pub finahglfhag: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pikdlmgginc {
    #[prost(message, repeated, tag = "3")]
    pub clkehkjiinl: ::prost::alloc::vec::Vec<Einaplinofb>,
    #[prost(uint32, tag = "4")]
    pub heniikdcdpk: u32,
    #[prost(bool, tag = "14")]
    pub mpfldfdogai: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6623)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kangaocoaod {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(message, optional, tag = "12")]
    pub ienmpnlkpmh: ::core::option::Option<Nbgckgbplal>,
    #[prost(uint32, tag = "14")]
    pub lnbgblbmadj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5360)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Laahchnfpcd {
    #[prost(string, tag = "8")]
    pub team_name: ::prost::alloc::string::String,
    #[prost(int32, tag = "3")]
    pub team_id: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bbohkcceccc {
    #[prost(message, optional, tag = "3")]
    pub mjpbeeahlck: ::core::option::Option<Ilghnmjjefl>,
    #[prost(message, optional, tag = "8")]
    pub ghjgblnckdi: ::core::option::Option<Mjhjlhdejbe>,
    #[prost(message, optional, tag = "11")]
    pub hdphldbgleo: ::core::option::Option<Gppomegkdfi>,
    #[prost(message, optional, tag = "12")]
    pub pcbfjnnoake: ::core::option::Option<Joniobealfp>,
    #[prost(message, optional, tag = "13")]
    pub egnkbchagcc: ::core::option::Option<Gbjhpicmgfi>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27717)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ehdjblojpem {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25757)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ncfannkdpfm {
    #[prost(uint32, repeated, tag = "8")]
    pub adbbiphblie: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "4")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28210)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Njbidpbmnli {
    #[prost(uint32, tag = "2")]
    pub city_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3421)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hblocnlnhmp {
    #[prost(uint32, tag = "7")]
    pub ghlbjahjehf: u32,
    #[prost(uint32, tag = "10")]
    pub gadget_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ohfhhiejgip {
    #[prost(enumeration = "Lincbkjpoll", tag = "1")]
    pub fbdobgjgnbf: i32,
    #[prost(bool, tag = "2")]
    pub adhibdajpnk: bool,
    #[prost(uint32, tag = "3")]
    pub kaekajnalif: u32,
    #[prost(message, optional, tag = "4")]
    pub dgfjoahlaid: ::core::option::Option<Dbpnilfgbem>,
    #[prost(uint32, tag = "5")]
    pub dnbefljlamb: u32,
    #[prost(uint32, tag = "6")]
    pub level: u32,
    #[prost(uint32, tag = "7")]
    pub edklahfoakp: u32,
    #[prost(message, repeated, tag = "8")]
    pub oglbbjdnahg: ::prost::alloc::vec::Vec<Dfoalmcbpmg>,
    #[prost(message, optional, tag = "9")]
    pub lojncmhmnih: ::core::option::Option<Oebgkddfdff>,
    #[prost(bool, tag = "10")]
    pub jagcahojnod: bool,
    #[prost(uint32, tag = "11")]
    pub jabgacillec: u32,
    #[prost(message, repeated, tag = "12")]
    pub maehiemmlpe: ::prost::alloc::vec::Vec<Fphkaopdehn>,
    #[prost(uint32, tag = "13")]
    pub end_time: u32,
    #[prost(uint32, tag = "14")]
    pub bcjnoaeinda: u32,
    #[prost(bool, tag = "15")]
    pub bjfhkekdakp: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2790)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bmfdpffbhpg {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24698)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lgikpifjfdi {
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gcaapklddne {
    #[prost(bool, tag = "4")]
    pub ojifcjgpcbk: bool,
    #[prost(uint32, tag = "14")]
    pub uid: u32,
    #[prost(uint32, tag = "15")]
    pub score: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28479)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ccnhopfndbg {
    #[prost(uint32, tag = "1")]
    pub eijpmmbmohl: u32,
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "6")]
    pub niopjagdbnm: u32,
    #[prost(message, repeated, tag = "8")]
    pub amehokpoglk: ::prost::alloc::vec::Vec<Baenjdfennh>,
    #[prost(bool, tag = "9")]
    pub ilgpahiahig: bool,
    #[prost(bool, tag = "11")]
    pub kkfhjllldef: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29464)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ngfhecdbghp {
    #[prost(message, repeated, tag = "4")]
    pub params: ::prost::alloc::vec::Vec<Mpfodnpcfdi>,
    #[prost(enumeration = "Bmidafbcomp", tag = "7")]
    pub opaniffjche: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2814)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nflcmnhhejh {
    #[prost(message, repeated, tag = "2")]
    pub efcdelgmmkg: ::prost::alloc::vec::Vec<Gaiobfeadpd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27447)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Apcnihpjlaf {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "11")]
    pub hnogkehflhe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20503)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Afcaokeeein {
    #[prost(uint64, repeated, tag = "15")]
    pub avatar_guid_list: ::prost::alloc::vec::Vec<u64>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29758)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hbjdjpapbjo {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29911)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cfomhbomcgm {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20004)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dbnclfgfkil {
    #[prost(uint32, tag = "15")]
    pub gbaoomaamda: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pjnppnfikhk {
    #[prost(message, repeated, tag = "2")]
    pub kacicjgagel: ::prost::alloc::vec::Vec<Mhjpfdgedgo>,
    #[prost(bool, tag = "9")]
    pub kokdkapahij: bool,
    #[prost(uint32, tag = "11")]
    pub id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gjdjpcpphic {
    #[prost(uint64, tag = "2")]
    pub mcppeknbhfk: u64,
    #[prost(message, repeated, tag = "9")]
    pub peebjaoikfc: ::prost::alloc::vec::Vec<Ldcechmbpfh>,
    #[prost(uint32, tag = "11")]
    pub oajoobghagm: u32,
    #[prost(message, optional, tag = "14")]
    pub holkpjjeeim: ::core::option::Option<Cjceknnabgi>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5016)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nlgkimpgjep {
    #[prost(uint32, tag = "3")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27093)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hcblnekinfb {
    #[prost(bool, tag = "8")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "9")]
    pub level_id: u32,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bogmlieedgc {
    #[prost(message, repeated, tag = "1")]
    pub laegkcgmkdi: ::prost::alloc::vec::Vec<Npjdjdeckme>,
    #[prost(uint32, tag = "13")]
    pub damkhnbnjef: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29809)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fmidkabebfm {
    #[prost(uint32, repeated, tag = "5")]
    pub fenojplgmge: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24486)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lhnejkngldl {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "10")]
    pub ikiechdjnab: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21827)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oepilcneahk {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20873)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pgjfedfbbme {
    #[prost(uint32, repeated, tag = "1")]
    pub gbnmnacldbe: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "2")]
    pub bmkmlkniaaa: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "3")]
    pub oajoobghagm: u32,
    #[prost(uint32, tag = "4")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "8")]
    pub dccchkbighp: u32,
    #[prost(uint32, tag = "9")]
    pub lnccibnolko: u32,
    #[prost(uint32, tag = "10")]
    pub ggigcllhefm: u32,
    #[prost(message, repeated, tag = "13")]
    pub peebjaoikfc: ::prost::alloc::vec::Vec<Ddggnmcaglo>,
    #[prost(uint32, tag = "14")]
    pub jkpcjabbgjb: u32,
    #[prost(uint32, tag = "15")]
    pub bodiejclgmb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fjgghhpgddh {
    #[prost(uint32, tag = "5")]
    pub id: u32,
    #[prost(bool, tag = "8")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1558)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hmbmkbllcbh {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21571)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pglolmedkel {
    #[prost(uint32, tag = "13")]
    pub entity_id: u32,
    #[prost(uint32, tag = "15")]
    pub cur_tactic: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6015)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pbhajdkggeg {
    #[prost(uint32, repeated, tag = "13")]
    pub gcdkckpdioh: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21908)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eolfphgfnln {
    #[prost(uint32, tag = "4")]
    pub baibdagpmgn: u32,
    #[prost(uint32, tag = "7")]
    pub djhoanjinad: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1124)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nfmejeekncl {
    #[prost(bool, tag = "6")]
    pub jfjndakfjek: bool,
    #[prost(uint32, tag = "1")]
    pub mmbgkomhddi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26410)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mhiobafeffp {
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ddgpfnoplff {
    #[prost(bool, tag = "2")]
    pub glkngddnocn: bool,
    #[prost(bool, tag = "4")]
    pub is_finish: bool,
    #[prost(uint32, tag = "10")]
    pub score: u32,
    #[prost(uint32, tag = "11")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(489)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lieamjapoob {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25998)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kchfcgkkomj {
    #[prost(uint32, tag = "15")]
    pub level_id: u32,
    #[prost(uint32, tag = "5")]
    pub config_id: u32,
    #[prost(enumeration = "Abpkolenhap", tag = "9")]
    pub dhicfghanog: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2093)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bdnjigilgob {
    #[prost(uint32, tag = "4")]
    pub cnaifgicldh: u32,
    #[prost(uint32, tag = "5")]
    pub pijfdbikfkb: u32,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25305)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gojnehoimdd {
    #[prost(bool, tag = "6")]
    pub aomekgipglo: bool,
    #[prost(uint32, tag = "9")]
    pub aenllaapncn: u32,
    #[prost(uint32, tag = "12")]
    pub hlafadogopn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(386)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Haghfemppba {
    #[prost(string, tag = "13")]
    pub msg: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mkjgcfhiihn {
    #[prost(int32, tag = "4")]
    pub leffkphmicb: i32,
    #[prost(bool, tag = "5")]
    pub is_paused: bool,
    #[prost(uint32, tag = "14")]
    pub start_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21123)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kllmgkklhaf {
    #[prost(uint32, tag = "1")]
    pub ghaaadjpihn: u32,
    #[prost(uint32, tag = "5")]
    pub mlnmecigdmh: u32,
    #[prost(uint32, tag = "6")]
    pub fcphcokaleb: u32,
    #[prost(uint32, tag = "8")]
    pub hcgblldppok: u32,
    #[prost(uint32, tag = "9")]
    pub mejcendjalc: u32,
    #[prost(uint32, tag = "12")]
    pub gjmpfkecfkb: u32,
    #[prost(uint32, tag = "15")]
    pub lgganndjeoi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3798)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pfhoelhjhll {
    #[prost(uint32, repeated, tag = "2")]
    pub ggkggghhlml: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "7")]
    pub ddbdiflnhdg: ::prost::alloc::vec::Vec<Cegmhfpbajj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9689)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Coonnmmflfg {
    #[prost(uint32, tag = "10")]
    pub hdmadegneio: u32,
    #[prost(uint32, tag = "3")]
    pub finahglfhag: u32,
    #[prost(uint32, tag = "7")]
    pub bgmdlpabefa: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nkkhonkpple {
    #[prost(enumeration = "GadgetBornType", tag = "1")]
    pub born_type: i32,
    #[prost(message, optional, tag = "2")]
    pub ncmgbigfflg: ::core::option::Option<Dcihcipioda>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dcihcipioda {
    #[prost(uint32, tag = "1")]
    pub mnmniceafpk: u32,
    #[prost(bool, tag = "2")]
    pub is_show_cutscene: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28165)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pfnlkjlmlni {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "13")]
    pub gofhghokepn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22492)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dblofkobomi {
    #[prost(uint32, tag = "4")]
    pub fmecbhllnon: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6096)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lenmhfhmije {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28850)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pmhamimacek {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ginehphefdb {
    #[prost(uint32, tag = "1")]
    pub oelcnlojhhe: u32,
    #[prost(uint32, tag = "4")]
    pub copmlbajfbg: u32,
    #[prost(uint32, tag = "8")]
    pub bodiejclgmb: u32,
    #[prost(bool, tag = "9")]
    pub is_finish: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PlatformInfo {
    #[prost(uint32, tag = "1")]
    pub route_id: u32,
    #[prost(int32, tag = "2")]
    pub start_index: i32,
    #[prost(uint32, tag = "3")]
    pub start_route_time: u32,
    #[prost(uint32, tag = "4")]
    pub start_scene_time: u32,
    #[prost(message, optional, tag = "7")]
    pub start_pos: ::core::option::Option<Vector>,
    #[prost(bool, tag = "8")]
    pub is_started: bool,
    #[prost(message, optional, tag = "9")]
    pub start_rot: ::core::option::Option<MathQuaternion>,
    #[prost(uint32, tag = "10")]
    pub stop_scene_time: u32,
    #[prost(message, optional, tag = "11")]
    pub pos_offset: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "12")]
    pub rot_offset: ::core::option::Option<MathQuaternion>,
    #[prost(enumeration = "MovingPlatformType", tag = "13")]
    pub moving_platform_type: i32,
    #[prost(bool, tag = "14")]
    pub is_active: bool,
    #[prost(message, optional, tag = "15")]
    pub route: ::core::option::Option<Route>,
    #[prost(uint32, tag = "16")]
    pub point_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dpblghlggki {
    #[prost(uint32, tag = "4")]
    pub equip_type: u32,
    #[prost(uint32, tag = "9")]
    pub adjdgpolcpg: u32,
    #[prost(uint32, repeated, tag = "12")]
    pub gmccmdfbgib: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "13")]
    pub olhfgknpfbo: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eblcblofahh {
    #[prost(message, optional, tag = "1")]
    pub afimmkiapmh: ::core::option::Option<Memahnajibf>,
    #[prost(uint32, tag = "2")]
    pub mapnmaclbbh: u32,
    #[prost(uint32, tag = "3")]
    pub ooipgfedjmn: u32,
    #[prost(message, optional, tag = "4")]
    pub dkaoiabpljm: ::core::option::Option<Memahnajibf>,
    #[prost(message, optional, tag = "5")]
    pub kcmkcccmmio: ::core::option::Option<Memahnajibf>,
    #[prost(uint32, tag = "6")]
    pub dnohajgcpna: u32,
    #[prost(message, optional, tag = "7")]
    pub pplmjpjogck: ::core::option::Option<Memahnajibf>,
    #[prost(enumeration = "Mnlilcbgkng", repeated, tag = "8")]
    pub mkjpgmhmhbj: ::prost::alloc::vec::Vec<i32>,
    #[prost(message, repeated, tag = "9")]
    pub doclpodmmhc: ::prost::alloc::vec::Vec<Mmbadkceelo>,
    #[prost(uint32, tag = "10")]
    pub jjdlcmmmija: u32,
    #[prost(bool, tag = "11")]
    pub gfjokboegnb: bool,
    #[prost(uint32, tag = "12")]
    pub hhmcfaippkb: u32,
    #[prost(map = "uint32, message", tag = "13")]
    pub jipmfflhkom: ::std::collections::HashMap<u32, Memahnajibf>,
    #[prost(message, optional, tag = "14")]
    pub igeaobljcje: ::core::option::Option<Memahnajibf>,
    #[prost(uint32, tag = "15")]
    pub caabmnhcoad: u32,
    #[prost(uint32, tag = "1071")]
    pub dfniaemihbe: u32,
    #[prost(bool, tag = "1390")]
    pub pnechcnfdng: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27389)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mcfpklhpmkk {
    #[prost(message, repeated, tag = "2")]
    pub hdcjfkpplfc: ::prost::alloc::vec::Vec<Efegiimaomi>,
    #[prost(message, repeated, tag = "8")]
    pub dkdakpficjc: ::prost::alloc::vec::Vec<Nnhfmcjogpo>,
    #[prost(enumeration = "Hmbfchkmegd", tag = "10")]
    pub oofabehbcbh: i32,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27334)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Npaljbmknac {
    #[prost(bool, tag = "2")]
    pub hcjfdjhilam: bool,
    #[prost(bool, tag = "4")]
    pub omeniamedce: bool,
    #[prost(enumeration = "Lfjlgojmkeh", tag = "5")]
    pub imiogmdokcb: i32,
    #[prost(uint32, tag = "7")]
    pub ffhpdcibkod: u32,
    #[prost(uint32, tag = "8")]
    pub dmkkmolpglk: u32,
    #[prost(uint32, tag = "9")]
    pub score: u32,
    #[prost(uint32, tag = "11")]
    pub monejdbpolb: u32,
    #[prost(uint32, tag = "13")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23504)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gollkaagngi {
    #[prost(uint32, tag = "5")]
    pub finahglfhag: u32,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(uint32, tag = "13")]
    pub pbbeaikknib: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(668)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Goajdopeean {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fggkifngdon {
    #[prost(uint32, tag = "1")]
    pub jldmenbijdn: u32,
    #[prost(uint32, repeated, tag = "3")]
    pub mjaoninhiib: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "8")]
    pub ckkffoljckh: u32,
    #[prost(bool, tag = "13")]
    pub niekgomdmoc: bool,
    #[prost(bool, tag = "14")]
    pub iibiabpbbco: bool,
    #[prost(message, repeated, tag = "15")]
    pub gapodpgieln: ::prost::alloc::vec::Vec<Ennopjofajk>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1244)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fkbelcojhpl {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Egdlgkkgnnn {
    #[prost(message, repeated, tag = "8")]
    pub kckepcmlihi: ::prost::alloc::vec::Vec<Aefiopfgdji>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28749)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Goofjblpjbg {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Decdnnmlhgg {
    #[prost(uint32, tag = "13")]
    pub apply_entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6119)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fpmknhapgbm {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hknapemkpmk {
    #[prost(float, tag = "3")]
    pub jjckcjmbapa: f32,
    #[prost(uint32, tag = "4")]
    pub elinkdaodng: u32,
    #[prost(float, tag = "5")]
    pub gnpodalfbkp: f32,
    #[prost(float, tag = "8")]
    pub bgkbmokmnbn: f32,
    #[prost(uint32, tag = "9")]
    pub lddjojnkfnd: u32,
    #[prost(float, tag = "15")]
    pub ddnajmjcjpi: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jghgpmmambl {
    #[prost(uint32, tag = "1")]
    pub iemhhjbanld: u32,
    #[prost(uint32, tag = "5")]
    pub caeoniplbjc: u32,
    #[prost(uint32, repeated, tag = "13")]
    pub mhkejkoecbl: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "14")]
    pub cjiieiogbfo: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "15")]
    pub beeokojebch: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1483)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lpjenjfjmbl {
    #[prost(uint32, tag = "1")]
    pub flycloak_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21799)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Afllekjijhn {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28349)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nghcoddfkim {
    #[prost(message, repeated, tag = "11")]
    pub bobboajjpgo: ::prost::alloc::vec::Vec<Jnpbfjbkkee>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8111)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fkfkcoojfln {
    #[prost(uint32, repeated, tag = "3")]
    pub okppkhnchpo: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1335)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aeoblijakcp {
    #[prost(uint32, tag = "12")]
    pub kngbdmdcnhk: u32,
    #[prost(bool, tag = "1")]
    pub is_active: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lleoikmgaeo {
    #[prost(float, tag = "3")]
    pub lgdhekgllih: f32,
    #[prost(float, tag = "5")]
    pub gemkjlaecam: f32,
    #[prost(float, tag = "13")]
    pub duration: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4853)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cafmloaehnc {
    #[prost(uint32, tag = "6")]
    pub heclkjbbncm: u32,
    #[prost(message, optional, tag = "13")]
    pub mlopmggddmn: ::core::option::Option<Maclkmpjdcg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dccnbnfgkma {
    #[prost(message, repeated, tag = "6")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Igodkmgocfi>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Deigilfodbd {
    #[prost(uint32, tag = "5")]
    pub level: u32,
    #[prost(message, optional, tag = "6")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "7")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "10")]
    pub scene_id: u32,
    #[prost(uint32, tag = "11")]
    pub room_id: u32,
    #[prost(uint32, tag = "12")]
    pub bkhplmcodac: u32,
    #[prost(oneof = "deigilfodbd::Entity", tags = "1, 2, 3, 4")]
    pub entity: ::core::option::Option<deigilfodbd::Entity>,
    #[prost(oneof = "deigilfodbd::Ohaaojacmob", tags = "13")]
    pub ohaaojacmob: ::core::option::Option<deigilfodbd::Ohaaojacmob>,
}
/// Nested message and enum types in `DEIGILFODBD`.
pub mod deigilfodbd {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Entity {
        #[prost(uint32, tag = "1")]
        MonsterId(u32),
        #[prost(uint32, tag = "2")]
        NpcId(u32),
        #[prost(uint32, tag = "3")]
        GadgetId(u32),
        #[prost(uint32, tag = "4")]
        ItemId(u32),
    }
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Ohaaojacmob {
        #[prost(message, tag = "13")]
        Gadget(super::Nkkhonkpple),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(165)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jhheaeglfdm {
    #[prost(uint32, tag = "2")]
    pub bdeflcdkdbi: u32,
    #[prost(uint32, tag = "8")]
    pub dnbefljlamb: u32,
    #[prost(uint32, tag = "11")]
    pub akfcofeoipo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9188)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cakfgkidagi {
    #[prost(uint32, tag = "5")]
    pub level_id: u32,
    #[prost(uint32, tag = "14")]
    pub hoceceaalmd: u32,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20465)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mlpflcjldjb {
    #[prost(uint32, tag = "1")]
    pub city_id: u32,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(message, optional, tag = "13")]
    pub ibeakhhnohb: ::core::option::Option<Hcjgifnjppj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24717)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bochgcpibpi {
    #[prost(uint32, tag = "8")]
    pub dnbefljlamb: u32,
    #[prost(map = "uint32, uint32", tag = "11")]
    pub ijlfkccoonm: ::std::collections::HashMap<u32, u32>,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3507)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Namhclkfocf {
    #[prost(uint32, tag = "12")]
    pub ffhpdcibkod: u32,
    #[prost(uint32, tag = "7")]
    pub neikciohndh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26694)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iinmnokjpea {
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dkiblfiglap {
    #[prost(uint64, tag = "1")]
    pub start_time: u64,
    #[prost(uint32, tag = "2")]
    pub ebhokcegldb: u32,
    #[prost(uint32, tag = "3")]
    pub ekgeolmiccp: u32,
    #[prost(float, tag = "4")]
    pub eoaecodkeag: f32,
    #[prost(float, tag = "5")]
    pub speed: f32,
    #[prost(bool, tag = "6")]
    pub is_started: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4232)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Epaadddaaff {
    #[prost(message, optional, tag = "11")]
    pub ekgpamgjpip: ::core::option::Option<Vector>,
    #[prost(enumeration = "ForwardType", tag = "3")]
    pub forward_type: i32,
    #[prost(uint32, tag = "6")]
    pub skill_id: u32,
    #[prost(uint32, tag = "8")]
    pub caaoabgheol: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9243)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jobkelddmdo {
    #[prost(bool, tag = "8")]
    pub pgglabenkee: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lncnfmeioli {
    #[prost(uint32, tag = "3")]
    pub bpfmfigkoia: u32,
    #[prost(uint32, tag = "4")]
    pub score: u32,
    #[prost(message, optional, tag = "6")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
    #[prost(string, tag = "9")]
    pub efajihmnobk: ::prost::alloc::string::String,
    #[prost(string, tag = "11")]
    pub omknbnmebik: ::prost::alloc::string::String,
    #[prost(uint32, tag = "12")]
    pub dojlekienil: u32,
    #[prost(uint32, tag = "15")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ddifkdloaed {
    #[prost(uint32, tag = "1")]
    pub level_id: u32,
    #[prost(bool, tag = "4")]
    pub is_finish: bool,
    #[prost(uint32, tag = "12")]
    pub mkcgmmganlk: u32,
    #[prost(bool, tag = "14")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9887)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lafckbgkihf {
    #[prost(fixed32, tag = "3")]
    pub figbkbnadgl: u32,
    #[prost(bool, tag = "6")]
    pub ghajnbeheej: bool,
    #[prost(uint32, tag = "9")]
    pub cnaifgicldh: u32,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23042)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Caafnldpgnl {
    #[prost(uint32, tag = "2")]
    pub kngbdmdcnhk: u32,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27104)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mcobejnlkpe {
    #[prost(enumeration = "Abpkolenhap", tag = "9")]
    pub dhicfghanog: i32,
    #[prost(uint32, tag = "13")]
    pub level_id: u32,
    #[prost(uint32, tag = "12")]
    pub config_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fbmhifhkkkj {
    #[prost(message, repeated, tag = "5")]
    pub mnmbinfiphb: ::prost::alloc::vec::Vec<Hbpjookkejm>,
    #[prost(uint32, tag = "6")]
    pub element_type: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6393)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ikpjjgadbdp {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6475)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pajbfjgfdng {
    #[prost(bool, tag = "1")]
    pub diadkoonmng: bool,
    #[prost(uint32, tag = "5")]
    pub mp_play_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6640)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pbcohpgndik {
    #[prost(uint32, repeated, tag = "8")]
    pub fenojplgmge: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29931)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Caodgihhcec {
    #[prost(uint32, tag = "2")]
    pub oajoobghagm: u32,
    #[prost(uint32, tag = "9")]
    pub jlohajnkaei: u32,
    #[prost(uint32, tag = "11")]
    pub player_uid: u32,
    #[prost(uint32, tag = "13")]
    pub point_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1300)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Beofogijbhf {
    #[prost(message, repeated, tag = "1")]
    pub djmchfpiflm: ::prost::alloc::vec::Vec<Llgcdcdhdpd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jcfmhohidod {
    #[prost(uint32, repeated, tag = "1")]
    pub param_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cnhoejppnnm {
    #[prost(message, repeated, tag = "11")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Ddifkdloaed>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23852)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mmpjppopgae {
    #[prost(message, optional, tag = "6")]
    pub jiibcmjnbpj: ::core::option::Option<Nfklnncfjlj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22372)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dajigbfihog {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25200)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fnmdboeaglg {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23538)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cbfjcblgchd {
    #[prost(bool, tag = "3")]
    pub jddkkhmgfcd: bool,
    #[prost(bool, tag = "8")]
    pub ccgjikpgdbo: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27269)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bnpfgoandab {
    #[prost(uint64, tag = "6")]
    pub cur_avatar_guid: u64,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(uint64, repeated, tag = "15")]
    pub avatar_guid_list: ::prost::alloc::vec::Vec<u64>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5171)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ggjoamhhkei {
    #[prost(uint32, tag = "2")]
    pub index: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mebchbgnffa {
    #[prost(sfixed32, tag = "8")]
    pub eioppimjeab: i32,
    #[prost(sfixed32, tag = "10")]
    pub ability_name_hash: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4074)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mkpmckdghhf {
    #[prost(uint32, repeated, tag = "13")]
    pub mnchcggmlpa: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "5")]
    pub idolojjnlob: u32,
    #[prost(uint32, tag = "7")]
    pub bikoakjlpbe: u32,
    #[prost(uint32, tag = "9")]
    pub gckfokidohk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pmnbpepijik {
    #[prost(uint32, tag = "10")]
    pub eaipgemknpo: u32,
    #[prost(bool, tag = "12")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "14")]
    pub obdoehejbji: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27046)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kgnaclkaigp {
    #[prost(message, repeated, tag = "1")]
    pub ahllkjjemlg: ::prost::alloc::vec::Vec<Fndlklbaapg>,
    #[prost(message, optional, tag = "2")]
    pub agjcllhfkgg: ::core::option::Option<Hgbhcjgllkb>,
    #[prost(uint32, tag = "3")]
    pub fdniblhdjgl: u32,
    #[prost(message, optional, tag = "5")]
    pub jiibcmjnbpj: ::core::option::Option<Nfklnncfjlj>,
    #[prost(message, optional, tag = "6")]
    pub dmgbpdbnbll: ::core::option::Option<Hmbpnbbjpoo>,
    #[prost(message, repeated, tag = "7")]
    pub lconahldejj: ::prost::alloc::vec::Vec<Lcpdopfdndg>,
    #[prost(message, optional, tag = "8")]
    pub eilnenalnfd: ::core::option::Option<Mlclboekhne>,
    #[prost(uint32, repeated, tag = "9")]
    pub dhoiliolkja: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "12")]
    pub ddhpgfnhego: ::prost::alloc::vec::Vec<Oehgbgealhn>,
    #[prost(message, repeated, tag = "13")]
    pub mhlenclfckn: ::prost::alloc::vec::Vec<Iljbekegpif>,
    #[prost(message, repeated, tag = "14")]
    pub pjopjgfcblj: ::prost::alloc::vec::Vec<Iljbekegpif>,
    #[prost(message, repeated, tag = "15")]
    pub leolaijlknj: ::prost::alloc::vec::Vec<Ijjkjdgcbem>,
    #[prost(message, optional, tag = "242")]
    pub hchlhfcgiio: ::core::option::Option<Mobcemckpjd>,
    #[prost(message, repeated, tag = "631")]
    pub fidjdhjoebn: ::prost::alloc::vec::Vec<Ombeifnnedf>,
    #[prost(uint32, tag = "701")]
    pub cakpdnkkgen: u32,
    #[prost(uint32, repeated, tag = "1096")]
    pub hnempaagmdn: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4509)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gkkmcaoagki {
    #[prost(uint32, repeated, tag = "5")]
    pub ckbbaoimlla: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eicimokgook {
    #[prost(uint32, repeated, tag = "1")]
    pub npmpjingpof: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "7")]
    pub cjhdmkllkpa: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(652)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hoocejkilfb {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25602)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ikbemgaonjf {
    #[prost(uint32, tag = "5")]
    pub id: u32,
    #[prost(uint32, tag = "13")]
    pub nmaapldbbni: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7936)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pcfafndhbeh {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint32, tag = "2")]
    pub entity_id: u32,
    #[prost(message, optional, tag = "9")]
    pub hgdgjjfbfnd: ::core::option::Option<Deigilfodbd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25035)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bkhelfcnagd {
    #[prost(message, repeated, tag = "3")]
    pub pnbdcfalkpg: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(uint32, tag = "5")]
    pub lbmcnlfdhkl: u32,
    #[prost(uint32, tag = "6")]
    pub fclhhlbcnin: u32,
    #[prost(message, repeated, tag = "7")]
    pub item_list: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(message, optional, tag = "13")]
    pub lbbkkkbbffp: ::core::option::Option<Lcfljaaibio>,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5596)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ddpanjklada {
    #[prost(uint32, tag = "5")]
    pub lohjecfldmo: u32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub nkgdgkcidjj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25799)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mcadgbaoodl {
    #[prost(float, tag = "1")]
    pub mdmmnleemdf: f32,
    #[prost(uint32, tag = "2")]
    pub entity_id: u32,
    #[prost(float, tag = "4")]
    pub jdilpbnncpg: f32,
    #[prost(enumeration = "Hhkmmkfncdl", tag = "7")]
    pub lpnenejdmhc: i32,
    #[prost(uint32, tag = "14")]
    pub iafhmpdiddm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1329)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lljhakbchfi {
    #[prost(message, optional, tag = "3")]
    pub hlmbfiagfac: ::core::option::Option<Cjnehmhbamo>,
    #[prost(message, optional, tag = "15")]
    pub ggbakekglnf: ::core::option::Option<Cjnehmhbamo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pdklicciobo {
    #[prost(uint32, tag = "1")]
    pub kfaadeeklbj: u32,
    #[prost(uint32, tag = "15")]
    pub gadget_state: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29254)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hhlnofacoca {
    #[prost(message, repeated, tag = "2")]
    pub fagjdjiglon: ::prost::alloc::vec::Vec<Llccbeanifc>,
    #[prost(bool, tag = "4")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "5")]
    pub abimanelkoc: u32,
    #[prost(enumeration = "Lfjlgojmkeh", tag = "10")]
    pub imiogmdokcb: i32,
    #[prost(message, repeated, tag = "13")]
    pub meikgboldgh: ::prost::alloc::vec::Vec<Hfhjkhoplmn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Accdeldokha {
    #[prost(bool, tag = "3")]
    pub empnfmgjopa: bool,
    #[prost(bool, tag = "6")]
    pub gdfoebgclhc: bool,
    #[prost(uint64, tag = "11")]
    pub avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jiieflhjode {
    #[prost(uint32, tag = "14")]
    pub dajhkhflndj: u32,
    #[prost(uint32, repeated, tag = "15")]
    pub lonjoaagemm: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5236)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bifebgepodd {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(bool, tag = "8")]
    pub dijlpfdmong: bool,
    #[prost(uint32, tag = "15")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24744)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gicccplaekd {
    #[prost(uint32, tag = "2")]
    pub offering_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22939)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hflcfmmclgh {
    #[prost(uint32, tag = "5")]
    pub entity_id: u32,
    #[prost(uint32, tag = "6")]
    pub kgconldgjpg: u32,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(468)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hcgehjdiagp {
    #[prost(message, repeated, tag = "2")]
    pub djgmnchcobg: ::prost::alloc::vec::Vec<Gpjghadeoen>,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3985)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Amhafhnkgjm {
    #[prost(uint32, tag = "6")]
    pub himdchgjoal: u32,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(uint32, tag = "8")]
    pub ghlbjahjehf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20157)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kanadljggln {
    #[prost(uint32, tag = "9")]
    pub group_id: u32,
    #[prost(uint32, tag = "3")]
    pub epfcidiklkg: u32,
    #[prost(uint32, tag = "7")]
    pub jimelgdjmlf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20940)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kmjmihkhofi {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28852)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jpffpjinkna {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "13")]
    pub fciibbajibk: ::prost::alloc::vec::Vec<Fnloebiajie>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(916)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lkgmgidopmj {
    #[prost(uint32, tag = "5")]
    pub ghlbjahjehf: u32,
    #[prost(uint32, tag = "8")]
    pub lbeinahahka: u32,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
    #[prost(uint32, tag = "15")]
    pub nilalkpfcco: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6751)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pehdhmeabhc {
    #[prost(string, tag = "10")]
    pub jfaamlfpknm: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct GatherGadgetInfo {
    #[prost(uint32, tag = "1")]
    pub item_id: u32,
    #[prost(bool, tag = "2")]
    pub is_forbid_guest: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8084)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cefhdomhnoe {
    #[prost(uint32, repeated, tag = "7")]
    pub plmddoeifpl: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21691)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fjmcokgplfb {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "10")]
    pub aokadaaebpg: ::prost::alloc::vec::Vec<Gifhmopimph>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9930)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cimcnlaogoc {
    #[prost(message, repeated, tag = "2")]
    pub dnklcncgmkb: ::prost::alloc::vec::Vec<Icikkbechfo>,
    #[prost(uint32, tag = "3")]
    pub ponlpmhonba: u32,
    #[prost(uint32, tag = "5")]
    pub item_id: u32,
    #[prost(bool, tag = "8")]
    pub mdephhnkpoc: bool,
    #[prost(uint32, tag = "11")]
    pub ieloacijmli: u32,
    #[prost(uint32, tag = "12")]
    pub imiogmdokcb: u32,
    #[prost(uint32, tag = "15")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27711)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Acofhhfohan {
    #[prost(int32, tag = "9")]
    pub jcmchgnnlmj: i32,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Onlfefmibla {
    #[prost(bool, tag = "3")]
    pub jlckicdhpdf: bool,
    #[prost(uint32, tag = "4")]
    pub ckphcagonkg: u32,
    #[prost(enumeration = "Fofklbnokdh", tag = "7")]
    pub bplogfoocho: i32,
    #[prost(uint32, tag = "13")]
    pub lkpcdjchbjh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27705)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cmelgmooklo {
    #[prost(uint32, tag = "1")]
    pub level_id: u32,
    #[prost(uint32, tag = "3")]
    pub score: u32,
    #[prost(bool, tag = "9")]
    pub is_finish: bool,
    #[prost(bool, tag = "10")]
    pub omeniamedce: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Johjogecpln {
    #[prost(bool, tag = "1")]
    pub nlpnmnnifpi: bool,
    #[prost(map = "uint32, uint32", tag = "13")]
    pub dbhabfbakae: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct BossChestInfo {
    #[prost(uint32, tag = "1")]
    pub monster_config_id: u32,
    #[prost(uint32, tag = "2")]
    pub resin: u32,
    #[prost(uint32, repeated, tag = "3")]
    pub remain_uid_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "4")]
    pub qualify_uid_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(map = "uint32, message", tag = "5")]
    pub uid_discount_map: ::std::collections::HashMap<u32, WeeklyBossResinDiscountInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22163)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cckncbjddoi {
    #[prost(message, repeated, tag = "11")]
    pub nngfnbcaapi: ::prost::alloc::vec::Vec<Djfnbcgcgcp>,
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Idcfoiddcpc {
    #[prost(uint32, tag = "4")]
    pub cnkpoojgokb: u32,
    #[prost(uint32, tag = "6")]
    pub gnojcafhfch: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24152)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hbgbhofecmf {
    #[prost(uint32, tag = "2")]
    pub epfcidiklkg: u32,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6296)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Opfmoekhbka {
    #[prost(uint32, tag = "9")]
    pub entity_id: u32,
    #[prost(message, optional, tag = "13")]
    pub pheepocgabd: ::core::option::Option<BlossomChestInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24620)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ahgbciafibb {
    #[prost(uint32, tag = "1")]
    pub ikkfchgiheg: u32,
    #[prost(uint32, tag = "13")]
    pub ghlbjahjehf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6660)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dlheacbbfjf {
    #[prost(uint64, tag = "2")]
    pub mcppeknbhfk: u64,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(bool, tag = "13")]
    pub is_add: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3253)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jlgbfbaicfe {
    #[prost(uint32, tag = "12")]
    pub bdfailbengn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5391)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lhfgijhmlfa {
    #[prost(message, optional, tag = "6")]
    pub dbdnmhcjfoc: ::core::option::Option<Mkofgokekil>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jmdipfdjiai {
    #[prost(uint32, tag = "1")]
    pub avatar_id: u32,
    #[prost(uint32, tag = "2")]
    pub costume_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25526)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kknapbhpjmc {
    #[prost(uint32, tag = "2")]
    pub level_id: u32,
    #[prost(uint32, tag = "11")]
    pub progress: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1953)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ocniconjhel {
    #[prost(uint32, tag = "9")]
    pub ghlbjahjehf: u32,
    #[prost(message, optional, tag = "12")]
    pub nmmgkopadfd: ::core::option::Option<CustomGadgetTreeInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28769)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gafhbnokkki {
    #[prost(message, optional, tag = "1")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "13")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "14")]
    pub nedifglmcln: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(16)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pdfepgpjano {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5936)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gdlcdiojeei {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(bool, tag = "6")]
    pub hdnildcefmg: bool,
    #[prost(uint32, tag = "15")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24912)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mbnfmjmgdmn {
    #[prost(uint32, tag = "2")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "5")]
    pub ffhpdcibkod: u32,
    #[prost(message, optional, tag = "10")]
    pub nganceicghc: ::core::option::Option<Ekbdehfiahf>,
    #[prost(bool, tag = "13")]
    pub omeniamedce: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27289)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Apnfkkkbhom {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1409)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Clbompcjdko {
    #[prost(uint32, tag = "3")]
    pub njiodkgiejn: u32,
    #[prost(uint32, tag = "4")]
    pub ifidpcccdim: u32,
    #[prost(uint32, tag = "10")]
    pub mmnaejcmflo: u32,
    #[prost(uint32, tag = "12")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23870)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Edphnmekefe {
    #[prost(message, optional, tag = "7")]
    pub hfciajgdnpl: ::core::option::Option<Fchdblfdcpd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26355)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Abidmmmbmei {
    #[prost(int32, tag = "13")]
    pub retcode: i32,
    #[prost(uint64, repeated, tag = "14")]
    pub avatar_team_guid_list: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint64, tag = "15")]
    pub cur_avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1958)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nnldioklhpb {
    #[prost(uint32, tag = "11")]
    pub eoihallmgal: u32,
    #[prost(uint32, tag = "1")]
    pub dbkkkmekici: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6604)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lobblnbjnog {
    #[prost(uint32, tag = "15")]
    pub fnojnpdbbhd: u32,
    #[prost(uint64, tag = "2")]
    pub avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Baadcbgpefo {
    #[prost(uint32, repeated, tag = "8")]
    pub hjoknpimjdi: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "9")]
    pub eolcifbemka: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "10")]
    pub ooipgfedjmn: u32,
    #[prost(uint32, repeated, tag = "12")]
    pub hlemleaiakp: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24388)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cmaofpnmpeo {
    #[prost(message, optional, tag = "4")]
    pub npfflknkfnd: ::core::option::Option<CustomGadgetTreeInfo>,
    #[prost(uint32, tag = "13")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bjdojchbbgm {
    #[prost(float, tag = "2")]
    pub fdlpbgmpmnl: f32,
    #[prost(float, tag = "3")]
    pub bidjhieenih: f32,
    #[prost(uint32, tag = "7")]
    pub edpmdkokaji: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ebpebjjcfjm {
    #[prost(uint32, tag = "4")]
    pub score: u32,
    #[prost(uint32, tag = "7")]
    pub level_id: u32,
    #[prost(uint32, tag = "11")]
    pub monejdbpolb: u32,
    #[prost(bool, tag = "12")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "14")]
    pub oaicfbdhdhj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23497)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ppdgnkecfkm {
    #[prost(uint32, tag = "1")]
    pub ebhedmcbbpo: u32,
    #[prost(uint32, tag = "2")]
    pub obkmdjgfbfa: u32,
    #[prost(uint32, tag = "3")]
    pub gjlfogbbhpd: u32,
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "7")]
    pub eojiccehgal: u32,
    #[prost(uint32, repeated, tag = "8")]
    pub edfgaddmmjd: ::prost::alloc::vec::Vec<u32>,
    #[prost(map = "uint32, uint32", tag = "10")]
    pub igfhlkhkgai: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "12")]
    pub mcglllfcjob: u32,
    #[prost(uint32, repeated, tag = "14")]
    pub npdfbdoghpo: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "15")]
    pub ifgghinclpa: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Igidjdammbo {
    #[prost(int32, tag = "10")]
    pub clkodfdpdcb: i32,
    #[prost(float, tag = "11")]
    pub nljejpgcpci: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kdohkjmdabi {
    #[prost(bool, tag = "3")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "4")]
    pub amabminfjji: u32,
    #[prost(uint32, tag = "5")]
    pub mannnchdaaj: u32,
    #[prost(uint32, tag = "6")]
    pub level_id: u32,
    #[prost(uint32, tag = "7")]
    pub kngjhmllcnp: u32,
    #[prost(uint32, tag = "10")]
    pub afjghpegkfo: u32,
    #[prost(uint32, tag = "12")]
    pub ogbeplgeeff: u32,
    #[prost(uint32, tag = "14")]
    pub cppdgnjddmo: u32,
    #[prost(uint32, tag = "15")]
    pub bocofcnbkih: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bodjbnimhen {
    #[prost(uint32, repeated, tag = "1")]
    pub hlonpplidcl: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "2")]
    pub ifjmfoclojo: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, optional, tag = "5")]
    pub akgooiibcom: ::core::option::Option<Hopfeeipgjp>,
    #[prost(uint32, repeated, tag = "7")]
    pub jcghnbaeonb: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "12")]
    pub dmagpfepmpg: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mpcbginjkkd {
    #[prost(uint32, tag = "13")]
    pub avatar_id: u32,
    #[prost(bool, tag = "15")]
    pub pgpkmokbfam: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ojiidhlaocc {
    #[prost(bool, tag = "1")]
    pub nifochipgoo: bool,
    #[prost(uint32, tag = "2")]
    pub kngjhmllcnp: u32,
    #[prost(uint32, tag = "7")]
    pub lgghcfbioam: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hmgbjnndkem {
    #[prost(bool, tag = "1")]
    pub acbcepmacil: bool,
    #[prost(enumeration = "Hkjeajebbkk", tag = "3")]
    pub state: i32,
    #[prost(uint32, tag = "4")]
    pub oajoobghagm: u32,
    #[prost(message, optional, tag = "5")]
    pub gdmmbpjhmco: ::core::option::Option<Bffdldjlhoi>,
    #[prost(uint32, repeated, tag = "6")]
    pub tag_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, optional, tag = "7")]
    pub amolhefinek: ::core::option::Option<Nhnljibhpmj>,
    #[prost(uint64, tag = "8")]
    pub mcppeknbhfk: u64,
    #[prost(message, optional, tag = "9")]
    pub jniokocnmll: ::core::option::Option<Koedpmfbbnh>,
    #[prost(uint32, tag = "10")]
    pub jflmafphflj: u32,
    #[prost(uint32, tag = "12")]
    pub iaidjdllflj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ipnpjfncfje {
    #[prost(uint32, tag = "3")]
    pub eaipgemknpo: u32,
    #[prost(bool, tag = "6")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8828)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lkpmobaijig {
    #[prost(message, optional, tag = "12")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "9")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "10")]
    pub scene_id: u32,
    #[prost(enumeration = "Maodfhomkob", tag = "2")]
    pub imiogmdokcb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9583)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ncmmfnmdjmc {
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21648)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iiaeiafdfjf {
    #[prost(uint32, tag = "5")]
    pub johpbfklfki: u32,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(uint32, tag = "11")]
    pub jennmghpfee: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27800)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gcebmafgdgn {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(uint64, tag = "13")]
    pub guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ServantInfo {
    #[prost(uint32, tag = "1")]
    pub master_entity_id: u32,
    #[prost(uint32, tag = "2")]
    pub born_slot_index: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5204)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bnlmbgofamm {
    #[prost(map = "uint32, uint32", tag = "15")]
    pub papckmpipkp: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(925)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gbbdjibnodp {
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27345)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kohcffapdfe {
    #[prost(uint32, tag = "8")]
    pub njddaollmgi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Akkloinfcpm {
    #[prost(uint32, tag = "2")]
    pub avatar_id: u32,
    #[prost(bool, tag = "3")]
    pub gdfoebgclhc: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26982)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kgfpeoabpgk {
    #[prost(uint32, tag = "6")]
    pub adjnolplkoa: u32,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub jdaodglnpgf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9049)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cgbhjifdbdm {
    #[prost(uint32, tag = "6")]
    pub lbgllpjcdog: u32,
    #[prost(uint32, tag = "11")]
    pub dmlnkpnoono: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7534)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iloennmmbnm {
    #[prost(uint32, tag = "5")]
    pub id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7954)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ifagnklbeln {
    #[prost(uint32, tag = "4")]
    pub draft_id: u32,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(bool, tag = "10")]
    pub moaelibphoi: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mnfelhiebkp {
    #[prost(uint32, tag = "2")]
    pub iglnpckdmpj: u32,
    #[prost(map = "uint32, uint32", tag = "3")]
    pub ngdjflnnfih: ::std::collections::HashMap<u32, u32>,
    #[prost(message, optional, tag = "6")]
    pub fgaeincckdk: ::core::option::Option<Olheklkendn>,
    #[prost(uint32, tag = "7")]
    pub klglhaiohna: u32,
    #[prost(uint32, tag = "8")]
    pub ljjbhmhmjfi: u32,
    #[prost(uint32, tag = "10")]
    pub cebblopijec: u32,
    #[prost(uint32, tag = "12")]
    pub score: u32,
    #[prost(message, repeated, tag = "14")]
    pub jahppelnedf: ::prost::alloc::vec::Vec<Hfhjkhoplmn>,
    #[prost(float, tag = "15")]
    pub damage: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1396)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fhcnmihpeaf {
    #[prost(uint32, tag = "6")]
    pub source_entity_id: u32,
    #[prost(uint32, tag = "1")]
    pub target_entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6903)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nhpifcmjejh {
    #[prost(bool, tag = "1")]
    pub pgfgnhmkhdm: bool,
    #[prost(uint32, repeated, tag = "12")]
    pub phfkgngknld: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20115)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eomkilinmkn {
    #[prost(string, tag = "1")]
    pub bhflpmjeckb: ::prost::alloc::string::String,
    #[prost(uint32, tag = "7")]
    pub ghlbjahjehf: u32,
    #[prost(uint32, tag = "10")]
    pub gadget_id: u32,
    #[prost(uint32, tag = "13")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3943)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cfcoognbdop {
    #[prost(uint32, tag = "7")]
    pub pieimacpkol: u32,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7105)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hiblkjcgpal {
    #[prost(message, optional, tag = "9")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "1")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "4")]
    pub kngbdmdcnhk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lcfljaaibio {
    #[prost(uint32, tag = "7")]
    pub clcbaeodibo: u32,
    #[prost(uint32, tag = "11")]
    pub mklebmojiac: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hdpfodicaan {
    #[prost(message, repeated, tag = "5")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Odcehfpdnek>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1391)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hggppafbckn {
    #[prost(string, tag = "6")]
    pub mkhbkfdglnd: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub flifgjlkjna: ::prost::alloc::string::String,
    #[prost(uint64, tag = "14")]
    pub fbgekpgdibj: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(45)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dkdhhecgnhc {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27743)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mgnmkgmlcjl {
    #[prost(bool, tag = "4")]
    pub ddlklkogood: bool,
    #[prost(message, optional, tag = "8")]
    pub mfigidkajbd: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "12")]
    pub ibeakhhnohb: ::core::option::Option<Hcjgifnjppj>,
    #[prost(uint32, tag = "14")]
    pub cilmghamedd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28800)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bemdcjaebmj {
    #[prost(message, repeated, tag = "14")]
    pub info_list: ::prost::alloc::vec::Vec<Cggeldlhdaj>,
    #[prost(uint32, repeated, tag = "1195")]
    pub admiagbhjmo: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pfnkkmioaee {
    #[prost(message, optional, tag = "3")]
    pub gmjagibjeac: ::core::option::Option<BreakoutAction>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8453)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dknjcnekiaf {
    #[prost(uint32, tag = "11")]
    pub fppfkjelhdo: u32,
    #[prost(uint32, tag = "7")]
    pub kegocippfin: u32,
    #[prost(enumeration = "Nkkkbohmanl", tag = "13")]
    pub kgconldgjpg: i32,
    #[prost(uint32, tag = "12")]
    pub ghlbjahjehf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MpLevelEntityInfo {
    #[prost(message, optional, tag = "4")]
    pub ability_info: ::core::option::Option<AbilitySyncStateInfo>,
    #[prost(uint32, tag = "9")]
    pub entity_id: u32,
    #[prost(uint32, tag = "14")]
    pub authority_peer_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gldpgoifkkj {
    #[prost(uint32, tag = "1")]
    pub olbifnbmhon: u32,
    #[prost(uint32, tag = "5")]
    pub nbccpjcoclf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6314)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gnmaiikgcoe {
    #[prost(uint32, repeated, tag = "7")]
    pub cobeedjkikj: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "2")]
    pub mp_play_id: u32,
    #[prost(uint32, tag = "12")]
    pub oajoobghagm: u32,
    #[prost(uint32, tag = "13")]
    pub nekecfnahom: u32,
    #[prost(enumeration = "Ckleegmpdgn", tag = "4")]
    pub agmhmdhefkd: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jpkegghaecg {
    #[prost(uint32, tag = "3")]
    pub uid: u32,
    #[prost(uint32, tag = "8")]
    pub avatar_id: u32,
    #[prost(map = "uint32, uint32", tag = "9")]
    pub gbhbblghdlj: ::std::collections::HashMap<u32, u32>,
    #[prost(string, tag = "10")]
    pub dkhhpajbjif: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "11")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
    #[prost(string, tag = "13")]
    pub bmfkoonmmee: ::prost::alloc::string::String,
    #[prost(string, tag = "14")]
    pub omknbnmebik: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6669)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bihcoagaffk {
    #[prost(message, repeated, tag = "5")]
    pub ggmlmgcijbn: ::prost::alloc::vec::Vec<Nahdmondebl>,
    #[prost(bool, tag = "7")]
    pub gcacpomlgmj: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nahdmondebl {
    #[prost(uint32, tag = "9")]
    pub ibionjbkddb: u32,
    #[prost(uint32, repeated, tag = "11")]
    pub mnchcggmlpa: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28717)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ffkbnknkahf {
    #[prost(uint32, tag = "1")]
    pub ibakdfnpgmc: u32,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(bool, tag = "11")]
    pub jmgeocmbekf: bool,
    #[prost(uint32, tag = "15")]
    pub bikoakjlpbe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5263)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fnlgiccpckc {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Niajpbbjmjb {
    #[prost(uint32, tag = "3")]
    pub oelcnlojhhe: u32,
    #[prost(uint32, tag = "4")]
    pub gfjpmhjoefj: u32,
    #[prost(uint32, tag = "10")]
    pub param: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Abcmjcgajmd {
    #[prost(uint32, tag = "3")]
    pub kegocippfin: u32,
    #[prost(uint32, tag = "4")]
    pub ajmmaeegjea: u32,
    #[prost(uint32, tag = "8")]
    pub lffnhmhlech: u32,
    #[prost(uint32, tag = "9")]
    pub level: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mogbomkepkn {
    #[prost(map = "uint32, enumeration(Ekdaephbgii)", tag = "2")]
    pub clbeeakhijb: ::std::collections::HashMap<u32, i32>,
    #[prost(uint32, tag = "10")]
    pub ghokenboone: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lioffogfcgc {
    #[prost(uint32, tag = "6")]
    pub lnbgblbmadj: u32,
    #[prost(string, tag = "7")]
    pub name: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27531)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jhfnhopneak {
    #[prost(uint32, tag = "15")]
    pub ppbjohamleb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29730)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fibnhhpkmfd {
    #[prost(uint32, tag = "1")]
    pub pmldnfnnjam: u32,
    #[prost(uint32, tag = "2")]
    pub score: u32,
    #[prost(bool, tag = "5")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "6")]
    pub dccchkbighp: u32,
    #[prost(bool, tag = "7")]
    pub kodnaagljdl: bool,
    #[prost(uint32, tag = "11")]
    pub level_id: u32,
    #[prost(enumeration = "Lfjlgojmkeh", tag = "15")]
    pub imiogmdokcb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22139)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dpooeonlplp {
    #[prost(uint32, tag = "1")]
    pub dkeanhlgfeg: u32,
    #[prost(bool, tag = "3")]
    pub dnllknmgiid: bool,
    #[prost(uint32, tag = "7")]
    pub group_id: u32,
    #[prost(bool, tag = "8")]
    pub heegpomdgmm: bool,
    #[prost(bool, tag = "13")]
    pub dfelhmnjkkh: bool,
    #[prost(bool, tag = "14")]
    pub hfhdmjmgoch: bool,
    #[prost(uint32, tag = "15")]
    pub gkiooipfkan: u32,
    #[prost(message, repeated, tag = "61")]
    pub lanadojcbfc: ::prost::alloc::vec::Vec<Dhbcejobgfg>,
    #[prost(message, repeated, tag = "272")]
    pub inopfnjgmgg: ::prost::alloc::vec::Vec<Gonnebehpce>,
    #[prost(message, repeated, tag = "628")]
    pub ieicckjighh: ::prost::alloc::vec::Vec<Nmaeboppgbn>,
    #[prost(message, repeated, tag = "669")]
    pub egheppoloja: ::prost::alloc::vec::Vec<Jlkjgaphbkj>,
    #[prost(message, repeated, tag = "855")]
    pub pnjjkicdppn: ::prost::alloc::vec::Vec<Beobfjdmccj>,
    #[prost(message, repeated, tag = "1145")]
    pub dobelgpfpjl: ::prost::alloc::vec::Vec<Lpcbhdppgpe>,
    #[prost(message, repeated, tag = "1185")]
    pub ghemimnlkig: ::prost::alloc::vec::Vec<Lpcbhdppgpe>,
    #[prost(uint32, repeated, tag = "1463")]
    pub jkeponhcpca: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "2014")]
    pub pkbnheecgnp: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29918)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Inamlbgjpnd {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "5")]
    pub mgmdonicfib: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9842)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Feelllieefe {
    #[prost(uint32, tag = "2")]
    pub amoheapplca: u32,
    #[prost(map = "uint32, message", tag = "5")]
    pub fmiebpkjjpj: ::std::collections::HashMap<u32, Ofbhcgggggn>,
    #[prost(enumeration = "PlayerDieType", tag = "6")]
    pub die_type: i32,
    #[prost(uint32, tag = "7")]
    pub mibhhjedepe: u32,
    #[prost(uint32, tag = "8")]
    pub hiacpelkdmp: u32,
    #[prost(message, optional, tag = "9")]
    pub cainbbibgeb: ::core::option::Option<AbilityString>,
    #[prost(uint32, tag = "11")]
    pub fdlpbgmpmnl: u32,
    #[prost(uint32, tag = "12")]
    pub oajoobghagm: u32,
    #[prost(oneof = "feelllieefe::Entity", tags = "10, 15")]
    pub entity: ::core::option::Option<feelllieefe::Entity>,
}
/// Nested message and enum types in `FEELLLIEEFE`.
pub mod feelllieefe {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Entity {
        #[prost(uint32, tag = "10")]
        MonsterId(u32),
        #[prost(uint32, tag = "15")]
        GadgetId(u32),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1810)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mfbgdfcdjep {
    #[prost(bool, tag = "6")]
    pub hcjfdjhilam: bool,
    #[prost(message, repeated, tag = "8")]
    pub fagjdjiglon: ::prost::alloc::vec::Vec<Fdamhalddli>,
    #[prost(uint32, tag = "9")]
    pub level_id: u32,
    #[prost(bool, tag = "12")]
    pub pdjeeammkjd: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28839)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Apifbaejicd {
    #[prost(uint32, tag = "1")]
    pub lhkpdiddcme: u32,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(uint32, tag = "9")]
    pub holalickcpe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27429)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lmcofblgbob {
    #[prost(uint32, tag = "2")]
    pub fmfbefmgibb: u32,
    #[prost(uint32, tag = "13")]
    pub oajoobghagm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25802)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Igcbmmkleip {
    #[prost(uint32, tag = "7")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9153)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Edihhbbagmg {
    #[prost(uint32, tag = "1")]
    pub parent_quest_id: u32,
    #[prost(uint32, tag = "9")]
    pub pjabefajbgb: u32,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub hoinfbdgefk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lddkmjdljaf {
    #[prost(uint32, tag = "1")]
    pub element_type: u32,
    #[prost(message, repeated, tag = "10")]
    pub weapon_list: ::prost::alloc::vec::Vec<Chgnhdchndd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mahblnhancc {
    #[prost(uint32, tag = "1")]
    pub cphmidoniph: u32,
    #[prost(uint32, tag = "6")]
    pub bkphjkhilod: u32,
    #[prost(message, repeated, tag = "11")]
    pub oiiplhcbiok: ::prost::alloc::vec::Vec<Pmnbpepijik>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21257)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hmleggbjckf {
    #[prost(uint32, repeated, tag = "1")]
    pub oeohfonlega: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "6")]
    pub egahdmmdkeh: ::prost::alloc::vec::Vec<Ipkaainfgnb>,
    #[prost(uint32, tag = "9")]
    pub dnbefljlamb: u32,
    #[prost(bool, tag = "11")]
    pub hdglggboobh: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3856)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cibfmbcoafc {
    #[prost(uint32, tag = "1")]
    pub eaipgemknpo: u32,
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub icidpjhbdji: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Npjpiooloko {
    #[prost(uint32, tag = "2")]
    pub jcmchgnnlmj: u32,
    #[prost(bool, tag = "3")]
    pub pmjlllfophk: bool,
    #[prost(uint32, tag = "5")]
    pub aoikhjcanfc: u32,
    #[prost(uint32, tag = "8")]
    pub progress: u32,
    #[prost(uint32, tag = "11")]
    pub kccpehfdkjg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22278)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jkcbpobffke {
    #[prost(message, repeated, tag = "8")]
    pub ifipfmljpgc: ::prost::alloc::vec::Vec<Liamhbehdad>,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29000)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Akgceejbgcf {
    #[prost(uint32, tag = "7")]
    pub oajoobghagm: u32,
    #[prost(uint32, tag = "6")]
    pub cell_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ebljjgfccjf {
    #[prost(uint32, tag = "4")]
    pub level_id: u32,
    #[prost(uint32, tag = "5")]
    pub bodiejclgmb: u32,
    #[prost(uint32, tag = "6")]
    pub eaipgemknpo: u32,
    #[prost(uint32, repeated, tag = "7")]
    pub fgopnkbdfck: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "8")]
    pub pmjgjnilmbp: ::prost::alloc::vec::Vec<Idodjeokcpo>,
    #[prost(bool, tag = "9")]
    pub omeniamedce: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(555)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Agcnjnmbnem {
    #[prost(uint32, tag = "3")]
    pub entity_id: u32,
    #[prost(bool, tag = "4")]
    pub is_add: bool,
    #[prost(string, tag = "5")]
    pub dpnadjbahem: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Piggmfflihd {
    #[prost(message, repeated, tag = "1")]
    pub ehpkeglekkf: ::prost::alloc::vec::Vec<Njflhdmnllg>,
    #[prost(uint32, tag = "9")]
    pub mndgbjmpjjn: u32,
    #[prost(enumeration = "Jbgnlaedbhj", tag = "12")]
    pub dfelfcmhlml: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Njflhdmnllg {
    #[prost(uint32, repeated, tag = "3")]
    pub mpngaflhkih: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "4")]
    pub jahppelnedf: ::prost::alloc::vec::Vec<Hfhjkhoplmn>,
    #[prost(uint32, tag = "5")]
    pub uid: u32,
    #[prost(uint32, tag = "6")]
    pub cjdimmaimho: u32,
    #[prost(message, optional, tag = "8")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
    #[prost(string, tag = "11")]
    pub omknbnmebik: ::prost::alloc::string::String,
    #[prost(uint32, tag = "12")]
    pub score: u32,
    #[prost(string, tag = "15")]
    pub efajihmnobk: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2404)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pckbkhagopa {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MonsterRoute {
    #[prost(message, repeated, tag = "1")]
    pub route_points: ::prost::alloc::vec::Vec<RoutePoint>,
    #[prost(uint32, tag = "2")]
    pub speed_level: u32,
    #[prost(uint32, tag = "3")]
    pub route_type: u32,
    #[prost(float, tag = "4")]
    pub arrive_range: f32,
    #[prost(bool, tag = "5")]
    pub mnifahpfiko: bool,
    #[prost(bool, tag = "6")]
    pub gjaifgloaaj: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27608)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jimmfcnggbh {
    #[prost(bool, tag = "9")]
    pub cdbajhkaeii: bool,
    #[prost(bool, tag = "4")]
    pub nmappnfopjk: bool,
    #[prost(uint32, tag = "14")]
    pub parent_quest_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5496)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AvatarTeamUpdateNotify {
    #[prost(uint64, repeated, tag = "4")]
    pub temp_avatar_guid_list: ::prost::alloc::vec::Vec<u64>,
    #[prost(map = "uint32, message", tag = "12")]
    pub avatar_team_map: ::std::collections::HashMap<u32, AvatarTeam>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gjjchdfdjpl {
    #[prost(int32, tag = "1")]
    pub leffkphmicb: i32,
    #[prost(uint32, tag = "3")]
    pub start_time: u32,
    #[prost(bool, tag = "9")]
    pub is_paused: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26862)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pbkkcdkeknc {
    #[prost(uint32, tag = "5")]
    pub pcmildfjbnp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eppegdiefjn {
    #[prost(uint32, tag = "1")]
    pub avatar_id: u32,
    #[prost(uint32, tag = "2")]
    pub level: u32,
    #[prost(uint32, tag = "3")]
    pub costume_id: u32,
    #[prost(uint32, tag = "4")]
    pub jegiijcnafn: u32,
    #[prost(uint32, tag = "5")]
    pub bbpgijfjhen: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ekoeophmbjo {
    #[prost(uint32, tag = "6")]
    pub cjhbdnhklkl: u32,
    #[prost(uint32, tag = "13")]
    pub diepeoncoeh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8251)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cmfijjlacef {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20282)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pjfgiopnela {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20475)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nmpodkomagd {
    #[prost(bool, tag = "1")]
    pub dacdkgbnbfm: bool,
    #[prost(uint32, tag = "2")]
    pub imiogmdokcb: u32,
    #[prost(message, repeated, tag = "4")]
    pub item_list: ::prost::alloc::vec::Vec<Nlcdhfnmhld>,
    #[prost(message, optional, tag = "6")]
    pub position: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "7")]
    pub pjabefajbgb: u32,
    #[prost(bool, tag = "9")]
    pub kifdlgcohen: bool,
    #[prost(bool, tag = "11")]
    pub bapggiknllh: bool,
    #[prost(message, repeated, tag = "12")]
    pub olaeljfcmmn: ::prost::alloc::vec::Vec<Nlcdhfnmhld>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5033)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PlayerLoginRsp {
    #[prost(map = "string, int32", tag = "1")]
    pub panjhfehglk: ::std::collections::HashMap<::prost::alloc::string::String, i32>,
    #[prost(bool, tag = "3")]
    pub is_relogin: bool,
    #[prost(uint32, tag = "4")]
    pub client_data_version: u32,
    #[prost(uint32, tag = "5")]
    pub client_silence_data_version: u32,
    #[prost(bytes = "vec", tag = "6")]
    pub jfjkedfafpm: ::prost::alloc::vec::Vec<u8>,
    #[prost(int32, tag = "7")]
    pub hanlnhaofom: i32,
    #[prost(bool, tag = "8")]
    pub dhnkfdjhdbf: bool,
    #[prost(uint64, tag = "9")]
    pub login_rand: u64,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
    #[prost(string, tag = "11")]
    pub game_biz: ::prost::alloc::string::String,
    #[prost(uint32, tag = "12")]
    pub ikccnhpcmkl: u32,
    #[prost(bool, tag = "14")]
    pub djchbdapkob: bool,
    #[prost(uint32, tag = "15")]
    pub target_uid: u32,
    #[prost(string, tag = "28")]
    pub hlghfffpnbb: ::prost::alloc::string::String,
    #[prost(string, tag = "294")]
    pub nhhmoabafhn: ::prost::alloc::string::String,
    #[prost(string, tag = "298")]
    pub msg: ::prost::alloc::string::String,
    #[prost(bool, tag = "351")]
    pub mflnkipgbhh: bool,
    #[prost(string, tag = "355")]
    pub hohoggjoaop: ::prost::alloc::string::String,
    #[prost(string, tag = "383")]
    pub client_version_suffix: ::prost::alloc::string::String,
    #[prost(double, tag = "403")]
    pub total_tick_time: f64,
    #[prost(string, tag = "726")]
    pub client_silence_version_suffix: ::prost::alloc::string::String,
    #[prost(bool, tag = "765")]
    pub jjaffhdcefg: bool,
    #[prost(bool, tag = "813")]
    pub oeenkbpdlcb: bool,
    #[prost(uint32, tag = "1066")]
    pub ghejilppkal: u32,
    #[prost(bool, tag = "1147")]
    pub pjlhhciilfb: bool,
    #[prost(bool, tag = "1154")]
    pub dfhnplkjgmf: bool,
    #[prost(message, optional, tag = "1209")]
    pub res_version_config: ::core::option::Option<ResVersionConfig>,
    #[prost(message, optional, tag = "1229")]
    pub cnoneikagem: ::core::option::Option<StopServerInfo>,
    #[prost(bytes = "vec", tag = "1363")]
    pub fdedhcekmip: ::prost::alloc::vec::Vec<u8>,
    #[prost(message, optional, tag = "1473")]
    pub next_res_version_config: ::core::option::Option<ResVersionConfig>,
    #[prost(string, tag = "1513")]
    pub next_resource_url: ::prost::alloc::string::String,
    #[prost(message, repeated, tag = "1544")]
    pub amknnjcjhcj: ::prost::alloc::vec::Vec<Mebchbgnffa>,
    #[prost(string, tag = "1723")]
    pub kipgkkmdakn: ::prost::alloc::string::String,
    #[prost(string, tag = "1809")]
    pub ohjnpjckgeg: ::prost::alloc::string::String,
    #[prost(map = "uint32, message", tag = "1818")]
    pub gmcbmlclafd: ::std::collections::HashMap<u32, Nkfifdhjbcc>,
    #[prost(message, repeated, tag = "1975")]
    pub mmfhpempfni: ::prost::alloc::vec::Vec<Danpjhichom>,
    #[prost(bool, tag = "1983")]
    pub ngiomiknncl: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23022)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mdkfgcojmkl {
    #[prost(uint32, tag = "1")]
    pub level_id: u32,
    #[prost(bool, tag = "2")]
    pub lhcpmanhdno: bool,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7111)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bdhjjkopkfj {
    #[prost(message, optional, tag = "3")]
    pub deoeeiamgke: ::core::option::Option<Djnokaemjai>,
    #[prost(uint32, tag = "13")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9036)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Goldfehoddj {
    #[prost(uint32, tag = "9")]
    pub fkladmolana: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7854)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Knahepngeef {
    #[prost(message, repeated, tag = "10")]
    pub pmjgjnilmbp: ::prost::alloc::vec::Vec<Bffaldpokfe>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(271)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hinefjadegf {
    #[prost(uint32, tag = "7")]
    pub uid: u32,
    #[prost(uint32, tag = "10")]
    pub scene_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct BreakoutSpawnPoint {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub brick_suite_id: u32,
    #[prost(message, repeated, tag = "3")]
    pub spawned_brick_list: ::prost::alloc::vec::Vec<BreakoutPhysicalObject>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9341)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ldipihmidjk {
    #[prost(uint32, tag = "6")]
    pub mp_play_id: u32,
    #[prost(bool, tag = "7")]
    pub aoapppjoghc: bool,
    #[prost(uint32, tag = "14")]
    pub jlohajnkaei: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25826)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fhleohomkgd {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2958)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dhbbpohmjjn {
    #[prost(enumeration = "Aipiihkmogo", tag = "4")]
    pub blhdmdokalp: i32,
    #[prost(enumeration = "Ainahdonfeo", tag = "7")]
    pub fbfdaklpefb: i32,
    #[prost(uint32, repeated, tag = "12")]
    pub mdcjijlnkhl: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pcnomcdhbia {
    #[prost(uint32, tag = "6")]
    pub nknkfmjmfnd: u32,
    #[prost(string, tag = "7")]
    pub name: ::prost::alloc::string::String,
    #[prost(uint32, repeated, tag = "9")]
    pub hnljpnmjpic: ::prost::alloc::vec::Vec<u32>,
    #[prost(enumeration = "Phggeopnmbp", tag = "10")]
    pub r#type: i32,
    #[prost(uint32, tag = "12")]
    pub glciaekdpgl: u32,
    #[prost(oneof = "pcnomcdhbia::Detail", tags = "187, 195, 287")]
    pub detail: ::core::option::Option<pcnomcdhbia::Detail>,
}
/// Nested message and enum types in `PCNOMCDHBIA`.
pub mod pcnomcdhbia {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(message, tag = "187")]
        Timer(super::Gjjchdfdjpl),
        #[prost(message, tag = "195")]
        Countdown(super::Mkjgcfhiihn),
        #[prost(message, tag = "287")]
        Normal(super::Kicdefnonla),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4057)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eiahlkkhgfm {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(enumeration = "Kpfoblalblc", tag = "14")]
    pub daakpcoabep: i32,
    #[prost(oneof = "eiahlkkhgfm::Dapnlkepgjn", tags = "1")]
    pub dapnlkepgjn: ::core::option::Option<eiahlkkhgfm::Dapnlkepgjn>,
}
/// Nested message and enum types in `EIAHLKKHGFM`.
pub mod eiahlkkhgfm {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Dapnlkepgjn {
        #[prost(message, tag = "1")]
        MusicInfo(super::Peomgjehone),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dfbabjjigbb {
    #[prost(bool, tag = "2")]
    pub gianjmcbaec: bool,
    #[prost(bool, tag = "4")]
    pub lailpnooajc: bool,
    #[prost(fixed32, tag = "6")]
    pub nmikcmlkndm: u32,
    #[prost(uint32, tag = "8")]
    pub emneihdpfpm: u32,
    #[prost(uint32, tag = "9")]
    pub fbejhlodcfn: u32,
    #[prost(fixed32, tag = "11")]
    pub hgbbglkplfi: u32,
    #[prost(message, repeated, tag = "14")]
    pub bcedojdonop: ::prost::alloc::vec::Vec<Jcbdochfokj>,
    #[prost(uint32, tag = "15")]
    pub maejlipgdhg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pkjmpcpeggo {
    #[prost(uint32, tag = "1")]
    pub avatar_id: u32,
    #[prost(uint32, tag = "2")]
    pub costume_id: u32,
    #[prost(uint32, tag = "3")]
    pub iaciifabjbj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Elhhgieoicp {
    #[prost(string, tag = "4")]
    pub omknbnmebik: ::prost::alloc::string::String,
    #[prost(uint32, tag = "6")]
    pub odcpaeconnd: u32,
    #[prost(string, tag = "11")]
    pub efajihmnobk: ::prost::alloc::string::String,
    #[prost(uint32, tag = "12")]
    pub uid: u32,
    #[prost(message, repeated, tag = "13")]
    pub jahppelnedf: ::prost::alloc::vec::Vec<Hfhjkhoplmn>,
    #[prost(message, optional, tag = "14")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21425)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cfohgceojjg {
    #[prost(uint32, repeated, tag = "7")]
    pub jggobknpmfj: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub hggehlmhkmp: u32,
    #[prost(uint32, tag = "15")]
    pub ajjeblpnahp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3076)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eobpjmmejdb {
    #[prost(uint32, repeated, tag = "4")]
    pub lhclchmoiap: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "7")]
    pub cijhpbpegee: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, optional, tag = "9")]
    pub oiajdljoipd: ::core::option::Option<Hjiiipeeiim>,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pdalamdhiob {
    #[prost(uint32, repeated, tag = "1")]
    pub skill_id_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "10")]
    pub skill_depot_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22540)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eghjbcgagki {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1735)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Blgpbgcmggj {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9060)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bgaicgjmeic {
    #[prost(uint64, tag = "14")]
    pub avatar_guid: u64,
    #[prost(uint32, tag = "7")]
    pub item_id: u32,
    #[prost(uint32, tag = "4")]
    pub count: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25645)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gkiodckafon {
    #[prost(uint64, repeated, tag = "2")]
    pub njcafaagmjk: ::prost::alloc::vec::Vec<u64>,
    #[prost(message, repeated, tag = "13")]
    pub bnjojbopmfj: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(uint64, tag = "3")]
    pub aghciclcick: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hoblmoagllh {
    #[prost(uint32, tag = "2")]
    pub hohcjocigok: u32,
    #[prost(string, tag = "3")]
    pub efajihmnobk: ::prost::alloc::string::String,
    #[prost(uint32, tag = "6")]
    pub odcpaeconnd: u32,
    #[prost(string, tag = "7")]
    pub omknbnmebik: ::prost::alloc::string::String,
    #[prost(message, repeated, tag = "8")]
    pub jahppelnedf: ::prost::alloc::vec::Vec<Hfhjkhoplmn>,
    #[prost(uint32, tag = "13")]
    pub uid: u32,
    #[prost(int64, tag = "14")]
    pub param: i64,
    #[prost(message, optional, tag = "15")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Baijndcgabo {
    #[prost(uint32, tag = "2")]
    pub jkkhpnphgea: u32,
    #[prost(uint32, tag = "3")]
    pub njiodkgiejn: u32,
    #[prost(uint32, tag = "4")]
    pub mmnaejcmflo: u32,
    #[prost(bool, tag = "7")]
    pub mpfldfdogai: bool,
    #[prost(uint32, tag = "8")]
    pub ifidpcccdim: u32,
    #[prost(message, repeated, tag = "9")]
    pub emipfngkdpk: ::prost::alloc::vec::Vec<Jbiioanajdi>,
    #[prost(uint32, tag = "13")]
    pub akfcofeoipo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9246)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aepfmapehgd {
    #[prost(uint32, tag = "1")]
    pub point_id: u32,
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "3")]
    pub algddkoleom: u32,
    #[prost(message, repeated, tag = "12")]
    pub lhikancihpg: ::prost::alloc::vec::Vec<Pnfgmcacfni>,
    #[prost(message, repeated, tag = "13")]
    pub ibaoldbfomp: ::prost::alloc::vec::Vec<Pinogoecnfa>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7791)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dcgochjopne {
    #[prost(uint32, tag = "1")]
    pub ajjeblpnahp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22566)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Djmodlpffjd {
    #[prost(uint32, tag = "8")]
    pub ppbjohamleb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AvatarFetterInfo {
    #[prost(uint32, tag = "1")]
    pub exp_number: u32,
    #[prost(uint32, tag = "2")]
    pub exp_level: u32,
    #[prost(uint32, repeated, tag = "3")]
    pub open_id_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "4")]
    pub finish_id_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "5")]
    pub rewarded_fetter_level_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "6")]
    pub fetter_list: ::prost::alloc::vec::Vec<FetterData>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22097)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Inkopdcnnjn {
    #[prost(uint32, tag = "3")]
    pub egepgiogikj: u32,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(uint32, tag = "8")]
    pub nbaajidhgbn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6649)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cngkdbkgllb {
    #[prost(uint32, tag = "1")]
    pub poaficpfpcj: u32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nnmgccbcfha {
    #[prost(message, optional, tag = "3")]
    pub akgooiibcom: ::core::option::Option<Hopfeeipgjp>,
    #[prost(uint32, tag = "6")]
    pub hmffaphmbgc: u32,
    #[prost(bool, tag = "14")]
    pub hhdnnmnhnci: bool,
    #[prost(oneof = "nnmgccbcfha::Nbdofgcpfej", tags = "4, 5")]
    pub nbdofgcpfej: ::core::option::Option<nnmgccbcfha::Nbdofgcpfej>,
}
/// Nested message and enum types in `NNMGCCBCFHA`.
pub mod nnmgccbcfha {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Nbdofgcpfej {
        #[prost(message, tag = "4")]
        ChestInfo(super::Efhigekejjo),
        #[prost(message, tag = "5")]
        ShopInfo(super::Bogmlieedgc),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(856)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Akenfnonkof {
    #[prost(message, optional, tag = "9")]
    pub dbdnmhcjfoc: ::core::option::Option<Npjpiooloko>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lnjjakbbcho {
    #[prost(message, repeated, tag = "7")]
    pub agcilnpmblb: ::prost::alloc::vec::Vec<Ombeifnnedf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mlconcinkjg {
    #[prost(uint32, tag = "6")]
    pub bnddagfahhn: u32,
    #[prost(enumeration = "Jkobefdemme", tag = "8")]
    pub aidpdnkddnf: i32,
    #[prost(uint32, tag = "9")]
    pub lklnonpimbp: u32,
    #[prost(uint32, tag = "12")]
    pub dccchkbighp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25344)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dnjphkhdekp {
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4323)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jdocipndgbj {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(uint32, tag = "9")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nmhgcoajhhd {
    #[prost(uint32, tag = "1")]
    pub jcmchgnnlmj: u32,
    #[prost(uint32, tag = "4")]
    pub group_id: u32,
    #[prost(uint32, tag = "5")]
    pub cdefcjjphjd: u32,
    #[prost(message, optional, tag = "14")]
    pub pos: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8309)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Idncndfcoif {
    #[prost(uint32, tag = "2")]
    pub pdeihlekapj: u32,
    #[prost(uint32, tag = "3")]
    pub penjgiijfpg: u32,
    #[prost(uint32, tag = "4")]
    pub cclbephgcek: u32,
    #[prost(uint32, tag = "6")]
    pub fcpecpmogoj: u32,
    #[prost(uint32, tag = "8")]
    pub khhinalflhp: u32,
    #[prost(uint32, tag = "11")]
    pub dnhlmkmlppb: u32,
    #[prost(uint32, tag = "12")]
    pub nmbonkfllie: u32,
    #[prost(uint32, tag = "15")]
    pub ohdengdfndp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5461)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Akigenamjkp {
    #[prost(uint32, tag = "12")]
    pub lmebmmbegkm: u32,
    #[prost(bool, tag = "14")]
    pub ajmcnjpfkod: bool,
    #[prost(uint32, tag = "3")]
    pub pophcjepfbo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jkikpomkppi {
    #[prost(uint32, tag = "4")]
    pub pdnlmnikeon: u32,
    #[prost(uint32, tag = "10")]
    pub hggehlmhkmp: u32,
    #[prost(uint32, tag = "13")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8463)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pnklfhefjhf {
    #[prost(uint32, tag = "10")]
    pub pieimacpkol: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6325)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pknmhepkfcb {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "3")]
    pub level: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct FetterData {
    #[prost(uint32, tag = "1")]
    pub fetter_id: u32,
    #[prost(uint32, tag = "2")]
    pub fetter_state: u32,
    #[prost(uint32, repeated, tag = "3")]
    pub cond_index_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Loemgpfcbbi {
    #[prost(message, repeated, tag = "2")]
    pub fhlcfpfafic: ::prost::alloc::vec::Vec<Piamlhkgkee>,
    #[prost(uint32, repeated, tag = "3")]
    pub knnondagimb: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "9")]
    pub daeciffcaop: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "10")]
    pub nccmfolepac: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "13")]
    pub jgjmhggkffa: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20908)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bejhldmoimp {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint32, tag = "5")]
    pub level_id: u32,
    #[prost(message, repeated, tag = "8")]
    pub efcdelgmmkg: ::prost::alloc::vec::Vec<AvatarInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gkggkmknkpf {
    #[prost(uint32, tag = "15")]
    pub pggnpbhcfni: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27738)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Phajhimikgi {
    #[prost(message, optional, tag = "8")]
    pub monster_route: ::core::option::Option<MonsterRoute>,
    #[prost(uint32, tag = "9")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bcpajkbdnhg {
    #[prost(bool, tag = "2")]
    pub mkinchcgjim: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2746)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lfhnholhmdh {
    #[prost(uint32, tag = "13")]
    pub point_id: u32,
    #[prost(uint32, tag = "4")]
    pub scene_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24780)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetAreaExplorePointRsp {
    #[prost(uint32, repeated, tag = "1")]
    pub area_id_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "6")]
    pub explore_point_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2050)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Imaieinpadj {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jcmlpbaemdc {
    #[prost(uint32, tag = "4")]
    pub lchbeahgheo: u32,
    #[prost(bool, tag = "9")]
    pub adicccllcbf: bool,
    #[prost(uint32, tag = "10")]
    pub mkcgmmganlk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5701)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gknbjmdllfh {
    #[prost(message, optional, tag = "15")]
    pub agjcllhfkgg: ::core::option::Option<Hgbhcjgllkb>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28871)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct GetSceneAreaReq {
    #[prost(uint32, tag = "15")]
    pub belong_uid: u32,
    #[prost(uint32, tag = "10")]
    pub scene_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AbilityMixinRecoverInfo {
    #[prost(uint32, tag = "3")]
    pub local_id: u32,
    #[prost(uint32, repeated, tag = "4")]
    pub data_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "5")]
    pub is_serverbuff_modifier: bool,
    #[prost(message, repeated, tag = "6")]
    pub massive_prop_list: ::prost::alloc::vec::Vec<MassivePropSyncInfo>,
    #[prost(message, optional, tag = "7")]
    pub breakout_snap_shot: ::core::option::Option<BreakoutSnapShot>,
    #[prost(message, optional, tag = "8")]
    pub dbaidabicmg: ::core::option::Option<Najepfpoeda>,
    #[prost(oneof = "ability_mixin_recover_info::Ehhheliifgg", tags = "1, 2")]
    pub ehhheliifgg: ::core::option::Option<ability_mixin_recover_info::Ehhheliifgg>,
}
/// Nested message and enum types in `AbilityMixinRecoverInfo`.
pub mod ability_mixin_recover_info {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Ehhheliifgg {
        #[prost(uint32, tag = "1")]
        InstancedAbilityId(u32),
        #[prost(uint32, tag = "2")]
        InstancedModifierId(u32),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fgjfcigobcn {
    #[prost(message, optional, tag = "2")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "15")]
    pub pos: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20827)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ikcelopklpj {
    #[prost(uint32, repeated, tag = "9")]
    pub njpebemeifi: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "1")]
    pub oijccdbdmol: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "6")]
    pub bodiejclgmb: u32,
    #[prost(uint32, tag = "15")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22513)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Inenakjlpgp {
    #[prost(uint32, repeated, tag = "3")]
    pub kmefkimebcb: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "8")]
    pub scene_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(504)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Adfhfonoklm {
    #[prost(uint32, tag = "5")]
    pub level: u32,
    #[prost(uint32, tag = "10")]
    pub city_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1425)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Chpfhndodjn {
    #[prost(uint64, repeated, tag = "14")]
    pub mnchcggmlpa: ::prost::alloc::vec::Vec<u64>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4358)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ndabniajohn {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kbofojidpgh {
    #[prost(enumeration = "Lfjlgojmkeh", tag = "8")]
    pub imiogmdokcb: i32,
    #[prost(uint32, tag = "10")]
    pub oelcnlojhhe: u32,
    #[prost(uint32, tag = "13")]
    pub pbpbiehaaej: u32,
    #[prost(bool, tag = "14")]
    pub is_finish: bool,
    #[prost(uint32, tag = "15")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26351)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mkhkdnffocm {
    #[prost(uint32, tag = "2")]
    pub mmchegoomli: u32,
    #[prost(uint32, tag = "4")]
    pub owner_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22708)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pjchekcblma {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24031)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gjdnphlggih {
    #[prost(uint32, tag = "1")]
    pub hnogkehflhe: u32,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23468)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aljnpgbpohh {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(118)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Llnekeilgkm {
    #[prost(uint32, tag = "1")]
    pub level_id: u32,
    #[prost(bool, tag = "10")]
    pub daifjefecdd: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23196)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dnfnaejbfig {
    #[prost(uint64, repeated, tag = "13")]
    pub epfpamggphk: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint64, tag = "4")]
    pub cur_avatar_guid: u64,
    #[prost(uint32, tag = "6")]
    pub oajoobghagm: u32,
    #[prost(uint32, tag = "9")]
    pub cell_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28020)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ohigajhpeaf {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "8")]
    pub lmmbcmmondg: u32,
    #[prost(uint64, repeated, tag = "9")]
    pub npboipbpepn: ::prost::alloc::vec::Vec<u64>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22991)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PingRsp {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(uint32, tag = "7")]
    pub seq: u32,
    #[prost(uint32, tag = "13")]
    pub client_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aojkinlfjhe {
    #[prost(int32, tag = "1")]
    pub x: i32,
    #[prost(int32, tag = "2")]
    pub y: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3083)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hbcenacmebb {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(uint64, tag = "9")]
    pub aghciclcick: u64,
    #[prost(message, repeated, tag = "15")]
    pub bnjojbopmfj: ::prost::alloc::vec::Vec<Jickppdlohc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Apggdademph {
    #[prost(message, repeated, tag = "13")]
    pub ddhpgfnhego: ::prost::alloc::vec::Vec<Oehgbgealhn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ljjecclcpnk {
    #[prost(uint32, tag = "2")]
    pub jnoodnakpie: u32,
    #[prost(int32, tag = "12")]
    pub idoacdogdpb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20460)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Licmddjoobd {
    #[prost(float, tag = "10")]
    pub kdblfalmneh: f32,
    #[prost(uint32, tag = "13")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pmkmghknmmo {
    #[prost(uint32, tag = "1")]
    pub iejpghnlidb: u32,
    #[prost(uint32, tag = "15")]
    pub ocoliglolno: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fjmcpkfclmo {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26441)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kifhhpbhncm {
    #[prost(uint32, repeated, tag = "4")]
    pub apocdmcgebc: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, optional, tag = "5")]
    pub epndbdpklep: ::core::option::Option<Gjdjpcpphic>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ljlcafopobk {
    #[prost(int32, tag = "13")]
    pub lokbdjbaipj: i32,
    #[prost(int32, tag = "15")]
    pub bmhpfibinmn: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27514)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Icijflpiicg {
    #[prost(uint32, repeated, tag = "12")]
    pub phfkgngknld: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Illmmcdpfam {
    #[prost(uint32, repeated, tag = "1")]
    pub dhgjoakppoc: ::prost::alloc::vec::Vec<u32>,
    #[prost(map = "uint32, uint32", tag = "2")]
    pub jjeaodiejcl: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, repeated, tag = "3")]
    pub oihinglbfce: ::prost::alloc::vec::Vec<u32>,
    #[prost(map = "uint32, uint32", tag = "4")]
    pub bmmejpdmmch: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, repeated, tag = "5")]
    pub ggegdeoheie: ::prost::alloc::vec::Vec<u32>,
    #[prost(map = "uint32, uint32", tag = "6")]
    pub onbffamkppk: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, repeated, tag = "7")]
    pub dcgoeaefeml: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "8")]
    pub ompkoejiokn: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "9")]
    pub jfkkmffpngi: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20001)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ekgechbbajl {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7072)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lokjmcemmnj {
    #[prost(uint32, tag = "3")]
    pub bjnbbcigkpo: u32,
    #[prost(uint32, repeated, tag = "6")]
    pub cobeedjkikj: ::prost::alloc::vec::Vec<u32>,
    #[prost(enumeration = "Ckleegmpdgn", tag = "7")]
    pub agmhmdhefkd: i32,
    #[prost(uint32, tag = "8")]
    pub nekecfnahom: u32,
    #[prost(uint32, tag = "9")]
    pub mp_play_id: u32,
    #[prost(uint32, tag = "11")]
    pub najdgkjkpdp: u32,
    #[prost(uint32, tag = "12")]
    pub oajoobghagm: u32,
    #[prost(uint32, tag = "15")]
    pub cfnnekigfan: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ikdandkmino {
    #[prost(uint32, tag = "9")]
    pub uid: u32,
    #[prost(message, optional, tag = "12")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "13")]
    pub rot: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22312)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mcdjeejdono {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "14")]
    pub gaihiklkaon: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27566)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hhfjebhlghh {
    #[prost(uint32, tag = "2")]
    pub r#type: u32,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(uint32, tag = "12")]
    pub avatar_id: u32,
    #[prost(
        oneof = "hhfjebhlghh::Detail",
        tags = "209, 1313, 1330, 1498, 1669, 1871, 1898"
    )]
    pub detail: ::core::option::Option<hhfjebhlghh::Detail>,
}
/// Nested message and enum types in `HHFJEBHLGHH`.
pub mod hhfjebhlghh {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(message, tag = "209")]
        ReliquarySetResponse(super::Kocmnhbmnne),
        #[prost(message, tag = "1313")]
        SkillResponse(super::Pdalamdhiob),
        #[prost(message, tag = "1330")]
        ElementWeaponResponse(super::Lddkmjdljaf),
        #[prost(message, tag = "1498")]
        ElementReliquarySetResponse(super::Fbmhifhkkkj),
        #[prost(message, tag = "1669")]
        WeaponResponse(super::Fiijajjhlmj),
        #[prost(message, tag = "1871")]
        ElementReliquaryResponse(super::Omlhfloecmd),
        #[prost(message, tag = "1898")]
        ReliquaryResponse(super::Bkaioeadfhe),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Knpkgphandb {
    #[prost(message, optional, tag = "4")]
    pub nlddfmiadfg: ::core::option::Option<Vector>,
    #[prost(int64, tag = "6")]
    pub index: i64,
    #[prost(int32, tag = "8")]
    pub nnoajmaadmp: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8618)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ghfjoelpben {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21507)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lmankoomeoi {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(uint32, tag = "13")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hlembohkfkm {
    #[prost(uint32, tag = "14")]
    pub avatar_id: u32,
    #[prost(uint32, tag = "15")]
    pub olkacabnmfp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21202)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lakmjdifgik {
    #[prost(uint32, tag = "10")]
    pub oeocpoekcmj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26234)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cdjdcihmoam {
    #[prost(uint32, tag = "4")]
    pub obgkaflliah: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4073)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ojpjnfballg {
    #[prost(message, optional, tag = "2")]
    pub hjlflkibocb: ::core::option::Option<Mcblkomkohb>,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7412)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bhhajliccnc {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(bool, tag = "9")]
    pub njbaklikjif: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6165)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fjfcebdcbil {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ienbgpnmdfp {
    #[prost(message, repeated, tag = "2")]
    pub falcmedikoj: ::prost::alloc::vec::Vec<Lonmfjnldae>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Llmdaljbocb {
    #[prost(message, optional, tag = "3")]
    pub iceodakhlke: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "8")]
    pub ekgpamgjpip: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26277)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jpbiaacjgnd {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "6")]
    pub poecpaaaloe: u32,
    #[prost(message, optional, tag = "8")]
    pub lfimdgikmmn: ::core::option::Option<Nglcjleibdh>,
    #[prost(uint32, tag = "15")]
    pub jcmchgnnlmj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4807)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kdafchcdjhh {
    #[prost(uint32, tag = "13")]
    pub pbbeaikknib: u32,
    #[prost(uint32, tag = "11")]
    pub finahglfhag: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cjgpoamedng {
    #[prost(uint32, tag = "5")]
    pub level_id: u32,
    #[prost(uint32, tag = "9")]
    pub hfaleccdfif: u32,
    #[prost(bool, tag = "14")]
    pub is_finish: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fhmmnelmnmd {
    #[prost(uint32, tag = "1")]
    pub offering_id: u32,
    #[prost(bool, tag = "3")]
    pub kcjgplknpcl: bool,
    #[prost(bool, tag = "4")]
    pub pfkafiiapkn: bool,
    #[prost(uint32, repeated, tag = "8")]
    pub cggmedeicfl: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "11")]
    pub level: u32,
    #[prost(map = "uint32, uint32", tag = "13")]
    pub kjhmpfcnaee: ::std::collections::HashMap<u32, u32>,
    #[prost(oneof = "fhmmnelmnmd::Detail", tags = "465")]
    pub detail: ::core::option::Option<fhmmnelmnmd::Detail>,
}
/// Nested message and enum types in `FHMMNELMNMD`.
pub mod fhmmnelmnmd {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(message, tag = "465")]
        OfferingPariDetailData(super::Mmgpmbahfom),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23516)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Emjkadjkklc {
    #[prost(uint32, tag = "10")]
    pub cmkcmhhndnf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Obolbjcgmga {
    #[prost(uint32, tag = "3")]
    pub play_type: u32,
    #[prost(uint32, tag = "4")]
    pub r#type: u32,
    #[prost(uint32, tag = "5")]
    pub state: u32,
    #[prost(uint32, repeated, tag = "6")]
    pub progress_stage_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "7")]
    pub aoegkkajean: u32,
    #[prost(uint32, tag = "8")]
    pub start_time: u32,
    #[prost(uint32, tag = "10")]
    pub progress: u32,
    #[prost(uint32, tag = "11")]
    pub pgndbmgcpaf: u32,
    #[prost(uint32, tag = "13")]
    pub duration: u32,
    #[prost(uint32, tag = "15")]
    pub prepare_end_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26247)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pelnlehikgg {
    #[prost(bool, tag = "8")]
    pub lhcpmanhdno: bool,
    #[prost(uint32, tag = "13")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28379)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kkgmbfgcgmi {
    #[prost(uint32, repeated, tag = "15")]
    pub nephlhndmle: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "6")]
    pub lbgllpjcdog: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4612)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Moklgljffkh {
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nmcegcnobki {
    #[prost(uint32, tag = "10")]
    pub pfobhcodjpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gdmlpoedpjo {
    #[prost(uint64, tag = "1")]
    pub ihgjlfcgfin: u64,
    #[prost(uint32, tag = "2")]
    pub pjoclcgmmhn: u32,
    #[prost(uint32, tag = "3")]
    pub imciegkpiff: u32,
    #[prost(uint32, tag = "4")]
    pub ichiomnhini: u32,
    #[prost(uint32, tag = "5")]
    pub version: u32,
    #[prost(bool, tag = "6")]
    pub olpoahmgcad: bool,
    #[prost(bool, tag = "7")]
    pub bdbnkngijlp: bool,
    #[prost(string, tag = "8")]
    pub ejhdnlgggmd: ::prost::alloc::string::String,
    #[prost(uint32, tag = "9")]
    pub apgnpjbhhhg: u32,
    #[prost(bool, tag = "10")]
    pub jgoccnpmmjm: bool,
    #[prost(uint32, tag = "11")]
    pub dhbfpfcebmn: u32,
    #[prost(bool, tag = "12")]
    pub acbcepmacil: bool,
    #[prost(uint32, tag = "13")]
    pub nmaapldbbni: u32,
    #[prost(uint32, tag = "14")]
    pub hdgmialkfmc: u32,
    #[prost(uint64, tag = "15")]
    pub jnoemgcellp: u64,
    #[prost(uint32, tag = "263")]
    pub eajfoiibikj: u32,
    #[prost(uint32, tag = "577")]
    pub bgkochiajce: u32,
    #[prost(uint32, tag = "685")]
    pub mjpfgkflejn: u32,
    #[prost(uint32, repeated, tag = "853")]
    pub ngnahbcahij: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, optional, tag = "1038")]
    pub jniokocnmll: ::core::option::Option<Ojiaihboabh>,
    #[prost(uint32, tag = "1107")]
    pub gpocenmdbkc: u32,
    #[prost(uint32, repeated, tag = "1435")]
    pub kmogbbgkbcm: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "1774")]
    pub bpbigeapbok: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9818)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lenjaggknhp {
    #[prost(bool, tag = "4")]
    pub moaelibphoi: bool,
    #[prost(uint32, tag = "8")]
    pub draft_id: u32,
    #[prost(uint32, tag = "12")]
    pub kajbpilckoo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gjoiicpdean {
    #[prost(uint32, repeated, tag = "10")]
    pub hlofccddged: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7587)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jbaniboafca {
    #[prost(uint32, tag = "8")]
    pub fcflcoogabg: u32,
    #[prost(uint32, tag = "13")]
    pub oajoobghagm: u32,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mabdmhfidbf {
    #[prost(uint32, tag = "4")]
    pub aobbjbfjfdl: u32,
    #[prost(uint32, tag = "8")]
    pub kngjhmllcnp: u32,
    #[prost(message, repeated, tag = "10")]
    pub uid_info_list: ::prost::alloc::vec::Vec<Haiaenbcdme>,
    #[prost(message, optional, tag = "14")]
    pub pos: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22770)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dkajpplfbjp {
    #[prost(uint32, tag = "8")]
    pub ionhghgajgg: u32,
    #[prost(uint32, tag = "5")]
    pub epfcidiklkg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ealkfdeadic {
    #[prost(bool, tag = "13")]
    pub pgpkmokbfam: bool,
    #[prost(uint32, tag = "15")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gmeakpmbhmg {
    #[prost(uint32, tag = "1")]
    pub attack_target_id: u32,
    #[prost(uint32, tag = "2")]
    pub pkgnleecmjj: u32,
    #[prost(uint32, tag = "3")]
    pub entity_id: u32,
    #[prost(uint32, tag = "4")]
    pub hnhnkblhbcp: u32,
    #[prost(float, tag = "5")]
    pub dnidckppokg: f32,
    #[prost(uint32, tag = "7")]
    pub fggbafbekca: u32,
    #[prost(float, tag = "8")]
    pub nnmfnfdlkaf: f32,
    #[prost(map = "uint32, uint32", tag = "9")]
    pub jlijijmohhh: ::std::collections::HashMap<u32, u32>,
    #[prost(message, repeated, tag = "10")]
    pub febaikfcoob: ::prost::alloc::vec::Vec<Fabgoappdao>,
    #[prost(float, tag = "11")]
    pub oeempadnhao: f32,
    #[prost(uint32, tag = "12")]
    pub ndcdffnihjm: u32,
    #[prost(float, tag = "14")]
    pub dmgojdbkcih: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21173)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ggedabaeoki {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint32, tag = "10")]
    pub poaficpfpcj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lpnokffdbne {
    #[prost(message, optional, tag = "5")]
    pub ecdglbpimjk: ::core::option::Option<Jickppdlohc>,
    #[prost(bool, tag = "9")]
    pub mibacapnigg: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3990)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mgafpfoimej {
    #[prost(uint32, tag = "11")]
    pub costume_id: u32,
    #[prost(uint32, tag = "13")]
    pub avatar_id: u32,
    #[prost(uint32, tag = "15")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gdejplceoko {
    #[prost(uint32, tag = "1")]
    pub fbbhhgmceep: u32,
    #[prost(uint32, tag = "3")]
    pub score: u32,
    #[prost(uint32, tag = "5")]
    pub alhijlhahbi: u32,
    #[prost(uint32, tag = "10")]
    pub ikidjkodjne: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(208)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jblhjiljikh {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint32, tag = "3")]
    pub mmbgkomhddi: u32,
    #[prost(uint32, tag = "4")]
    pub param: u32,
    #[prost(bool, tag = "9")]
    pub jfjndakfjek: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ohapebodapg {
    #[prost(message, repeated, tag = "2")]
    pub gbanjkinlgk: ::prost::alloc::vec::Vec<Fgjfcigobcn>,
    #[prost(message, optional, tag = "5")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "6")]
    pub oegjaildlbk: u32,
    #[prost(uint32, tag = "13")]
    pub guid: u32,
    #[prost(message, optional, tag = "14")]
    pub pos: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ndmdbgojbgo {
    #[prost(uint32, tag = "1")]
    pub eaipgemknpo: u32,
    #[prost(map = "uint32, uint32", tag = "10")]
    pub gljdlohdogl: ::std::collections::HashMap<u32, u32>,
    #[prost(bool, tag = "12")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3609)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ogjbhinlkfg {
    #[prost(message, repeated, tag = "5")]
    pub egahdmmdkeh: ::prost::alloc::vec::Vec<Ipkaainfgnb>,
    #[prost(bool, tag = "11")]
    pub hdglggboobh: bool,
    #[prost(uint32, repeated, tag = "12")]
    pub oeohfonlega: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "13")]
    pub dnbefljlamb: u32,
    #[prost(enumeration = "Bgidbdgciae", tag = "14")]
    pub kgconldgjpg: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jkgomddephj {
    #[prost(uint32, tag = "1")]
    pub icheiamecmn: u32,
    #[prost(uint32, tag = "4")]
    pub oajoobghagm: u32,
    #[prost(uint32, tag = "5")]
    pub poddibfplcl: u32,
    #[prost(uint32, tag = "12")]
    pub jopmpkcojaj: u32,
    #[prost(uint32, tag = "13")]
    pub cmegokkejml: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ggogoccopnk {
    #[prost(uint32, tag = "2")]
    pub ooipgfedjmn: u32,
    #[prost(enumeration = "Kbaiomioccp", tag = "8")]
    pub lapfikcfdfl: i32,
    #[prost(enumeration = "Cmgooomlaia", tag = "11")]
    pub imiogmdokcb: i32,
    #[prost(uint32, repeated, tag = "12")]
    pub cdgikfolbgh: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1724)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Chmhopfkefa {
    #[prost(message, optional, tag = "7")]
    pub bilngnbnjng: ::core::option::Option<Jdbkonempdd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pfcgodklbbb {
    #[prost(string, tag = "3")]
    pub kpiogbmlmem: ::prost::alloc::string::String,
    #[prost(uint32, tag = "6")]
    pub njddaollmgi: u32,
    #[prost(uint32, tag = "10")]
    pub scene_id: u32,
    #[prost(uint32, tag = "14")]
    pub block_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mialielhlfj {
    #[prost(uint32, tag = "1")]
    pub bocofcnbkih: u32,
    #[prost(uint32, tag = "2")]
    pub cppdgnjddmo: u32,
    #[prost(message, repeated, tag = "3")]
    pub ecnieknfdmg: ::prost::alloc::vec::Vec<Chmgkkpjphg>,
    #[prost(string, tag = "5")]
    pub bfpmihhhmip: ::prost::alloc::string::String,
    #[prost(uint32, tag = "6")]
    pub afjghpegkfo: u32,
    #[prost(float, tag = "8")]
    pub pokhdgjnlmf: f32,
    #[prost(uint32, tag = "10")]
    pub mannnchdaaj: u32,
    #[prost(uint64, tag = "12")]
    pub jagjhbfkdfg: u64,
    #[prost(uint32, tag = "15")]
    pub ogbeplgeeff: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Chmgkkpjphg {
    #[prost(uint64, tag = "4")]
    pub afmolopanfe: u64,
    #[prost(uint32, tag = "10")]
    pub fhcpckfnjal: u32,
    #[prost(bool, tag = "13")]
    pub eogpkjnngca: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1562)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lafgdhbfgca {
    #[prost(uint32, tag = "4")]
    pub gfdlfnmfala: u32,
    #[prost(uint32, tag = "6")]
    pub hggehlmhkmp: u32,
    #[prost(uint32, tag = "10")]
    pub ajjeblpnahp: u32,
    #[prost(uint32, repeated, tag = "14")]
    pub jggobknpmfj: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "15")]
    pub egmokfdbiln: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2395)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nphghiekmhd {
    #[prost(message, optional, tag = "11")]
    pub hpoeckekafa: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "6")]
    pub mklgaeceklc: ::core::option::Option<Vector>,
    #[prost(int32, tag = "10")]
    pub uid: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20583)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hbfhffdnnjd {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct CityInfo {
    #[prost(uint32, tag = "1")]
    pub crystal_num: u32,
    #[prost(uint32, tag = "12")]
    pub level: u32,
    #[prost(uint32, tag = "13")]
    pub city_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(837)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Glkmlkaijia {
    #[prost(uint32, tag = "3")]
    pub epfcidiklkg: u32,
    #[prost(uint32, tag = "7")]
    pub ionhghgajgg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Obmiljggaka {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Djfjjgedfph {
    #[prost(message, repeated, tag = "5")]
    pub kfhpbofmmag: ::prost::alloc::vec::Vec<Vector>,
    #[prost(message, repeated, tag = "6")]
    pub kdaieipocod: ::prost::alloc::vec::Vec<Cbimlmhcmln>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nhnljibhpmj {
    #[prost(uint32, tag = "2")]
    pub afnmbckamjj: u32,
    #[prost(uint32, tag = "4")]
    pub comekephdgg: u32,
    #[prost(uint32, tag = "7")]
    pub pbfkbckcjpe: u32,
    #[prost(uint32, repeated, tag = "8")]
    pub acnkjfgiecn: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "9")]
    pub ejjmkniigko: bool,
    #[prost(uint32, tag = "12")]
    pub bhpkehgngkj: u32,
    #[prost(bool, tag = "15")]
    pub bnpdkncpmcp: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23266)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ohmcibjbjdf {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20159)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fkjkabjbebm {
    #[prost(message, repeated, tag = "2")]
    pub ddbdiflnhdg: ::prost::alloc::vec::Vec<Cegmhfpbajj>,
    #[prost(uint32, repeated, tag = "11")]
    pub ggkggghhlml: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bblghldonid {
    #[prost(bool, tag = "4")]
    pub is_finish: bool,
    #[prost(uint32, tag = "11")]
    pub mgdhllgefff: u32,
    #[prost(uint32, tag = "13")]
    pub hfaleccdfif: u32,
    #[prost(bool, tag = "14")]
    pub bklgcihiapa: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4111)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Babepkipppj {
    #[prost(uint32, tag = "2")]
    pub accgilglfbk: u32,
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21192)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kigjopdbhhc {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5903)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aeflobkfena {
    #[prost(uint64, tag = "8")]
    pub lgmkddgcaag: u64,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3106)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ikfogbladmk {
    #[prost(message, repeated, tag = "5")]
    pub cbknkhfmcok: ::prost::alloc::vec::Vec<Ibjfefggedo>,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MotionInfo {
    #[prost(message, optional, tag = "1")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "2")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "3")]
    pub speed: ::core::option::Option<Vector>,
    #[prost(enumeration = "MotionState", tag = "4")]
    pub state: i32,
    #[prost(message, repeated, tag = "5")]
    pub params: ::prost::alloc::vec::Vec<Vector>,
    #[prost(message, optional, tag = "6")]
    pub ref_pos: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "7")]
    pub ref_id: u32,
    #[prost(uint32, tag = "8")]
    pub scene_time: u32,
    #[prost(uint64, tag = "9")]
    pub interval_velocity: u64,
    #[prost(uint32, tag = "10")]
    pub ekgeolmiccp: u32,
    #[prost(uint32, tag = "11")]
    pub doiihabehko: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24155)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ecjjbakocji {
    #[prost(uint32, repeated, tag = "7")]
    pub okppkhnchpo: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25048)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cpfcedkifge {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23811)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dhkneogmian {
    #[prost(message, repeated, tag = "4")]
    pub abafpjnhigl: ::prost::alloc::vec::Vec<Efegiimaomi>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28776)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Epefnbdciho {
    #[prost(uint32, tag = "1")]
    pub fjamcdjdjoa: u32,
    #[prost(uint32, tag = "3")]
    pub anblhiacjil: u32,
    #[prost(uint32, tag = "5")]
    pub oaicfbdhdhj: u32,
    #[prost(uint32, tag = "7")]
    pub hggehlmhkmp: u32,
    #[prost(uint32, tag = "10")]
    pub eaipgemknpo: u32,
    #[prost(bool, tag = "11")]
    pub omeniamedce: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20084)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Makcngjmemm {
    #[prost(uint32, tag = "4")]
    pub finahglfhag: u32,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub jcmchgnnlmj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20182)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jhkjoigmilb {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21643)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ocagjkoabkn {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24541)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Paglejfjjdk {
    #[prost(map = "uint64, message", tag = "3")]
    pub cjenicjpfge: ::std::collections::HashMap<u64, Igklnndncmg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9955)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cepcocpeheg {
    #[prost(message, optional, tag = "9")]
    pub jmgkjpackgi: ::core::option::Option<Jdapcomimko>,
    #[prost(uint32, tag = "7")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ofoffidhian {
    #[prost(uint32, tag = "2")]
    pub jabgacillec: u32,
    #[prost(bool, tag = "6")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24630)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fmfibkmcldd {
    #[prost(uint32, tag = "14")]
    pub player_uid: u32,
    #[prost(enumeration = "Oacinifekjn", tag = "15")]
    pub imiogmdokcb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2881)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fiakpoannbn {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8863)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ijfpcnkddoj {
    #[prost(map = "uint64, uint32", tag = "12")]
    pub mnaojhokefj: ::std::collections::HashMap<u64, u32>,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ilajgemjlko {
    #[prost(message, repeated, tag = "8")]
    pub kikeobngppo: ::prost::alloc::vec::Vec<Odoeiglkpon>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fkncpohepdn {
    #[prost(bool, tag = "7")]
    pub lddeidalmbo: bool,
    #[prost(message, optional, tag = "12")]
    pub pos: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24253)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Knnagahbimf {
    #[prost(message, repeated, tag = "9")]
    pub jjmkpfhjkgk: ::prost::alloc::vec::Vec<Enebcpjjphn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5819)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bhkafeaafpj {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "12")]
    pub cnaifgicldh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27864)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ikiopicembf {
    #[prost(uint32, tag = "11")]
    pub mlnmecigdmh: u32,
    #[prost(bool, tag = "14")]
    pub nhnplcpploc: bool,
    #[prost(uint32, tag = "13")]
    pub cbpdgcponhm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1369)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lcneenkaboc {
    #[prost(uint32, tag = "8")]
    pub score: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3997)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ldleanakmig {
    #[prost(uint32, tag = "2")]
    pub mp_play_id: u32,
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(bool, tag = "7")]
    pub mihonjccajc: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bkcinfmcjlj {
    #[prost(uint32, repeated, tag = "3")]
    pub gfllbcgnokj: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "9")]
    pub hlnhpdebkek: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "11")]
    pub ginemciffnb: u32,
    #[prost(uint32, tag = "13")]
    pub glmjfmijhfg: u32,
    #[prost(message, repeated, tag = "15")]
    pub bahejmippji: ::prost::alloc::vec::Vec<Mfgkdapglbg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1289)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mabanahlfcl {
    #[prost(uint32, tag = "4")]
    pub beglleidfid: u32,
    #[prost(bool, tag = "14")]
    pub bbcjaegcolg: bool,
    #[prost(uint32, tag = "6")]
    pub nblgngaompe: u32,
    #[prost(uint32, tag = "1")]
    pub gpfmjjmnknh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9040)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ccjmniklknf {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Belbfpagfia {
    #[prost(float, tag = "5")]
    pub ihengeljdpo: f32,
    #[prost(float, tag = "11")]
    pub pekhkhhbffl: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dojjhjacoha {
    #[prost(uint32, tag = "5")]
    pub pgdepikajgf: u32,
    #[prost(uint32, tag = "15")]
    pub param: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29417)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Phefabpebhc {
    #[prost(uint32, tag = "1")]
    pub niahkplmghf: u32,
    #[prost(uint64, tag = "5")]
    pub mcppeknbhfk: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nihlppbhmnh {
    #[prost(uint32, tag = "3")]
    pub room_id: u32,
    #[prost(message, optional, tag = "12")]
    pub ccendamkoem: ::core::option::Option<Ekfgghclomj>,
    #[prost(uint32, tag = "14")]
    pub bpjdjdffkdh: u32,
    #[prost(message, optional, tag = "15")]
    pub dhegcbchmmj: ::core::option::Option<Ejpdlplcajh>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9574)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nfgbknpjain {
    #[prost(message, optional, tag = "1")]
    pub okkjcbojaod: ::core::option::Option<Ncgpmhoihhl>,
    #[prost(message, repeated, tag = "7")]
    pub kabodnmegek: ::prost::alloc::vec::Vec<Kiblanedmoa>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23043)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aeloalocnbp {
    #[prost(uint32, tag = "3")]
    pub group_id: u32,
    #[prost(uint32, tag = "7")]
    pub nfickllnfgn: u32,
    #[prost(message, optional, tag = "8")]
    pub kbjbnejobnm: ::core::option::Option<Mkdhkgknkbo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7110)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mhehhbohjbi {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "7")]
    pub level: u32,
    #[prost(uint32, tag = "14")]
    pub fagpphacnbj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7207)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ofoejmdlncm {
    #[prost(bool, tag = "2")]
    pub gkeocobfifi: bool,
    #[prost(uint32, repeated, tag = "3")]
    pub affix_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "4")]
    pub ppbhndfadkd: u32,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Icieahbemcj {
    #[prost(message, optional, tag = "1")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(uint64, tag = "2")]
    pub nikfjikmpol: u64,
    #[prost(uint32, tag = "12")]
    pub anhhbleaink: u32,
    #[prost(uint32, tag = "13")]
    pub olkeoflecob: u32,
    #[prost(uint32, tag = "15")]
    pub bchcfkcljge: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hdllebacfpf {
    #[prost(uint32, tag = "2")]
    pub cebemdgajbm: u32,
    #[prost(uint32, tag = "4")]
    pub pdibenhdjcj: u32,
    #[prost(message, repeated, tag = "7")]
    pub meikgboldgh: ::prost::alloc::vec::Vec<Hfhjkhoplmn>,
    #[prost(uint32, tag = "11")]
    pub habibifmdjp: u32,
    #[prost(uint64, tag = "12")]
    pub nkcolnajdca: u64,
    #[prost(bool, tag = "14")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "15")]
    pub mbaeafingli: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4293)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Amnaidaepag {
    #[prost(message, optional, tag = "11")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "9")]
    pub dkfepalmcpm: u32,
    #[prost(uint32, tag = "6")]
    pub fjplckjpadc: u32,
    #[prost(uint32, tag = "7")]
    pub aafkfgcdbie: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27722)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Abnfdjhplgh {
    #[prost(uint32, repeated, tag = "6")]
    pub kpbmmhblcbg: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint64, tag = "3")]
    pub guid: u64,
    #[prost(uint64, tag = "8")]
    pub nfcnddlgklh: u64,
    #[prost(uint32, tag = "1")]
    pub ipkaaincemp: u32,
    #[prost(uint32, tag = "14")]
    pub count: u32,
    #[prost(bool, tag = "15")]
    pub eglfcndkfmh: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29976)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ijiociefbbn {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
    #[prost(uint32, tag = "12")]
    pub pkhmkhkpfma: u32,
    #[prost(uint32, tag = "14")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24625)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ojenjclbdip {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ojdbdjolmih {
    #[prost(uint32, tag = "7")]
    pub glciaekdpgl: u32,
    #[prost(uint32, tag = "12")]
    pub pieapgepmlf: u32,
    #[prost(uint32, tag = "13")]
    pub end_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5151)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lhebncekpbi {
    #[prost(uint32, tag = "13")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20970)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mdfchknoepj {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lkckgeamlnc {
    #[prost(message, repeated, tag = "1")]
    pub ggonbahladl: ::prost::alloc::vec::Vec<Jkgomddephj>,
    #[prost(uint32, repeated, tag = "5")]
    pub iediipbbndg: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "6")]
    pub oimijpcoocm: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "10")]
    pub phoaehgeall: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20754)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Acfcebaefnp {
    #[prost(message, repeated, tag = "9")]
    pub mhmplddokko: ::prost::alloc::vec::Vec<Djfnbcgcgcp>,
    #[prost(message, repeated, tag = "10")]
    pub akgeocobnbf: ::prost::alloc::vec::Vec<Djfnbcgcgcp>,
    #[prost(uint32, tag = "11")]
    pub bodiejclgmb: u32,
    #[prost(uint32, tag = "4")]
    pub level_id: u32,
    #[prost(bool, tag = "5")]
    pub jffplojaemp: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pcppncibcin {
    #[prost(message, repeated, tag = "3")]
    pub mbljacoleif: ::prost::alloc::vec::Vec<Blglpaigifd>,
    #[prost(message, repeated, tag = "4")]
    pub ahkljdplaek: ::prost::alloc::vec::Vec<Kcjmdcfpobf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28968)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cbdogjldiek {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "10")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25255)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jofpgpebbhf {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "13")]
    pub lgjdfhokopk: u32,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26307)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ejkihnnkmcp {
    #[prost(uint32, tag = "5")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cinanajpnbi {
    #[prost(message, optional, tag = "10")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "11")]
    pub pos: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22746)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gkelcceaodi {
    #[prost(message, repeated, tag = "14")]
    pub cjidlmfahac: ::prost::alloc::vec::Vec<Ombeifnnedf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9437)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lppfeabiiac {
    #[prost(string, tag = "2")]
    pub omknbnmebik: ::prost::alloc::string::String,
    #[prost(uint32, tag = "6")]
    pub uid: u32,
    #[prost(enumeration = "Bndgbmfodde", tag = "7")]
    pub state: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7753)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fcgdkfljnep {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Djlpgkfhgek {
    #[prost(uint32, tag = "3")]
    pub bchjnemaeld: u32,
    #[prost(uint32, tag = "4")]
    pub gnmdjejliel: u32,
    #[prost(uint32, tag = "5")]
    pub eloldioajmk: u32,
    #[prost(uint32, tag = "6")]
    pub aekageebaaa: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21505)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nmeonjinbnj {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(bool, tag = "5")]
    pub lhcpmanhdno: bool,
    #[prost(uint32, tag = "8")]
    pub level_id: u32,
    #[prost(uint32, tag = "11")]
    pub epfcidiklkg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AbilityScalarValueEntry {
    #[prost(message, optional, tag = "1")]
    pub key: ::core::option::Option<AbilityString>,
    #[prost(float, tag = "3")]
    pub float_value: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3712)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mlnljljfjdk {
    #[prost(message, optional, tag = "4")]
    pub gafblbiicbn: ::core::option::Option<Mpggmjodjao>,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mliikoadnpe {
    #[prost(uint32, tag = "3")]
    pub llpjdjfoogc: u32,
    #[prost(uint32, tag = "7")]
    pub bpamnanldpc: u32,
    #[prost(uint32, tag = "10")]
    pub skill_id: u32,
    #[prost(bool, tag = "13")]
    pub bnaccmflpko: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Route {
    #[prost(message, repeated, tag = "1")]
    pub route_points: ::prost::alloc::vec::Vec<RoutePoint>,
    #[prost(uint32, tag = "2")]
    pub route_type: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21354)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fpaopkbgmak {
    #[prost(uint32, tag = "8")]
    pub scene_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26940)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mnkkfjldcki {
    #[prost(message, optional, tag = "14")]
    pub eopinfbdgmg: ::core::option::Option<Bjjpihmlnkl>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25224)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cbhiaaiflgp {
    #[prost(enumeration = "Kpfoblalblc", tag = "9")]
    pub daakpcoabep: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Badbjimdidk {
    #[prost(uint32, tag = "1")]
    pub fcpecpmogoj: u32,
    #[prost(enumeration = "Mlhhgnpclgk", tag = "4")]
    pub imiogmdokcb: i32,
    #[prost(uint32, tag = "5")]
    pub cclbephgcek: u32,
    #[prost(bool, tag = "7")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "8")]
    pub fjamcdjdjoa: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24626)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hiikekhppmj {
    #[prost(uint32, tag = "2")]
    pub ibkihehnhlh: u32,
    #[prost(message, repeated, tag = "6")]
    pub acccblmcdoa: ::prost::alloc::vec::Vec<Jkffgchklaa>,
    #[prost(uint32, tag = "9")]
    pub level_id: u32,
    #[prost(uint32, tag = "11")]
    pub hggehlmhkmp: u32,
    #[prost(bool, tag = "12")]
    pub niekgomdmoc: bool,
    #[prost(message, repeated, tag = "13")]
    pub nehpgmldkmf: ::prost::alloc::vec::Vec<Gldpgoifkkj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23834)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ifklgcgkflo {
    #[prost(uint32, tag = "2")]
    pub coaipkljmad: u32,
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "5")]
    pub coegonfeekd: u32,
    #[prost(uint32, tag = "15")]
    pub lddcajjpoah: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23167)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pfegfnaflco {
    #[prost(message, repeated, tag = "5")]
    pub nddobgmdgla: ::prost::alloc::vec::Vec<Mlobecpaoca>,
    #[prost(uint32, tag = "10")]
    pub ofnogjpgbna: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6063)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Glbocbfmhck {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7167)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Koiijkidped {
    #[prost(uint32, tag = "10")]
    pub gohhbggcmjp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct TeamEnterSceneInfo {
    #[prost(message, optional, tag = "10")]
    pub ability_control_block: ::core::option::Option<AbilityControlBlock>,
    #[prost(message, optional, tag = "12")]
    pub team_ability_info: ::core::option::Option<AbilitySyncStateInfo>,
    #[prost(uint32, tag = "14")]
    pub team_entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mcciikojnil {
    #[prost(uint32, repeated, tag = "5")]
    pub mlobacjpfek: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "6")]
    pub bglnmbnmidp: u32,
    #[prost(bool, tag = "8")]
    pub gkeocobfifi: bool,
    #[prost(uint32, tag = "10")]
    pub count: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Beobfjdmccj {
    #[prost(message, optional, tag = "4")]
    pub akgooiibcom: ::core::option::Option<Nijkankibla>,
    #[prost(message, optional, tag = "7")]
    pub dlmmbbmofac: ::core::option::Option<Dcnjgokkppc>,
    #[prost(uint32, tag = "14")]
    pub gadget_state: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1838)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pjoodbmdlmc {
    #[prost(uint32, tag = "13")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7112)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jhfeogmhieg {
    #[prost(uint32, tag = "7")]
    pub diabkdjekpi: u32,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub ighbpbioank: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kdmbbdaeopf {
    #[prost(uint32, tag = "2")]
    pub ehlbbpbbndl: u32,
    #[prost(uint32, tag = "12")]
    pub odamlcmejbk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Algfohhnnod {
    #[prost(uint32, repeated, tag = "2")]
    pub ofgdojfmcaf: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "13")]
    pub jbcbolkgmba: ::prost::alloc::vec::Vec<Jickppdlohc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27888)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Akahmdmnamj {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "9")]
    pub ionhghgajgg: u32,
    #[prost(uint32, tag = "10")]
    pub epfcidiklkg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26101)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gfdgpaldfjj {
    #[prost(uint32, tag = "12")]
    pub hojojiiihck: u32,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fiijajjhlmj {
    #[prost(message, repeated, tag = "1")]
    pub weapon_list: ::prost::alloc::vec::Vec<Chgnhdchndd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(284)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Anldbkfpgio {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7318)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pcglhgdbhff {
    #[prost(uint32, tag = "6")]
    pub uid: u32,
    #[prost(uint32, repeated, tag = "7")]
    pub hfdblmejkgj: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(262)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pccbiamfkej {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4379)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ikkbbgncdpl {
    #[prost(uint32, tag = "7")]
    pub entity_id: u32,
    #[prost(bool, tag = "3")]
    pub eoglfogekla: bool,
    #[prost(enumeration = "Jjhobjbapei", tag = "12")]
    pub gaakalgobcf: i32,
    #[prost(uint32, tag = "15")]
    pub pos: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26575)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gljmgkmphei {
    #[prost(uint64, tag = "2")]
    pub dnkknloipje: u64,
    #[prost(uint32, tag = "3")]
    pub entity_id: u32,
    #[prost(message, optional, tag = "4")]
    pub motion_info: ::core::option::Option<MotionInfo>,
    #[prost(uint64, tag = "6")]
    pub kkheemggnpn: u64,
    #[prost(bool, tag = "8")]
    pub pclkldfgonj: bool,
    #[prost(uint32, tag = "9")]
    pub scene_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22323)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lcpdofjhcof {
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eblgakaodkk {
    #[prost(enumeration = "Gmdpmagbaoe", tag = "1")]
    pub state: i32,
    #[prost(uint32, tag = "13")]
    pub pbbeaikknib: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(444)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ldmbiapafhj {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(message, optional, tag = "10")]
    pub eencdfmjoaj: ::core::option::Option<Aefiopfgdji>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22165)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kimnlmdmnfh {
    #[prost(uint32, tag = "3")]
    pub dest_scene_id: u32,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(message, optional, tag = "14")]
    pub ibcekdhephb: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5052)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mibeofcjgae {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(uint32, tag = "11")]
    pub city_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cegmhfpbajj {
    #[prost(uint32, tag = "1")]
    pub level: u32,
    #[prost(message, optional, tag = "4")]
    pub pifpioeehkj: ::core::option::Option<Akpmjoialfd>,
    #[prost(enumeration = "Pljpihnocfc", repeated, tag = "5")]
    pub oiienelpjep: ::prost::alloc::vec::Vec<i32>,
    #[prost(uint32, tag = "12")]
    pub dnpmaoagbfl: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1358)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bjidicoecnd {
    #[prost(uint32, tag = "10")]
    pub cell_id: u32,
    #[prost(uint32, tag = "14")]
    pub oajoobghagm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Inaebpbpikm {
    #[prost(uint32, tag = "5")]
    pub nekecfnahom: u32,
    #[prost(uint32, repeated, tag = "6")]
    pub pdhekmemblg: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "13")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28452)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Idieofejlkm {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(uint32, tag = "7")]
    pub id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7018)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cfgmnkiegma {
    #[prost(map = "uint64, message", tag = "5")]
    pub ljjfheajdha: ::std::collections::HashMap<u64, AvatarFetterInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29868)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kfcjihlbdlh {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2379)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lbpdjcjcmid {
    #[prost(message, optional, tag = "1")]
    pub ehheiahalel: ::core::option::Option<Ljlcafopobk>,
    #[prost(message, optional, tag = "14")]
    pub source_pos: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "7")]
    pub edjnmloinpa: ::core::option::Option<Ahdcnhcibnm>,
    #[prost(message, optional, tag = "11")]
    pub destination_pos: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "3")]
    pub eicgaabfbdo: ::core::option::Option<Ahdcnhcibnm>,
    #[prost(int32, tag = "5")]
    pub query_id: i32,
    #[prost(int32, tag = "12")]
    pub uid: i32,
    #[prost(uint32, tag = "2")]
    pub scene_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25875)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jkfiophpecg {
    #[prost(string, tag = "8")]
    pub jfaamlfpknm: ::prost::alloc::string::String,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26718)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pcfcgmhkplj {
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28215)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cbahaahdhfd {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28992)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lkbhhcgaikn {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "15")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20523)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mpdppifjhgf {
    #[prost(uint32, tag = "4")]
    pub param: u32,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(string, tag = "13")]
    pub agbccekekfm: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9089)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hofcddpjjkm {
    #[prost(enumeration = "Jnkfgjmmhma", repeated, tag = "6")]
    pub tag_list: ::prost::alloc::vec::Vec<i32>,
    #[prost(uint32, tag = "12")]
    pub kngbdmdcnhk: u32,
    #[prost(enumeration = "Ghjfblobgpa", tag = "11")]
    pub op: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Llgcdcdhdpd {
    #[prost(message, repeated, tag = "2")]
    pub jplkhapgpao: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(message, optional, tag = "5")]
    pub jaffemmjmkg: ::core::option::Option<Jickppdlohc>,
    #[prost(uint32, tag = "10")]
    pub kjocamidmkb: u32,
    #[prost(uint32, tag = "13")]
    pub icjncaedclm: u32,
    #[prost(uint32, tag = "14")]
    pub iadkemlaeae: u32,
    #[prost(uint32, tag = "15")]
    pub koadgmhfjbp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Igkafpdnpba {
    #[prost(uint32, tag = "1")]
    pub scene_id: u32,
    #[prost(uint32, tag = "2")]
    pub ffobionlmoj: u32,
    #[prost(bool, tag = "3")]
    pub lailpnooajc: bool,
    #[prost(enumeration = "Pacjkiolaoh", tag = "7")]
    pub bbafiokgdbn: i32,
    #[prost(uint32, tag = "10")]
    pub kjdmoofknek: u32,
    #[prost(bool, tag = "12")]
    pub idpelopjnke: bool,
    #[prost(uint32, tag = "13")]
    pub cckjpdchobj: u32,
    #[prost(message, optional, tag = "14")]
    pub hpoeckekafa: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hmidobjfnfm {
    #[prost(message, repeated, tag = "13")]
    pub jahppelnedf: ::prost::alloc::vec::Vec<Hfhjkhoplmn>,
    #[prost(message, optional, tag = "14")]
    pub fgaeincckdk: ::core::option::Option<Olheklkendn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28535)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ojcchbbaeam {
    #[prost(message, repeated, tag = "4")]
    pub iljhoelijpf: ::prost::alloc::vec::Vec<Lkdphefmbfm>,
    #[prost(uint32, repeated, tag = "12")]
    pub cjiieiogbfo: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "10")]
    pub caeoniplbjc: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Opgmggfecmj {
    #[prost(message, optional, tag = "4")]
    pub emfknkecaef: ::core::option::Option<Najepfpoeda>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hgbpggbfpdb {
    #[prost(uint32, tag = "4")]
    pub ooipgfedjmn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3047)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jlkdnccaepk {
    #[prost(uint32, tag = "13")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28293)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cefnmbjbmgo {
    #[prost(uint32, tag = "2")]
    pub nkgekomllng: u32,
    #[prost(uint32, tag = "3")]
    pub city_id: u32,
    #[prost(uint32, tag = "14")]
    pub fagpphacnbj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3043)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pjdcgpekedb {
    #[prost(message, repeated, tag = "7")]
    pub aocdkagoaik: ::prost::alloc::vec::Vec<Ehjplmeenap>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1835)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SceneEntityDisappearNotify {
    #[prost(uint32, tag = "10")]
    pub param: u32,
    #[prost(uint32, repeated, tag = "13")]
    pub entity_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(enumeration = "VisionType", tag = "14")]
    pub disappear_type: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Llccbeanifc {
    #[prost(message, optional, tag = "5")]
    pub fgaeincckdk: ::core::option::Option<Olheklkendn>,
    #[prost(message, repeated, tag = "10")]
    pub jahppelnedf: ::prost::alloc::vec::Vec<Hfhjkhoplmn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1228)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Edhhhahcbjn {
    #[prost(uint32, tag = "9")]
    pub coegonfeekd: u32,
    #[prost(uint32, tag = "8")]
    pub lddcajjpoah: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2273)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eidpjcapifp {
    #[prost(uint32, repeated, tag = "12")]
    pub meimcmlddfo: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "7")]
    pub jjanplhfpnj: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "2")]
    pub nkaogolciad: bool,
    #[prost(uint32, tag = "1")]
    pub bodiejclgmb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2265)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lclinbgeolg {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(message, optional, tag = "8")]
    pub ggbakekglnf: ::core::option::Option<Cjnehmhbamo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3917)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Folgdolfdcf {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub dnbefljlamb: u32,
    #[prost(message, optional, tag = "15")]
    pub icdnieabkki: ::core::option::Option<Gmfojoggobg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lejhlmhbdbp {
    #[prost(bool, tag = "1")]
    pub jhpmmlmdhnp: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29185)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cbclllokdig {
    #[prost(uint64, tag = "8")]
    pub avatar_guid: u64,
    #[prost(uint32, tag = "1")]
    pub anim_hash: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mmcbilljlmk {
    #[prost(message, optional, tag = "1")]
    pub jpiecjligip: ::core::option::Option<Hkpgngddocl>,
    #[prost(enumeration = "Ljcngngdgph", tag = "4")]
    pub ponkplpmfei: i32,
    #[prost(map = "uint32, uint32", tag = "13")]
    pub bikkdddldhp: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mmphdjfapgk {
    #[prost(message, repeated, tag = "1")]
    pub iflibbifjcc: ::prost::alloc::vec::Vec<Ebcpgaghaib>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5382)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Acjgfcfpdja {
    #[prost(uint32, tag = "7")]
    pub oelcnlojhhe: u32,
    #[prost(uint32, tag = "15")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(910)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dpgchcacmhe {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(enumeration = "Maodfhomkob", tag = "11")]
    pub imiogmdokcb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gkghdhddmhc {
    #[prost(uint32, tag = "2")]
    pub group_id: u32,
    #[prost(uint32, tag = "9")]
    pub mkcgmmganlk: u32,
    #[prost(bool, tag = "10")]
    pub dpjgpimigfj: bool,
    #[prost(uint32, repeated, tag = "12")]
    pub blgjddidbnf: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "15")]
    pub start_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20241)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bifjoajmccn {
    #[prost(uint32, tag = "3")]
    pub entity_id: u32,
    #[prost(uint32, tag = "4")]
    pub bhaafgaccmo: u32,
    #[prost(enumeration = "Glgcidhmkka", tag = "5")]
    pub ncpecohfomb: i32,
    #[prost(message, optional, tag = "6")]
    pub dindadpadfj: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "7")]
    pub gjhmjafnloj: ::core::option::Option<Vector>,
    #[prost(int32, tag = "8")]
    pub hleppmejppc: i32,
    #[prost(enumeration = "ForwardType", tag = "10")]
    pub forward_type: i32,
    #[prost(uint32, tag = "13")]
    pub jphbokdmdah: u32,
    #[prost(uint32, tag = "15")]
    pub afgicahffgd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3355)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Inailoglbjc {
    #[prost(uint64, tag = "10")]
    pub ddbhgoeeohb: u64,
    #[prost(bool, tag = "15")]
    pub is_locked: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24392)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Apehcodhnba {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1387)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ljllpnalppi {
    #[prost(message, repeated, tag = "11")]
    pub bnjojbopmfj: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(uint64, repeated, tag = "10")]
    pub njcafaagmjk: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint32, tag = "13")]
    pub gadget_id: u32,
    #[prost(enumeration = "Iacmanpjhji", tag = "6")]
    pub kgconldgjpg: i32,
    #[prost(uint32, tag = "1")]
    pub ghlbjahjehf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26584)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fjheehbjclj {
    #[prost(uint32, repeated, tag = "5")]
    pub kcpbcolpbme: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "8")]
    pub ieddmdenjaa: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "12")]
    pub jahppelnedf: ::prost::alloc::vec::Vec<Khhlgfehbgj>,
    #[prost(message, repeated, tag = "13")]
    pub oeoohdalnce: ::prost::alloc::vec::Vec<Abaganpioid>,
    #[prost(uint32, tag = "14")]
    pub memiafjcjok: u32,
    #[prost(uint32, repeated, tag = "15")]
    pub akjccmmodmm: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24454)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aiplomigieb {
    #[prost(string, tag = "1")]
    pub dkhhpajbjif: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jkbikpknbie {
    #[prost(bool, tag = "6")]
    pub mpfldfdogai: bool,
    #[prost(map = "uint32, message", tag = "8")]
    pub ddpfmkjfpak: ::std::collections::HashMap<u32, Hblkljkhkoo>,
    #[prost(uint32, tag = "10")]
    pub nmikcmlkndm: u32,
    #[prost(message, optional, tag = "14")]
    pub gpgmglnanib: ::core::option::Option<Hpknpbfcppd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nbdhfhkmlfd {
    #[prost(uint32, tag = "1")]
    pub uid: u32,
    #[prost(string, tag = "2")]
    pub omknbnmebik: ::prost::alloc::string::String,
    #[prost(uint32, tag = "3")]
    pub level: u32,
    #[prost(uint32, tag = "4")]
    pub avatar_id: u32,
    #[prost(uint32, tag = "5")]
    pub hdbfknjhboo: u32,
    #[prost(string, tag = "6")]
    pub dkhhpajbjif: ::prost::alloc::string::String,
    #[prost(enumeration = "Hkamlcimkjl", tag = "7")]
    pub kiihmcahnpm: i32,
    #[prost(uint32, tag = "8")]
    pub param: u32,
    #[prost(bool, tag = "10")]
    pub amikdfcmbmp: bool,
    #[prost(string, tag = "11")]
    pub efajihmnobk: ::prost::alloc::string::String,
    #[prost(uint32, tag = "12")]
    pub ndiknhfccic: u32,
    #[prost(uint32, tag = "13")]
    pub mkhendmflmf: u32,
    #[prost(uint32, tag = "14")]
    pub fidhndfheda: u32,
    #[prost(bool, tag = "15")]
    pub fakdleihgml: bool,
    #[prost(uint32, tag = "16")]
    pub hlolooclkap: u32,
    #[prost(string, tag = "17")]
    pub bmfkoonmmee: ::prost::alloc::string::String,
    #[prost(message, repeated, tag = "22")]
    pub hilllclaile: ::prost::alloc::vec::Vec<Eppegdiefjn>,
    #[prost(enumeration = "Glnndhihpdf", tag = "23")]
    pub mbeniijdlna: i32,
    #[prost(message, optional, tag = "24")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
    #[prost(bool, tag = "25")]
    pub bbheipknphc: bool,
    #[prost(bool, tag = "26")]
    pub pcachagginn: bool,
    #[prost(enumeration = "Nfonhfamdne", tag = "27")]
    pub ajcgkkpccgd: i32,
    #[prost(bool, tag = "28")]
    pub dplllekloei: bool,
    #[prost(bool, tag = "29")]
    pub neanbginfpf: bool,
    #[prost(bool, tag = "30")]
    pub jaddakojmbb: bool,
    #[prost(string, tag = "31")]
    pub ijlhlcllene: ::prost::alloc::string::String,
    #[prost(string, tag = "32")]
    pub lbkdgoefebc: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23784)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fdbjmncfcfi {
    #[prost(message, optional, tag = "9")]
    pub position: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "11")]
    pub aghacofmoad: u32,
    #[prost(bool, tag = "15")]
    pub hnalbnmnpbd: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nckgllfekhm {
    #[prost(uint32, repeated, tag = "6")]
    pub ogedlbmhnim: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "9")]
    pub feogjlnkgha: ::prost::alloc::vec::Vec<Cmbdnhpifch>,
    #[prost(message, repeated, tag = "14")]
    pub nglgklaeafk: ::prost::alloc::vec::Vec<Mgoaeaigbok>,
    #[prost(uint32, repeated, tag = "15")]
    pub lhebdobkemj: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21279)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Geadomnohcm {
    #[prost(uint32, repeated, tag = "3")]
    pub jhjilcmeonh: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22573)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Depbbdjlloh {
    #[prost(uint32, tag = "2")]
    pub ffhpdcibkod: u32,
    #[prost(message, optional, tag = "11")]
    pub kapljijnkak: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "12")]
    pub gpaablebdgn: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21609)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fbpbgmejknn {
    #[prost(uint32, tag = "8")]
    pub hnneelkcdmc: u32,
    #[prost(uint32, tag = "4")]
    pub gohhbggcmjp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nccncmfilpa {
    #[prost(uint32, tag = "7")]
    pub gadget_state: u32,
    #[prost(uint32, tag = "15")]
    pub kfaadeeklbj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nihodijkpke {
    #[prost(bool, tag = "3")]
    pub glkngddnocn: bool,
    #[prost(message, repeated, tag = "7")]
    pub cnajaflibed: ::prost::alloc::vec::Vec<Bfmajbbmioh>,
    #[prost(uint32, tag = "15")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7064)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dkpknneehfa {
    #[prost(bool, tag = "7")]
    pub iecapkphljk: bool,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23471)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ajfpancfici {
    #[prost(uint32, repeated, tag = "6")]
    pub ihjjfphlgec: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "15")]
    pub kcoimeccodp: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3994)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Obkkombkmfm {
    #[prost(message, repeated, tag = "3")]
    pub bnjojbopmfj: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(uint64, repeated, tag = "2")]
    pub jdmcfokobhk: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint64, tag = "11")]
    pub jahlenghnmj: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23241)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gklhfchgdmc {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hjoppfkldnk {
    #[prost(uint32, tag = "8")]
    pub entity_id: u32,
    #[prost(int32, tag = "10")]
    pub clkodfdpdcb: i32,
    #[prost(uint32, tag = "12")]
    pub ddmbgnhphpc: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29220)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kcioliklodf {
    #[prost(message, repeated, tag = "1")]
    pub pfklkjomchj: ::prost::alloc::vec::Vec<Nkpfmnbhpdg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ResVersionConfig {
    #[prost(uint32, tag = "1")]
    pub version: u32,
    #[prost(bool, tag = "2")]
    pub relogin: bool,
    #[prost(string, tag = "3")]
    pub md5: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub release_total_size: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub version_suffix: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub branch: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub next_script_version: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7356)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bdpbgjlgofh {
    #[prost(uint32, tag = "11")]
    pub entity_id: u32,
    #[prost(uint32, tag = "6")]
    pub pkhmkhkpfma: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6919)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pmgmhkccfbh {
    #[prost(int32, tag = "11")]
    pub retcode: i32,
    #[prost(bool, tag = "14")]
    pub dkchjaghomm: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1141)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Maefkmekion {
    #[prost(uint32, tag = "5")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9560)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lkhjojoikdg {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(uint32, tag = "7")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Alcmfillbkd {
    #[prost(message, repeated, tag = "10")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Hjepdhkiacb>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3321)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bookddjmadc {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(uint64, tag = "9")]
    pub avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oaimbjcnjli {
    #[prost(bool, tag = "1")]
    pub ihoapgijkeg: bool,
    #[prost(uint32, tag = "3")]
    pub id: u32,
    #[prost(uint32, tag = "4")]
    pub hfaleccdfif: u32,
    #[prost(bool, tag = "7")]
    pub fkcjifbjalm: bool,
    #[prost(bool, tag = "11")]
    pub pmjlllfophk: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2738)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gmkanmoocol {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27048)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gbomaalmaic {
    #[prost(float, tag = "1")]
    pub melahhehidi: f32,
    #[prost(enumeration = "Ioeoeimkmjd", tag = "2")]
    pub imiogmdokcb: i32,
    #[prost(enumeration = "Bonkncpajma", tag = "4")]
    pub lijbjbajhon: i32,
    #[prost(uint32, tag = "5")]
    pub prop_type: u32,
    #[prost(enumeration = "Gbnidjgcplj", tag = "7")]
    pub pmkfangdfdb: i32,
    #[prost(uint32, repeated, tag = "9")]
    pub param_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(float, tag = "10")]
    pub anchbjdfhjh: f32,
    #[prost(message, optional, tag = "11")]
    pub nkkcadbjedl: ::core::option::Option<Kjjflmfficn>,
    #[prost(enumeration = "Lmfolodejfa", tag = "14")]
    pub ojjbnojlcia: i32,
    #[prost(uint32, tag = "15")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2253)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Alnkhciaidk {
    #[prost(message, optional, tag = "4")]
    pub jioigfoffff: ::core::option::Option<Dkiblfiglap>,
    #[prost(uint32, tag = "15")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oaojhdnmehh {
    #[prost(int32, tag = "2")]
    pub mdmmnleemdf: i32,
    #[prost(enumeration = "Obbkcbakkgh", tag = "12")]
    pub r#type: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21149)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ahjhicpgini {
    #[prost(uint32, repeated, tag = "12")]
    pub fmdolmmajcg: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "14")]
    pub fmeeoommcaf: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "13")]
    pub level_id: u32,
    #[prost(uint32, tag = "9")]
    pub jbfdogpakkc: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2064)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Inbojfhfebp {
    #[prost(message, repeated, tag = "9")]
    pub emfpghfeacj: ::prost::alloc::vec::Vec<Jbnlghjjkmo>,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25999)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ccbfhhjgdmk {
    #[prost(uint32, repeated, tag = "12")]
    pub jhlbppfggpg: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23417)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jgnlgjccelc {
    #[prost(uint32, tag = "6")]
    pub dombdimffii: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1553)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kjfmemeogpn {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ondpndjgpho {
    #[prost(bool, tag = "1")]
    pub is_finish: bool,
    #[prost(bool, tag = "5")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "9")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "13")]
    pub mkcgmmganlk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28796)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Egghophnkek {
    #[prost(uint32, tag = "2")]
    pub scene_id: u32,
    #[prost(uint32, tag = "7")]
    pub entity_id: u32,
    #[prost(uint32, tag = "14")]
    pub pjabefajbgb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9555)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fhnnlhjomnb {
    #[prost(uint32, repeated, tag = "5")]
    pub olflngkoajk: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2992)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oblklnmcibd {
    #[prost(uint32, tag = "10")]
    pub gbpipbcjchj: u32,
    #[prost(uint32, tag = "13")]
    pub mdmmnleemdf: u32,
    #[prost(uint32, tag = "14")]
    pub lcddidljedn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lbambfindck {
    #[prost(message, optional, tag = "1")]
    pub cgjnlnbcfko: ::core::option::Option<Cnjpphndjnc>,
    #[prost(message, optional, tag = "2")]
    pub imcflepkmce: ::core::option::Option<Nkdbkonmbdc>,
    #[prost(message, optional, tag = "3")]
    pub akgooiibcom: ::core::option::Option<Ojafghalcgn>,
    #[prost(message, optional, tag = "4")]
    pub ojfjagencjf: ::core::option::Option<Ejoollblonf>,
    #[prost(message, optional, tag = "6")]
    pub pfpimlppckc: ::core::option::Option<Kcbmfcpadfo>,
    #[prost(message, optional, tag = "7")]
    pub cogbfcikmmp: ::core::option::Option<Lodgaokfcgn>,
    #[prost(message, repeated, tag = "8")]
    pub pmilojcjejb: ::prost::alloc::vec::Vec<Agdiepohjch>,
    #[prost(message, repeated, tag = "10")]
    pub dkckoeknelm: ::prost::alloc::vec::Vec<Ajmoomnamdf>,
    #[prost(message, optional, tag = "14")]
    pub mkndennpkfn: ::core::option::Option<Abhocfilgjl>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6671)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fmkddajnflo {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Iachjpimdfa {
    #[prost(message, optional, tag = "1")]
    pub ecdglbpimjk: ::core::option::Option<Item>,
    #[prost(uint32, tag = "2")]
    pub hmpdphhdmlc: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(396)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Imfcpdoejml {
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26136)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mkffddlhfjj {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21945)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ielaikgcnch {
    #[prost(uint32, repeated, tag = "8")]
    pub onioldaalan: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "1131")]
    pub pgimckfgipd: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "4")]
    pub max_combo: u32,
    #[prost(uint32, tag = "10")]
    pub bnmjbhhkcbk: u32,
    #[prost(bool, tag = "295")]
    pub cakhipmgflf: bool,
    #[prost(bool, tag = "596")]
    pub ocdcdndkkmn: bool,
    #[prost(bool, tag = "15")]
    pub daphocnhdfm: bool,
    #[prost(uint32, tag = "50")]
    pub bondcepggfh: u32,
    #[prost(uint32, tag = "9")]
    pub score: u32,
    #[prost(uint32, tag = "12")]
    pub jgcddbfmogl: u32,
    #[prost(uint64, tag = "6")]
    pub ihgjlfcgfin: u64,
    #[prost(uint32, tag = "5")]
    pub combo: u32,
    #[prost(uint32, tag = "2005")]
    pub kapobbfgpeg: u32,
    #[prost(uint32, tag = "14")]
    pub pgccobeibdk: u32,
    #[prost(uint32, tag = "575")]
    pub lojfdjclfcc: u32,
    #[prost(float, tag = "806")]
    pub speed: f32,
    #[prost(uint32, tag = "2")]
    pub ggcfiehankk: u32,
    #[prost(uint32, tag = "7")]
    pub bbpccoicmcl: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gfneafefccl {
    #[prost(bool, tag = "5")]
    pub is_finish: bool,
    #[prost(uint32, tag = "13")]
    pub nilalkpfcco: u32,
    #[prost(uint32, tag = "14")]
    pub oelcnlojhhe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3075)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jlfikgdmdne {
    #[prost(uint32, tag = "5")]
    pub nkgekomllng: u32,
    #[prost(uint32, tag = "8")]
    pub monster_config_id: u32,
    #[prost(uint32, tag = "14")]
    pub cilmghamedd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25809)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bibgaicmboh {
    #[prost(string, tag = "3")]
    pub dkhhpajbjif: ::prost::alloc::string::String,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2782)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ijjleiffdjm {
    #[prost(uint32, tag = "4")]
    pub group_id: u32,
    #[prost(uint32, tag = "6")]
    pub jimelgdjmlf: u32,
    #[prost(uint32, tag = "9")]
    pub epfcidiklkg: u32,
    #[prost(uint32, tag = "13")]
    pub player_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fgfcbnjmmia {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fofmfcdckip {
    #[prost(uint32, tag = "2")]
    pub ejkiancmdpf: u32,
    #[prost(uint32, tag = "3")]
    pub epldglecano: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20289)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gojamjjejae {
    #[prost(uint32, tag = "3")]
    pub oajoobghagm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5569)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Haaojfpllgf {
    #[prost(message, repeated, tag = "1")]
    pub iocdjejlfon: ::prost::alloc::vec::Vec<Jkejhajabgd>,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ocbnhnopdnd {
    #[prost(uint32, repeated, tag = "10")]
    pub cdgikfolbgh: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1695)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Enbcdimkpfo {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(uint32, tag = "7")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Epidgkfmcne {
    #[prost(message, repeated, tag = "9")]
    pub geiagfpmlof: ::prost::alloc::vec::Vec<Lojigcpmdmk>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25732)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Janeopbjdbj {
    #[prost(uint32, repeated, tag = "9")]
    pub ihflgbgnaje: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6358)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ilbhkgonpch {
    #[prost(uint32, tag = "2")]
    pub nekecfnahom: u32,
    #[prost(bool, tag = "6")]
    pub jfjndakfjek: bool,
    #[prost(enumeration = "Ckleegmpdgn", tag = "7")]
    pub agmhmdhefkd: i32,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20887)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fddijibeimn {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22713)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dpoeglgaicn {
    #[prost(bool, tag = "6")]
    pub hjhnapjmpdc: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8841)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PostEnterSceneRsp {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(uint32, tag = "15")]
    pub enter_scene_token: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25268)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Macaedgoonb {
    #[prost(uint32, tag = "15")]
    pub lkkifhknkfe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6431)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jbiebglmcae {
    #[prost(message, optional, tag = "2")]
    pub icchdgkmnlf: ::core::option::Option<Ljjfjilbnll>,
    #[prost(message, repeated, tag = "3")]
    pub empejfognpa: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(uint32, repeated, tag = "7")]
    pub mbglalgnank: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "11")]
    pub jbphchjpdem: ::prost::alloc::vec::Vec<Jickppdlohc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29182)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oehbiglidba {
    #[prost(message, repeated, tag = "5")]
    pub nahhkiikbek: ::prost::alloc::vec::Vec<Acbffnnaklg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6543)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cojldbmbapc {
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Podklccmdid {
    #[prost(uint32, tag = "1")]
    pub gpldloipjmb: u32,
    #[prost(uint32, tag = "2")]
    pub score: u32,
    #[prost(uint32, tag = "3")]
    pub hbjgnknjfdp: u32,
    #[prost(uint32, tag = "4")]
    pub efcmbiaojae: u32,
    #[prost(uint32, tag = "5")]
    pub nlflkhjikan: u32,
    #[prost(uint32, tag = "6")]
    pub gbejihelhbl: u32,
    #[prost(uint32, repeated, tag = "7")]
    pub ladlaahfhfh: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "8")]
    pub eaiapcfoicl: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "9")]
    pub gleejoepdho: u32,
    #[prost(uint32, repeated, tag = "10")]
    pub lcplbaplhma: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "11")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "12")]
    pub liffgpeibbd: u32,
    #[prost(bool, tag = "14")]
    pub pmjlllfophk: bool,
    #[prost(uint32, tag = "15")]
    pub kngjhmllcnp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6646)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mbfjjaimglk {
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22348)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ojcpinepdaf {
    #[prost(uint32, tag = "13")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22688)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nmniigcmamd {
    #[prost(uint32, repeated, tag = "10")]
    pub obnhgeffbgo: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22602)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ofgfeiahnbn {
    #[prost(message, repeated, tag = "11")]
    pub efcdelgmmkg: ::prost::alloc::vec::Vec<Akkloinfcpm>,
    #[prost(uint32, tag = "14")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ajpkfjdokfh {
    #[prost(uint32, tag = "9")]
    pub main_prop_id: u32,
    #[prost(uint32, tag = "12")]
    pub dpjgkagiaoh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Emndgkkckgo {
    #[prost(uint64, tag = "2")]
    pub client_game_time: u64,
    #[prost(uint64, tag = "7")]
    pub server_game_time: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23041)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ldlhmmfaiph {
    #[prost(uint32, tag = "5")]
    pub ffhpdcibkod: u32,
    #[prost(map = "uint32, uint32", tag = "9")]
    pub pcmehijmdhn: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(957)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lnbldffhami {
    #[prost(uint32, tag = "5")]
    pub eaipgemknpo: u32,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ekgjkeobkbk {
    #[prost(message, optional, tag = "8")]
    pub kfiiiclolkg: ::core::option::Option<Joecdaolnfd>,
    #[prost(message, optional, tag = "11")]
    pub gafmcjbmfae: ::core::option::Option<Hfildbllmop>,
    #[prost(message, optional, tag = "14")]
    pub nabhbhgbpon: ::core::option::Option<Idlaejgilnl>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bbicghbhcba {
    #[prost(uint32, tag = "2")]
    pub costume_id: u32,
    #[prost(uint32, tag = "4")]
    pub avatar_id: u32,
    #[prost(enumeration = "Bhjbdljakmg", tag = "10")]
    pub avatar_type: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29295)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mkgnakjbdei {
    #[prost(uint32, tag = "10")]
    pub entity_id: u32,
    #[prost(uint32, tag = "15")]
    pub knjkmffgefl: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lhhomfpbfoe {
    #[prost(uint32, tag = "2")]
    pub abimanelkoc: u32,
    #[prost(enumeration = "Kaapgmmgpof", tag = "4")]
    pub imiogmdokcb: i32,
    #[prost(uint32, tag = "5")]
    pub nhbhjkbjpfd: u32,
    #[prost(uint32, tag = "15")]
    pub fjamcdjdjoa: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26612)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Makfecjmleb {
    #[prost(message, repeated, tag = "14")]
    pub ggghhfajhdi: ::prost::alloc::vec::Vec<Likogpgghfj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8523)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pbldfdaioek {
    #[prost(string, tag = "12")]
    pub nick_name: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nnggbcfbfaj {
    #[prost(map = "uint32, uint32", tag = "15")]
    pub fldbigenhhc: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21169)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bbcglhbhacl {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "7")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mjechbdpimn {
    #[prost(uint32, tag = "5")]
    pub llpmecboocl: u32,
    #[prost(enumeration = "Mnlilcbgkng", repeated, tag = "6")]
    pub mkjpgmhmhbj: ::prost::alloc::vec::Vec<i32>,
    #[prost(uint32, tag = "7")]
    pub ooipgfedjmn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9481)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dfbnionjnoi {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bgdcpbegank {
    #[prost(bool, tag = "6")]
    pub jmeaopojepn: bool,
    #[prost(uint32, tag = "8")]
    pub fcpecpmogoj: u32,
    #[prost(uint32, tag = "10")]
    pub mnpilpanbie: u32,
    #[prost(bool, tag = "11")]
    pub is_finish: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lejdfpgeiko {
    #[prost(uint32, tag = "1")]
    pub oegjaildlbk: u32,
    #[prost(message, optional, tag = "9")]
    pub dhkjkgigjdg: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "12")]
    pub bnheafcgijm: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Clcjnlholmh {
    #[prost(bool, tag = "3")]
    pub dpjgpimigfj: bool,
    #[prost(uint32, repeated, tag = "5")]
    pub blgjddidbnf: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "8")]
    pub start_time: u32,
    #[prost(uint32, tag = "9")]
    pub group_id: u32,
    #[prost(uint32, tag = "15")]
    pub mkcgmmganlk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Efegiimaomi {
    #[prost(message, repeated, tag = "1")]
    pub ifeachjaofc: ::prost::alloc::vec::Vec<Nihlppbhmnh>,
    #[prost(uint32, tag = "2")]
    pub apgnpjbhhhg: u32,
    #[prost(uint32, tag = "3")]
    pub mkpamnickdb: u32,
    #[prost(string, tag = "4")]
    pub kpiogbmlmem: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "5")]
    pub dbmccpkijpd: ::core::option::Option<Hdcgflbnllp>,
    #[prost(enumeration = "Fjcnemlgmmh", tag = "6")]
    pub ghimpddnahb: i32,
    #[prost(bool, tag = "7")]
    pub mccgabfjpbp: bool,
    #[prost(string, tag = "8")]
    pub ejhdnlgggmd: ::prost::alloc::string::String,
    #[prost(bool, tag = "9")]
    pub hlalmdgmpfm: bool,
    #[prost(uint32, tag = "10")]
    pub jelaikcaema: u32,
    #[prost(uint32, repeated, tag = "11")]
    pub tag_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint64, tag = "12")]
    pub mcppeknbhfk: u64,
    #[prost(uint32, tag = "13")]
    pub oajoobghagm: u32,
    #[prost(uint32, tag = "14")]
    pub llghfohibig: u32,
    #[prost(message, optional, tag = "15")]
    pub holkpjjeeim: ::core::option::Option<Cjceknnabgi>,
    #[prost(bool, tag = "742")]
    pub fpjdeeoogam: bool,
    #[prost(bool, tag = "1137")]
    pub acbcepmacil: bool,
    #[prost(uint32, tag = "1735")]
    pub fmbcnedboob: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gpkpbjdleco {
    #[prost(uint32, tag = "1")]
    pub apply_entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aoepjjadkga {
    #[prost(message, repeated, tag = "1")]
    pub fkpalflinel: ::prost::alloc::vec::Vec<Nnmgccbcfha>,
    #[prost(message, repeated, tag = "2")]
    pub alloligmfhf: ::prost::alloc::vec::Vec<Nppcmgnnkbg>,
    #[prost(message, repeated, tag = "3")]
    pub jjmknfpeijl: ::prost::alloc::vec::Vec<Ekhmdfiddod>,
    #[prost(message, repeated, tag = "6")]
    pub mdkplbdanef: ::prost::alloc::vec::Vec<Daiigopbcdd>,
    #[prost(message, repeated, tag = "9")]
    pub meobnieojdc: ::prost::alloc::vec::Vec<Bodjbnimhen>,
    #[prost(message, repeated, tag = "11")]
    pub gkhgokincmf: ::prost::alloc::vec::Vec<Bcdnfnmfijc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23704)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Keehjaegjep {
    #[prost(message, optional, tag = "7")]
    pub nganceicghc: ::core::option::Option<Ipffkfajbkn>,
    #[prost(uint32, tag = "11")]
    pub level_id: u32,
    #[prost(uint32, tag = "15")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5781)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ncefpcdbmhp {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(uint32, tag = "12")]
    pub uid: u32,
    #[prost(uint32, tag = "13")]
    pub cbbaclolncd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4453)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jlkolfapcea {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "9")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24631)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Efojlekkdfb {
    #[prost(uint32, tag = "1")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29228)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kiinbaccilm {
    #[prost(uint32, tag = "6")]
    pub cmdbcgaecdp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Clekknmlmcd {
    #[prost(message, optional, tag = "1")]
    pub amolhefinek: ::core::option::Option<Nhnljibhpmj>,
    #[prost(uint64, tag = "2")]
    pub mcppeknbhfk: u64,
    #[prost(uint32, tag = "3")]
    pub oajoobghagm: u32,
    #[prost(uint32, repeated, tag = "4")]
    pub tag_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, optional, tag = "7")]
    pub jniokocnmll: ::core::option::Option<Koedpmfbbnh>,
    #[prost(bool, tag = "8")]
    pub lpjchcadnpj: bool,
    #[prost(bool, tag = "10")]
    pub acbcepmacil: bool,
    #[prost(message, optional, tag = "11")]
    pub gdmmbpjhmco: ::core::option::Option<Bffdldjlhoi>,
    #[prost(message, optional, tag = "13")]
    pub hfemhjjoeej: ::core::option::Option<Lhcgihkbblc>,
    #[prost(uint32, tag = "14")]
    pub jflmafphflj: u32,
    #[prost(bool, tag = "15")]
    pub mpfdpnklhgl: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Iallekkfhcl {
    #[prost(uint32, repeated, tag = "2")]
    pub uid_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "4")]
    pub jnlgdefhndg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9367)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Omhjkmmdjeo {
    #[prost(message, repeated, tag = "4")]
    pub pgejgjmggog: ::prost::alloc::vec::Vec<Lfbopoggbpm>,
    #[prost(message, repeated, tag = "5")]
    pub igphgedlflb: ::prost::alloc::vec::Vec<Bngcifikllo>,
    #[prost(uint32, repeated, tag = "15")]
    pub knjflajmajj: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20441)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iidcmdeeeho {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(bool, tag = "3")]
    pub is_finish: bool,
    #[prost(bool, tag = "8")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "9")]
    pub level_id: u32,
    #[prost(uint32, tag = "12")]
    pub score: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fchicpcaagk {
    #[prost(string, tag = "1")]
    pub omknbnmebik: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "11")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
    #[prost(uint32, tag = "13")]
    pub uid: u32,
    #[prost(map = "uint32, uint32", tag = "14")]
    pub hbkgbnkkcbg: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24455)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Clcegdjofcg {
    #[prost(uint32, tag = "2")]
    pub parent_quest_id: u32,
    #[prost(message, repeated, tag = "7")]
    pub mkifgehebld: ::prost::alloc::vec::Vec<Cbmcenpmihi>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(863)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Elhhmlegpah {
    #[prost(message, repeated, tag = "6")]
    pub item_list: ::prost::alloc::vec::Vec<Item>,
    #[prost(enumeration = "StoreType", tag = "12")]
    pub store_type: i32,
    #[prost(enumeration = "Chlphbkbhoa", tag = "14")]
    pub imiogmdokcb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3344)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ffimdnnecml {
    #[prost(enumeration = "Jfjdmokldbn", tag = "13")]
    pub imiogmdokcb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hnkklhcmklm {
    #[prost(uint32, repeated, tag = "2")]
    pub meikgboldgh: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "3")]
    pub jmehmgcpfbo: u32,
    #[prost(uint32, tag = "4")]
    pub eaipgemknpo: u32,
    #[prost(bool, tag = "8")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "11")]
    pub bodiejclgmb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ombeifnnedf {
    #[prost(uint32, tag = "1")]
    pub key: u32,
    #[prost(uint32, tag = "2")]
    pub mdmmnleemdf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bnijmeiknij {
    #[prost(uint32, tag = "1")]
    pub ieeofjnpmlp: u32,
    #[prost(uint32, tag = "3")]
    pub item_id: u32,
    #[prost(uint32, tag = "4")]
    pub pdhnidhgfcj: u32,
    #[prost(uint32, tag = "14")]
    pub ebdopnocnil: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21594)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cpeoiffipdj {
    #[prost(uint32, tag = "10")]
    pub live_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5627)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bnnnlffaohh {
    #[prost(int32, tag = "12")]
    pub retcode: i32,
    #[prost(bool, tag = "15")]
    pub miigdddjden: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2114)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ikleaodndpf {
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1644)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gmibneefejj {
    #[prost(enumeration = "Abpkolenhap", tag = "1")]
    pub dhicfghanog: i32,
    #[prost(uint32, tag = "6")]
    pub level_id: u32,
    #[prost(uint32, tag = "9")]
    pub config_id: u32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8344)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PostEnterSceneReq {
    #[prost(uint32, tag = "8")]
    pub enter_scene_token: u32,
    #[prost(double, tag = "9")]
    pub total_tick_time: f64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1694)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Geijbbjnbji {
    #[prost(message, repeated, tag = "4")]
    pub lbaibbcdaih: ::prost::alloc::vec::Vec<Nenebpfhckd>,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22814)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cndcgbfgndk {
    #[prost(message, repeated, tag = "15")]
    pub fidjdhjoebn: ::prost::alloc::vec::Vec<Ombeifnnedf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5175)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jmfelhlblcl {
    #[prost(uint32, tag = "2")]
    pub scene_id: u32,
    #[prost(uint32, repeated, tag = "4")]
    pub hdigmjmlpdp: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23204)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Adcdcmecffd {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Abaganpioid {
    #[prost(fixed32, tag = "1")]
    pub figbkbnadgl: u32,
    #[prost(string, tag = "2")]
    pub name: ::prost::alloc::string::String,
    #[prost(uint32, repeated, tag = "4")]
    pub npmpjingpof: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "5")]
    pub id: u32,
    #[prost(uint32, tag = "7")]
    pub pijfdbikfkb: u32,
    #[prost(uint32, repeated, tag = "10")]
    pub jahppelnedf: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "11")]
    pub bpappfhmkmk: u32,
    #[prost(bool, tag = "13")]
    pub ghajnbeheej: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28255)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hfbjjdmafia {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27868)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Abdacajbbfj {
    #[prost(message, repeated, tag = "11")]
    pub ifipfmljpgc: ::prost::alloc::vec::Vec<Bgpahbmkbag>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Acekdebfimc {
    #[prost(uint32, repeated, tag = "3")]
    pub eifailjdgdg: ::prost::alloc::vec::Vec<u32>,
    #[prost(enumeration = "Ndbdleknhmf", tag = "4")]
    pub r#type: i32,
    #[prost(bool, repeated, tag = "10")]
    pub bfocpkjnllm: ::prost::alloc::vec::Vec<bool>,
    #[prost(map = "uint32, uint32", tag = "11")]
    pub jblnjpigcge: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26884)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ecfgahnjhln {
    #[prost(uint32, tag = "15")]
    pub caeoniplbjc: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bjghdocnfnb {
    #[prost(bool, tag = "1")]
    pub bpcadambfec: bool,
    #[prost(uint32, tag = "2")]
    pub start_time: u32,
    #[prost(uint32, tag = "4")]
    pub obclcjejiml: u32,
    #[prost(uint32, tag = "5")]
    pub scene_id: u32,
    #[prost(bool, tag = "6")]
    pub onaeefjepdh: bool,
    #[prost(uint32, tag = "7")]
    pub anebadhkilo: u32,
    #[prost(uint32, tag = "8")]
    pub region_id: u32,
    #[prost(message, optional, tag = "9")]
    pub bkbnbipfbcf: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "13")]
    pub heaimcnhhbi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24779)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Khjefginjeh {
    #[prost(uint32, tag = "5")]
    pub kmkgjolhlih: u32,
    #[prost(bool, tag = "14")]
    pub hdnildcefmg: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22577)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Neldlaoncjo {
    #[prost(message, repeated, tag = "6")]
    pub bnjojbopmfj: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(uint64, repeated, tag = "8")]
    pub njcafaagmjk: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint64, tag = "12")]
    pub aghciclcick: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3128)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Miikjglfhcd {
    #[prost(uint32, tag = "12")]
    pub lmhigpdfffe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26617)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Igambegpfel {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
    #[prost(uint32, tag = "11")]
    pub finahglfhag: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20555)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Afglolggmbf {
    #[prost(uint32, tag = "10")]
    pub ggcfiehankk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29497)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Iponccdlkgh {
    #[prost(message, repeated, tag = "3")]
    pub maoijffgide: ::prost::alloc::vec::Vec<Pkgoclimoig>,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
    #[prost(uint32, tag = "12")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6328)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cochhclepmh {
    #[prost(message, repeated, tag = "7")]
    pub gbfinickijo: ::prost::alloc::vec::Vec<Fobpmoeflgh>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1356)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cjpadpcnfdl {
    #[prost(uint32, repeated, tag = "1")]
    pub eflpdcodoab: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(bool, tag = "12")]
    pub okbjjgemmke: bool,
    #[prost(bool, tag = "14")]
    pub pkcnafaffgd: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fdpmmpgalad {
    #[prost(uint32, tag = "5")]
    pub level_id: u32,
    #[prost(bool, tag = "7")]
    pub pjjdjmgpnle: bool,
    #[prost(bool, tag = "8")]
    pub pmjlllfophk: bool,
    #[prost(uint32, tag = "11")]
    pub ofnmjncbnhk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ogkdehbnjlm {
    #[prost(enumeration = "Dhdebbipiif", tag = "3")]
    pub ckehablghnn: i32,
    #[prost(uint32, tag = "11")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26881)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jacafgmcnki {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jbdamfepjhd {
    #[prost(uint32, repeated, tag = "6")]
    pub olkacabnmfp: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9151)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mbnkalcplnd {
    #[prost(uint32, repeated, tag = "14")]
    pub iljaihiigfb: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "11")]
    pub gcagmgalcjp: u32,
    #[prost(uint32, tag = "7")]
    pub avatar_entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27010)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jndlpnjgmfj {
    #[prost(uint32, tag = "6")]
    pub fpjcjmgoape: u32,
    #[prost(uint64, tag = "2")]
    pub avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ajfhodjafkf {
    #[prost(message, optional, tag = "1")]
    pub dkaoiabpljm: ::core::option::Option<Memahnajibf>,
    #[prost(message, optional, tag = "3")]
    pub pplmjpjogck: ::core::option::Option<Memahnajibf>,
    #[prost(message, optional, tag = "5")]
    pub igeaobljcje: ::core::option::Option<Memahnajibf>,
    #[prost(message, repeated, tag = "6")]
    pub jahppelnedf: ::prost::alloc::vec::Vec<Mkbmdcgmieo>,
    #[prost(uint32, tag = "10")]
    pub ooipgfedjmn: u32,
    #[prost(uint32, tag = "11")]
    pub hhmcfaippkb: u32,
    #[prost(message, optional, tag = "12")]
    pub kcmkcccmmio: ::core::option::Option<Memahnajibf>,
    #[prost(map = "uint32, message", tag = "13")]
    pub jipmfflhkom: ::std::collections::HashMap<u32, Memahnajibf>,
    #[prost(message, optional, tag = "15")]
    pub afimmkiapmh: ::core::option::Option<Memahnajibf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3478)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Akbdemhdnnm {
    #[prost(uint32, tag = "14")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pkbdlalmjml {
    #[prost(uint32, tag = "3")]
    pub pingabdelme: u32,
    #[prost(uint32, tag = "6")]
    pub id: u32,
    #[prost(bool, tag = "8")]
    pub fglohnkkppg: bool,
    #[prost(enumeration = "Ephalejpikm", tag = "10")]
    pub iigdikakpcc: i32,
    #[prost(uint32, repeated, tag = "12")]
    pub kbgfigbangk: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24224)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bhflebcflbd {
    #[prost(uint32, tag = "8")]
    pub lmebmmbegkm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Clhnpakhdgh {
    #[prost(uint32, tag = "1")]
    pub state: u32,
    #[prost(uint32, tag = "4")]
    pub cjbplnmneil: u32,
    #[prost(uint32, tag = "5")]
    pub city_id: u32,
    #[prost(uint32, tag = "6")]
    pub jcmchgnnlmj: u32,
    #[prost(uint32, tag = "8")]
    pub ffobionlmoj: u32,
    #[prost(uint32, tag = "9")]
    pub resin: u32,
    #[prost(uint32, tag = "10")]
    pub lbgllpjcdog: u32,
    #[prost(uint32, tag = "11")]
    pub scene_id: u32,
    #[prost(message, optional, tag = "12")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "13")]
    pub dmlnkpnoono: u32,
    #[prost(bool, tag = "15")]
    pub pgmabdggpnb: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lpcbhdppgpe {
    #[prost(uint32, tag = "2")]
    pub config_id: u32,
    #[prost(string, tag = "3")]
    pub name: ::prost::alloc::string::String,
    #[prost(int32, tag = "11")]
    pub mdmmnleemdf: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22293)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kphfhnmimlj {
    #[prost(uint32, tag = "10")]
    pub lmppebimkfa: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ejpdlplcajh {
    #[prost(bool, tag = "1")]
    pub mejmlahlnbo: bool,
    #[prost(bool, tag = "4")]
    pub odpcpoieoke: bool,
    #[prost(bool, tag = "7")]
    pub lobcpcbbfll: bool,
    #[prost(message, repeated, tag = "10")]
    pub bjjlcocobnm: ::prost::alloc::vec::Vec<Fkncpohepdn>,
    #[prost(message, repeated, tag = "14")]
    pub oamhnffohlo: ::prost::alloc::vec::Vec<Vector>,
    #[prost(uint32, repeated, tag = "15")]
    pub epbmkilnpji: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7109)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Opdeliljapo {
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Majeeohebab {
    #[prost(uint32, repeated, tag = "3")]
    pub ifjjefnmkfd: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "4")]
    pub llomlfjhalg: u32,
    #[prost(uint32, repeated, tag = "9")]
    pub hagmcpponfg: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "14")]
    pub hbbjnnljhog: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "15")]
    pub bcicolaifmo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22911)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pcghedhdabj {
    #[prost(message, repeated, tag = "1")]
    pub mbgionpocad: ::prost::alloc::vec::Vec<Kpnckgfnnim>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ggachihjidh {
    #[prost(message, repeated, tag = "8")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Enckbcppnhg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2597)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jnempglcnej {
    #[prost(uint32, tag = "8")]
    pub bamhgamioeg: u32,
    #[prost(message, optional, tag = "10")]
    pub hbincfpjjka: ::core::option::Option<Ihaddlgihgb>,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mlchejglcof {
    #[prost(bool, tag = "2")]
    pub jhifchhafbn: bool,
    #[prost(float, tag = "8")]
    pub glinalfpdfe: f32,
    #[prost(float, tag = "9")]
    pub kmhphnplgpj: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kcmcfimegnk {
    #[prost(uint32, tag = "12")]
    pub target_entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(810)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ofninjfgcmg {
    #[prost(uint32, repeated, tag = "2")]
    pub mmmcbgkhddm: ::prost::alloc::vec::Vec<u32>,
    #[prost(enumeration = "Deliifbapel", tag = "9")]
    pub r#type: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pfpcomibmjc {
    #[prost(uint32, tag = "1")]
    pub nmpkofeakli: u32,
    #[prost(uint32, tag = "5")]
    pub mndaajnejjm: u32,
    #[prost(uint32, tag = "8")]
    pub alelloighna: u32,
    #[prost(uint32, tag = "9")]
    pub iddchfgaglk: u32,
    #[prost(uint32, tag = "15")]
    pub gbdcfodaaai: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27590)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fadioclcnmc {
    #[prost(uint32, tag = "15")]
    pub hoejahkajbo: u32,
    #[prost(uint32, tag = "10")]
    pub aahipcacehn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1746)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nglmokohlik {
    #[prost(uint32, tag = "1")]
    pub finahglfhag: u32,
    #[prost(message, repeated, tag = "7")]
    pub item_list: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "15")]
    pub blgjddidbnf: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1352)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cklikbenooh {
    #[prost(uint32, repeated, tag = "1")]
    pub doalegicgkl: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, optional, tag = "6")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "11")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26275)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Niggiodjjhb {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3800)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oepbnlelcal {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25884)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ghpicemgojd {
    #[prost(uint32, tag = "3")]
    pub lihhcnjjaja: u32,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Olncpfjiekm {
    #[prost(uint32, tag = "1")]
    pub cchopbcadig: u32,
    #[prost(uint64, tag = "4")]
    pub avatar_guid: u64,
    #[prost(float, tag = "8")]
    pub pgiioibnkke: f32,
    #[prost(uint32, tag = "9")]
    pub mimeiglbopi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25101)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jkhhcpdjkbe {
    #[prost(uint32, tag = "11")]
    pub gjnoljflfkf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25285)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jmfinmnbcoc {
    #[prost(uint32, tag = "8")]
    pub cnaifgicldh: u32,
    #[prost(uint32, tag = "2")]
    pub bpappfhmkmk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ijffcjiolal {
    #[prost(message, repeated, tag = "14")]
    pub cgielifmplc: ::prost::alloc::vec::Vec<Bpglmdckbcp>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9357)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Benchdgipoj {
    #[prost(uint32, tag = "13")]
    pub offering_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7533)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cljcgcbdpje {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "11")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8977)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pflkanapehm {
    #[prost(uint32, tag = "12")]
    pub nbaajidhgbn: u32,
    #[prost(uint32, tag = "11")]
    pub egepgiogikj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8694)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pnpedphaajn {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6207)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hmcjipjjpkp {
    #[prost(uint32, tag = "5")]
    pub poecpaaaloe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24598)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gbcefabfnpp {
    #[prost(bool, tag = "7")]
    pub ddedaapcepd: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Olfjmodnknj {
    #[prost(float, tag = "6")]
    pub gllnfcegcjn: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hgjdncckhae {
    #[prost(uint32, repeated, tag = "1")]
    pub uid_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Llpeegbjofa {
    #[prost(bool, tag = "7")]
    pub cflbhgmkapa: bool,
    #[prost(uint32, tag = "8")]
    pub ipeihflkpji: u32,
    #[prost(message, repeated, tag = "9")]
    pub mieafinbndk: ::prost::alloc::vec::Vec<Lcfcocgnpom>,
    #[prost(uint32, tag = "10")]
    pub oelcnlojhhe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4216)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gigaedngcng {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(bool, tag = "12")]
    pub jdmpiannmgk: bool,
    #[prost(uint32, tag = "13")]
    pub cbpdgcponhm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22387)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oihlfjgehmk {
    #[prost(uint32, tag = "13")]
    pub ggcfiehankk: u32,
    #[prost(bool, tag = "2")]
    pub daphocnhdfm: bool,
    #[prost(uint64, tag = "12")]
    pub ihgjlfcgfin: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct EntityMoveInfo {
    #[prost(uint32, tag = "1")]
    pub entity_id: u32,
    #[prost(message, optional, tag = "2")]
    pub motion_info: ::core::option::Option<MotionInfo>,
    #[prost(uint32, tag = "3")]
    pub scene_time: u32,
    #[prost(uint32, tag = "4")]
    pub reliable_seq: u32,
    #[prost(bool, tag = "5")]
    pub is_reliable: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9338)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jlcceabbnfp {
    #[prost(message, repeated, tag = "1")]
    pub pjeaflcjbjf: ::prost::alloc::vec::Vec<Mogbomkepkn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8098)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lcmbapdjcdn {
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2557)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fopfpnmjnfm {
    #[prost(message, repeated, tag = "5")]
    pub ialagdbikkd: ::prost::alloc::vec::Vec<Aodebpfbiml>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7696)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Phejonannpg {
    #[prost(uint32, tag = "14")]
    pub uid: u32,
    #[prost(uint32, tag = "6")]
    pub param: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(111)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mljaocojhce {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28005)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ocifocndika {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ekfgghclomj {
    #[prost(uint32, tag = "3")]
    pub bfkiongooma: u32,
    #[prost(bool, tag = "5")]
    pub npcjheagenl: bool,
    #[prost(uint32, tag = "6")]
    pub ipckmfginnn: u32,
    #[prost(bool, tag = "8")]
    pub kejceockacl: bool,
    #[prost(bool, tag = "14")]
    pub bhmchkhhhop: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8440)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ejhcdgpakcd {
    #[prost(uint32, tag = "5")]
    pub ebjejlglodb: u32,
    #[prost(uint32, tag = "7")]
    pub jaaekgkmado: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21981)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Penlbihibgk {
    #[prost(message, repeated, tag = "14")]
    pub ihakigdpmbg: ::prost::alloc::vec::Vec<Fndlklbaapg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jcjcmaibcao {
    #[prost(uint32, tag = "3")]
    pub guid: u32,
    #[prost(message, repeated, tag = "5")]
    pub pmedikcgdhm: ::prost::alloc::vec::Vec<CustomCommonNodeInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6384)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dmgiacilaie {
    #[prost(bool, tag = "4")]
    pub nonhlhoihnl: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pnbpkfnhmhm {
    #[prost(message, repeated, tag = "1")]
    pub ocbmakjjclh: ::prost::alloc::vec::Vec<Oaaocklkagg>,
    #[prost(message, repeated, tag = "7")]
    pub kfmlfnfghph: ::prost::alloc::vec::Vec<Khdnochbacf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28747)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oaphicaielm {
    #[prost(uint32, tag = "2")]
    pub config_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29467)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ajgkbhijfgj {
    #[prost(uint32, tag = "3")]
    pub mp_play_id: u32,
    #[prost(bool, tag = "4")]
    pub mihonjccajc: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AttackResult {
    #[prost(uint32, tag = "1")]
    pub attacker_id: u32,
    #[prost(uint32, tag = "2")]
    pub hmjekdgklpg: u32,
    #[prost(message, optional, tag = "3")]
    pub hobmoklmage: ::core::option::Option<Nnihkekcjoc>,
    #[prost(uint32, tag = "5")]
    pub element_type: u32,
    #[prost(message, optional, tag = "6")]
    pub resolved_dir: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "7")]
    pub ability_identifier: ::core::option::Option<AbilityIdentifier>,
    #[prost(bool, tag = "8")]
    pub is_crit: bool,
    #[prost(message, optional, tag = "9")]
    pub klokigjhdkm: ::core::option::Option<Hknapemkpmk>,
    #[prost(float, tag = "11")]
    pub damage: f32,
    #[prost(uint32, tag = "12")]
    pub defense_id: u32,
    #[prost(uint32, tag = "13")]
    pub nmppbnabhbn: u32,
    #[prost(string, tag = "14")]
    pub anim_event_id: ::prost::alloc::string::String,
    #[prost(int32, tag = "15")]
    pub hit_retreat_angle_compat: i32,
    #[prost(uint32, tag = "574")]
    pub cejkbikgfbo: u32,
    #[prost(uint32, tag = "595")]
    pub phmkcgjjdcf: u32,
    #[prost(bool, tag = "873")]
    pub fkijjkcgmmg: bool,
    #[prost(uint32, tag = "984")]
    pub plnmalbaegn: u32,
    #[prost(float, tag = "1008")]
    pub kaimmlbndmk: f32,
    #[prost(bool, tag = "1247")]
    pub amepnajajie: bool,
    #[prost(uint32, tag = "1375")]
    pub hgnfgakleca: u32,
    #[prost(uint32, tag = "1480")]
    pub ljjgocdlhin: u32,
    #[prost(uint32, tag = "1569")]
    pub khlfcffepeh: u32,
    #[prost(float, tag = "1631")]
    pub ijebkonhnjp: f32,
    #[prost(uint32, tag = "1753")]
    pub iahcfckfiif: u32,
    #[prost(bool, tag = "1754")]
    pub oicofcibcel: bool,
    #[prost(uint32, tag = "1762")]
    pub oofacpbghoh: u32,
    #[prost(uint32, tag = "1891")]
    pub dggnpabbmij: u32,
    #[prost(uint32, tag = "1972")]
    pub fhkmmeicpbk: u32,
    #[prost(float, tag = "1981")]
    pub iefbeiflhnp: f32,
    #[prost(uint32, tag = "1992")]
    pub fjodcejnnhe: u32,
    #[prost(float, tag = "2002")]
    pub binccafdhcl: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4452)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nflchlcafed {
    #[prost(message, repeated, tag = "8")]
    pub param_list: ::prost::alloc::vec::Vec<Cacglibjiie>,
    #[prost(enumeration = "Kpfoblalblc", tag = "15")]
    pub daakpcoabep: i32,
    #[prost(bool, tag = "3")]
    pub pkggncglppn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21298)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ikcnjipppac {
    #[prost(uint32, tag = "11")]
    pub bilekhiened: u32,
    #[prost(uint32, tag = "2")]
    pub mlinpdnfaio: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hfhjkhoplmn {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, tag = "2")]
    pub param: u32,
    #[prost(uint32, tag = "3")]
    pub facklfmmmgh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Angojdkjbbn {
    #[prost(uint32, tag = "8")]
    pub ikbfiipcbae: u32,
    #[prost(uint32, tag = "10")]
    pub bodiejclgmb: u32,
    #[prost(uint32, tag = "11")]
    pub eaipgemknpo: u32,
    #[prost(bool, tag = "12")]
    pub glkngddnocn: bool,
    #[prost(bool, tag = "15")]
    pub pmjlllfophk: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26522)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hhhfpckijjg {
    #[prost(uint32, repeated, tag = "12")]
    pub jfineeijljf: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24803)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hofgckhkmcb {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(bool, tag = "11")]
    pub koidlieiodn: bool,
    #[prost(uint32, tag = "14")]
    pub iadkemlaeae: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lcfcocgnpom {
    #[prost(uint32, repeated, tag = "14")]
    pub ieldikdklai: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kpddljecbcj {
    #[prost(message, optional, tag = "2")]
    pub bkneejgdlno: ::core::option::Option<Mjogigomgjo>,
    #[prost(message, optional, tag = "4")]
    pub lcejjhalmmj: ::core::option::Option<Fnmjnfhdlfa>,
    #[prost(message, optional, tag = "9")]
    pub kcblafeckch: ::core::option::Option<Dpogefjbhlg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UnionCmd {
    #[prost(bytes = "vec", tag = "2")]
    pub body: ::prost::alloc::vec::Vec<u8>,
    #[prost(uint32, tag = "13")]
    pub message_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21044)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hejbklpmajf {
    #[prost(uint32, tag = "2")]
    pub fpjcjmgoape: u32,
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint64, tag = "7")]
    pub avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kcbpeegbflm {
    #[prost(message, repeated, tag = "3")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Albkmfedbhi>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9716)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kpkjdcafemg {
    #[prost(uint32, tag = "9")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3197)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ohgkieedhpd {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26696)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hddojmnpakc {
    #[prost(uint32, repeated, tag = "11")]
    pub kpllbbdhkoa: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23319)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jppbplbhppe {
    #[prost(uint32, tag = "10")]
    pub ilfeimmpfik: u32,
    #[prost(uint32, tag = "11")]
    pub enjfkdncomg: u32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Djmchpnhkij {
    #[prost(enumeration = "Jkobefdemme", tag = "3")]
    pub aidpdnkddnf: i32,
    #[prost(uint32, tag = "5")]
    pub ncafichelee: u32,
    #[prost(enumeration = "Klgpddijgjm", tag = "6")]
    pub iieilnhpcji: i32,
    #[prost(uint32, tag = "9")]
    pub ilabdgbnjdp: u32,
    #[prost(uint32, tag = "13")]
    pub gijeeflmjfe: u32,
    #[prost(uint32, tag = "14")]
    pub dccchkbighp: u32,
    #[prost(uint32, tag = "15")]
    pub figjpncnocj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22392)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cpllkbbibln {
    #[prost(message, repeated, tag = "11")]
    pub kbabflfnjdi: ::prost::alloc::vec::Vec<Nbdhfhkmlfd>,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21739)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eiiijgpifbn {
    #[prost(uint32, tag = "6")]
    pub dnbefljlamb: u32,
    #[prost(uint32, tag = "12")]
    pub bdeflcdkdbi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Llcghkfbadc {
    #[prost(uint64, tag = "2")]
    pub server_game_time: u64,
    #[prost(uint64, tag = "13")]
    pub client_game_time: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20677)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lpdpomjbkoh {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20592)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ioihondegmd {
    #[prost(uint32, repeated, tag = "4")]
    pub mjaoninhiib: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6704)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gegkocapgch {
    #[prost(uint32, tag = "1")]
    pub opcgoapbjha: u32,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23643)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fnpkjjkhhcb {
    #[prost(uint32, tag = "8")]
    pub parent_quest_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8187)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oifkkanpolf {
    #[prost(uint32, tag = "1")]
    pub gllebfhmbbe: u32,
    #[prost(uint32, tag = "8")]
    pub dbkkkmekici: u32,
    #[prost(uint32, tag = "9")]
    pub kaalkocaohk: u32,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
    #[prost(uint32, tag = "12")]
    pub eoihallmgal: u32,
    #[prost(uint32, tag = "13")]
    pub jkoalmbcjfe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mgoaeaigbok {
    #[prost(uint32, tag = "6")]
    pub entity_id: u32,
    #[prost(uint32, tag = "9")]
    pub start_time: u32,
    #[prost(uint32, tag = "12")]
    pub end_time: u32,
    #[prost(uint32, tag = "13")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28687)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ndpfmfojnip {
    #[prost(uint32, repeated, tag = "13")]
    pub eannpnknlfg: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fdjcebepfad {
    #[prost(message, optional, tag = "1")]
    pub anbalajjojb: ::core::option::Option<Pcbpkglmoap>,
    #[prost(message, optional, tag = "2")]
    pub pemoigkjagh: ::core::option::Option<Cbiagekfjbb>,
    #[prost(message, optional, tag = "6")]
    pub mckcaklecjf: ::core::option::Option<Fjloaadfjol>,
    #[prost(message, optional, tag = "9")]
    pub bpneapbaine: ::core::option::Option<Kmlaihinclk>,
    #[prost(message, optional, tag = "11")]
    pub gakclbinmhf: ::core::option::Option<Cnhoejppnnm>,
    #[prost(message, optional, tag = "12")]
    pub kljidfjclda: ::core::option::Option<Hbnhjhamkdp>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ffbmiohkkhe {
    #[prost(uint32, tag = "2")]
    pub mbdfamekckb: u32,
    #[prost(uint32, tag = "3")]
    pub config_id: u32,
    #[prost(uint32, tag = "4")]
    pub mhjhgimlhln: u32,
    #[prost(uint32, tag = "11")]
    pub iimplhjpkna: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Phdaeehjbba {
    #[prost(message, optional, tag = "1")]
    pub hpoeckekafa: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "2")]
    pub dhjocooijho: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "3")]
    pub oihljnindko: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "4")]
    pub jebpfaacnkd: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "5")]
    pub ejnocldgpef: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fdamhalddli {
    #[prost(uint32, tag = "3")]
    pub ednalckijpg: u32,
    #[prost(message, optional, tag = "4")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
    #[prost(message, optional, tag = "5")]
    pub fgaeincckdk: ::core::option::Option<Hgmnlagdfdc>,
    #[prost(string, tag = "6")]
    pub omknbnmebik: ::prost::alloc::string::String,
    #[prost(bool, tag = "7")]
    pub omeniamedce: bool,
    #[prost(string, tag = "9")]
    pub efajihmnobk: ::prost::alloc::string::String,
    #[prost(uint32, tag = "11")]
    pub dpbdbmiiomp: u32,
    #[prost(bool, tag = "12")]
    pub knjppifofme: bool,
    #[prost(enumeration = "Dmajhdnkedi", tag = "13")]
    pub amlijkeniin: i32,
    #[prost(message, repeated, tag = "14")]
    pub hcejpkiajap: ::prost::alloc::vec::Vec<Hfhjkhoplmn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dinonclfblj {
    #[prost(uint32, repeated, tag = "4")]
    pub ogedlbmhnim: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "12")]
    pub lhebdobkemj: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24127)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Epkbglnnaei {
    #[prost(uint32, tag = "11")]
    pub lhflnpkfdki: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22626)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Onhgnciaiij {
    #[prost(uint32, tag = "8")]
    pub nlahjgcjdei: u32,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Igodkmgocfi {
    #[prost(bool, tag = "1")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "2")]
    pub hopfhnnpbdd: u32,
    #[prost(uint32, tag = "3")]
    pub kngjhmllcnp: u32,
    #[prost(uint32, repeated, tag = "4")]
    pub bcngfadbefe: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "6")]
    pub heleegcnjge: u32,
    #[prost(uint32, tag = "7")]
    pub enlbbghhhjp: u32,
    #[prost(bool, tag = "10")]
    pub is_finish: bool,
    #[prost(uint32, tag = "12")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27725)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kdkcdjfgchd {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4389)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aanjojkpmcc {
    #[prost(message, repeated, tag = "6")]
    pub emfpghfeacj: ::prost::alloc::vec::Vec<Jbnlghjjkmo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cljnapnhblo {
    #[prost(bool, tag = "2")]
    pub is_finish: bool,
    #[prost(message, optional, tag = "4")]
    pub bkbnbipfbcf: ::core::option::Option<Vector>,
    #[prost(float, tag = "5")]
    pub obclcjejiml: f32,
    #[prost(uint32, tag = "8")]
    pub scene_id: u32,
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
    #[prost(uint32, tag = "11")]
    pub iejpghnlidb: u32,
    #[prost(uint32, repeated, tag = "13")]
    pub foohnbbihnb: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "14")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23268)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cfkloaeomll {
    #[prost(uint32, tag = "1")]
    pub bdeflcdkdbi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AbilityControlBlock {
    #[prost(message, repeated, tag = "1")]
    pub ability_embryo_list: ::prost::alloc::vec::Vec<AbilityEmbryo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27023)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Djmdmlmpemd {
    #[prost(bool, tag = "12")]
    pub hjkkldgpjod: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fodheifhdjb {
    #[prost(message, optional, tag = "2")]
    pub dhkjkgigjdg: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "6")]
    pub bnheafcgijm: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "9")]
    pub avatar_id: u32,
    #[prost(uint32, tag = "13")]
    pub costume_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9025)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nbnnhdfeekn {
    #[prost(message, optional, tag = "7")]
    pub deoeeiamgke: ::core::option::Option<Djnokaemjai>,
    #[prost(uint32, tag = "12")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SceneAvatarInfo {
    #[prost(uint32, tag = "1")]
    pub uid: u32,
    #[prost(uint32, tag = "2")]
    pub avatar_id: u32,
    #[prost(uint64, tag = "3")]
    pub guid: u64,
    #[prost(uint32, tag = "4")]
    pub peer_id: u32,
    #[prost(uint32, repeated, tag = "5")]
    pub equip_id_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "6")]
    pub skill_depot_id: u32,
    #[prost(uint32, repeated, tag = "7")]
    pub talent_id_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, optional, tag = "8")]
    pub weapon: ::core::option::Option<SceneWeaponInfo>,
    #[prost(message, repeated, tag = "9")]
    pub reliquary_list: ::prost::alloc::vec::Vec<SceneReliquaryInfo>,
    #[prost(uint32, tag = "11")]
    pub core_proud_skill_level: u32,
    #[prost(uint32, repeated, tag = "12")]
    pub inherent_proud_skill_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(map = "uint32, uint32", tag = "13")]
    pub skill_level_map: ::std::collections::HashMap<u32, u32>,
    #[prost(map = "uint32, uint32", tag = "14")]
    pub proud_skill_extra_level_map: ::std::collections::HashMap<u32, u32>,
    #[prost(message, repeated, tag = "15")]
    pub server_buff_list: ::prost::alloc::vec::Vec<ServerBuff>,
    #[prost(uint32, repeated, tag = "16")]
    pub team_resonance_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "17")]
    pub wearing_flycloak_id: u32,
    #[prost(uint32, tag = "18")]
    pub born_time: u32,
    #[prost(uint32, tag = "19")]
    pub costume_id: u32,
    #[prost(message, optional, tag = "20")]
    pub cur_vehicle_info: ::core::option::Option<CurVehicleInfo>,
    #[prost(message, optional, tag = "21")]
    pub excel_info: ::core::option::Option<AvatarExcelInfo>,
    #[prost(uint32, tag = "22")]
    pub anim_hash: u32,
    #[prost(uint32, tag = "23")]
    pub dpmaabplgdp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Elcbgecgeon {
    #[prost(bool, tag = "3")]
    pub opdlmakhbfh: bool,
    #[prost(uint32, repeated, tag = "5")]
    pub pceddkjhkaa: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "11")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "12")]
    pub jkpcjabbgjb: u32,
    #[prost(uint32, tag = "13")]
    pub bodiejclgmb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1207)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bbakobnmife {
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Anbhhdkcden {
    #[prost(uint32, tag = "1")]
    pub okdgooakcpa: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bjkfjpjdmic {
    #[prost(message, repeated, tag = "10")]
    pub lapnpeiacnl: ::prost::alloc::vec::Vec<Ombeifnnedf>,
    #[prost(uint32, tag = "14")]
    pub dajhkhflndj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9695)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hojfdbifdhg {
    #[prost(uint32, tag = "6")]
    pub infnhamfbbl: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28466)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kpddndodkcj {
    #[prost(message, optional, tag = "8")]
    pub ibeakhhnohb: ::core::option::Option<Hcjgifnjppj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2586)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ofkopfkniak {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(uint32, tag = "15")]
    pub poaficpfpcj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Memahnajibf {
    #[prost(uint32, repeated, tag = "15")]
    pub jahppelnedf: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21223)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jcmbbdhchcj {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26934)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gnifdfikmnd {
    #[prost(uint32, tag = "3")]
    pub kngbdmdcnhk: u32,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(message, optional, tag = "11")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "15")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2889)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Geecieliabf {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint64, tag = "4")]
    pub avatar_guid: u64,
    #[prost(bool, tag = "9")]
    pub is_focus: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ejoollblonf {
    #[prost(message, repeated, tag = "1")]
    pub pbmallchinh: ::prost::alloc::vec::Vec<Okfhjlfojep>,
    #[prost(message, optional, tag = "2")]
    pub jcikcoigocc: ::core::option::Option<Okfhjlfojep>,
    #[prost(uint32, tag = "4")]
    pub glmjfmijhfg: u32,
    #[prost(uint32, tag = "6")]
    pub hjdhndkglbi: u32,
    #[prost(uint32, tag = "7")]
    pub gjapdgaeeil: u32,
    #[prost(uint32, tag = "8")]
    pub ngdhecpojla: u32,
    #[prost(bool, tag = "9")]
    pub pclgffkmcpj: bool,
    #[prost(uint32, tag = "10")]
    pub cdjlkddahjo: u32,
    #[prost(message, optional, tag = "11")]
    pub kaicfchaidk: ::core::option::Option<Lgkbcfaiiaa>,
    #[prost(uint32, tag = "13")]
    pub fibdhbcimmp: u32,
    #[prost(uint32, tag = "14")]
    pub ejegbcjfoje: u32,
    #[prost(uint32, tag = "15")]
    pub bcimajklbjp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5423)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aphobabbdil {
    #[prost(uint32, tag = "15")]
    pub ddjfglfngjc: u32,
    #[prost(uint32, tag = "9")]
    pub himdchgjoal: u32,
    #[prost(uint32, tag = "12")]
    pub ghlbjahjehf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25220)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Acpbfbmlklc {
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Albkmfedbhi {
    #[prost(uint32, tag = "2")]
    pub score: u32,
    #[prost(bool, tag = "3")]
    pub is_finish: bool,
    #[prost(uint32, tag = "5")]
    pub fjapapjhjjd: u32,
    #[prost(uint32, tag = "6")]
    pub ogdcenflhjn: u32,
    #[prost(uint32, tag = "8")]
    pub level_id: u32,
    #[prost(bool, tag = "13")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "14")]
    pub monejdbpolb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3522)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kicnblcibhn {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ebponabnlje {
    #[prost(message, repeated, tag = "1")]
    pub njbfnifmokj: ::prost::alloc::vec::Vec<Mpmgngljgjp>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kepedpmnkmh {
    #[prost(message, repeated, tag = "14")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Hgnefonjjnm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1306)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dgncaefmeii {
    #[prost(message, optional, tag = "15")]
    pub cjihnocinnm: ::core::option::Option<Fggkifngdon>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(195)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mjpadfecmmd {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jkpcbhippnc {
    #[prost(uint32, tag = "1")]
    pub bcflcmfhamk: u32,
    #[prost(bool, tag = "2")]
    pub lakingcakkd: bool,
    #[prost(uint32, tag = "3")]
    pub dpogbjnkiem: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21561)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oenmjabfhlo {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29966)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Khifegdfaln {
    #[prost(uint32, tag = "9")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cnhhcbommbh {
    #[prost(uint32, tag = "5")]
    pub mkcgmmganlk: u32,
    #[prost(uint32, tag = "10")]
    pub iejpghnlidb: u32,
    #[prost(uint32, tag = "15")]
    pub bdeflcdkdbi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22979)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jddfmafghbd {
    #[prost(bool, tag = "6")]
    pub nonhlhoihnl: bool,
    #[prost(uint32, tag = "8")]
    pub player_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9662)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hipfmjicmng {
    #[prost(map = "uint32, message", tag = "7")]
    pub ilmgjblmjee: ::std::collections::HashMap<u32, PropValue>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8369)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jfdhhjplkjc {
    #[prost(message, repeated, tag = "4")]
    pub gldahckimkc: ::prost::alloc::vec::Vec<Mkkmacfgjbg>,
    #[prost(int32, tag = "8")]
    pub cioehkecdpo: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25352)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pokkldpmbmn {
    #[prost(uint32, tag = "13")]
    pub gablkaaecjb: u32,
    #[prost(uint32, tag = "15")]
    pub level_id: u32,
    #[prost(uint32, tag = "6")]
    pub hoceceaalmd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21723)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lehbmgancob {
    #[prost(uint32, repeated, tag = "11")]
    pub pkhpobdcgom: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gembindeeeh {
    #[prost(uint32, repeated, tag = "6")]
    pub kclaoonlhgf: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "9")]
    pub eaipgemknpo: u32,
    #[prost(bool, tag = "10")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "11")]
    pub bodiejclgmb: u32,
    #[prost(uint32, tag = "15")]
    pub jmehmgcpfbo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct VehicleInfo {
    #[prost(message, repeated, tag = "1")]
    pub member_list: ::prost::alloc::vec::Vec<VehicleMember>,
    #[prost(uint32, tag = "2")]
    pub owner_uid: u32,
    #[prost(float, tag = "3")]
    pub cur_stamina: f32,
    #[prost(uint32, tag = "4")]
    pub gfpepgglpcm: u32,
    #[prost(float, tag = "5")]
    pub kdblfalmneh: f32,
    #[prost(uint32, tag = "6")]
    pub anim_hash: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28700)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fhgcmookogg {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6756)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nkgfegoppde {
    #[prost(uint32, tag = "3")]
    pub lbeinahahka: u32,
    #[prost(uint32, tag = "12")]
    pub nilalkpfcco: u32,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27443)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cblmpblchae {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bmakgnmonka {
    #[prost(uint32, tag = "2")]
    pub level_id: u32,
    #[prost(bool, tag = "7")]
    pub glkngddnocn: bool,
    #[prost(message, repeated, tag = "9")]
    pub pmjgjnilmbp: ::prost::alloc::vec::Vec<Cgoihcdffej>,
    #[prost(uint32, tag = "11")]
    pub mkcgmmganlk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mgaijnjiojk {
    #[prost(uint32, tag = "6")]
    pub id: u32,
    #[prost(enumeration = "Pidegnlbonb", tag = "14")]
    pub state: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9033)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hdecpnmkiao {
    #[prost(uint32, tag = "6")]
    pub dbkkkmekici: u32,
    #[prost(uint32, tag = "13")]
    pub eoihallmgal: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20476)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Adfgmcjbham {
    #[prost(message, repeated, tag = "11")]
    pub facpifgcbbk: ::prost::alloc::vec::Vec<Mcjcanjlblh>,
    #[prost(uint32, tag = "7")]
    pub level_id: u32,
    #[prost(bool, tag = "10")]
    pub dgghonfdbgj: bool,
    #[prost(bool, tag = "6")]
    pub hcjfdjhilam: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28691)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Plejlchaenf {
    #[prost(uint32, repeated, tag = "12")]
    pub egmokfdbiln: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23788)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cfhkokkbofb {
    #[prost(message, optional, tag = "1")]
    pub mcdogialdkp: ::core::option::Option<Ephhnheddgl>,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20647)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mjdillojhnd {
    #[prost(uint32, tag = "1")]
    pub epfcidiklkg: u32,
    #[prost(uint32, tag = "8")]
    pub igaknkedboo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4401)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lnaigbdgpcc {
    #[prost(bool, tag = "1")]
    pub alidkebjlfc: bool,
    #[prost(bool, tag = "2")]
    pub nbfdkdmgdgn: bool,
    #[prost(string, repeated, tag = "3")]
    pub gklephhpnld: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(message, optional, tag = "4")]
    pub pgndbmlkdma: ::core::option::Option<Vector>,
    #[prost(float, tag = "5")]
    pub duration: f32,
    #[prost(bool, tag = "6")]
    pub pddmjdhfbik: bool,
    #[prost(bool, tag = "7")]
    pub iofmffghpaj: bool,
    #[prost(message, optional, tag = "8")]
    pub clejachpnaf: ::core::option::Option<Vector>,
    #[prost(float, tag = "9")]
    pub eldebbacnno: f32,
    #[prost(float, tag = "10")]
    pub embeloiphgf: f32,
    #[prost(bool, tag = "11")]
    pub gchilinopmm: bool,
    #[prost(float, tag = "12")]
    pub himidofnndl: f32,
    #[prost(bool, tag = "13")]
    pub naobmmehglj: bool,
    #[prost(bool, tag = "14")]
    pub knnfnhajocj: bool,
    #[prost(enumeration = "Hcgbofdmmpa", tag = "15")]
    pub kefijagpkgn: i32,
    #[prost(bool, tag = "841")]
    pub njmnmagbmgo: bool,
    #[prost(uint32, tag = "1029")]
    pub hckeabipaod: u32,
    #[prost(float, tag = "1271")]
    pub gmmcakmdmpp: f32,
    #[prost(uint32, tag = "1440")]
    pub entity_id: u32,
    #[prost(uint32, tag = "1559")]
    pub jojadhoonco: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20150)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nffnlbmnpdc {
    #[prost(uint32, tag = "1")]
    pub opcgoapbjha: u32,
    #[prost(uint32, tag = "15")]
    pub fjplckjpadc: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3613)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kklhjabagnl {
    #[prost(message, optional, tag = "12")]
    pub kalfabhanic: ::core::option::Option<Igkafpdnpba>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1151)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hcgekedniae {
    #[prost(enumeration = "Cgphggdkihf", tag = "12")]
    pub fjiaemglagi: i32,
    #[prost(enumeration = "Kpfoblalblc", tag = "2")]
    pub daakpcoabep: i32,
    #[prost(uint64, tag = "7")]
    pub ihgjlfcgfin: u64,
    #[prost(bool, tag = "15")]
    pub jmoodlikpli: bool,
    #[prost(enumeration = "Bdcdecgdjgf", tag = "13")]
    pub ocmlkeoonko: i32,
    #[prost(uint32, tag = "1")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7969)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nhcipjphdok {
    #[prost(uint32, tag = "3")]
    pub scene_id: u32,
    #[prost(message, repeated, tag = "14")]
    pub lannagneidj: ::prost::alloc::vec::Vec<Ehbhodnnocc>,
    #[prost(message, repeated, tag = "15")]
    pub peoilihahjk: ::prost::alloc::vec::Vec<Pbkkceocheb>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1424)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fbcndhhoiig {
    #[prost(uint32, tag = "10")]
    pub jcmchgnnlmj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Minghcpobng {
    #[prost(uint32, tag = "5")]
    pub fjamcdjdjoa: u32,
    #[prost(uint32, tag = "6")]
    pub hjjfokhfnko: u32,
    #[prost(map = "uint32, uint32", tag = "10")]
    pub jiannpfihhb: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "12")]
    pub lgfkalamilp: u32,
    #[prost(message, optional, tag = "13")]
    pub fgaeincckdk: ::core::option::Option<Olheklkendn>,
    #[prost(uint32, tag = "15")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7766)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hcfofnfnclj {
    #[prost(uint32, tag = "12")]
    pub area_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25820)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kainjcdpfgi {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(bool, tag = "6")]
    pub eejccicofii: bool,
    #[prost(uint32, tag = "13")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mpijinlmaie {
    #[prost(bool, tag = "3")]
    pub ckhdmhhjgng: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21864)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Haloonmflhl {
    #[prost(uint32, tag = "2")]
    pub bmhpfibinmn: u32,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(uint32, tag = "12")]
    pub pnjecejeopo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(393)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gjbcmigghem {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(uint32, tag = "13")]
    pub pmfoiancced: u32,
    #[prost(message, repeated, tag = "15")]
    pub efcdelgmmkg: ::prost::alloc::vec::Vec<AvatarInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23419)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ikflbjkknhi {
    #[prost(message, repeated, tag = "2")]
    pub flbiaplpjia: ::prost::alloc::vec::Vec<Ombeifnnedf>,
    #[prost(uint32, tag = "9")]
    pub edneeobkgej: u32,
    #[prost(bool, tag = "11")]
    pub ndjmhdamkhi: bool,
    #[prost(uint32, tag = "12")]
    pub lhhgpmoklkg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8239)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nnjjkcfcbpm {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7506)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kgkblclmmfd {
    #[prost(uint32, tag = "2")]
    pub entity_id: u32,
    #[prost(uint32, tag = "3")]
    pub jombpgcdcmd: u32,
    #[prost(enumeration = "ForwardType", tag = "14")]
    pub forward_type: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4801)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Imkhedkacih {
    #[prost(message, optional, tag = "1")]
    pub dbdnmhcjfoc: ::core::option::Option<Aikikfmiahg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26081)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PlayerEnterSceneInfoNotify {
    #[prost(uint32, tag = "4")]
    pub cur_avatar_entity_id: u32,
    #[prost(message, repeated, tag = "6")]
    pub avatar_enter_info: ::prost::alloc::vec::Vec<AvatarEnterSceneInfo>,
    #[prost(uint32, tag = "7")]
    pub enter_scene_token: u32,
    #[prost(message, optional, tag = "8")]
    pub mp_level_entity_info: ::core::option::Option<MpLevelEntityInfo>,
    #[prost(message, optional, tag = "11")]
    pub team_enter_info: ::core::option::Option<TeamEnterSceneInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4195)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nkbbnlenfpm {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20622)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eblcnbfadib {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ekghdlkkkpo {
    #[prost(message, repeated, tag = "15")]
    pub ohpgbhcihfl: ::prost::alloc::vec::Vec<Ggfekdpkfoh>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nkdbkonmbdc {
    #[prost(uint32, repeated, tag = "4")]
    pub aiajggdjakb: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "6")]
    pub ginemciffnb: u32,
    #[prost(message, repeated, tag = "7")]
    pub gpcgmmobghm: ::prost::alloc::vec::Vec<Mfgkdapglbg>,
    #[prost(uint32, tag = "8")]
    pub kjjolfamikc: u32,
    #[prost(uint32, repeated, tag = "10")]
    pub onlocepepea: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25212)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cjomhgpoeac {
    #[prost(uint32, tag = "7")]
    pub finahglfhag: u32,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(uint32, tag = "13")]
    pub lpgihliaipl: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dbglamejmjm {
    #[prost(uint32, tag = "11")]
    pub odbkocemlom: u32,
    #[prost(uint32, tag = "12")]
    pub lkncjgkoced: u32,
    #[prost(uint32, tag = "14")]
    pub gnddngkfeic: u32,
    #[prost(bool, tag = "15")]
    pub iikfhbfhmgg: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29051)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ikcpookpigl {
    #[prost(uint32, repeated, tag = "1")]
    pub onogcehfhfp: ::prost::alloc::vec::Vec<u32>,
    #[prost(map = "uint32, enumeration(Gpeibbjnhda)", tag = "3")]
    pub pjkjcbdhmfh: ::std::collections::HashMap<u32, i32>,
    #[prost(uint32, tag = "11")]
    pub oajoobghagm: u32,
    #[prost(uint32, tag = "13")]
    pub agmhmdhefkd: u32,
    #[prost(message, repeated, tag = "15")]
    pub avatar_list: ::prost::alloc::vec::Vec<Plcgieaonlg>,
    #[prost(oneof = "ikcpookpigl::Detail", tags = "937")]
    pub detail: ::core::option::Option<ikcpookpigl::Detail>,
}
/// Nested message and enum types in `IKCPOOKPIGL`.
pub mod ikcpookpigl {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(message, tag = "937")]
        UgcTeamInfo(super::Dpghieibpip),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7286)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pmkdogaoble {
    #[prost(bool, tag = "13")]
    pub pfjogjibdfp: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24103)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Paolcjmpmbk {
    #[prost(uint32, tag = "5")]
    pub bdeflcdkdbi: u32,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(786)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Midgmldmbgh {
    #[prost(uint32, repeated, tag = "10")]
    pub bbnmckkhopn: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29246)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cmlojanhlij {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mmafdjomioo {
    #[prost(uint32, tag = "6")]
    pub mfmiphlgdfl: u32,
    #[prost(uint32, tag = "7")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3489)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mlfnbncolhp {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7381)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eggdilopppn {
    #[prost(uint32, tag = "15")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "14")]
    pub mgdhllgefff: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23893)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ceijpdhalkb {
    #[prost(uint32, tag = "12")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9682)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct EntityFightPropNotify {
    #[prost(uint32, tag = "4")]
    pub entity_id: u32,
    #[prost(map = "uint32, float", tag = "15")]
    pub fight_prop_map: ::std::collections::HashMap<u32, f32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29001)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Goganjgnkbl {
    #[prost(uint64, tag = "3")]
    pub guid: u64,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2081)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lgaefmfbbbk {
    #[prost(uint32, tag = "4")]
    pub fiddpfbimif: u32,
    #[prost(message, repeated, tag = "8")]
    pub dmbmjaiigec: ::prost::alloc::vec::Vec<Mkdekefnklf>,
    #[prost(bool, tag = "11")]
    pub hecncammjdo: bool,
    #[prost(message, optional, tag = "12")]
    pub cmldoojcjhk: ::core::option::Option<Ohfhhiejgip>,
    #[prost(bool, tag = "13")]
    pub fpdnlphajoj: bool,
    #[prost(bool, tag = "15")]
    pub adhibdajpnk: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Enadnfekflf {
    #[prost(message, repeated, tag = "4")]
    pub ghichlkdjpn: ::prost::alloc::vec::Vec<Ogokjblkohf>,
    #[prost(uint32, tag = "7")]
    pub mpmckgadmdc: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Haohmpkbfbj {
    #[prost(uint32, tag = "7")]
    pub fpbjlpalnpe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28123)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Peidhabcldi {
    #[prost(uint64, tag = "8")]
    pub ihgjlfcgfin: u64,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
    #[prost(enumeration = "Kpfoblalblc", tag = "13")]
    pub daakpcoabep: i32,
    #[prost(oneof = "peidhabcldi::Bfhmjlgchpd", tags = "14")]
    pub bfhmjlgchpd: ::core::option::Option<peidhabcldi::Bfhmjlgchpd>,
}
/// Nested message and enum types in `PEIDHABCLDI`.
pub mod peidhabcldi {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Bfhmjlgchpd {
        #[prost(message, tag = "14")]
        MusicBriefInfo(super::Gdmlpoedpjo),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mpfodnpcfdi {
    #[prost(oneof = "mpfodnpcfdi::Nbdofgcpfej", tags = "7, 15, 8")]
    pub nbdofgcpfej: ::core::option::Option<mpfodnpcfdi::Nbdofgcpfej>,
}
/// Nested message and enum types in `MPFODNPCFDI`.
pub mod mpfodnpcfdi {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Nbdofgcpfej {
        #[prost(uint32, tag = "7")]
        IntParam(u32),
        #[prost(float, tag = "15")]
        FltParam(f32),
        #[prost(string, tag = "8")]
        StrParam(::prost::alloc::string::String),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bkjefhmccnm {
    #[prost(map = "uint32, uint32", tag = "4")]
    pub abphknknjic: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "11")]
    pub oaglncfkoni: u32,
    #[prost(uint32, tag = "12")]
    pub gefnmjhabgj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25865)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Loodfaafkdl {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9159)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Albajkbggkf {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27469)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ijijnbaibml {
    #[prost(uint32, tag = "11")]
    pub finahglfhag: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5653)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dpdleknonkl {
    #[prost(string, tag = "9")]
    pub kpiogbmlmem: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dfokmedfpll {
    #[prost(string, tag = "1")]
    pub title: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub lkfgeagbpga: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub dknjakahopl: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21180)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nlefmnklbpd {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25773)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Enljohjhehn {
    #[prost(message, repeated, tag = "1")]
    pub cchalmbofie: ::prost::alloc::vec::Vec<Clekknmlmcd>,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23955)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Blgmmhmnnjo {
    #[prost(message, optional, tag = "2")]
    pub nckeckmmkdk: ::core::option::Option<Illmmcdpfam>,
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "8")]
    pub pjabefajbgb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nlcdhfnmhld {
    #[prost(uint64, tag = "2")]
    pub guid: u64,
    #[prost(uint32, tag = "11")]
    pub count: u32,
    #[prost(uint32, tag = "13")]
    pub item_id: u32,
    #[prost(bool, tag = "15")]
    pub gkeocobfifi: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29265)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ajkgcbahdpb {
    #[prost(enumeration = "ForwardType", tag = "1")]
    pub forward_type: i32,
    #[prost(bool, tag = "13")]
    pub epdmmgimncc: bool,
    #[prost(uint32, tag = "8")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kicdefnonla {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1855)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Flcpgokapkj {
    #[prost(uint32, repeated, tag = "2")]
    pub mnchcggmlpa: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "6")]
    pub gckfokidohk: u32,
    #[prost(uint32, tag = "10")]
    pub idolojjnlob: u32,
    #[prost(uint32, tag = "12")]
    pub bikoakjlpbe: u32,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6390)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aajpebebohd {
    #[prost(message, optional, tag = "2")]
    pub icchdgkmnlf: ::core::option::Option<Ljjfjilbnll>,
    #[prost(message, repeated, tag = "3")]
    pub magllndnddl: ::prost::alloc::vec::Vec<Cnhljkcjahb>,
    #[prost(message, repeated, tag = "5")]
    pub ppocfiehjaa: ::prost::alloc::vec::Vec<Mkgjgoiaoap>,
    #[prost(uint32, tag = "8")]
    pub lcehpfcejen: u32,
    #[prost(message, repeated, tag = "9")]
    pub pkaicaionpm: ::prost::alloc::vec::Vec<Knoppnbpebm>,
    #[prost(message, repeated, tag = "10")]
    pub fbhdeibpldl: ::prost::alloc::vec::Vec<Ijlhhneflkk>,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nolpmpajahm {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fhognhhllbi {
    #[prost(float, tag = "3")]
    pub odmegpdigef: f32,
    #[prost(float, tag = "4")]
    pub focfddlhjad: f32,
    #[prost(uint32, tag = "5")]
    pub avatar_id: u32,
    #[prost(float, tag = "9")]
    pub mfehfneiffa: f32,
    #[prost(string, tag = "10")]
    pub ieglaljkhfe: ::prost::alloc::string::String,
    #[prost(bool, tag = "11")]
    pub cmnbkialoak: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dalekdkmmbf {
    #[prost(uint32, tag = "3")]
    pub guid: u32,
    #[prost(uint32, tag = "5")]
    pub mfflenpnmpe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25333)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dpcnfcjmjfi {
    #[prost(bool, tag = "13")]
    pub nonhlhoihnl: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26272)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lpadamkfpgk {
    #[prost(uint32, tag = "4")]
    pub debogmdglmi: u32,
    #[prost(uint32, tag = "8")]
    pub nkgdgkcidjj: u32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
    #[prost(uint64, tag = "13")]
    pub aghciclcick: u64,
    #[prost(message, repeated, tag = "15")]
    pub bnjojbopmfj: ::prost::alloc::vec::Vec<Jickppdlohc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2737)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Neolmnipila {
    #[prost(uint32, tag = "10")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(938)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lopagflhjlo {
    #[prost(message, optional, tag = "4")]
    pub nganceicghc: ::core::option::Option<Hdgjjajdeco>,
    #[prost(uint32, tag = "6")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mpndgcpkcfn {
    #[prost(bool, tag = "10")]
    pub immdnddnopg: bool,
    #[prost(uint32, tag = "12")]
    pub lchbeahgheo: u32,
    #[prost(uint32, tag = "13")]
    pub lcddidljedn: u32,
    #[prost(uint32, tag = "14")]
    pub icidpjhbdji: u32,
    #[prost(bool, tag = "15")]
    pub hcjfdjhilam: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jklpnoghioi {
    #[prost(uint32, tag = "3")]
    pub group_id: u32,
    #[prost(uint32, tag = "6")]
    pub gadget_id: u32,
    #[prost(message, optional, tag = "7")]
    pub pos: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29043)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iegihofpbah {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7080)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pbkciocgkeo {
    #[prost(message, optional, tag = "2")]
    pub dbdnmhcjfoc: ::core::option::Option<Aikikfmiahg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ndfpefjlelm {
    #[prost(message, repeated, tag = "1")]
    pub kckepcmlihi: ::prost::alloc::vec::Vec<Ciimaojpkck>,
    #[prost(bool, tag = "8")]
    pub mpfldfdogai: bool,
    #[prost(uint32, tag = "10")]
    pub nmikcmlkndm: u32,
    #[prost(message, repeated, tag = "11")]
    pub cpalncbbdec: ::prost::alloc::vec::Vec<Ihfcifdkmpa>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9293)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hllfbnhcpek {
    #[prost(uint32, tag = "12")]
    pub weather_area_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23652)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oeflemaojdm {
    #[prost(uint32, tag = "6")]
    pub config_id: u32,
    #[prost(bytes = "vec", tag = "12")]
    pub luashell: ::prost::alloc::vec::Vec<u8>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gphnlhkijfc {
    #[prost(uint32, tag = "4")]
    pub gcnjnbmhdam: u32,
    #[prost(message, repeated, tag = "5")]
    pub nefmgjidaak: ::prost::alloc::vec::Vec<Bgdcpbegank>,
    #[prost(message, optional, tag = "6")]
    pub najkbndadma: ::core::option::Option<Jlmijcegcob>,
    #[prost(bool, tag = "10")]
    pub ipngbhkjjfk: bool,
    #[prost(uint32, tag = "12")]
    pub ldiilmahhng: u32,
    #[prost(uint32, tag = "15")]
    pub mbolnfofnga: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pagiaoelfbi {
    #[prost(bool, tag = "2")]
    pub dpdkdnfkfjf: bool,
    #[prost(uint32, repeated, tag = "3")]
    pub llgkjbfckdo: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "5")]
    pub bljgcongpkk: u32,
    #[prost(bool, tag = "6")]
    pub plpdainnjbo: bool,
    #[prost(bool, tag = "10")]
    pub oafkfeggdob: bool,
    #[prost(uint32, tag = "13")]
    pub paaammmcjpb: u32,
    #[prost(uint32, repeated, tag = "15")]
    pub pojmpfgogmj: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ajlpkkkodfi {
    #[prost(bool, tag = "1")]
    pub adncolnbcfn: bool,
    #[prost(message, repeated, tag = "3")]
    pub point_list: ::prost::alloc::vec::Vec<Bjdojchbbgm>,
    #[prost(uint32, tag = "9")]
    pub route_id: u32,
    #[prost(uint32, tag = "13")]
    pub r#type: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nahmoaolmpl {
    #[prost(bool, tag = "2")]
    pub gdfoebgclhc: bool,
    #[prost(uint64, tag = "11")]
    pub avatar_id: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1977)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mjinojofopn {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct EchoShellInfo {
    #[prost(uint32, tag = "1")]
    pub shell_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29917)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pfiheliepoj {
    #[prost(map = "uint32, message", tag = "2")]
    pub nmoocjnbeoh: ::std::collections::HashMap<u32, Mnfelhiebkp>,
    #[prost(bool, tag = "9")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "13")]
    pub bdeflcdkdbi: u32,
    #[prost(uint32, tag = "14")]
    pub jmehmgcpfbo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28353)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hlmfogdmigb {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pngjbppmghc {
    #[prost(uint32, tag = "3")]
    pub level_id: u32,
    #[prost(uint32, tag = "5")]
    pub nmaapldbbni: u32,
    #[prost(bool, tag = "13")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct QueryRegionListHttpRsp {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "2")]
    pub region_list: ::prost::alloc::vec::Vec<RegionSimpleInfo>,
    #[prost(bytes = "vec", tag = "5")]
    pub client_secret_key: ::prost::alloc::vec::Vec<u8>,
    #[prost(bytes = "vec", tag = "6")]
    pub client_custom_config_encrypted: ::prost::alloc::vec::Vec<u8>,
    #[prost(bool, tag = "7")]
    pub enable_login_pc: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20270)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pcokofaoemg {
    #[prost(bool, tag = "3")]
    pub ohpncfdikhp: bool,
    #[prost(message, optional, tag = "7")]
    pub apkgnhgdghi: ::core::option::Option<Vector>,
    #[prost(enumeration = "ForwardType", tag = "13")]
    pub forward_type: i32,
    #[prost(uint32, tag = "15")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3338)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bhdclgkeaif {
    #[prost(uint32, tag = "6")]
    pub pdhnidhgfcj: u32,
    #[prost(uint32, tag = "11")]
    pub item_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5983)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ppjnhankhad {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9110)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nbbgikmeabj {
    #[prost(uint32, repeated, tag = "13")]
    pub nfdkkmjkphh: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cjihhahabho {
    #[prost(uint32, tag = "2")]
    pub pajfonogicp: u32,
    #[prost(uint32, tag = "3")]
    pub fmlbphadood: u32,
    #[prost(uint32, tag = "6")]
    pub kngjhmllcnp: u32,
    #[prost(uint32, tag = "8")]
    pub level_id: u32,
    #[prost(uint32, tag = "9")]
    pub glhadhabhag: u32,
    #[prost(bool, tag = "13")]
    pub omeniamedce: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27786)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nhkojpoabmk {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28426)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dgejkkcoljg {
    #[prost(message, repeated, tag = "4")]
    pub obmocpbcphd: ::prost::alloc::vec::Vec<Ombeifnnedf>,
    #[prost(uint32, tag = "15")]
    pub point_id: u32,
    #[prost(uint32, tag = "12")]
    pub scene_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24507)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ndophfgcmig {
    #[prost(map = "uint32, uint32", tag = "14")]
    pub bmanejiimah: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2534)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kglelmndohj {
    #[prost(message, repeated, tag = "8")]
    pub ippgbcjgoam: ::prost::alloc::vec::Vec<Lmgjibdlijm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lmgjibdlijm {
    #[prost(uint32, tag = "13")]
    pub bkcfgenaobb: u32,
    #[prost(bool, tag = "14")]
    pub lddeidalmbo: bool,
    #[prost(uint32, tag = "15")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28386)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Clkhpfdienm {
    #[prost(message, repeated, tag = "5")]
    pub ppocfiehjaa: ::prost::alloc::vec::Vec<Mkgjgoiaoap>,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hppankbcfgi {
    #[prost(uint32, tag = "1")]
    pub dpjjdnjlgcc: u32,
    #[prost(uint64, repeated, tag = "7")]
    pub avatar_guid_list: ::prost::alloc::vec::Vec<u64>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(777)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bpcllhidlhi {
    #[prost(message, repeated, tag = "14")]
    pub efcdelgmmkg: ::prost::alloc::vec::Vec<Pjjloipplnd>,
    #[prost(uint32, tag = "13")]
    pub level_id: u32,
    #[prost(uint32, tag = "5")]
    pub bodiejclgmb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24045)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Laepomccnfn {
    #[prost(bool, tag = "12")]
    pub hlalmdgmpfm: bool,
    #[prost(enumeration = "Kpfoblalblc", tag = "5")]
    pub daakpcoabep: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26205)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jjgglcklnoc {
    #[prost(uint32, tag = "12")]
    pub mkhendmflmf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(199)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pnoddjllkmj {
    #[prost(uint32, tag = "14")]
    pub pjabefajbgb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9966)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hbofgfagnpb {
    #[prost(message, optional, tag = "7")]
    pub ability_control_block: ::core::option::Option<AbilityControlBlock>,
    #[prost(uint32, tag = "9")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8509)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Keepgpbkaod {
    #[prost(message, optional, tag = "4")]
    pub dbkhpfpmfaf: ::core::option::Option<Nlpnkejgibf>,
    #[prost(uint32, tag = "8")]
    pub pcmildfjbnp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20018)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ikmpocdgipf {
    #[prost(uint32, tag = "3")]
    pub pieimacpkol: u32,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "12")]
    pub hphccbhmnld: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "13")]
    pub dokadedbgbl: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oghblecebnl {
    #[prost(uint32, tag = "2")]
    pub aadkglakicj: u32,
    #[prost(bool, tag = "4")]
    pub aaabelocehb: bool,
    #[prost(uint32, tag = "8")]
    pub cmdbcgaecdp: u32,
    #[prost(uint32, tag = "12")]
    pub count: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6045)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ikmepacnbfb {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "5")]
    pub fiekpelikle: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8345)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Abiadlhhlpj {
    #[prost(uint64, tag = "15")]
    pub ihgjlfcgfin: u64,
    #[prost(uint32, tag = "14")]
    pub ggcfiehankk: u32,
    #[prost(bool, tag = "12")]
    pub daphocnhdfm: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lkiinllaana {
    #[prost(enumeration = "Kabbepllgoj", tag = "6")]
    pub meeebnnmfic: i32,
    #[prost(uint32, tag = "15")]
    pub eofhloimpmk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ilghnmjjefl {
    #[prost(message, repeated, tag = "3")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Olidklibdij>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(677)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jmnojdojjfp {
    #[prost(uint64, repeated, tag = "6")]
    pub avatar_team_guid_list: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint64, tag = "15")]
    pub cur_avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5912)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nogcigdlbap {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fmjedpaojdn {
    #[prost(uint32, tag = "3")]
    pub mcjebmejiic: u32,
    #[prost(uint32, repeated, tag = "7")]
    pub lokddcbonah: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "8")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28651)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Iblghcfaind {
    #[prost(bool, tag = "3")]
    pub bpdljhgnngd: bool,
    #[prost(message, repeated, tag = "8")]
    pub maoijffgide: ::prost::alloc::vec::Vec<Pkgoclimoig>,
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25545)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oahjnagplbb {
    #[prost(uint32, tag = "4")]
    pub ofebpljjnkh: u32,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(uint32, tag = "7")]
    pub param: u32,
    #[prost(uint32, tag = "8")]
    pub nekecfnahom: u32,
    #[prost(enumeration = "Ckleegmpdgn", tag = "11")]
    pub agmhmdhefkd: i32,
    #[prost(uint32, tag = "14")]
    pub oajoobghagm: u32,
    #[prost(uint32, tag = "15")]
    pub mp_play_id: u32,
    #[prost(message, repeated, tag = "533")]
    pub dednaokplhm: ::prost::alloc::vec::Vec<Bejmllcjcfa>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6124)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fggoijaacpp {
    #[prost(enumeration = "Ncoeiphpbbl", tag = "4")]
    pub query_status: i32,
    #[prost(int64, repeated, tag = "8")]
    pub index: ::prost::alloc::vec::Vec<i64>,
    #[prost(int32, tag = "10")]
    pub query_id: i32,
    #[prost(message, repeated, tag = "12")]
    pub corners: ::prost::alloc::vec::Vec<Vector>,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
    #[prost(int32, repeated, tag = "14")]
    pub level: ::prost::alloc::vec::Vec<i32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29708)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Biebnncdfla {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Olidklibdij {
    #[prost(uint32, tag = "5")]
    pub level_id: u32,
    #[prost(bool, tag = "9")]
    pub is_finish: bool,
    #[prost(uint32, tag = "10")]
    pub monejdbpolb: u32,
    #[prost(bool, tag = "11")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29320)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kdecknhbdca {
    #[prost(bytes = "vec", tag = "3")]
    pub fkoijmlhnch: ::prost::alloc::vec::Vec<u8>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26339)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cbkaijinapf {
    #[prost(bool, tag = "9")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "11")]
    pub obbkdonjjmn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Knkljommjoo {
    #[prost(uint32, tag = "2")]
    pub score: u32,
    #[prost(uint32, tag = "3")]
    pub jedekpeilhn: u32,
    #[prost(bool, tag = "6")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "7")]
    pub lfdpfjkgjbm: u32,
    #[prost(uint32, tag = "8")]
    pub level_id: u32,
    #[prost(uint32, tag = "11")]
    pub pebgfnmlnpm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4909)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ibnkodgdeef {
    #[prost(uint32, tag = "12")]
    pub scene_id: u32,
    #[prost(uint32, tag = "13")]
    pub area_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20976)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Icakbihfjag {
    #[prost(uint32, tag = "5")]
    pub nikfjikmpol: u32,
    #[prost(string, tag = "8")]
    pub ckiecfillbc: ::prost::alloc::string::String,
    #[prost(uint32, tag = "9")]
    pub gjlmnohpjka: u32,
    #[prost(message, optional, tag = "11")]
    pub route: ::core::option::Option<Route>,
    #[prost(uint32, tag = "13")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct BreakoutSyncConnectUidInfo {
    #[prost(uint32, tag = "1")]
    pub uid: u32,
    #[prost(uint32, repeated, tag = "2")]
    pub skill_id_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "3")]
    pub skill_level_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22276)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bdimfkhjhkg {
    #[prost(uint32, repeated, tag = "7")]
    pub dpaapoobacf: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ejmmnhefofg {
    #[prost(message, repeated, tag = "1")]
    pub jpahjddeilm: ::prost::alloc::vec::Vec<Pobobnimglk>,
    #[prost(bool, tag = "5")]
    pub mpfldfdogai: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7269)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fibjpoobeog {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26880)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hjmmcdmianl {
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21731)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hejcjgaolmk {
    #[prost(uint32, repeated, tag = "9")]
    pub jojbmikddej: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Djpkgmogmdj {
    #[prost(uint32, tag = "2")]
    pub level_id: u32,
    #[prost(uint32, tag = "3")]
    pub bodiejclgmb: u32,
    #[prost(uint32, tag = "6")]
    pub pieapgepmlf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24884)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ahkhcomlphg {
    #[prost(uint32, tag = "6")]
    pub poecpaaaloe: u32,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kbdgjpclchj {
    #[prost(bytes = "vec", repeated, tag = "12")]
    pub iocdjejlfon: ::prost::alloc::vec::Vec<::prost::alloc::vec::Vec<u8>>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22210)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jjleneofhlg {
    #[prost(uint32, tag = "2")]
    pub kjimmfdaflh: u32,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2281)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nfekgkhmlbp {
    #[prost(message, repeated, tag = "12")]
    pub avatar_list: ::prost::alloc::vec::Vec<Djfnbcgcgcp>,
    #[prost(uint32, tag = "2")]
    pub bodiejclgmb: u32,
    #[prost(uint32, tag = "15")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8139)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lhbcjchhnjp {
    #[prost(map = "uint32, uint32", tag = "1")]
    pub phjjlgffmom: ::std::collections::HashMap<u32, u32>,
    #[prost(enumeration = "Bpobbmngmdl", tag = "5")]
    pub r#type: i32,
    #[prost(map = "uint32, uint32", tag = "9")]
    pub bmnfbpghfjb: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29046)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aochlheicfl {
    #[prost(message, optional, tag = "13")]
    pub ibeakhhnohb: ::core::option::Option<Hcjgifnjppj>,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
    #[prost(uint32, tag = "15")]
    pub city_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(762)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jemcfpgfgeh {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8997)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ncphcnndaoj {
    #[prost(bool, tag = "11")]
    pub bkfhphpgdnh: bool,
    #[prost(uint32, repeated, tag = "13")]
    pub gglokfgofih: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9015)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oaolacienkd {
    #[prost(uint32, tag = "3")]
    pub scene_id: u32,
    #[prost(message, repeated, tag = "11")]
    pub ajioiboimfp: ::prost::alloc::vec::Vec<Igidjdammbo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hgbhcjgllkb {
    #[prost(bool, tag = "10")]
    pub eoglfogekla: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23359)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lebffeopcgf {
    #[prost(message, optional, tag = "6")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "1")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "2")]
    pub kegocippfin: u32,
    #[prost(uint32, tag = "3")]
    pub dajhkhflndj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hgjlmpojcoa {
    #[prost(message, repeated, tag = "11")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Cjadhbnifnb>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25549)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ekcpfljaehc {
    #[prost(uint32, tag = "1")]
    pub play_type: u32,
    #[prost(uint32, tag = "3")]
    pub kngjhmllcnp: u32,
    #[prost(bool, tag = "4")]
    pub fadincnpbmd: bool,
    #[prost(message, repeated, tag = "5")]
    pub fgfdlmijbii: ::prost::alloc::vec::Vec<Bmkeddjhkne>,
    #[prost(message, repeated, tag = "8")]
    pub cifjlbphijg: ::prost::alloc::vec::Vec<Hoblmoagllh>,
    #[prost(uint32, tag = "14")]
    pub aoegkkajean: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3194)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Doejolgocdn {
    #[prost(uint32, tag = "2")]
    pub target_uid: u32,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kbdmhdnkjlg {
    #[prost(uint32, tag = "3")]
    pub uid: u32,
    #[prost(message, repeated, tag = "10")]
    pub item_list: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(string, tag = "12")]
    pub omknbnmebik: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "14")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ofnigdfjlcd {
    #[prost(uint32, tag = "4")]
    pub lahonfcepnn: u32,
    #[prost(uint32, tag = "13")]
    pub uid: u32,
    #[prost(uint32, tag = "15")]
    pub fhbenanddig: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pdpehfdjbam {
    #[prost(uint32, tag = "8")]
    pub skill_id: u32,
    #[prost(uint32, tag = "12")]
    pub dajhkhflndj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4541)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pndlcioikgg {
    #[prost(uint32, repeated, tag = "5")]
    pub ohppgonpkdn: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "6")]
    pub bidnenjhbog: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "14")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jkphagebjpi {
    #[prost(uint32, tag = "1")]
    pub gmdcmocijab: u32,
    #[prost(uint32, tag = "4")]
    pub lcnpgpkfeio: u32,
    #[prost(message, repeated, tag = "5")]
    pub jchfmejhhee: ::prost::alloc::vec::Vec<Clcjnlholmh>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28244)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Efncnmfnmal {
    #[prost(message, repeated, tag = "12")]
    pub info_list: ::prost::alloc::vec::Vec<Oipncingene>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5407)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Afaldkgflec {
    #[prost(uint32, tag = "3")]
    pub ikhdiofhdcc: u32,
    #[prost(bool, tag = "11")]
    pub is_finish: bool,
    #[prost(bool, tag = "1")]
    pub mlkfeajnimf: bool,
    #[prost(uint32, tag = "12")]
    pub level_id: u32,
    #[prost(uint32, tag = "15")]
    pub gefnmjhabgj: u32,
    #[prost(uint32, tag = "8")]
    pub score: u32,
    #[prost(uint32, tag = "14")]
    pub gjpcicegmip: u32,
    #[prost(uint32, tag = "7")]
    pub mpbmkddpdgp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26122)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Phnngpihfhl {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(message, optional, tag = "15")]
    pub hjlflkibocb: ::core::option::Option<Damhkoknmhm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24437)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Alponhimfpk {
    #[prost(uint32, repeated, tag = "7")]
    pub ielcfbfjdbc: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "1")]
    pub apangnhlche: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lhpccempkbb {
    #[prost(map = "uint32, uint32", tag = "7")]
    pub noodcgkinal: ::std::collections::HashMap<u32, u32>,
    #[prost(message, repeated, tag = "10")]
    pub jcpbdgajlel: ::prost::alloc::vec::Vec<Caeikhmplff>,
    #[prost(message, repeated, tag = "11")]
    pub pfndpobljfo: ::prost::alloc::vec::Vec<Caeikhmplff>,
    #[prost(message, repeated, tag = "13")]
    pub pndpnmbdokf: ::prost::alloc::vec::Vec<Lbmjmdnoobo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22652)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ienhnhlnndn {
    #[prost(uint32, tag = "10")]
    pub bikoakjlpbe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28445)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lminhfgeahg {
    #[prost(bool, tag = "5")]
    pub pdecdehnnjn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(510)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jdgpeenhgag {
    #[prost(enumeration = "Pjahbgicgbp", tag = "2")]
    pub fjbeeggkkcf: i32,
    #[prost(uint32, repeated, tag = "7")]
    pub cabgdhlnblk: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "10")]
    pub ckgnipbiaai: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "12")]
    pub imiogmdokcb: u32,
    #[prost(bool, tag = "13")]
    pub ahhpjcielpi: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ihaddlgihgb {
    #[prost(uint32, tag = "7")]
    pub group_id: u32,
    #[prost(oneof = "ihaddlgihgb::Detail", tags = "403, 653, 1153, 1603, 1905")]
    pub detail: ::core::option::Option<ihaddlgihgb::Detail>,
}
/// Nested message and enum types in `IHADDLGIHGB`.
pub mod ihaddlgihgb {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(message, tag = "403")]
        ExplosionInfo(super::Mcldaeljnio),
        #[prost(message, tag = "653")]
        BalloonGalleryInfo(super::Kidiomkhfmo),
        #[prost(message, tag = "1153")]
        SeekFurnitureGalleryInfo(super::Gliedehaimn),
        #[prost(message, tag = "1603")]
        StakePlayInfo(super::Keehocbahkg),
        #[prost(message, tag = "1905")]
        RacingGalleryInfo(super::Mmphdjfapgk),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4428)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Knnijodhiji {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nooaknjkicj {
    #[prost(uint32, tag = "1")]
    pub level_id: u32,
    #[prost(float, tag = "3")]
    pub cdgfmjbofaa: f32,
    #[prost(uint32, tag = "15")]
    pub hcmcegihlba: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6141)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ldofbkbnihh {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Furniture {
    #[prost(uint32, tag = "1")]
    pub count: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(791)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kgdjcelpfea {
    #[prost(bool, tag = "8")]
    pub icfeebofoin: bool,
    #[prost(uint32, tag = "10")]
    pub pehimjokjoe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pdnkjpocbei {
    #[prost(message, repeated, tag = "14")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Ghjfdphadgk>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3319)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kblgknhdocn {
    #[prost(uint32, tag = "1")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bomacpdepid {
    #[prost(uint32, tag = "1")]
    pub item_id: u32,
    #[prost(uint32, tag = "2")]
    pub jlgjbaleioi: u32,
    #[prost(uint32, tag = "3")]
    pub kjflehhdmbb: u32,
    #[prost(uint32, tag = "4")]
    pub promote_level: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5805)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mmbejheokpd {
    #[prost(uint32, tag = "10")]
    pub accgilglfbk: u32,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20931)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ojlpcjfjgck {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20614)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gjbfihdffio {
    #[prost(message, optional, tag = "9")]
    pub acpeigepold: ::core::option::Option<Gpjghadeoen>,
    #[prost(string, tag = "3")]
    pub ongajpdkjnj: ::prost::alloc::string::String,
    #[prost(uint32, tag = "6")]
    pub eamnpokgnkj: u32,
    #[prost(uint32, tag = "8")]
    pub cbpdgcponhm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(182)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pbenjfcpkcd {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint64, tag = "10")]
    pub avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3537)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gfbbdjcngao {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7841)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fgjjlinaamg {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(map = "uint32, uint32", tag = "12")]
    pub kjogidllodk: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7920)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dioopbkefpd {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29821)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iekenjnegpo {
    #[prost(uint32, tag = "10")]
    pub lbeinahahka: u32,
    #[prost(uint32, tag = "4")]
    pub nilalkpfcco: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21901)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Obemhlappda {
    #[prost(uint32, tag = "4")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2082)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Koniemjeneo {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(uint32, tag = "12")]
    pub epjghnleioo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22859)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pcbadecnhaa {
    #[prost(bool, tag = "4")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "8")]
    pub level_id: u32,
    #[prost(uint32, tag = "10")]
    pub joiefhbhfjk: u32,
    #[prost(uint32, tag = "11")]
    pub gjpnkjikpoa: u32,
    #[prost(uint32, tag = "13")]
    pub fbmmphhenfk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4337)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jmpjajcfagc {
    #[prost(message, repeated, tag = "2")]
    pub mdkplbdanef: ::prost::alloc::vec::Vec<Kmjmklpgpkk>,
    #[prost(bool, tag = "7")]
    pub jdkakobfheh: bool,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(906)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fihhkloamjj {
    #[prost(uint32, tag = "1")]
    pub njddaollmgi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6179)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Klakkjifgmg {
    #[prost(int32, repeated, tag = "13")]
    pub acphegpgpoh: ::prost::alloc::vec::Vec<i32>,
    #[prost(message, repeated, tag = "7")]
    pub gjdpcoomajk: ::prost::alloc::vec::Vec<Fijdalpgdcn>,
    #[prost(bool, tag = "9")]
    pub cookmnefhkf: bool,
    #[prost(uint32, tag = "2")]
    pub scene_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cmmdiegngml {
    #[prost(enumeration = "Pidfndlhkpg", tag = "1")]
    pub state: i32,
    #[prost(uint32, tag = "15")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26659)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jbmoenpkdam {
    #[prost(message, repeated, tag = "7")]
    pub ckdpfjplblj: ::prost::alloc::vec::Vec<Ombeifnnedf>,
    #[prost(uint32, tag = "8")]
    pub dnbefljlamb: u32,
    #[prost(uint32, repeated, tag = "11")]
    pub chdookbiklm: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "12")]
    pub cbmeecgebak: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "13")]
    pub finahglfhag: u32,
    #[prost(uint32, repeated, tag = "15")]
    pub keoojgfgmlh: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3093)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gkllgapifjn {
    #[prost(uint32, tag = "15")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5419)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Galiajdjlkd {
    #[prost(uint64, tag = "6")]
    pub guid: u64,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
    #[prost(enumeration = "StoreType", tag = "15")]
    pub store_type: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Madfgjddkme {
    #[prost(message, repeated, tag = "7")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Fiedppjlade>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lkiamjcjlak {
    #[prost(uint32, tag = "1")]
    pub area_id: u32,
    #[prost(uint32, tag = "4")]
    pub index: u32,
    #[prost(enumeration = "Dafpgobfflb", tag = "5")]
    pub r#type: i32,
    #[prost(message, optional, tag = "9")]
    pub pos: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7935)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ccoejlfcbnf {
    #[prost(uint32, tag = "2")]
    pub khokohacffb: u32,
    #[prost(uint32, tag = "8")]
    pub ldchdeepako: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hmbpnbbjpoo {
    #[prost(uint32, tag = "9")]
    pub fgnkleemdfa: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Minmbingdih {
    #[prost(message, repeated, tag = "6")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Igeemlenjph>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aabbeiifped {
    #[prost(uint32, repeated, tag = "15")]
    pub jahppelnedf: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6109)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Acdcjigiifi {
    #[prost(message, repeated, tag = "4")]
    pub fhcfdlflkno: ::prost::alloc::vec::Vec<Fijdalpgdcn>,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bdkcbbnpjhm {
    #[prost(uint32, tag = "4")]
    pub jeokloiajna: u32,
    #[prost(uint32, tag = "9")]
    pub npc_id: u32,
    #[prost(bool, tag = "15")]
    pub pmjlllfophk: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bjdnjdhfgok {
    #[prost(uint32, tag = "1")]
    pub entity_id: u32,
    #[prost(bool, tag = "5")]
    pub eogpkjnngca: bool,
    #[prost(bool, tag = "6")]
    pub glhhcenjdoe: bool,
    #[prost(uint32, tag = "14")]
    pub monster_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7867)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Heogcdonpnd {
    #[prost(uint32, repeated, tag = "4")]
    pub ipigafhmpfh: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21812)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Momobjiglgp {
    #[prost(uint32, repeated, tag = "8")]
    pub jjanplhfpnj: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5714)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jfgekpkjhcf {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4292)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pfkjnjaakld {
    #[prost(float, tag = "7")]
    pub speed: f32,
    #[prost(enumeration = "Molekljmakd", tag = "10")]
    pub eifdfbpdong: i32,
    #[prost(uint32, tag = "12")]
    pub ekgeolmiccp: u32,
    #[prost(uint32, tag = "14")]
    pub point_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4877)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ihalkamfplp {
    #[prost(string, tag = "1")]
    pub kolacojomfh: ::prost::alloc::string::String,
    #[prost(uint32, tag = "6")]
    pub mndbnjhoaee: u32,
    #[prost(uint32, tag = "15")]
    pub adelhepcneb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9683)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Obfanebfpdo {
    #[prost(uint32, tag = "5")]
    pub eojiccehgal: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29166)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mcfdgmkkgja {
    #[prost(message, repeated, tag = "3")]
    pub region_list: ::prost::alloc::vec::Vec<Cahhbehncgl>,
    #[prost(bool, tag = "10")]
    pub jcjcimlhmaj: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22920)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Afggilobbco {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26098)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Imclkilfine {
    #[prost(uint32, tag = "1")]
    pub nmahomogphc: u32,
    #[prost(int32, tag = "8")]
    pub r#type: i32,
    #[prost(string, repeated, tag = "10")]
    pub param3: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(float, repeated, tag = "11")]
    pub param2: ::prost::alloc::vec::Vec<f32>,
    #[prost(uint32, repeated, tag = "12")]
    pub param1: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22909)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mhhfbijajec {
    #[prost(enumeration = "Mfmjoemgmcm", tag = "1")]
    pub imiogmdokcb: i32,
    #[prost(bool, tag = "2")]
    pub ojcinponcgm: bool,
    #[prost(uint32, tag = "4")]
    pub score: u32,
    #[prost(bool, tag = "5")]
    pub eejccicofii: bool,
    #[prost(bool, tag = "7")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "8")]
    pub ffhpdcibkod: u32,
    #[prost(message, repeated, tag = "9")]
    pub cjnebkecbfm: ::prost::alloc::vec::Vec<Ombeifnnedf>,
    #[prost(uint32, tag = "10")]
    pub ggigcllhefm: u32,
    #[prost(uint32, tag = "11")]
    pub combo: u32,
    #[prost(uint32, tag = "14")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29007)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bnghaoolfpl {
    #[prost(message, optional, tag = "8")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(int32, tag = "11")]
    pub param: i32,
    #[prost(uint32, tag = "9")]
    pub item_id: u32,
    #[prost(uint32, tag = "10")]
    pub jlgjbaleioi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2011)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mobefldeoga {
    #[prost(message, optional, tag = "3")]
    pub epndbdpklep: ::core::option::Option<Gjdjpcpphic>,
    #[prost(uint32, repeated, tag = "13")]
    pub apocdmcgebc: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "15")]
    pub mndhnpjnngp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20587)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oilaeoiphgn {
    #[prost(uint32, tag = "2")]
    pub moiflkmcicg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2582)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jcgfklapppp {
    #[prost(message, repeated, tag = "2")]
    pub kmklfecooia: ::prost::alloc::vec::Vec<Kbcoimhaboi>,
    #[prost(uint32, tag = "5")]
    pub meilgjaafkh: u32,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub city_id: u32,
    #[prost(uint32, tag = "15")]
    pub hgbbglkplfi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Apddlgfjonm {
    #[prost(message, repeated, tag = "4")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Jmhmljleaik>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5564)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mejdcplomfc {
    #[prost(bool, tag = "12")]
    pub kjaocadpmbk: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3096)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Chjgfpkkknm {
    #[prost(uint32, tag = "8")]
    pub player_uid: u32,
    #[prost(enumeration = "Jmbbabgjlam", tag = "11")]
    pub imiogmdokcb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CustomCommonNodeInfo {
    #[prost(int32, tag = "1")]
    pub parent_index: i32,
    #[prost(uint32, tag = "2")]
    pub config_id: u32,
    #[prost(string, tag = "3")]
    pub slot_identifier: ::prost::alloc::string::String,
    #[prost(int32, repeated, tag = "4")]
    pub param_list: ::prost::alloc::vec::Vec<i32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22322)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eogokmeijij {
    #[prost(uint32, tag = "1")]
    pub ibfoilmphdd: u32,
    #[prost(uint32, tag = "4")]
    pub lnbgblbmadj: u32,
    #[prost(message, optional, tag = "7")]
    pub ienmpnlkpmh: ::core::option::Option<Nbgckgbplal>,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9473)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kkjcohcgmef {
    #[prost(uint32, tag = "9")]
    pub level_id: u32,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6991)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gaofjlopkjc {
    #[prost(bool, tag = "11")]
    pub kllmaaablii: bool,
    #[prost(uint32, tag = "5")]
    pub jnlgdefhndg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ibijgojjoia {
    #[prost(uint32, tag = "6")]
    pub count: u32,
    #[prost(message, optional, tag = "12")]
    pub fgaeincckdk: ::core::option::Option<Ambnedakhfp>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ancdjknfeli {
    #[prost(bool, tag = "2")]
    pub jchhjfldlga: bool,
    #[prost(uint32, tag = "3")]
    pub monejdbpolb: u32,
    #[prost(uint32, tag = "4")]
    pub fedjbgplmhi: u32,
    #[prost(uint32, tag = "5")]
    pub score: u32,
    #[prost(message, repeated, tag = "6")]
    pub hcejpkiajap: ::prost::alloc::vec::Vec<Hfhjkhoplmn>,
    #[prost(uint32, tag = "8")]
    pub dpbdbmiiomp: u32,
    #[prost(uint32, tag = "9")]
    pub ednalckijpg: u32,
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
    #[prost(bool, tag = "11")]
    pub omeniamedce: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21534)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hfpnakgmgjo {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(uint32, tag = "13")]
    pub njddaollmgi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29854)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nkcnffcfegg {
    #[prost(message, optional, tag = "2")]
    pub ekpdnkeflhi: ::core::option::Option<Pajknpdpnmo>,
    #[prost(message, repeated, tag = "7")]
    pub hknmhppcoko: ::prost::alloc::vec::Vec<Pajknpdpnmo>,
    #[prost(bool, tag = "11")]
    pub lcgpfjgdmfe: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Joniobealfp {
    #[prost(message, repeated, tag = "11")]
    pub bhfjidmfolk: ::prost::alloc::vec::Vec<Gobhfjnbfkn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4438)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nopkcodohlm {
    #[prost(bool, tag = "7")]
    pub moaelibphoi: bool,
    #[prost(uint32, tag = "13")]
    pub mp_play_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2673)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kdjhggefpaa {
    #[prost(uint32, repeated, tag = "12")]
    pub eehlcagllhf: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
    #[prost(uint32, tag = "7")]
    pub pfdaoafbgni: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7383)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Danabpackkf {
    #[prost(uint32, tag = "5")]
    pub eacibincaei: u32,
    #[prost(bool, tag = "7")]
    pub pgdgnmgcekm: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cnhljkcjahb {
    #[prost(uint32, tag = "1")]
    pub dojlekienil: u32,
    #[prost(uint32, tag = "3")]
    pub uid: u32,
    #[prost(string, tag = "5")]
    pub nbmaecpjeai: ::prost::alloc::string::String,
    #[prost(fixed32, tag = "8")]
    pub ggigcllhefm: u32,
    #[prost(message, optional, tag = "14")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mijlnffdioc {
    #[prost(uint32, repeated, tag = "3")]
    pub iiednjnoojh: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "12")]
    pub dfjiikednig: u32,
    #[prost(uint32, tag = "13")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(738)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gokgnhhjkoi {
    #[prost(uint32, tag = "4")]
    pub oajoobghagm: u32,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub cell_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29067)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cdkcjchegfl {
    #[prost(message, optional, tag = "3")]
    pub pillgbgffpk: ::core::option::Option<Mgagolbfegf>,
    #[prost(enumeration = "ForwardType", tag = "8")]
    pub forward_type: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Najepfpoeda {
    #[prost(uint64, tag = "1")]
    pub client_game_time: u64,
    #[prost(uint64, tag = "2")]
    pub server_game_time: u64,
    #[prost(message, repeated, tag = "3")]
    pub entity_list: ::prost::alloc::vec::Vec<Bbhekplkmfg>,
    #[prost(message, repeated, tag = "4")]
    pub action_list: ::prost::alloc::vec::Vec<Gaoddbppala>,
    #[prost(bool, tag = "5")]
    pub is_finish: bool,
    #[prost(uint32, repeated, tag = "6")]
    pub id_index_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "7")]
    pub raw_client_game_time: i32,
    #[prost(message, repeated, tag = "8")]
    pub kabodnmegek: ::prost::alloc::vec::Vec<Ojnlffgjcfi>,
    #[prost(int32, tag = "9")]
    pub wave_index: i32,
    #[prost(message, optional, tag = "10")]
    pub gmdjegfemjk: ::core::option::Option<Hgjdncckhae>,
    #[prost(int32, tag = "11")]
    pub oinepoihigb: i32,
    #[prost(int32, tag = "12")]
    pub ichdddnlghf: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25372)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ggidcomhkkk {
    #[prost(int32, tag = "13")]
    pub param2: i32,
    #[prost(int32, tag = "14")]
    pub param3: i32,
    #[prost(int32, tag = "3")]
    pub param1: i32,
    #[prost(uint32, tag = "15")]
    pub source_entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22037)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mdcbnecidob {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6097)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pddkinbdlnp {
    #[prost(int32, tag = "14")]
    pub retcode: i32,
    #[prost(oneof = "pddkinbdlnp::Detail", tags = "458, 659, 1363, 1792, 1928")]
    pub detail: ::core::option::Option<pddkinbdlnp::Detail>,
}
/// Nested message and enum types in `PDDKINBDLNP`.
pub mod pddkinbdlnp {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(bool, tag = "458")]
        IsShowDetailBuild(bool),
        #[prost(uint32, tag = "659")]
        BgmId(u32),
        #[prost(bool, tag = "1363")]
        IsShowAnimation(bool),
        #[prost(bool, tag = "1792")]
        IsShowBriefCardEventCase(bool),
        #[prost(uint32, tag = "1928")]
        RedPoint(u32),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24085)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jenpnbfgahg {
    #[prost(message, repeated, tag = "5")]
    pub noichajibga: ::prost::alloc::vec::Vec<Olncpfjiekm>,
    #[prost(map = "uint64, message", tag = "7")]
    pub cjenicjpfge: ::std::collections::HashMap<u64, Igklnndncmg>,
    #[prost(int32, repeated, tag = "9")]
    pub fohbpemhknc: ::prost::alloc::vec::Vec<i32>,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8701)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ihlldifpfoc {
    #[prost(message, optional, tag = "5")]
    pub kehkbepdnbd: ::core::option::Option<Lioffogfcgc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26757)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Akibbjckajd {
    #[prost(uint32, tag = "1")]
    pub group_id: u32,
    #[prost(uint32, tag = "5")]
    pub jimelgdjmlf: u32,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fphkaopdehn {
    #[prost(uint32, tag = "1")]
    pub jcmchgnnlmj: u32,
    #[prost(uint32, tag = "2")]
    pub level: u32,
    #[prost(enumeration = "Lincbkjpoll", tag = "7")]
    pub fbdobgjgnbf: i32,
    #[prost(uint32, tag = "9")]
    pub ggemjkemjpk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27825)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ilpahdmibak {
    #[prost(uint32, tag = "9")]
    pub hmogllbdgjm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25515)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eoengclgkik {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(uint32, tag = "13")]
    pub kadmiehbmfi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct TrialAvatarGrantRecord {
    #[prost(uint32, tag = "1")]
    pub grant_reason: u32,
    #[prost(uint32, tag = "2")]
    pub from_parent_quest_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21134)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ggjhbgfknpj {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hhidcmmajml {
    #[prost(message, optional, tag = "1")]
    pub pgjjcnghlon: ::core::option::Option<Okaehfflkad>,
    #[prost(uint32, tag = "7")]
    pub dajhkhflndj: u32,
    #[prost(bool, tag = "8")]
    pub dkeeigmgilf: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mjhjlhdejbe {
    #[prost(message, repeated, tag = "1")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Hmdnkhglclp>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22614)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ngljijbbhak {
    #[prost(uint32, tag = "10")]
    pub aoegkkajean: u32,
    #[prost(uint32, tag = "14")]
    pub alnkcjohlgo: u32,
    #[prost(bool, tag = "15")]
    pub aoapppjoghc: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mcigbdljifh {
    #[prost(bool, tag = "3")]
    pub glkngddnocn: bool,
    #[prost(message, repeated, tag = "9")]
    pub looglcjladb: ::prost::alloc::vec::Vec<Dccljikdbfg>,
    #[prost(message, optional, tag = "10")]
    pub hinhoechnfl: ::core::option::Option<Jhkpmjjllof>,
    #[prost(uint32, tag = "11")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "13")]
    pub iejpghnlidb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aaenlnibfop {
    #[prost(bool, tag = "2")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "7")]
    pub eaipgemknpo: u32,
    #[prost(bool, tag = "8")]
    pub is_finish: bool,
    #[prost(uint32, tag = "15")]
    pub lhflnpkfdki: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5481)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cihafpkmbkp {
    #[prost(message, repeated, tag = "9")]
    pub omgnbdhmjni: ::prost::alloc::vec::Vec<Pankpdjhcbk>,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28171)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ccikdakegnd {
    #[prost(message, optional, tag = "9")]
    pub npfflknkfnd: ::core::option::Option<CustomGadgetTreeInfo>,
    #[prost(uint32, tag = "13")]
    pub jmjjobgjjdh: u32,
    #[prost(uint32, tag = "3")]
    pub ghlbjahjehf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25425)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Apdoncbfbaj {
    #[prost(message, optional, tag = "2")]
    pub dejjlmbbmmd: ::core::option::Option<Lhcgihkbblc>,
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub param: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jaachoefmpd {
    #[prost(message, optional, tag = "12")]
    pub phlbljlbidf: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "14")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28895)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dhadblfhejl {
    #[prost(message, optional, tag = "3")]
    pub acpeigepold: ::core::option::Option<Gpjghadeoen>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7127)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Agaggelmlfc {
    #[prost(message, repeated, tag = "3")]
    pub kfcmcnlndfc: ::prost::alloc::vec::Vec<Ikaakklbgmb>,
    #[prost(uint32, tag = "5")]
    pub level_id: u32,
    #[prost(uint32, repeated, tag = "9")]
    pub ceofallniim: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "11")]
    pub bodiejclgmb: u32,
    #[prost(uint32, tag = "12")]
    pub apaaphbhhmk: u32,
    #[prost(bool, tag = "13")]
    pub akcljoalodi: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20411)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Adjiefebjik {
    #[prost(uint32, tag = "4")]
    pub cdgbhmnpcla: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29014)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pbefelbbhki {
    #[prost(enumeration = "Mgobeipgija", tag = "6")]
    pub hibekddofhb: i32,
    #[prost(uint32, tag = "7")]
    pub fkmecphjkmj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nfgbcpjbdmj {
    #[prost(uint32, tag = "9")]
    pub nhbhjkbjpfd: u32,
    #[prost(uint32, tag = "11")]
    pub picpmmhffbb: u32,
    #[prost(uint32, tag = "14")]
    pub jachdipbcei: u32,
    #[prost(uint32, tag = "15")]
    pub mejcendjalc: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25772)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Koopjpphnnh {
    #[prost(message, optional, tag = "6")]
    pub hchlhfcgiio: ::core::option::Option<Mobcemckpjd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nkfifdhjbcc {
    #[prost(uint32, tag = "1")]
    pub block_id: u32,
    #[prost(uint32, tag = "2")]
    pub lkoigpffhbi: u32,
    #[prost(bytes = "vec", tag = "3")]
    pub iiliemmlfof: ::prost::alloc::vec::Vec<u8>,
    #[prost(bool, tag = "4")]
    pub acaodkfoaob: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27763)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cjgcnfgeomd {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mlioehpbife {
    #[prost(uint32, repeated, tag = "5")]
    pub dnikhkomhla: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "8")]
    pub level_id: u32,
    #[prost(uint32, tag = "10")]
    pub gdhakdgdoim: u32,
    #[prost(uint32, repeated, tag = "11")]
    pub cgdnlniejha: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23056)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dapdibcfmdd {
    #[prost(uint32, tag = "2")]
    pub cnaifgicldh: u32,
    #[prost(uint32, tag = "3")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9680)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cacbncopkgn {
    #[prost(uint64, tag = "1")]
    pub cur_avatar_guid: u64,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
    #[prost(uint64, repeated, tag = "14")]
    pub avatar_team_guid_list: ::prost::alloc::vec::Vec<u64>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22829)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jeideaedbcf {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5301)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lldhekfnmld {
    #[prost(bool, tag = "10")]
    pub jddkkhmgfcd: bool,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
    #[prost(bool, tag = "15")]
    pub ccgjikpgdbo: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29275)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kbkojlljcaf {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dpghieibpip {
    #[prost(message, optional, tag = "3")]
    pub kpcpnehcmej: ::core::option::Option<Efegiimaomi>,
    #[prost(enumeration = "Dcdcnnpiffk", tag = "15")]
    pub fbfdaklpefb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oaaocklkagg {
    #[prost(uint32, tag = "1")]
    pub level_id: u32,
    #[prost(bool, tag = "5")]
    pub glkngddnocn: bool,
    #[prost(bool, tag = "13")]
    pub is_finish: bool,
    #[prost(uint32, tag = "14")]
    pub ofnmjncbnhk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Imhhiobhimg {
    #[prost(uint32, tag = "5")]
    pub level_id: u32,
    #[prost(uint32, tag = "7")]
    pub kngjhmllcnp: u32,
    #[prost(uint32, tag = "8")]
    pub bodiejclgmb: u32,
    #[prost(bool, tag = "11")]
    pub omeniamedce: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21084)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lbpmjoaailh {
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5970)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mcicdnjagef {
    #[prost(uint32, tag = "6")]
    pub cekichkjdkm: u32,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5882)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kpoadadiaac {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8134)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gacegmlnpjo {
    #[prost(uint32, tag = "5")]
    pub nljejpgcpci: u32,
    #[prost(uint32, tag = "7")]
    pub doojbbopjhe: u32,
    #[prost(uint32, tag = "9")]
    pub folpgbmhnjl: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hdbbjnnfkmg {
    #[prost(uint32, tag = "4")]
    pub ooipgfedjmn: u32,
    #[prost(uint32, repeated, tag = "6")]
    pub fkpcokdejam: ::prost::alloc::vec::Vec<u32>,
    #[prost(enumeration = "Cmgooomlaia", tag = "13")]
    pub imiogmdokcb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8513)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ickcclaiphg {
    #[prost(bool, tag = "4")]
    pub mcglachpffp: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8133)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ohgfmlnpohm {
    #[prost(message, optional, tag = "9")]
    pub nnfjjlgpbka: ::core::option::Option<Kcicahcpbgb>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5615)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eclidcdeopk {
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4902)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hdojjmmnlic {
    #[prost(uint32, tag = "4")]
    pub bodiejclgmb: u32,
    #[prost(message, repeated, tag = "6")]
    pub pmjgjnilmbp: ::prost::alloc::vec::Vec<Idodjeokcpo>,
    #[prost(uint32, tag = "7")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "8")]
    pub level_id: u32,
    #[prost(bool, tag = "10")]
    pub akcljoalodi: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ggfekdpkfoh {
    #[prost(uint32, tag = "1")]
    pub monejdbpolb: u32,
    #[prost(uint32, tag = "3")]
    pub nmaapldbbni: u32,
    #[prost(bool, tag = "4")]
    pub glkngddnocn: bool,
    #[prost(uint32, repeated, tag = "8")]
    pub jhlbppfggpg: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "9")]
    pub is_finish: bool,
    #[prost(uint32, repeated, tag = "10")]
    pub epbmkilnpji: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint64, repeated, tag = "11")]
    pub avatar_guid_list: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint32, tag = "12")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dkpcondmmdj {
    #[prost(uint32, tag = "1")]
    pub kngjhmllcnp: u32,
    #[prost(uint32, tag = "2")]
    pub kafhplflknj: u32,
    #[prost(message, repeated, tag = "8")]
    pub pgibhchlpdn: ::prost::alloc::vec::Vec<Mdkcmcimndg>,
    #[prost(bool, tag = "10")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "13")]
    pub ckphcagonkg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6482)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fldgcccdfgg {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(int32, repeated, tag = "6")]
    pub agkpekaanca: ::prost::alloc::vec::Vec<i32>,
    #[prost(message, repeated, tag = "9")]
    pub item_list: ::prost::alloc::vec::Vec<Jickppdlohc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26606)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ckplhacchoe {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pmlbokpcdmg {
    #[prost(uint32, tag = "4")]
    pub fghmmaaeola: u32,
    #[prost(message, repeated, tag = "7")]
    pub hnbfdmamjko: ::prost::alloc::vec::Vec<Nhmfhfjppkm>,
    #[prost(message, repeated, tag = "14")]
    pub mbdhjjohcko: ::prost::alloc::vec::Vec<Mpmgngljgjp>,
    #[prost(int32, tag = "15")]
    pub jbfbepkmbdm: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Item {
    #[prost(uint32, tag = "1")]
    pub item_id: u32,
    #[prost(uint64, tag = "2")]
    pub guid: u64,
    #[prost(oneof = "item::Detail", tags = "5, 6, 7")]
    pub detail: ::core::option::Option<item::Detail>,
}
/// Nested message and enum types in `Item`.
pub mod item {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(message, tag = "5")]
        Material(super::Material),
        #[prost(message, tag = "6")]
        Equip(super::Equip),
        #[prost(message, tag = "7")]
        Furniture(super::Furniture),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4779)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nnkaflndibf {
    #[prost(message, repeated, tag = "1")]
    pub lageeohcmng: ::prost::alloc::vec::Vec<Jcjcmaibcao>,
    #[prost(uint32, repeated, tag = "6")]
    pub lbojanoknpa: ::prost::alloc::vec::Vec<u32>,
    #[prost(map = "uint32, uint32", tag = "9")]
    pub ppjmhpbhokf: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4144)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kgehajdbbpg {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(message, optional, tag = "12")]
    pub dnkjojhbjld: ::core::option::Option<Epjopbfflfl>,
    #[prost(message, repeated, tag = "13")]
    pub adonaediebg: ::prost::alloc::vec::Vec<Becbkbinebd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct SceneFishInfo {
    #[prost(uint32, tag = "1")]
    pub fish_id: u32,
    #[prost(uint32, tag = "2")]
    pub fish_pool_entity_id: u32,
    #[prost(message, optional, tag = "3")]
    pub fish_pool_pos: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "4")]
    pub fish_pool_gadget_id: u32,
    #[prost(uint32, tag = "5")]
    pub last_shock_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29625)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jcaafmbgehd {
    #[prost(uint32, tag = "6")]
    pub skill_id: u32,
    #[prost(float, tag = "12")]
    pub ignjjjlebci: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22252)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Odjocgonkdd {
    #[prost(message, repeated, tag = "6")]
    pub bnjojbopmfj: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(uint64, tag = "2")]
    pub avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26019)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ocajfeglpbp {
    #[prost(uint32, repeated, tag = "4")]
    pub hbcnmjbfooo: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "9")]
    pub amhhleokokb: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "10")]
    pub epjghnleioo: u32,
    #[prost(uint32, repeated, tag = "11")]
    pub kcdegdmlkcb: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "12")]
    pub okimgmgpgpg: u32,
    #[prost(message, repeated, tag = "15")]
    pub bddokmiejph: ::prost::alloc::vec::Vec<Gbgadbffgoo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25502)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ifmipfecokf {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint32, tag = "9")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25003)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gdjbkpcjknm {
    #[prost(bool, tag = "7")]
    pub ilnbddpakhp: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23105)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pcdpcfggdnd {
    #[prost(uint32, tag = "12")]
    pub level_id: u32,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Knoplgaahfb {
    #[prost(uint32, tag = "5")]
    pub dicagnbiafi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29856)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ijjjhjmcaao {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9554)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Genadbnhghk {
    #[prost(uint32, tag = "2")]
    pub pjnjnhhlmmg: u32,
    #[prost(uint32, tag = "6")]
    pub eofgmiikhmp: u32,
    #[prost(uint32, tag = "7")]
    pub dmjdagphmlc: u32,
    #[prost(uint32, tag = "8")]
    pub hdaompdadik: u32,
    #[prost(uint32, tag = "11")]
    pub hlajfgfchdd: u32,
    #[prost(uint32, tag = "13")]
    pub joicjbpfpah: u32,
    #[prost(uint32, tag = "14")]
    pub chpmmfpidnk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(988)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jpaabcckcmc {
    #[prost(uint32, tag = "7")]
    pub draft_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22093)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Omoifeblkbe {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nmkndnhoppm {
    #[prost(uint32, tag = "1")]
    pub iejpghnlidb: u32,
    #[prost(uint32, tag = "4")]
    pub eaipgemknpo: u32,
    #[prost(message, repeated, tag = "5")]
    pub bbopfhaodop: ::prost::alloc::vec::Vec<Ajmimbmcabe>,
    #[prost(uint32, tag = "10")]
    pub nmaapldbbni: u32,
    #[prost(bool, tag = "11")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27307)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pkmbiajcahg {
    #[prost(uint32, tag = "6")]
    pub jnfdnflbejo: u32,
    #[prost(uint32, tag = "14")]
    pub ecpgnbgdbbn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2858)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ijdidihnnmn {
    #[prost(uint32, tag = "1")]
    pub japeoejlnpd: u32,
    #[prost(bool, tag = "3")]
    pub ojifcjgpcbk: bool,
    #[prost(uint32, tag = "5")]
    pub cjdimmaimho: u32,
    #[prost(uint32, tag = "10")]
    pub ffhpdcibkod: u32,
    #[prost(map = "uint32, uint32", tag = "13")]
    pub jioeogolpfd: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "15")]
    pub pieapgepmlf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ehenakbimen {
    #[prost(uint32, tag = "1")]
    pub bophlabgicn: u32,
    #[prost(uint64, tag = "5")]
    pub pdajafkmhni: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28499)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kggfcfdahai {
    #[prost(bool, tag = "9")]
    pub kiaindaokea: bool,
    #[prost(uint32, tag = "15")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Caimbamkdal {
    #[prost(float, tag = "6")]
    pub mdmmnleemdf: f32,
    #[prost(uint32, tag = "12")]
    pub entity_id: u32,
    #[prost(uint32, tag = "15")]
    pub iafhmpdiddm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lknmmgecljm {
    #[prost(bool, tag = "2")]
    pub is_finish: bool,
    #[prost(uint32, tag = "4")]
    pub eaipgemknpo: u32,
    #[prost(message, repeated, tag = "7")]
    pub fonpamnbbgb: ::prost::alloc::vec::Vec<Hdcfbppbplf>,
    #[prost(bool, tag = "9")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "11")]
    pub mkcgmmganlk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Feemcgmmdci {
    #[prost(message, repeated, tag = "14")]
    pub dopjdkedcbn: ::prost::alloc::vec::Vec<Nohoklhhnkd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pndbjojmdph {
    #[prost(uint32, tag = "2")]
    pub fhmjegfkfgk: u32,
    #[prost(uint32, tag = "3")]
    pub kokjmcifoad: u32,
    #[prost(uint32, tag = "6")]
    pub innkmkkbbpk: u32,
    #[prost(bool, tag = "8")]
    pub beaeccbbipg: bool,
    #[prost(uint32, tag = "12")]
    pub onbimegcmpb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GadgetGeneralRewardInfo {
    #[prost(uint32, tag = "1")]
    pub resin: u32,
    #[prost(uint32, tag = "2")]
    pub ddnkdjjnnci: u32,
    #[prost(uint32, repeated, tag = "3")]
    pub remain_uid_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "4")]
    pub qualify_uid_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, optional, tag = "5")]
    pub entity_id: ::core::option::Option<Jickppdlohc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7191)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ccempodimbd {
    #[prost(message, optional, tag = "8")]
    pub lfimdgikmmn: ::core::option::Option<Nglcjleibdh>,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8131)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oehfefccnej {
    #[prost(uint32, tag = "11")]
    pub baoncbkpiic: u32,
    #[prost(uint32, tag = "14")]
    pub mklebmojiac: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nnlfbhcelog {
    #[prost(message, optional, tag = "1")]
    pub jhnfdbbbmjc: ::core::option::Option<Ombeifnnedf>,
    #[prost(message, repeated, tag = "2")]
    pub hkpdfiiehpa: ::prost::alloc::vec::Vec<Ombeifnnedf>,
    #[prost(uint32, tag = "3")]
    pub jlapiokhegm: u32,
    #[prost(message, repeated, tag = "4")]
    pub jnfhpagmgci: ::prost::alloc::vec::Vec<Ngjmkapgkbm>,
    #[prost(uint32, repeated, tag = "5")]
    pub cbohpemfmpl: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, optional, tag = "6")]
    pub ebmjolmpilh: ::core::option::Option<Ombeifnnedf>,
    #[prost(message, optional, tag = "7")]
    pub jcoingdobmd: ::core::option::Option<Ombeifnnedf>,
    #[prost(uint32, tag = "8")]
    pub eolkpfnhmfp: u32,
    #[prost(uint32, repeated, tag = "9")]
    pub mkefpaaihkp: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "10")]
    pub hggehlmhkmp: u32,
    #[prost(uint32, tag = "11")]
    pub lgfhdfoeoek: u32,
    #[prost(uint32, repeated, tag = "14")]
    pub cljldmknegd: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "15")]
    pub kenkkgdimja: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ngjmkapgkbm {
    #[prost(uint32, tag = "6")]
    pub noajnmhaoep: u32,
    #[prost(uint32, repeated, tag = "14")]
    pub mnchcggmlpa: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20509)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mlbgfdambnn {
    #[prost(uint32, tag = "11")]
    pub aekageebaaa: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29156)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Afgcpbklhmb {
    #[prost(map = "uint32, message", tag = "1")]
    pub prop_map: ::std::collections::HashMap<u32, PropValue>,
    #[prost(message, optional, tag = "13")]
    pub efbhadimhnf: ::core::option::Option<Kbgffpmolnp>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5412)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Knbkbjggopl {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3224)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Igjflaflekg {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fdkiifffcgj {
    #[prost(int32, tag = "2")]
    pub kijohgonmma: i32,
    #[prost(message, repeated, tag = "6")]
    pub mimhkbcfmcn: ::prost::alloc::vec::Vec<Djfjjgedfph>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20147)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kdlppjbjnin {
    #[prost(uint32, repeated, tag = "12")]
    pub blgjddidbnf: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "3")]
    pub finahglfhag: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ocaamcabkgg {
    #[prost(uint32, tag = "1")]
    pub fgolicdlfkg: u32,
    #[prost(enumeration = "Hipgpmncmbp", tag = "2")]
    pub enbnemmefbn: i32,
    #[prost(fixed32, tag = "5")]
    pub end_time: u32,
    #[prost(uint32, tag = "6")]
    pub fhaihpbkobi: u32,
    #[prost(uint32, repeated, tag = "7")]
    pub eekfelfangn: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20267)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Phockfafkco {
    #[prost(uint32, tag = "8")]
    pub level: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4777)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Meikpfdanfg {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8297)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jdehomgcpgd {
    #[prost(bool, tag = "14")]
    pub phhaefnlmgg: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20090)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ddpofmampcp {
    #[prost(uint32, repeated, tag = "2")]
    pub kpbmmhblcbg: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "4")]
    pub ipkaaincemp: u32,
    #[prost(uint32, tag = "7")]
    pub item_id: u32,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(uint64, tag = "14")]
    pub nfcnddlgklh: u64,
    #[prost(uint64, tag = "15")]
    pub guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3261)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nkinhkiecji {
    #[prost(bool, tag = "1")]
    pub jemmgilnbpa: bool,
    #[prost(uint32, tag = "2")]
    pub ggcfiehankk: u32,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(bool, tag = "10")]
    pub omeniamedce: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9521)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dfnppnkohed {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9699)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pfaffiillpd {
    #[prost(uint32, tag = "1")]
    pub level_id: u32,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hpknpbfcppd {
    #[prost(message, repeated, tag = "1")]
    pub iflibbifjcc: ::prost::alloc::vec::Vec<Gkghdhddmhc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27964)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ogggdmlankk {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3048)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cmnakjkolkf {
    #[prost(uint64, tag = "4")]
    pub avatar_guid: u64,
    #[prost(uint32, tag = "7")]
    pub entity_id: u32,
    #[prost(uint32, tag = "11")]
    pub pihjhgkfclh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27149)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lapjicofkpo {
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24087)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mjgdbfeceaa {
    #[prost(message, repeated, tag = "3")]
    pub efcdelgmmkg: ::prost::alloc::vec::Vec<Nhflidhfael>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Agcjpgfcmkm {
    #[prost(uint32, tag = "2")]
    pub jimelgdjmlf: u32,
    #[prost(uint64, tag = "3")]
    pub nkcolnajdca: u64,
    #[prost(uint32, tag = "4")]
    pub lmofdccbkoi: u32,
    #[prost(bool, tag = "9")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "10")]
    pub jiogpokkgag: u32,
    #[prost(uint32, tag = "12")]
    pub group_id: u32,
    #[prost(uint32, tag = "14")]
    pub ifhgkopekpm: u32,
    #[prost(message, repeated, tag = "15")]
    pub olflngkoajk: ::prost::alloc::vec::Vec<Ioflibiggbm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5799)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hmkmkhliaha {
    #[prost(enumeration = "Ajnljaaekog", tag = "7")]
    pub imiogmdokcb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6863)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bonlfjgnbib {
    #[prost(message, optional, tag = "4")]
    pub nganceicghc: ::core::option::Option<Laadojlabdh>,
    #[prost(enumeration = "Elenllnehne", tag = "6")]
    pub amgmmkeddmk: i32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
    #[prost(message, optional, tag = "14")]
    pub eimcfamhhbj: ::core::option::Option<Pagiaoelfbi>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1889)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Johemfkjfdo {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kiappnbmobo {
    #[prost(uint32, repeated, tag = "6")]
    pub uid_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "9")]
    pub innnophkpfp: u32,
    #[prost(string, repeated, tag = "12")]
    pub aebmekgcefp: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(uint32, tag = "13")]
    pub ljkbojjnhlk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4691)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ipakcflkeff {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23820)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ochldoalkih {
    #[prost(uint32, tag = "5")]
    pub lpgihliaipl: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1777)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lljnoepbmbi {
    #[prost(enumeration = "Ckleegmpdgn", tag = "13")]
    pub agmhmdhefkd: i32,
    #[prost(bool, tag = "14")]
    pub jfjndakfjek: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20255)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jflphhhfjel {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21433)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ehpiipillcp {
    #[prost(uint32, tag = "2")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MassivePropSyncInfo {
    #[prost(int64, tag = "1")]
    pub id: i64,
    #[prost(message, repeated, tag = "2")]
    pub prop_list: ::prost::alloc::vec::Vec<MassivePropParam>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8293)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bcbbddebmag {
    #[prost(bool, tag = "8")]
    pub coggiaapekj: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dbolcjjilgp {
    #[prost(uint32, tag = "4")]
    pub knnlinpahnc: u32,
    #[prost(bool, tag = "10")]
    pub is_finish: bool,
    #[prost(uint32, tag = "11")]
    pub iejpghnlidb: u32,
    #[prost(uint32, tag = "12")]
    pub eaipgemknpo: u32,
    #[prost(bool, tag = "15")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20709)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ahhncodjjlo {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(uint32, tag = "8")]
    pub gablkaaecjb: u32,
    #[prost(uint32, tag = "11")]
    pub hoceceaalmd: u32,
    #[prost(uint32, tag = "14")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9113)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Injohnocmel {
    #[prost(uint32, tag = "1")]
    pub entity_id: u32,
    #[prost(message, optional, tag = "6")]
    pub position: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "9")]
    pub monster_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22973)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Egflljgffgk {
    #[prost(uint32, tag = "3")]
    pub scene_id: u32,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23799)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dhonejinpac {
    #[prost(uint32, tag = "10")]
    pub mdmmnleemdf: u32,
    #[prost(uint32, tag = "12")]
    pub key: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8538)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fgnmapddgol {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27237)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bpjnjgmldcj {
    #[prost(uint32, tag = "1")]
    pub target_uid: u32,
    #[prost(enumeration = "Phfcnlmknfn", tag = "9")]
    pub kfkehgpmbpb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lfljdeihldm {
    #[prost(enumeration = "Hgmlodjcjno", tag = "1")]
    pub status: i32,
    #[prost(map = "uint32, uint32", tag = "2")]
    pub fkjphkihbmd: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, repeated, tag = "4")]
    pub onpgicebpfj: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "5")]
    pub alkgnkpnkij: u32,
    #[prost(map = "uint32, int32", tag = "6")]
    pub jnofeohimob: ::std::collections::HashMap<u32, i32>,
    #[prost(map = "uint32, int32", tag = "7")]
    pub lemcpfecpmb: ::std::collections::HashMap<u32, i32>,
    #[prost(uint32, tag = "13")]
    pub id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26670)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mmcgomjhnho {
    #[prost(message, optional, tag = "14")]
    pub odpnmgfheom: ::core::option::Option<Obolbjcgmga>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1979)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hpaplkokkbi {
    #[prost(uint32, tag = "1")]
    pub group_id: u32,
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "7")]
    pub eoobhpaodnc: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8402)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jejplcnafbc {
    #[prost(message, repeated, tag = "1")]
    pub mmoidifgglp: ::prost::alloc::vec::Vec<Ddaakfefaib>,
    #[prost(message, repeated, tag = "4")]
    pub dncpecmnekk: ::prost::alloc::vec::Vec<Khcoejhbnll>,
    #[prost(message, repeated, tag = "9")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Cmmdiegngml>,
    #[prost(message, repeated, tag = "10")]
    pub klimjfepdjh: ::prost::alloc::vec::Vec<Mijlijekdkh>,
    #[prost(uint32, tag = "11")]
    pub beofnmdojbp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7909)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ofbaldgihll {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub config_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23060)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Emokcbnikjc {
    #[prost(message, repeated, tag = "5")]
    pub oncfekcfkmo: ::prost::alloc::vec::Vec<Obolbjcgmga>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eikamckbfdf {
    #[prost(message, optional, tag = "12")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "14")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "15")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29596)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bjjbbnkiaba {
    #[prost(enumeration = "ForwardType", tag = "4")]
    pub forward_type: i32,
    #[prost(bool, tag = "6")]
    pub ffekmffdnap: bool,
    #[prost(uint32, tag = "13")]
    pub entity_id: u32,
    #[prost(message, optional, tag = "15")]
    pub renderer_changed_info: ::core::option::Option<EntityRendererChangedInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29487)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ffgiohkfmnn {
    #[prost(uint32, repeated, tag = "2")]
    pub nibooakkpna: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fmdnknhkbjg {
    #[prost(uint32, tag = "8")]
    pub nhbhjkbjpfd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21521)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ijajhjecjfk {
    #[prost(message, repeated, tag = "1")]
    pub fagjdjiglon: ::prost::alloc::vec::Vec<Bgninggdpaa>,
    #[prost(bool, tag = "3")]
    pub edojgafakda: bool,
    #[prost(uint32, tag = "4")]
    pub jimelgdjmlf: u32,
    #[prost(uint32, tag = "6")]
    pub kkppjfkddep: u32,
    #[prost(bool, tag = "7")]
    pub jlaiaaekggm: bool,
    #[prost(uint32, tag = "9")]
    pub duration: u32,
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
    #[prost(uint32, tag = "11")]
    pub score: u32,
    #[prost(sfixed32, tag = "13")]
    pub jabgacillec: i32,
    #[prost(uint32, tag = "14")]
    pub ogdcenflhjn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mdmmhlcdbjl {
    #[prost(message, optional, tag = "3")]
    pub mekefmajemf: ::core::option::Option<Ngdkieindnn>,
    #[prost(bool, tag = "5")]
    pub bmfaadbocfn: bool,
    #[prost(message, optional, tag = "13")]
    pub oaganlfhmbk: ::core::option::Option<Legkibhihfa>,
    #[prost(message, optional, tag = "14")]
    pub ephdiijjgne: ::core::option::Option<Ckpijbmmbgj>,
    #[prost(uint32, repeated, tag = "15")]
    pub ggjaleepedp: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1009)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bgnalmhbeed {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint32, tag = "2")]
    pub cbbaclolncd: u32,
    #[prost(uint32, tag = "5")]
    pub uid: u32,
    #[prost(uint32, tag = "11")]
    pub index: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(641)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jmbgnhcbnmo {
    #[prost(message, repeated, tag = "10")]
    pub item_list: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(uint32, tag = "1")]
    pub pjabefajbgb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3833)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ecljgijopfe {
    #[prost(uint32, tag = "10")]
    pub nkgekomllng: u32,
    #[prost(uint32, tag = "14")]
    pub cilmghamedd: u32,
    #[prost(uint32, tag = "15")]
    pub monster_config_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28738)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oldfcjndbmo {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7941)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Miahnbojclf {
    #[prost(uint32, tag = "1")]
    pub dnbefljlamb: u32,
    #[prost(uint32, repeated, tag = "9")]
    pub ggaingimeoj: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23699)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mpfcdlipedo {
    #[prost(message, optional, tag = "13")]
    pub mark: ::core::option::Option<Lgidoebepcl>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ijmjomapcjn {
    #[prost(uint32, tag = "6")]
    pub level_id: u32,
    #[prost(bool, tag = "9")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "15")]
    pub hfaleccdfif: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6765)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pcbhodhcaij {
    #[prost(uint32, tag = "5")]
    pub nialfjmgpph: u32,
    #[prost(message, repeated, tag = "6")]
    pub lconahldejj: ::prost::alloc::vec::Vec<Lcpdopfdndg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cliigmpcidh {
    #[prost(uint32, tag = "15")]
    pub skill_depot_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28152)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oninkmdonei {
    #[prost(uint32, repeated, tag = "6")]
    pub tag_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint64, tag = "14")]
    pub mcppeknbhfk: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27602)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lnbkheaonlb {
    #[prost(message, optional, tag = "9")]
    pub agmcincebpb: ::core::option::Option<Hcjgifnjppj>,
    #[prost(uint32, tag = "11")]
    pub meilgjaafkh: u32,
    #[prost(message, repeated, tag = "12")]
    pub kmklfecooia: ::prost::alloc::vec::Vec<Nkckdblfbmp>,
    #[prost(uint32, tag = "13")]
    pub hgbbglkplfi: u32,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
    #[prost(uint32, tag = "15")]
    pub city_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aebojmlmbge {
    #[prost(enumeration = "Kbaiomioccp", tag = "5")]
    pub jmlabobclde: i32,
    #[prost(uint32, tag = "15")]
    pub ooipgfedjmn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21029)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jdgibgiboig {
    #[prost(uint32, tag = "3")]
    pub jcojapmjdnm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bemnaikefon {
    #[prost(uint32, tag = "4")]
    pub epfcidiklkg: u32,
    #[prost(bool, tag = "5")]
    pub edbenbibobm: bool,
    #[prost(uint32, tag = "12")]
    pub ajmmaeegjea: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4784)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Deiomdapoab {
    #[prost(uint32, repeated, tag = "4")]
    pub pamdfdaaddo: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "7")]
    pub lhmefidphda: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mallehdgdab {
    #[prost(bool, tag = "4")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "5")]
    pub ajkneooehcg: u32,
    #[prost(uint32, tag = "6")]
    pub level_id: u32,
    #[prost(uint32, tag = "8")]
    pub mkcgmmganlk: u32,
    #[prost(uint32, tag = "10")]
    pub dihpjpafnac: u32,
    #[prost(message, repeated, tag = "12")]
    pub akgeocobnbf: ::prost::alloc::vec::Vec<Djfnbcgcgcp>,
    #[prost(bool, tag = "15")]
    pub is_finish: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20977)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hlhckglibbn {
    #[prost(uint32, repeated, tag = "4")]
    pub ipigafhmpfh: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29121)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Opgfgkjbnge {
    #[prost(uint32, tag = "3")]
    pub dnbefljlamb: u32,
    #[prost(message, repeated, tag = "5")]
    pub ldmghboaepn: ::prost::alloc::vec::Vec<Ipgdgihpbef>,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bnpmpofaeka {
    #[prost(uint32, tag = "4")]
    pub lbmfgdjdmdb: u32,
    #[prost(uint32, tag = "5")]
    pub jcmkkmkhlmn: u32,
    #[prost(map = "uint32, uint32", tag = "6")]
    pub dodfajfpakb: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "12")]
    pub kipoloidmae: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27521)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Opefhlfoojf {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24140)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jmgeijpcfan {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(message, optional, tag = "14")]
    pub fflmnbgaogn: ::core::option::Option<Jnajjandbmo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6110)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jekioaaende {
    #[prost(message, optional, tag = "4")]
    pub hpoeckekafa: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "9")]
    pub mklgaeceklc: ::core::option::Option<Vector>,
    #[prost(int32, tag = "10")]
    pub uid: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9066)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mbahaofjnjn {
    #[prost(enumeration = "Ainahdonfeo", tag = "4")]
    pub fbfdaklpefb: i32,
    #[prost(enumeration = "Aipiihkmogo", tag = "5")]
    pub blhdmdokalp: i32,
    #[prost(uint32, repeated, tag = "6")]
    pub mdcjijlnkhl: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, optional, tag = "9")]
    pub kgfpcmbdpaj: ::core::option::Option<Lkofcbnnoam>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26827)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gkklckcnnhj {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29443)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Flnpnpgfbpg {
    #[prost(message, repeated, tag = "11")]
    pub ffiojcpbnma: ::prost::alloc::vec::Vec<Agadfdcmglk>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mcldaeljnio {
    #[prost(message, repeated, tag = "1")]
    pub iflibbifjcc: ::prost::alloc::vec::Vec<Malkbobpbgg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28710)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ldjbfoakbhd {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint32, tag = "7")]
    pub pkakcbkjnlm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20738)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mhlgibbdfgj {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8933)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Djgalhcgdme {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iclcefkfeag {
    #[prost(uint32, tag = "6")]
    pub param1: u32,
    #[prost(enumeration = "Lpdkcjcmbfn", tag = "10")]
    pub nlfahopjipf: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3794)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aejgpjbjicl {
    #[prost(string, tag = "14")]
    pub kdmhhkonnec: ::prost::alloc::string::String,
    #[prost(uint32, tag = "15")]
    pub bdeflcdkdbi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kmkiaakgnph {
    #[prost(uint32, tag = "5")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "8")]
    pub level_id: u32,
    #[prost(message, repeated, tag = "9")]
    pub efcdelgmmkg: ::prost::alloc::vec::Vec<Fblpikddjdn>,
    #[prost(uint32, tag = "11")]
    pub opphioanebb: u32,
    #[prost(uint32, tag = "13")]
    pub dmmelimgoaj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28882)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lkfnkaihioa {
    #[prost(uint64, repeated, tag = "6")]
    pub avatar_guid_list: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint32, tag = "4")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21112)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ilfkdlhgneh {
    #[prost(message, optional, tag = "12")]
    pub dbdnmhcjfoc: ::core::option::Option<Pkfabbkappa>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9126)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Becpjmmmnhe {
    #[prost(message, optional, tag = "3")]
    pub mnpoiilnkob: ::core::option::Option<Pkaphpkfafj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26973)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ijhmddmknhe {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cbggfcjfplh {
    #[prost(fixed32, tag = "6")]
    pub lhljomhodlk: u32,
    #[prost(fixed32, tag = "7")]
    pub mdmikgffclf: u32,
    #[prost(message, optional, tag = "8")]
    pub maahbbfgboj: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "11")]
    pub djhlnegadip: ::core::option::Option<Vector>,
    #[prost(fixed32, tag = "13")]
    pub ndbicfoenln: u32,
    #[prost(uint32, tag = "15")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22937)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kkphegcmoma {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2068)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hdkjdacekej {
    #[prost(uint32, tag = "3")]
    pub point_id: u32,
    #[prost(bool, tag = "5")]
    pub gdjnidmieje: bool,
    #[prost(uint32, tag = "8")]
    pub gjlmnohpjka: u32,
    #[prost(float, tag = "12")]
    pub speed: f32,
    #[prost(uint32, tag = "15")]
    pub ebhokcegldb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7714)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fmnjkhdjejl {
    #[prost(uint64, tag = "6")]
    pub mcppeknbhfk: u64,
    #[prost(uint32, tag = "10")]
    pub oajoobghagm: u32,
    #[prost(enumeration = "Dcdcnnpiffk", tag = "7")]
    pub fbfdaklpefb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6730)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nnimkljlpdi {
    #[prost(uint32, tag = "14")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "6")]
    pub lchbeahgheo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jdbkonempdd {
    #[prost(message, optional, tag = "1")]
    pub bnheafcgijm: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "3")]
    pub oegjaildlbk: u32,
    #[prost(uint32, tag = "7")]
    pub scene_id: u32,
    #[prost(message, repeated, tag = "8")]
    pub gbanjkinlgk: ::prost::alloc::vec::Vec<Ocaamcabkgg>,
    #[prost(uint32, tag = "15")]
    pub gdcoffhmcfj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27406)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kbihgnclhog {
    #[prost(uint32, tag = "2")]
    pub kfphmnghbfg: u32,
    #[prost(uint32, tag = "14")]
    pub finahglfhag: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29394)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bkcdaiiggcp {
    #[prost(uint32, tag = "2")]
    pub eoncknkglgp: u32,
    #[prost(uint32, tag = "8")]
    pub cgigciffbni: u32,
    #[prost(map = "uint32, uint32", tag = "9")]
    pub gljdlohdogl: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "14")]
    pub iiclkagopph: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28905)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dpbajgignlg {
    #[prost(bool, tag = "11")]
    pub dkchjaghomm: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20615)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jpodedfabig {
    #[prost(bool, tag = "4")]
    pub kcoimeccodp: bool,
    #[prost(uint32, repeated, tag = "12")]
    pub iaamfjgfpmn: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5298)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Akcedpbkkln {
    #[prost(message, optional, tag = "4")]
    pub jgcfeccdgaj: ::core::option::Option<AvatarEquipAffixInfo>,
    #[prost(uint64, tag = "15")]
    pub avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3369)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Neigmikpnbn {
    #[prost(uint32, repeated, tag = "9")]
    pub kfgkhagegce: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22634)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dgaeeaoamoi {
    #[prost(uint32, tag = "10")]
    pub oelcnlojhhe: u32,
    #[prost(uint32, tag = "9")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5601)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ngbnhjdghoi {
    #[prost(string, tag = "2")]
    pub meldifklbnc: ::prost::alloc::string::String,
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(string, tag = "10")]
    pub msg: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cknodnhicol {
    #[prost(bool, tag = "2")]
    pub fecphjjdhfe: bool,
    #[prost(string, tag = "3")]
    pub url: ::prost::alloc::string::String,
    #[prost(uint32, tag = "4")]
    pub end_time: u32,
    #[prost(uint32, tag = "5")]
    pub jabgacillec: u32,
    #[prost(uint32, tag = "6")]
    pub egmgboofafg: u32,
    #[prost(uint32, tag = "11")]
    pub nmikcmlkndm: u32,
    #[prost(uint32, tag = "13")]
    pub efgbgpcbbgf: u32,
    #[prost(string, tag = "15")]
    pub oljdiconifk: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20984)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hbmdiilhafd {
    #[prost(uint32, tag = "1")]
    pub level: u32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(915)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cgacpfjanpm {
    #[prost(bool, tag = "1")]
    pub omeniamedce: bool,
    #[prost(uint64, tag = "5")]
    pub ihgjlfcgfin: u64,
    #[prost(uint32, tag = "9")]
    pub ggcfiehankk: u32,
    #[prost(bool, tag = "10")]
    pub odcgiedjaoj: bool,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
    #[prost(bool, tag = "15")]
    pub lpjchcadnpj: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28413)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Imbaidclblp {
    #[prost(uint32, tag = "5")]
    pub gcndadecclf: u32,
    #[prost(uint32, tag = "13")]
    pub lekkmfgejim: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20334)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cpgfageijam {
    #[prost(uint64, repeated, tag = "2")]
    pub fcbgojnbepo: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint32, tag = "11")]
    pub bkcfgenaobb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bnkhjphhael {
    #[prost(uint32, tag = "4")]
    pub score: u32,
    #[prost(bool, tag = "6")]
    pub is_finish: bool,
    #[prost(uint32, tag = "8")]
    pub level_id: u32,
    #[prost(bool, tag = "11")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nbecpcoejpd {
    #[prost(uint32, tag = "7")]
    pub olekbaakakh: u32,
    #[prost(message, optional, tag = "8")]
    pub lfhhiodmfdp: ::core::option::Option<Okaehfflkad>,
    #[prost(uint32, tag = "14")]
    pub nnhhnhkjmal: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26983)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oamamldcaii {
    #[prost(uint32, tag = "1")]
    pub uid: u32,
    #[prost(uint32, tag = "8")]
    pub scene_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7585)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Chpaaphgoli {
    #[prost(uint32, tag = "7")]
    pub mliofjeoklg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2038)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hclpklcnicc {
    #[prost(message, optional, tag = "14")]
    pub eilnenalnfd: ::core::option::Option<Mlclboekhne>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bbkpgdlljhp {
    #[prost(uint32, tag = "11")]
    pub glggfpokibe: u32,
    #[prost(message, repeated, tag = "13")]
    pub pndpnmbdokf: ::prost::alloc::vec::Vec<Lknmmgecljm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27432)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pkidfdfbjgb {
    #[prost(uint64, tag = "7")]
    pub avatar_guid: u64,
    #[prost(uint32, tag = "2")]
    pub promote_level: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2441)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Clnhejijapf {
    #[prost(message, optional, tag = "4")]
    pub amlijkeniin: ::core::option::Option<Bbklmlcjkif>,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20351)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ijpjonnjcmk {
    #[prost(uint32, tag = "4")]
    pub ffhpdcibkod: u32,
    #[prost(bool, tag = "5")]
    pub elokhohfmcp: bool,
    #[prost(uint32, tag = "6")]
    pub end_time: u32,
    #[prost(enumeration = "Jkobefdemme", tag = "13")]
    pub aidpdnkddnf: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pajknpdpnmo {
    #[prost(uint32, tag = "2")]
    pub avatar_id: u32,
    #[prost(uint32, tag = "5")]
    pub guid: u32,
    #[prost(uint32, tag = "6")]
    pub eefeelicbnf: u32,
    #[prost(uint32, tag = "7")]
    pub hnogkehflhe: u32,
    #[prost(uint32, tag = "12")]
    pub okdgooakcpa: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Onnddbndnle {
    #[prost(uint32, tag = "1")]
    pub doiihabehko: u32,
    #[prost(message, optional, tag = "2")]
    pub ghniillngkc: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "12")]
    pub ref_pos: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "14")]
    pub ref_id: u32,
    #[prost(message, optional, tag = "15")]
    pub oipcdlondgp: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3533)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cfigfkcgjha {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(enumeration = "Kpfoblalblc", tag = "9")]
    pub daakpcoabep: i32,
    #[prost(message, repeated, tag = "14")]
    pub cidmbdphchj: ::prost::alloc::vec::Vec<Oaodpgjompf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26957)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ieokmefncfg {
    #[prost(uint32, tag = "7")]
    pub miolbjepfgp: u32,
    #[prost(uint32, tag = "11")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20708)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Anagafpkcki {
    #[prost(uint32, tag = "13")]
    pub costume_id: u32,
    #[prost(uint64, tag = "10")]
    pub avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hgdjmickhak {
    #[prost(uint32, tag = "1")]
    pub mahahaabdaa: u32,
    #[prost(uint32, repeated, tag = "3")]
    pub loeggilikbh: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "5")]
    pub glkfgcongmi: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ljciaefkooa {
    #[prost(uint32, tag = "6")]
    pub start_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29454)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gabcfdanidp {
    #[prost(int32, tag = "13")]
    pub oajoobghagm: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23673)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Najnmpgmfaj {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint32, tag = "8")]
    pub parent_quest_id: u32,
    #[prost(uint32, tag = "9")]
    pub npc_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ncdnmmmmkaf {
    #[prost(float, tag = "8")]
    pub hajlkkofpen: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22362)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gjclogemihe {
    #[prost(uint32, repeated, tag = "3")]
    pub opjfdljigkp: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "9")]
    pub padnpbhfncm: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24731)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Chndgmmbkdi {
    #[prost(uint32, tag = "2")]
    pub mncbkgjggll: u32,
    #[prost(uint32, tag = "3")]
    pub cdfikapilpf: u32,
    #[prost(uint32, repeated, tag = "12")]
    pub hggjihmneba: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "14")]
    pub nfmbfogncnl: ::prost::alloc::vec::Vec<Acekdebfimc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7016)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ceginkgcegg {
    #[prost(uint32, repeated, tag = "5")]
    pub ndmadjeldme: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kidiomkhfmo {
    #[prost(message, repeated, tag = "2")]
    pub iflibbifjcc: ::prost::alloc::vec::Vec<Ndmndbffogm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mhnlgbpcbcj {
    #[prost(uint32, tag = "2")]
    pub njddaollmgi: u32,
    #[prost(message, optional, tag = "7")]
    pub ckbilfdelif: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "8")]
    pub scene_id: u32,
    #[prost(message, repeated, tag = "10")]
    pub amfbnejghma: ::prost::alloc::vec::Vec<Eckacobpkbl>,
    #[prost(message, optional, tag = "15")]
    pub nohgckambjc: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22773)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cnpigaefgka {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lhfnlmoinel {
    #[prost(string, tag = "3")]
    pub nbmaecpjeai: ::prost::alloc::string::String,
    #[prost(bool, tag = "5")]
    pub llnmdpoccop: bool,
    #[prost(uint32, tag = "7")]
    pub pamjcgbnofe: u32,
    #[prost(uint32, tag = "9")]
    pub player_uid: u32,
    #[prost(message, repeated, tag = "11")]
    pub efcdelgmmkg: ::prost::alloc::vec::Vec<Mcmknaedhon>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7838)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lgcdlfheddj {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "10")]
    pub odfflefldoj: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "15")]
    pub ifgdbigfapm: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nppgolacmci {
    #[prost(uint32, tag = "3")]
    pub clhglaehcia: u32,
    #[prost(uint32, tag = "5")]
    pub pdfekifnbdk: u32,
    #[prost(uint32, tag = "6")]
    pub point_id: u32,
    #[prost(uint32, tag = "8")]
    pub kcjmimeolgn: u32,
    #[prost(enumeration = "Jkobefdemme", tag = "9")]
    pub aidpdnkddnf: i32,
    #[prost(uint32, tag = "12")]
    pub dccchkbighp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jeidecdidle {
    #[prost(uint32, repeated, tag = "1")]
    pub dgineeppkll: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "2")]
    pub mpfldfdogai: bool,
    #[prost(uint32, repeated, tag = "4")]
    pub klpoghnlinn: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "8")]
    pub gkonebegnhl: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "9")]
    pub mdnehehjmep: ::prost::alloc::vec::Vec<Nbhhiaknanm>,
    #[prost(message, optional, tag = "11")]
    pub kcblafeckch: ::core::option::Option<Icancipfhnk>,
    #[prost(message, optional, tag = "12")]
    pub odpnmgfheom: ::core::option::Option<Icancipfhnk>,
    #[prost(message, repeated, tag = "13")]
    pub fjeahefolel: ::prost::alloc::vec::Vec<Jickppdlohc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7149)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kpjehnhldka {
    #[prost(message, optional, tag = "4")]
    pub johejahklak: ::core::option::Option<Vector>,
    #[prost(uint64, tag = "9")]
    pub jbfhaejbgdk: u64,
    #[prost(uint32, tag = "2")]
    pub skill_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(554)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Naihjdjjnnn {
    #[prost(uint32, tag = "11")]
    pub uid: u32,
    #[prost(enumeration = "Jppcdgdpdbm", tag = "12")]
    pub imiogmdokcb: i32,
    #[prost(uint32, tag = "15")]
    pub fbnlohmdnhd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dpogefjbhlg {
    #[prost(uint32, repeated, tag = "6")]
    pub lgcbfnjngpd: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "7")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Miblpeikdbp>,
    #[prost(message, repeated, tag = "12")]
    pub chjlkbocpag: ::prost::alloc::vec::Vec<Ombeifnnedf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ephhnheddgl {
    #[prost(uint32, repeated, tag = "1")]
    pub dcmmnmahaco: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "2")]
    pub cmbaacjkanj: ::prost::alloc::vec::Vec<Ckdpmacgdjo>,
    #[prost(uint32, tag = "3")]
    pub config_id: u32,
    #[prost(bool, tag = "4")]
    pub jibledafceb: bool,
    #[prost(uint32, tag = "5")]
    pub dfdnfddccpb: u32,
    #[prost(uint32, tag = "7")]
    pub jabgacillec: u32,
    #[prost(uint32, tag = "8")]
    pub pajkkmdpffa: u32,
    #[prost(uint32, tag = "9")]
    pub dnbefljlamb: u32,
    #[prost(uint32, tag = "13")]
    pub end_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2531)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nlhdmiojkge {
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oiogcpahkbl {
    #[prost(uint32, tag = "2")]
    pub inlcedpifki: u32,
    #[prost(uint32, tag = "5")]
    pub imjenfjpgnp: u32,
    #[prost(uint32, tag = "7")]
    pub dajhkhflndj: u32,
    #[prost(enumeration = "Cmgooomlaia", tag = "9")]
    pub imiogmdokcb: i32,
    #[prost(uint32, tag = "12")]
    pub nhkdmgchgka: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ipfboikancm {
    #[prost(uint32, tag = "2")]
    pub cckjpdchobj: u32,
    #[prost(uint32, tag = "4")]
    pub scene_id: u32,
    #[prost(string, tag = "9")]
    pub jgojgomdigo: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22315)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gggejbbgmml {
    #[prost(enumeration = "Hpiimheogni", tag = "3")]
    pub imiogmdokcb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7197)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ionpjffnlhg {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8512)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Focahnjigfl {
    #[prost(uint32, tag = "6")]
    pub cmdbcgaecdp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8094)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eagakafmnkb {
    #[prost(message, repeated, tag = "8")]
    pub opmjjilflpp: ::prost::alloc::vec::Vec<Jickppdlohc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kmlaihinclk {
    #[prost(message, repeated, tag = "6")]
    pub pndpnmbdokf: ::prost::alloc::vec::Vec<Ipnpjfncfje>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5783)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hagkpiaiccb {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9515)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aoibijldfpk {
    #[prost(uint32, tag = "4")]
    pub entity_id: u32,
    #[prost(message, repeated, tag = "13")]
    pub jeilnpeliab: ::prost::alloc::vec::Vec<AnimatorParameterValueInfoPair>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28606)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ngeiomlfcoc {
    #[prost(uint32, tag = "2")]
    pub group_id: u32,
    #[prost(uint32, repeated, tag = "9")]
    pub jhlbppfggpg: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20372)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Afnaclhhfbo {
    #[prost(bool, tag = "11")]
    pub gkeocobfifi: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4911)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lnbnfhjdadc {
    #[prost(uint32, tag = "13")]
    pub godogijjjia: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22776)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aipkpepepdc {
    #[prost(uint32, repeated, tag = "3")]
    pub ggjaleepedp: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "7")]
    pub daifjefecdd: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1120)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aheebhcblbp {
    #[prost(uint32, tag = "8")]
    pub level_id: u32,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4325)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Flcjlkcicjf {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25795)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Peffbdajmlo {
    #[prost(string, tag = "1")]
    pub peakignldda: ::prost::alloc::string::String,
    #[prost(uint32, tag = "6")]
    pub niopjagdbnm: u32,
    #[prost(uint32, tag = "2")]
    pub dbkkkmekici: u32,
    #[prost(uint32, tag = "11")]
    pub eoihallmgal: u32,
    #[prost(uint32, tag = "12")]
    pub bjcbfknejag: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22263)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mbpglbmefmm {
    #[prost(message, repeated, tag = "1")]
    pub iljhoelijpf: ::prost::alloc::vec::Vec<Lkdphefmbfm>,
    #[prost(uint32, tag = "14")]
    pub eojiccehgal: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21356)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ehdkjdocogd {
    #[prost(bool, tag = "7")]
    pub fnjegaacabo: bool,
    #[prost(uint32, tag = "14")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7561)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Knikegjigjp {
    #[prost(uint32, repeated, tag = "8")]
    pub gamebfgekhl: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24254)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pnameldjjfe {
    #[prost(uint32, tag = "1")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7978)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jajaileldjo {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3486)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cgfmpigfido {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pjjloipplnd {
    #[prost(bool, tag = "1")]
    pub pgpkmokbfam: bool,
    #[prost(uint32, tag = "7")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Capgoaibekk {
    #[prost(uint32, tag = "1")]
    pub epfcidiklkg: u32,
    #[prost(uint32, tag = "3")]
    pub bafcbngfddi: u32,
    #[prost(uint32, tag = "7")]
    pub ppeafanbgka: u32,
    #[prost(uint32, tag = "8")]
    pub dhajkhdnfnf: u32,
    #[prost(uint32, tag = "13")]
    pub eelbclkajok: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Abdnlacdcni {
    #[prost(uint32, tag = "5")]
    pub uid: u32,
    #[prost(uint32, tag = "7")]
    pub migncckkjaf: u32,
    #[prost(uint32, tag = "14")]
    pub pieapgepmlf: u32,
    #[prost(uint32, tag = "15")]
    pub combo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jcbdochfokj {
    #[prost(uint32, tag = "3")]
    pub mipkhjggmnj: u32,
    #[prost(uint32, tag = "6")]
    pub dehkokldjcl: u32,
    #[prost(uint32, tag = "7")]
    pub group_id: u32,
    #[prost(uint32, tag = "9")]
    pub mdleckhhbko: u32,
    #[prost(uint32, tag = "14")]
    pub config_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3262)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Imifcjcheeh {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26786)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nkkknipokpm {
    #[prost(uint32, tag = "13")]
    pub room_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pbhoneekpmb {
    #[prost(bool, tag = "1")]
    pub hdnildcefmg: bool,
    #[prost(uint32, tag = "3")]
    pub costume_id: u32,
    #[prost(uint32, tag = "8")]
    pub uid: u32,
    #[prost(string, tag = "10")]
    pub omknbnmebik: ::prost::alloc::string::String,
    #[prost(uint32, tag = "12")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jbgmjbimene {
    #[prost(message, optional, tag = "15")]
    pub iljaflpblcm: ::core::option::Option<AbilityAppliedAbility>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23875)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cjkonlonjkd {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(bool, tag = "6")]
    pub nonhlhoihnl: bool,
    #[prost(bool, tag = "10")]
    pub mcjbkfnjdpc: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ncnjjjojngk {
    #[prost(bool, tag = "7")]
    pub dpaalicheie: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25237)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dhfmabiemgh {
    #[prost(string, tag = "6")]
    pub jofcomombdo: ::prost::alloc::string::String,
    #[prost(enumeration = "Flmmanlpmnb", tag = "9")]
    pub ibipcgcoifg: i32,
    #[prost(enumeration = "Aplfhdmbkhc", tag = "10")]
    pub amgkaojakgm: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21021)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iiahjochemd {
    #[prost(uint32, tag = "11")]
    pub id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Emeajkniefa {
    #[prost(uint32, tag = "4")]
    pub klbgjedndlc: u32,
    #[prost(uint32, tag = "5")]
    pub ackaoiigjed: u32,
    #[prost(uint32, tag = "6")]
    pub jhlaoafnfnk: u32,
    #[prost(uint32, repeated, tag = "7")]
    pub dhlpcpbpffg: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "8")]
    pub ogeeclonjfn: u32,
    #[prost(uint32, tag = "10")]
    pub ebnghfimaeb: u32,
    #[prost(message, repeated, tag = "12")]
    pub pdleipkhnfd: ::prost::alloc::vec::Vec<Kkhdbnnaejl>,
    #[prost(uint32, tag = "13")]
    pub ondpofdknnh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Omdefnfdgcf {
    #[prost(float, tag = "6")]
    pub ekljijgdkjo: f32,
    #[prost(float, tag = "11")]
    pub cckjpdchobj: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9212)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cdejblepieb {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Obpfiafnopi {
    #[prost(float, tag = "9")]
    pub gllnfcegcjn: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dgiddppffdj {
    #[prost(message, repeated, tag = "13")]
    pub info_list: ::prost::alloc::vec::Vec<Chfjcfemkki>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29765)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pobkmhejanc {
    #[prost(message, optional, tag = "5")]
    pub fldlbpenpad: ::core::option::Option<Amlajjbgfij>,
    #[prost(uint32, tag = "10")]
    pub obbkdonjjmn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9633)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fafhhejoibf {
    #[prost(string, tag = "6")]
    pub omknbnmebik: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7760)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Faidpkglffc {
    #[prost(uint32, tag = "5")]
    pub group_id: u32,
    #[prost(uint32, tag = "11")]
    pub gadget_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7411)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jmoiibgchpo {
    #[prost(uint32, tag = "1")]
    pub eaipgemknpo: u32,
    #[prost(map = "uint32, message", tag = "2")]
    pub happcahnnji: ::std::collections::HashMap<u32, Meenbhfdngj>,
    #[prost(uint32, tag = "3")]
    pub oajoobghagm: u32,
    #[prost(float, tag = "4")]
    pub lnghhdiabnk: f32,
    #[prost(uint32, tag = "6")]
    pub jpcfcamdooj: u32,
    #[prost(uint32, tag = "8")]
    pub eaccpefbmmj: u32,
    #[prost(uint64, repeated, tag = "9")]
    pub epfpamggphk: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint64, repeated, tag = "10")]
    pub ipbojdijfke: ::prost::alloc::vec::Vec<u64>,
    #[prost(bool, tag = "11")]
    pub okbkpblopln: bool,
    #[prost(message, repeated, tag = "12")]
    pub pkhpcjogdbb: ::prost::alloc::vec::Vec<Ddiakffcpdh>,
    #[prost(uint32, tag = "13")]
    pub kfdinlfhfmk: u32,
    #[prost(uint32, repeated, tag = "14")]
    pub cknafcgjelm: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "15")]
    pub nkgdgkcidjj: u32,
    #[prost(bool, tag = "372")]
    pub phhaefnlmgg: bool,
    #[prost(uint32, tag = "1300")]
    pub dfidindbngm: u32,
    #[prost(uint32, tag = "1527")]
    pub khihkmmncmo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20633)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Johckidlffd {
    #[prost(uint32, tag = "9")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21085)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kbpihaangih {
    #[prost(uint32, tag = "13")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8121)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hjbepfilbnb {
    #[prost(uint32, tag = "9")]
    pub gjnoljflfkf: u32,
    #[prost(message, repeated, tag = "14")]
    pub ebgiomfifda: ::prost::alloc::vec::Vec<Lcfljaaibio>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct BreakoutVector2 {
    #[prost(int32, tag = "1")]
    pub x: i32,
    #[prost(int32, tag = "2")]
    pub y: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fijdalpgdcn {
    #[prost(message, optional, tag = "1")]
    pub bedghefnnnj: ::core::option::Option<Vector>,
    #[prost(int32, tag = "6")]
    pub lflkopffike: i32,
    #[prost(enumeration = "Ckleejoiffd", tag = "7")]
    pub r#type: i32,
    #[prost(message, optional, tag = "10")]
    pub bjcabobcjce: ::core::option::Option<MathQuaternion>,
    #[prost(message, optional, tag = "13")]
    pub hpoeckekafa: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Epipocjflfd {
    #[prost(uint32, tag = "2")]
    pub kdjifcpbgen: u32,
    #[prost(uint32, tag = "7")]
    pub lahonfcepnn: u32,
    #[prost(uint32, repeated, tag = "9")]
    pub gjocpogeamd: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, optional, tag = "11")]
    pub npmjpllmfbn: ::core::option::Option<Pfpjekbjjbg>,
    #[prost(uint32, tag = "15")]
    pub fhbenanddig: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5329)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cfkeacmdfel {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(map = "uint32, float", tag = "9")]
    pub bclmdldblgk: ::std::collections::HashMap<u32, f32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1410)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Moblfmpcjke {
    #[prost(uint32, repeated, tag = "4")]
    pub dmiglehjpdc: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "15")]
    pub aafllahknje: ::prost::alloc::vec::Vec<Mbjeplkjnig>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Onkkbfghhmc {
    #[prost(uint32, tag = "2")]
    pub dajhkhflndj: u32,
    #[prost(uint32, tag = "9")]
    pub skill_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(615)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bnheicceaog {
    #[prost(uint32, tag = "13")]
    pub bgmdlpabefa: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3454)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bccigelpbih {
    #[prost(uint32, tag = "4")]
    pub jimelgdjmlf: u32,
    #[prost(uint32, tag = "8")]
    pub group_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5471)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kfoncemgpop {
    #[prost(uint32, tag = "15")]
    pub ekngogijfok: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9602)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Alnenedplfi {
    #[prost(uint32, tag = "1")]
    pub fjamcdjdjoa: u32,
    #[prost(bool, tag = "4")]
    pub mhmgffonici: bool,
    #[prost(uint32, tag = "5")]
    pub clpemkjijgd: u32,
    #[prost(enumeration = "Lfjlgojmkeh", tag = "7")]
    pub imiogmdokcb: i32,
    #[prost(uint32, tag = "8")]
    pub ebobhmkpohb: u32,
    #[prost(uint32, tag = "10")]
    pub mmabhbcildg: u32,
    #[prost(uint32, tag = "14")]
    pub fjoecidpmgj: u32,
    #[prost(bool, tag = "15")]
    pub omeniamedce: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9819)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gogalgljcai {
    #[prost(uint32, tag = "1")]
    pub cmokgpfljei: u32,
    #[prost(uint32, tag = "2")]
    pub lchbeahgheo: u32,
    #[prost(message, repeated, tag = "3")]
    pub mfhdjfobnla: ::prost::alloc::vec::Vec<Ohnbiglkkhd>,
    #[prost(uint32, tag = "5")]
    pub acjciejimlk: u32,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(bool, tag = "9")]
    pub beoofldopgi: bool,
    #[prost(uint32, tag = "10")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "11")]
    pub jbbclapjpoe: u32,
    #[prost(uint32, tag = "13")]
    pub bnlhpfjkdif: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lmpinlnnpbd {
    #[prost(uint32, repeated, tag = "4")]
    pub apffgllcjgo: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "9")]
    pub kpllbbdhkoa: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "15")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nglcjleibdh {
    #[prost(uint32, tag = "2")]
    pub pieapgepmlf: u32,
    #[prost(bool, repeated, tag = "3")]
    pub indhenjojim: ::prost::alloc::vec::Vec<bool>,
    #[prost(uint32, tag = "4")]
    pub jaaekgkmado: u32,
    #[prost(bool, tag = "5")]
    pub pmjlllfophk: bool,
    #[prost(message, repeated, tag = "7")]
    pub jbhdelmdgig: ::prost::alloc::vec::Vec<Ibdnaogmofo>,
    #[prost(uint32, tag = "9")]
    pub hgbbglkplfi: u32,
    #[prost(message, repeated, tag = "10")]
    pub olflngkoajk: ::prost::alloc::vec::Vec<Ibdnaogmofo>,
    #[prost(bool, tag = "12")]
    pub lnfkcefiabm: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3273)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Amfhcfgocmb {
    #[prost(message, optional, tag = "4")]
    pub akgooiibcom: ::core::option::Option<Pjedohkakpg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8531)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jdbmcpijahc {
    #[prost(uint32, tag = "5")]
    pub uid: u32,
    #[prost(uint32, tag = "14")]
    pub cbbaclolncd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lpkldjkfmda {
    #[prost(uint32, tag = "1")]
    pub ojjddajbnmk: u32,
    #[prost(message, repeated, tag = "5")]
    pub oiikccbdeok: ::prost::alloc::vec::Vec<Ombeifnnedf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2933)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bkmhdboelcf {
    #[prost(uint32, tag = "7")]
    pub index: u32,
    #[prost(uint32, tag = "15")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26451)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dckkcjllpnn {
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bhdnhbgeaeh {
    #[prost(map = "uint32, uint32", tag = "4")]
    pub ai_threat_map: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28076)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Feoccikldnn {
    #[prost(message, repeated, tag = "4")]
    pub gbfinickijo: ::prost::alloc::vec::Vec<Fobpmoeflgh>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kngjmlbkoon {
    #[prost(bool, tag = "4")]
    pub ohmefbebjjo: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dkifdgnkpld {
    #[prost(uint32, repeated, tag = "13")]
    pub hegbkdjmlie: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21256)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mlgegfllcmn {
    #[prost(uint32, tag = "2")]
    pub dcedejdmlho: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oeednchkhad {
    #[prost(uint32, repeated, tag = "2")]
    pub npmpjingpof: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "5")]
    pub lannlgfnkad: bool,
    #[prost(uint32, repeated, tag = "7")]
    pub jahppelnedf: ::prost::alloc::vec::Vec<u32>,
    #[prost(string, tag = "8")]
    pub name: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21955)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ogkpigmhepk {
    #[prost(bool, tag = "15")]
    pub phhaefnlmgg: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Llobojjfonb {
    #[prost(uint32, tag = "3")]
    pub khokohacffb: u32,
    #[prost(uint32, tag = "7")]
    pub llnlgibdpda: u32,
    #[prost(uint32, tag = "10")]
    pub kcjponeleng: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23403)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Locnbbpkdng {
    #[prost(message, optional, tag = "2")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(bool, tag = "6")]
    pub pnkllaojdmk: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bngcifikllo {
    #[prost(uint32, tag = "9")]
    pub id: u32,
    #[prost(uint32, repeated, tag = "12")]
    pub ckkdfocmgib: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4424)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Imljoegelkc {
    #[prost(bool, tag = "1")]
    pub omeniamedce: bool,
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(bool, tag = "8")]
    pub pmjlllfophk: bool,
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
    #[prost(uint32, tag = "13")]
    pub score: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6698)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ahdfeipacih {
    #[prost(uint32, tag = "5")]
    pub nekecfnahom: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28774)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ghlnkcpliii {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22472)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Djfgbogdmle {
    #[prost(enumeration = "PlayerDieType", tag = "1")]
    pub die_type: i32,
    #[prost(string, tag = "2")]
    pub attack_tag: ::prost::alloc::string::String,
    #[prost(uint32, tag = "4")]
    pub life_state: u32,
    #[prost(uint64, tag = "7")]
    pub avatar_guid: u64,
    #[prost(uint32, tag = "10")]
    pub move_reliable_seq: u32,
    #[prost(message, repeated, tag = "11")]
    pub server_buff_list: ::prost::alloc::vec::Vec<ServerBuff>,
    #[prost(uint32, tag = "14")]
    pub source_entity_id: u32,
    #[prost(string, repeated, tag = "15")]
    pub ohmkbgameim: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gffiokdnclp {
    #[prost(message, optional, tag = "1")]
    pub bjcabobcjce: ::core::option::Option<MathQuaternion>,
    #[prost(message, optional, tag = "5")]
    pub ejnocldgpef: ::core::option::Option<Ahdcnhcibnm>,
    #[prost(int32, tag = "8")]
    pub dgocefofcnk: i32,
    #[prost(message, optional, tag = "11")]
    pub hpoeckekafa: ::core::option::Option<Vector>,
    #[prost(enumeration = "Baeckbpljag", tag = "13")]
    pub mcjnlbadfin: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hmdnkhglclp {
    #[prost(uint32, tag = "3")]
    pub level_id: u32,
    #[prost(uint32, tag = "9")]
    pub mkcgmmganlk: u32,
    #[prost(bool, tag = "10")]
    pub is_finish: bool,
    #[prost(bool, tag = "11")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bdgenhafhme {
    #[prost(message, optional, tag = "5")]
    pub loalbblhdii: ::core::option::Option<Mkbmdcgmieo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1492)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ijfagehkooc {
    #[prost(uint32, tag = "3")]
    pub aoegkkajean: u32,
    #[prost(uint32, tag = "4")]
    pub hnkcehabhnn: u32,
    #[prost(uint32, tag = "5")]
    pub entity_id: u32,
    #[prost(string, tag = "6")]
    pub jjodajockhh: ::prost::alloc::string::String,
    #[prost(uint32, tag = "8")]
    pub play_type: u32,
    #[prost(uint32, tag = "9")]
    pub op: u32,
    #[prost(uint32, repeated, tag = "10")]
    pub uid_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "12")]
    pub param_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "14")]
    pub gbpipbcjchj: u32,
    #[prost(uint32, repeated, tag = "15")]
    pub pmadccgbgcc: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5436)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bmfidmlngho {
    #[prost(bool, tag = "11")]
    pub moaelibphoi: bool,
    #[prost(uint32, tag = "12")]
    pub uid: u32,
    #[prost(uint32, tag = "15")]
    pub mp_play_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5883)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pblleddebai {
    #[prost(bool, tag = "1")]
    pub omeniamedce: bool,
    #[prost(bool, tag = "2")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "4")]
    pub nilalkpfcco: u32,
    #[prost(uint32, tag = "5")]
    pub oelcnlojhhe: u32,
    #[prost(message, repeated, tag = "6")]
    pub eilahbhkmed: ::prost::alloc::vec::Vec<Ciknkblabff>,
    #[prost(uint32, tag = "12")]
    pub lbeinahahka: u32,
    #[prost(bool, tag = "13")]
    pub goonoopfoam: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29325)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gknpadaddhl {
    #[prost(message, optional, tag = "5")]
    pub inhbohmobjd: ::core::option::Option<Ablnmoieclb>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cnjodfljdie {
    #[prost(uint32, tag = "1")]
    pub level: u32,
    #[prost(uint32, tag = "7")]
    pub id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6265)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eflclaimpld {
    #[prost(message, repeated, tag = "13")]
    pub aaehpgkinop: ::prost::alloc::vec::Vec<Jdbkonempdd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MassivePropParam {
    #[prost(int32, tag = "1")]
    pub r#type: i32,
    #[prost(uint32, repeated, tag = "2")]
    pub reaction_info_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(float, repeated, tag = "3")]
    pub param_list: ::prost::alloc::vec::Vec<f32>,
    #[prost(uint32, tag = "4")]
    pub sync_flag: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pokbdlijmjg {
    #[prost(uint32, repeated, tag = "1")]
    pub ebeppcgfega: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "2")]
    pub plnniladkmj: ::prost::alloc::vec::Vec<Pmnpldnddip>,
    #[prost(message, repeated, tag = "4")]
    pub kiadcanpepm: ::prost::alloc::vec::Vec<Olifchhijag>,
    #[prost(message, repeated, tag = "5")]
    pub khcfdeeomdf: ::prost::alloc::vec::Vec<Plnefheeekb>,
    #[prost(message, repeated, tag = "7")]
    pub ahkciimcboj: ::prost::alloc::vec::Vec<Kcicahcpbgb>,
    #[prost(uint32, repeated, tag = "13")]
    pub kpkmlcigemn: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "15")]
    pub elonhiajpeg: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4588)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dhnaiamhfml {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(bool, tag = "13")]
    pub lgfkdhdidih: bool,
    #[prost(bool, tag = "14")]
    pub hejleaaeooa: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28361)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kmofcfnenag {
    #[prost(message, repeated, tag = "12")]
    pub djihjhonnfj: ::prost::alloc::vec::Vec<Hlgkkeignph>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7983)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mgkjbbfikfl {
    #[prost(message, optional, tag = "4")]
    pub ndkdomjjbli: ::core::option::Option<Mpoldibfemm>,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1269)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gnncfjnlelc {
    #[prost(uint32, tag = "5")]
    pub higaijpflag: u32,
    #[prost(message, repeated, tag = "10")]
    pub item_list: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(uint32, tag = "12")]
    pub pdcfphkdhlh: u32,
    #[prost(string, tag = "13")]
    pub nkanjijnimc: ::prost::alloc::string::String,
    #[prost(uint32, tag = "14")]
    pub hnneelkcdmc: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26795)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nllimhjddkn {
    #[prost(uint32, tag = "3")]
    pub ffhpdcibkod: u32,
    #[prost(uint32, tag = "14")]
    pub kiodadonnlo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iklmhgdlkoa {
    #[prost(uint32, tag = "1")]
    pub daniohgihml: u32,
    #[prost(uint32, tag = "2")]
    pub level_id: u32,
    #[prost(uint32, tag = "13")]
    pub id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25115)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mmkebcbijbk {
    #[prost(uint32, repeated, tag = "3")]
    pub eflpdcodoab: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "7")]
    pub pkcnafaffgd: bool,
    #[prost(bool, tag = "8")]
    pub okbjjgemmke: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20786)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jcebklbdmdf {
    #[prost(uint32, tag = "10")]
    pub group_id: u32,
    #[prost(uint32, tag = "4")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Iljfpjeaapi {
    #[prost(uint32, tag = "3")]
    pub ooipgfedjmn: u32,
    #[prost(uint32, repeated, tag = "7")]
    pub gghbcjjfbag: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3633)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ijbgaoiddam {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint64, tag = "11")]
    pub mcppeknbhfk: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ifpnjpjlnof {
    #[prost(bool, tag = "6")]
    pub kllmaaablii: bool,
    #[prost(uint32, tag = "9")]
    pub jnlgdefhndg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Meenbhfdngj {
    #[prost(uint32, tag = "5")]
    pub cell_id: u32,
    #[prost(uint32, tag = "10")]
    pub oajoobghagm: u32,
    #[prost(uint32, tag = "11")]
    pub cell_config_id: u32,
    #[prost(uint32, tag = "12")]
    pub cell_type: u32,
    #[prost(enumeration = "Bgocfkdgogk", tag = "14")]
    pub state: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mkdhkgknkbo {
    #[prost(message, repeated, tag = "5")]
    pub dmjibbcpedf: ::prost::alloc::vec::Vec<Mkkmacfgjbg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21451)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dechmmbijpa {
    #[prost(float, tag = "3")]
    pub duration: f32,
    #[prost(float, tag = "7")]
    pub gmjpldfpgjd: f32,
    #[prost(float, tag = "10")]
    pub ibhgafhkplh: f32,
    #[prost(uint32, tag = "15")]
    pub dfgnlkjbcif: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28119)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Knnmoanigfj {
    #[prost(message, optional, tag = "4")]
    pub kalfabhanic: ::core::option::Option<Igkafpdnpba>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Plcfjagcllk {
    #[prost(uint32, tag = "1")]
    pub fjamcdjdjoa: u32,
    #[prost(uint32, tag = "2")]
    pub hggehlmhkmp: u32,
    #[prost(uint32, tag = "3")]
    pub jenagocpdkl: u32,
    #[prost(uint32, tag = "8")]
    pub anblhiacjil: u32,
    #[prost(uint32, tag = "11")]
    pub level_id: u32,
    #[prost(bool, tag = "12")]
    pub omeniamedce: bool,
    #[prost(bool, tag = "15")]
    pub omiocfgblkc: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jilmfeiligg {
    #[prost(bool, tag = "6")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "7")]
    pub nmaapldbbni: u32,
    #[prost(uint32, tag = "13")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8570)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gkejlhlbcoi {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20065)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fnmbhlggpik {
    #[prost(uint32, repeated, tag = "5")]
    pub jggobknpmfj: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "15")]
    pub lchbeahgheo: u32,
    #[prost(uint32, tag = "1")]
    pub hggehlmhkmp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kpnckgfnnim {
    #[prost(bool, tag = "1")]
    pub ppeeolnaobo: bool,
    #[prost(uint32, tag = "5")]
    pub miolbjepfgp: u32,
    #[prost(uint32, tag = "6")]
    pub index: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1311)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Loeppdifkdl {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cgccjdoohmd {
    #[prost(oneof = "cgccjdoohmd::Adkhhdhjnep", tags = "2, 11, 14")]
    pub adkhhdhjnep: ::core::option::Option<cgccjdoohmd::Adkhhdhjnep>,
}
/// Nested message and enum types in `CGCCJDOOHMD`.
pub mod cgccjdoohmd {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Adkhhdhjnep {
        #[prost(message, tag = "2")]
        AddSignal(super::Jbnagibeaia),
        #[prost(message, tag = "11")]
        CatchSeed(super::Ichhfonjdkj),
        #[prost(message, tag = "14")]
        RefreshSeed(super::Moehmlahhkd),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jbnagibeaia {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Moehmlahhkd {
    #[prost(message, repeated, tag = "8")]
    pub cfmalhnbgoh: ::prost::alloc::vec::Vec<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ichhfonjdkj {
    #[prost(uint32, tag = "8")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24891)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Baemdlkbcef {
    #[prost(uint32, repeated, tag = "6")]
    pub uid_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "7")]
    pub nekecfnahom: u32,
    #[prost(enumeration = "Hdmdabcdahk", tag = "15")]
    pub imiogmdokcb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(588)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jdehbjndgbi {
    #[prost(message, optional, tag = "7")]
    pub meneekeopdf: ::core::option::Option<Njpkdapljfb>,
    #[prost(uint32, tag = "10")]
    pub obgkaflliah: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jlmijcegcob {
    #[prost(uint32, tag = "9")]
    pub ldiilmahhng: u32,
    #[prost(uint32, tag = "14")]
    pub level_id: u32,
    #[prost(message, repeated, tag = "15")]
    pub nefmgjidaak: ::prost::alloc::vec::Vec<Bgdcpbegank>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3895)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fjhpanjeoce {
    #[prost(uint32, tag = "12")]
    pub level_id: u32,
    #[prost(bool, tag = "7")]
    pub eejccicofii: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9319)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hehhjpjkdak {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "9")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4241)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oggbmogejog {
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27649)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dhmgcdcfefk {
    #[prost(uint32, tag = "3")]
    pub fagpphacnbj: u32,
    #[prost(message, repeated, tag = "4")]
    pub item_list: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(uint32, repeated, tag = "5")]
    pub gcffnlekkjh: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20582)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fppalamplcg {
    #[prost(string, tag = "5")]
    pub kejmciaoijn: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23719)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nmcmgdhlpaj {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "11")]
    pub aafllahknje: ::prost::alloc::vec::Vec<Mbjeplkjnig>,
    #[prost(uint32, repeated, tag = "14")]
    pub dmiglehjpdc: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28873)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Edbkhnggomg {
    #[prost(uint32, tag = "1")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24466)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kkncmnemkec {
    #[prost(uint32, tag = "4")]
    pub end_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PropPair {
    #[prost(uint32, tag = "1")]
    pub r#type: u32,
    #[prost(message, optional, tag = "2")]
    pub prop_value: ::core::option::Option<PropValue>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4919)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aijnkgjcnnj {
    #[prost(uint32, tag = "5")]
    pub uid: u32,
    #[prost(uint32, tag = "6")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Iiollkfcned {
    #[prost(map = "uint32, uint32", tag = "2")]
    pub kjogidllodk: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "7")]
    pub jinlibhhlnd: u32,
    #[prost(uint32, tag = "8")]
    pub fmmakjkiidn: u32,
    #[prost(uint32, repeated, tag = "11")]
    pub hfghimoabbe: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "13")]
    pub oochmlbhnfh: ::prost::alloc::vec::Vec<Ndmdbgojbgo>,
    #[prost(map = "uint32, uint32", tag = "15")]
    pub folomobdodm: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4021)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Npflhopdhoi {
    #[prost(string, tag = "1")]
    pub hglnccjieag: ::prost::alloc::string::String,
    #[prost(bool, tag = "6")]
    pub bgijeboffhh: bool,
    #[prost(uint32, tag = "13")]
    pub lnbgblbmadj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hflndeggkma {
    #[prost(message, repeated, tag = "8")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Eicplponkjg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(459)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mmkaccnoljo {
    #[prost(uint64, repeated, tag = "6")]
    pub equip_guid_list: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint64, tag = "14")]
    pub avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hpbdhglaknl {
    #[prost(bool, tag = "4")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "5")]
    pub pieapgepmlf: u32,
    #[prost(uint32, tag = "8")]
    pub nmaapldbbni: u32,
    #[prost(bool, tag = "13")]
    pub alkmlcmmddn: bool,
    #[prost(bool, tag = "14")]
    pub is_finish: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3280)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ajdiodofmcf {
    #[prost(uint32, tag = "10")]
    pub pamjcgbnofe: u32,
    #[prost(uint32, tag = "7")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct NightCrowGadgetInfo {
    #[prost(uint32, repeated, tag = "1")]
    pub argument_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24770)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jeakecfmkmh {
    #[prost(uint32, tag = "13")]
    pub llomlfjhalg: u32,
    #[prost(uint32, repeated, tag = "14")]
    pub mlcglcokkeg: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9485)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Llomjfepoai {
    #[prost(uint32, tag = "12")]
    pub fish_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29881)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aaeeapmikpf {
    #[prost(uint32, tag = "1")]
    pub kkppjfkddep: u32,
    #[prost(uint32, repeated, tag = "5")]
    pub cljikpeplec: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "6")]
    pub jimelgdjmlf: u32,
    #[prost(bool, tag = "8")]
    pub bpdljhgnngd: bool,
    #[prost(message, repeated, tag = "9")]
    pub meikgboldgh: ::prost::alloc::vec::Vec<Hfhjkhoplmn>,
    #[prost(bool, tag = "10")]
    pub kodnaagljdl: bool,
    #[prost(message, repeated, tag = "11")]
    pub fagjdjiglon: ::prost::alloc::vec::Vec<Plgmidnfdfn>,
    #[prost(uint32, tag = "12")]
    pub poaficpfpcj: u32,
    #[prost(uint32, tag = "13")]
    pub jabgacillec: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Odoahmkgpel {
    #[prost(uint32, tag = "12")]
    pub inkofjgdbhi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26929)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Biblajjkdmb {
    #[prost(uint64, repeated, tag = "8")]
    pub jbpmefjklcn: ::prost::alloc::vec::Vec<u64>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24955)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Edddaeiglcm {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22683)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gnjfaebjkfo {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22735)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kpijomnjlbl {
    #[prost(message, repeated, tag = "5")]
    pub ilcacofdcfi: ::prost::alloc::vec::Vec<Clcjfnmkmgl>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hpdpklfdmce {
    #[prost(uint32, tag = "1")]
    pub hinjhjgkogf: u32,
    #[prost(uint32, tag = "2")]
    pub aekageebaaa: u32,
    #[prost(bool, tag = "3")]
    pub kcjgplknpcl: bool,
    #[prost(uint32, tag = "4")]
    pub gmjbhcjhich: u32,
    #[prost(uint32, repeated, tag = "5")]
    pub flnhaniggnh: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, optional, tag = "6")]
    pub cemlgaahaom: ::core::option::Option<Jkikpomkppi>,
    #[prost(uint32, tag = "7")]
    pub gpanfjldfpa: u32,
    #[prost(uint32, tag = "8")]
    pub pdnlmnikeon: u32,
    #[prost(uint32, tag = "9")]
    pub agionnfpbgo: u32,
    #[prost(uint32, repeated, tag = "11")]
    pub jhjilcmeonh: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "12")]
    pub ocpkeiobkpb: u32,
    #[prost(uint32, tag = "13")]
    pub kcenfcebeha: u32,
    #[prost(uint32, tag = "14")]
    pub blmgfjbafkb: u32,
    #[prost(uint32, tag = "15")]
    pub hggehlmhkmp: u32,
    #[prost(uint32, tag = "83")]
    pub keifnipdlln: u32,
    #[prost(uint32, tag = "136")]
    pub edbocmoikko: u32,
    #[prost(uint32, tag = "179")]
    pub gpaoiamogbi: u32,
    #[prost(uint32, repeated, tag = "849")]
    pub gceoegfcokf: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "900")]
    pub lahhphhmgao: u32,
    #[prost(uint32, tag = "1129")]
    pub cpkenjmjool: u32,
    #[prost(bool, tag = "1215")]
    pub cbcgmjadeio: bool,
    #[prost(message, repeated, tag = "1268")]
    pub nakjkghbgek: ::prost::alloc::vec::Vec<Ombeifnnedf>,
    #[prost(uint32, tag = "1350")]
    pub ppbjohamleb: u32,
    #[prost(message, repeated, tag = "1487")]
    pub cidoicmooof: ::prost::alloc::vec::Vec<Dmnlidhdpfp>,
    #[prost(bool, tag = "1610")]
    pub ilmbpedbcgb: bool,
    #[prost(uint32, tag = "1776")]
    pub mgcbkemoadn: u32,
    #[prost(bool, tag = "1797")]
    pub nmdomoinjfh: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Agefelgnkla {
    #[prost(uint32, repeated, tag = "9")]
    pub adgghahhfda: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "10")]
    pub bdlkboknano: u32,
    #[prost(uint32, tag = "11")]
    pub iejpghnlidb: u32,
    #[prost(bool, tag = "12")]
    pub glkngddnocn: bool,
    #[prost(message, repeated, tag = "13")]
    pub omolhgdojch: ::prost::alloc::vec::Vec<Nkdcckjaimd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27020)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Imdllkhanoa {
    #[prost(bool, tag = "9")]
    pub jfjndakfjek: bool,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub mmbgkomhddi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1055)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Knnbpddmhap {
    #[prost(uint32, tag = "9")]
    pub param: u32,
    #[prost(uint32, tag = "4")]
    pub gfjpmhjoefj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27771)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Knleogcpmhn {
    #[prost(message, optional, tag = "3")]
    pub position: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "6")]
    pub aghacofmoad: u32,
    #[prost(bool, tag = "8")]
    pub hnalbnmnpbd: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oipncingene {
    #[prost(uint32, tag = "12")]
    pub oajoobghagm: u32,
    #[prost(uint32, tag = "15")]
    pub biedpjiahee: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ojnlffgjcfi {
    #[prost(uint32, tag = "1")]
    pub uid: u32,
    #[prost(message, optional, tag = "2")]
    pub pos: ::core::option::Option<Aojkinlfjhe>,
    #[prost(uint32, tag = "3")]
    pub score: u32,
    #[prost(uint32, tag = "4")]
    pub index: u32,
    #[prost(uint32, tag = "5")]
    pub danlmheegdf: u32,
    #[prost(uint32, tag = "6")]
    pub lclgojlloek: u32,
    #[prost(int32, tag = "8")]
    pub rot: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Olnkdkcnlam {
    #[prost(uint32, tag = "6")]
    pub lknpjahailb: u32,
    #[prost(uint32, tag = "9")]
    pub hbjegbkefip: u32,
    #[prost(message, optional, tag = "12")]
    pub ability_name: ::core::option::Option<AbilityString>,
    #[prost(message, optional, tag = "14")]
    pub mjniehcakga: ::core::option::Option<AbilityString>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29924)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hicnaacdfgc {
    #[prost(uint32, repeated, tag = "9")]
    pub kbgfigbangk: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "10")]
    pub scene_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26767)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oghfhakngen {
    #[prost(uint32, tag = "8")]
    pub finahglfhag: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25445)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gohhlaokidm {
    #[prost(uint32, tag = "11")]
    pub group_id: u32,
    #[prost(message, repeated, tag = "13")]
    pub kjecjdpgeem: ::prost::alloc::vec::Vec<Llhhhpfoaik>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26953)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ppfjofmidhi {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6508)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ccplgjhebli {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29810)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jpghcchbmdl {
    #[prost(bool, tag = "1")]
    pub hcinocnlhcb: bool,
    #[prost(uint32, tag = "14")]
    pub draft_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20629)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kaegafabhll {
    #[prost(uint32, tag = "6")]
    pub uid: u32,
    #[prost(message, repeated, tag = "7")]
    pub hilllclaile: ::prost::alloc::vec::Vec<Jiiomjgcklo>,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Danpjhichom {
    #[prost(uint32, tag = "1")]
    pub lhmfgjpjldj: u32,
    #[prost(uint32, tag = "2")]
    pub end_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29075)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gccmoackjca {
    #[prost(uint32, tag = "5")]
    pub draft_id: u32,
    #[prost(bool, tag = "7")]
    pub moaelibphoi: bool,
    #[prost(uint32, tag = "11")]
    pub kajbpilckoo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bjkojeginla {
    #[prost(message, optional, tag = "5")]
    pub jjbenlmifbf: ::core::option::Option<Jhobgfmheni>,
    #[prost(uint32, tag = "6")]
    pub bodiejclgmb: u32,
    #[prost(uint32, tag = "12")]
    pub jmehmgcpfbo: u32,
    #[prost(bool, tag = "13")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "15")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fkleafnnnkl {
    #[prost(uint32, tag = "10")]
    pub dcjjimoiicl: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dlfioiilgfn {
    #[prost(uint32, tag = "1")]
    pub odcpaeconnd: u32,
    #[prost(string, tag = "2")]
    pub efajihmnobk: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "8")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
    #[prost(message, repeated, tag = "9")]
    pub jahppelnedf: ::prost::alloc::vec::Vec<Hfhjkhoplmn>,
    #[prost(string, tag = "11")]
    pub omknbnmebik: ::prost::alloc::string::String,
    #[prost(uint32, tag = "15")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ofelnadbnkc {
    #[prost(uint32, tag = "3")]
    pub cjpdfhodjgo: u32,
    #[prost(enumeration = "Ppaicmkdnei", tag = "5")]
    pub pogdpfnpmdb: i32,
    #[prost(uint32, tag = "6")]
    pub mhenbjcacme: u32,
    #[prost(uint32, tag = "7")]
    pub epfcidiklkg: u32,
    #[prost(uint32, tag = "12")]
    pub ajmmaeegjea: u32,
    #[prost(uint32, tag = "15")]
    pub hlbecoibpbp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1370)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cacfhaoelbb {
    #[prost(uint64, repeated, tag = "8")]
    pub npboipbpepn: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint32, tag = "5")]
    pub lmmbcmmondg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6238)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Libefehmnim {
    #[prost(uint32, tag = "1")]
    pub finahglfhag: u32,
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(bool, tag = "3")]
    pub jchhjfldlga: bool,
    #[prost(enumeration = "Dhdebbipiif", tag = "7")]
    pub ckehablghnn: i32,
    #[prost(uint32, tag = "9")]
    pub level_id: u32,
    #[prost(oneof = "libefehmnim::Detail", tags = "723, 860, 1260, 1411, 1672, 1719")]
    pub detail: ::core::option::Option<libefehmnim::Detail>,
}
/// Nested message and enum types in `LIBEFEHMNIM`.
pub mod libefehmnim {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(message, tag = "723")]
        BirdBallInfo(super::Ancdjknfeli),
        #[prost(message, tag = "860")]
        FilmfestShootingInfo(super::Akahoglpana),
        #[prost(message, tag = "1260")]
        CeremonyDoodleInfo(super::Nlchenoncbi),
        #[prost(message, tag = "1411")]
        GreatFestivalV2SheetRestoreInfo(super::Llpeegbjofa),
        #[prost(message, tag = "1672")]
        FairyTalesFlyppyHatInfo(super::Podklccmdid),
        #[prost(message, tag = "1719")]
        FloatToyInfo(super::Gdmjgbfbfhp),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26590)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bfobokoaflf {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(message, optional, tag = "11")]
    pub ilmadkljkjk: ::core::option::Option<Apglckhigha>,
    #[prost(uint32, tag = "13")]
    pub kngbdmdcnhk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25196)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fcmeolmplpe {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hilipcbnedd {
    #[prost(message, repeated, tag = "3")]
    pub pibmjcleibh: ::prost::alloc::vec::Vec<Nghmhjbalkh>,
    #[prost(uint32, tag = "10")]
    pub bddcjkholib: u32,
    #[prost(message, repeated, tag = "11")]
    pub bdglegkaegj: ::prost::alloc::vec::Vec<Nghmhjbalkh>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23513)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Boknlkneomb {
    #[prost(uint32, tag = "12")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23210)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ngbahpphphj {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(317)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Galjcfkakna {
    #[prost(uint32, tag = "12")]
    pub bdbgopiikfo: u32,
    #[prost(uint32, tag = "8")]
    pub city_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9284)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jdiakkephoe {
    #[prost(uint32, tag = "11")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9567)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hnamjkdbenb {
    #[prost(bool, tag = "13")]
    pub is_active: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9562)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jhkobmamnab {
    #[prost(uint32, tag = "3")]
    pub gefnmjhabgj: u32,
    #[prost(uint32, tag = "4")]
    pub lceaamjmkjn: u32,
    #[prost(uint32, tag = "5")]
    pub score: u32,
    #[prost(bool, tag = "6")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "7")]
    pub group_id: u32,
    #[prost(uint32, tag = "8")]
    pub pdbfcaegfeg: u32,
    #[prost(bool, tag = "13")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "15")]
    pub pmldnfnnjam: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Idaealglhhh {
    #[prost(message, optional, tag = "1")]
    pub ckcgbhbbdje: ::core::option::Option<Hbmmldaacoa>,
    #[prost(uint32, tag = "4")]
    pub iejpghnlidb: u32,
    #[prost(uint32, tag = "11")]
    pub level_id: u32,
    #[prost(message, optional, tag = "12")]
    pub hhlkijlapjd: ::core::option::Option<Hbmmldaacoa>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(369)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Meapnflonhh {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint32, tag = "2")]
    pub ggcfiehankk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27412)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bfkkddmhghh {
    #[prost(uint32, tag = "1")]
    pub ffhpdcibkod: u32,
    #[prost(bool, tag = "2")]
    pub ldjdfkmbgbl: bool,
    #[prost(uint32, tag = "9")]
    pub cjdimmaimho: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4961)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jaelbljnoff {
    #[prost(uint32, tag = "15")]
    pub group_id: u32,
    #[prost(uint32, tag = "8")]
    pub jimelgdjmlf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9499)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kcmbipcnbdp {
    #[prost(uint32, tag = "2")]
    pub dnbefljlamb: u32,
    #[prost(map = "uint32, uint32", tag = "8")]
    pub pappmadoema: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "14")]
    pub finahglfhag: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4632)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Blmbedlmpcf {
    #[prost(message, repeated, tag = "4")]
    pub obpnkjiicnk: ::prost::alloc::vec::Vec<Bfbeoaeghhk>,
    #[prost(uint32, tag = "12")]
    pub higaijpflag: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nkdcckjaimd {
    #[prost(uint32, tag = "1")]
    pub iejpghnlidb: u32,
    #[prost(uint32, tag = "3")]
    pub score: u32,
    #[prost(uint32, repeated, tag = "4")]
    pub jkgekalgkec: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "5")]
    pub mlcemkmhabp: bool,
    #[prost(uint32, tag = "8")]
    pub ajjeblpnahp: u32,
    #[prost(bool, tag = "15")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Niegobddjkn {
    #[prost(bool, tag = "2")]
    pub is_add: bool,
    #[prost(uint32, tag = "8")]
    pub index: u32,
    #[prost(int32, tag = "10")]
    pub mdmmnleemdf: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Amlajjbgfij {
    #[prost(uint32, tag = "4")]
    pub version: u32,
    #[prost(message, repeated, tag = "10")]
    pub bjbhommgpok: ::prost::alloc::vec::Vec<Dpblghlggki>,
    #[prost(message, repeated, tag = "11")]
    pub ennbcjcmcnh: ::prost::alloc::vec::Vec<Haljnijmecg>,
    #[prost(uint32, tag = "13")]
    pub cfnkiaeelhn: u32,
    #[prost(bool, tag = "15")]
    pub gcbgbfagbim: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7267)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bpdphkofjkh {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4328)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oodnapblale {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bpglmdckbcp {
    #[prost(uint32, tag = "1")]
    pub mkcgmmganlk: u32,
    #[prost(uint32, tag = "2")]
    pub start_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dbpnilfgbem {
    #[prost(uint32, tag = "6")]
    pub end_time: u32,
    #[prost(uint32, tag = "8")]
    pub nbdadhnhgba: u32,
    #[prost(uint32, tag = "13")]
    pub jabgacillec: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oajdeioklfk {
    #[prost(uint32, tag = "2")]
    pub level_id: u32,
    #[prost(uint32, repeated, tag = "3")]
    pub bidnenjhbog: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "5")]
    pub score: u32,
    #[prost(bool, tag = "6")]
    pub is_finish: bool,
    #[prost(uint32, repeated, tag = "7")]
    pub cokjldeoonj: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "10")]
    pub glkngddnocn: bool,
    #[prost(uint32, repeated, tag = "11")]
    pub hpjphapcinf: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "15")]
    pub ohppgonpkdn: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kbbajaaleej {
    #[prost(message, repeated, tag = "4")]
    pub mgdpfniifea: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(uint32, tag = "15")]
    pub fdpppbpoemp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24188)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lklpmjjabph {
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6379)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ilebiakfdem {
    #[prost(uint32, tag = "5")]
    pub dnbefljlamb: u32,
    #[prost(uint32, tag = "7")]
    pub padginlbcmn: u32,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2163)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Beaaagifjik {
    #[prost(bool, tag = "2")]
    pub baolccfokll: bool,
    #[prost(uint32, repeated, tag = "4")]
    pub lkabhimgbgm: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "6")]
    pub lhkflgfeoek: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "8")]
    pub eakfakpehbc: bool,
    #[prost(uint32, repeated, tag = "9")]
    pub jmdjebjkmap: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "11")]
    pub aejikphhohi: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "12")]
    pub icajibknfin: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "13")]
    pub ngbocigieed: bool,
    #[prost(uint32, repeated, tag = "14")]
    pub oobnjenpcmc: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "15")]
    pub ogkhmncpidb: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26748)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mdemdhlkdha {
    #[prost(uint32, tag = "11")]
    pub lkmgmhhkknb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ppdgbnhkljj {
    #[prost(uint32, tag = "3")]
    pub kljcagkgilp: u32,
    #[prost(uint32, tag = "7")]
    pub hpodkdccikj: u32,
    #[prost(bool, tag = "8")]
    pub lnfkcefiabm: bool,
    #[prost(uint32, tag = "9")]
    pub ebjejlglodb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25151)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fddicnjpjle {
    #[prost(uint32, tag = "6")]
    pub lcmhdebopff: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(768)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dngpmeigioc {
    #[prost(uint32, tag = "11")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6167)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bmekhlbabbl {
    #[prost(int32, tag = "14")]
    pub uid: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oaodpgjompf {
    #[prost(enumeration = "Fmbegbmccbc", tag = "2")]
    pub r#type: i32,
    #[prost(uint32, tag = "9")]
    pub mdmmnleemdf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23496)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bndijhkehmi {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "9")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "11")]
    pub ffhpdcibkod: u32,
    #[prost(uint32, tag = "15")]
    pub mgdhllgefff: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23728)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ihiajbaaeae {
    #[prost(uint32, tag = "9")]
    pub bljgcongpkk: u32,
    #[prost(enumeration = "Elenllnehne", tag = "5")]
    pub amgmmkeddmk: i32,
    #[prost(uint32, tag = "12")]
    pub hmdbggkhhjl: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24346)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nlpmafedpai {
    #[prost(uint32, repeated, tag = "6")]
    pub pjgnlmnogch: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "8")]
    pub oajoobghagm: u32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25624)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Clhkijpbdag {
    #[prost(uint32, repeated, tag = "2")]
    pub uid_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25072)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fafmebjbdjo {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28253)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jpafljgdhmf {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5811)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PlayerEnterSceneNotify {
    #[prost(uint32, tag = "1")]
    pub target_uid: u32,
    #[prost(message, optional, tag = "2")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "3")]
    pub prev_pos: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "4")]
    pub scene_id: u32,
    #[prost(uint64, tag = "7")]
    pub scene_begin_time: u64,
    #[prost(uint32, tag = "8")]
    pub ceblgcpaojl: u32,
    #[prost(uint32, tag = "9")]
    pub enter_scene_token: u32,
    #[prost(uint32, repeated, tag = "10")]
    pub scene_tag_id_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(enumeration = "EnterType", tag = "12")]
    pub r#type: i32,
    #[prost(uint32, tag = "13")]
    pub oajoobghagm: u32,
    #[prost(bool, tag = "14")]
    pub cimhofkdocm: bool,
    #[prost(uint32, tag = "15")]
    pub hdbfknjhboo: u32,
    #[prost(message, optional, tag = "80")]
    pub pfgmjfgpodi: ::core::option::Option<Oknbffifigj>,
    #[prost(uint32, tag = "151")]
    pub mmchegoomli: u32,
    #[prost(message, optional, tag = "627")]
    pub cienokdhfod: ::core::option::Option<Dkifdgnkpld>,
    #[prost(uint32, tag = "836")]
    pub oedojblamdm: u32,
    #[prost(uint32, tag = "1106")]
    pub oeihgdpieog: u32,
    #[prost(message, optional, tag = "1198")]
    pub falbffnpgdj: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "1211")]
    pub gdjkcknogbd: ::core::option::Option<Apmhhcohpld>,
    #[prost(bool, tag = "1391")]
    pub cgfhllhiojk: bool,
    #[prost(string, tag = "1404")]
    pub scene_transaction: ::prost::alloc::string::String,
    #[prost(uint32, tag = "1680")]
    pub dfgnlkjbcif: u32,
    #[prost(uint32, tag = "1972")]
    pub mjfibkoldhc: u32,
    #[prost(uint32, tag = "1997")]
    pub oidoonljgei: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9985)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mdkjgblgpob {
    #[prost(uint32, tag = "13")]
    pub mmbgkomhddi: u32,
    #[prost(bool, tag = "7")]
    pub jfjndakfjek: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Peoooogdbcp {
    #[prost(uint32, tag = "1")]
    pub amefeklpmje: u32,
    #[prost(uint32, tag = "2")]
    pub hfnofogakll: u32,
    #[prost(uint32, tag = "3")]
    pub hlcibidinem: u32,
    #[prost(uint32, tag = "4")]
    pub ekmenbhkcfn: u32,
    #[prost(uint32, tag = "5")]
    pub bfjlcfimpcc: u32,
    #[prost(uint64, tag = "6")]
    pub oacjiegkiob: u64,
    #[prost(uint32, tag = "11")]
    pub ccacojpkpoh: u32,
    #[prost(uint32, tag = "12")]
    pub cpioleebopp: u32,
    #[prost(uint32, tag = "13")]
    pub nknecicnpip: u32,
    #[prost(uint64, tag = "21")]
    pub dhmjmihmena: u64,
    #[prost(uint32, tag = "22")]
    pub ddchcoepffd: u32,
    #[prost(map = "uint32, uint32", tag = "23")]
    pub nekgobcgfmi: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "24")]
    pub nbfpghijmco: u32,
    #[prost(uint32, tag = "31")]
    pub mmckjnikfni: u32,
    #[prost(uint32, tag = "32")]
    pub denbdkljlgk: u32,
    #[prost(map = "uint32, uint32", tag = "33")]
    pub hjodhammeij: ::std::collections::HashMap<u32, u32>,
    #[prost(bool, tag = "34")]
    pub cmlolcplmkc: bool,
    #[prost(uint32, tag = "35")]
    pub clpccjagflb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21091)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lebgekhcbho {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Igchnkkoahe {
    #[prost(uint32, tag = "1")]
    pub level_id: u32,
    #[prost(bool, tag = "12")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "15")]
    pub score: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(323)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jhcikbkpejk {
    #[prost(uint32, tag = "3")]
    pub oaliohamlgn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dnobndbhidi {
    #[prost(uint32, tag = "2")]
    pub score: u32,
    #[prost(uint32, tag = "3")]
    pub fbkeofgncpm: u32,
    #[prost(uint32, tag = "6")]
    pub anblhiacjil: u32,
    #[prost(uint32, repeated, tag = "9")]
    pub fapjneemfmf: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ibfdcgeoeie {
    #[prost(uint32, repeated, tag = "8")]
    pub doalegicgkl: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "11")]
    pub scene_id: u32,
    #[prost(uint32, tag = "12")]
    pub dlmegpolhmo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21713)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lpjcdfoieca {
    #[prost(string, repeated, tag = "1")]
    pub kbnefpkdkoa: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(uint32, tag = "11")]
    pub pgcjmnfijfh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ehhkcfafjfd {
    #[prost(uint32, tag = "2")]
    pub level_id: u32,
    #[prost(bool, tag = "7")]
    pub is_finish: bool,
    #[prost(uint32, tag = "11")]
    pub score: u32,
    #[prost(bool, tag = "12")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jmhipejjpkg {
    #[prost(uint32, repeated, tag = "1")]
    pub affix_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "4")]
    pub equip_type: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8308)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bcebfdgfhmh {
    #[prost(int32, tag = "13")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "15")]
    pub ejoligjlpep: ::prost::alloc::vec::Vec<Jniehcmkpok>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pcabihmipef {
    #[prost(uint32, repeated, tag = "1")]
    pub pngpjjkmkon: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "2")]
    pub gfafipanhpp: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23391)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ochfocapilp {
    #[prost(uint32, repeated, tag = "4")]
    pub flakaccnnlo: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mhogjcokaca {
    #[prost(bool, tag = "1")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "8")]
    pub mkcgmmganlk: u32,
    #[prost(uint32, tag = "12")]
    pub eaipgemknpo: u32,
    #[prost(bool, tag = "13")]
    pub dhigbaimmcn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Efhigekejjo {
    #[prost(message, repeated, tag = "11")]
    pub mleipfedknn: ::prost::alloc::vec::Vec<Npjdjdeckme>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7271)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gogddgpklbl {
    #[prost(message, repeated, tag = "10")]
    pub info_list: ::prost::alloc::vec::Vec<Fchfmadjied>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9056)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ocfjeipcgfc {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "9")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29700)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cinnondllpo {
    #[prost(float, repeated, tag = "4")]
    pub nacfbimjffg: ::prost::alloc::vec::Vec<f32>,
    #[prost(uint32, tag = "8")]
    pub r#type: u32,
    #[prost(string, tag = "9")]
    pub nkafaifakil: ::prost::alloc::string::String,
    #[prost(int32, repeated, tag = "15")]
    pub cepgjmogkmb: ::prost::alloc::vec::Vec<i32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hmfkkbjdeig {
    #[prost(uint32, repeated, tag = "2")]
    pub blinkgmpkoe: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "6")]
    pub mjnjfhbeddo: u32,
    #[prost(uint32, tag = "10")]
    pub njddaollmgi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28485)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jdjlmgdjchj {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4768)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ekpkpfjnlgk {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20428)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ploefhfgjdc {
    #[prost(uint32, tag = "8")]
    pub benakhnfdpj: u32,
    #[prost(uint32, tag = "10")]
    pub lddcajjpoah: u32,
    #[prost(uint32, tag = "13")]
    pub nbjnmkfeeng: u32,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2755)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oaabgehhaem {
    #[prost(uint32, tag = "4")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7457)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jpcindnmdoa {
    #[prost(uint32, tag = "7")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21557)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Neamagpbijk {
    #[prost(uint32, repeated, tag = "15")]
    pub ceikfidoenb: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4187)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bfdgnfhphio {
    #[prost(map = "uint64, message", tag = "1")]
    pub cjenicjpfge: ::std::collections::HashMap<u64, Igklnndncmg>,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "8")]
    pub baikjmkbjpb: ::prost::alloc::vec::Vec<Kjgaenhlkhp>,
    #[prost(int32, repeated, tag = "12")]
    pub agkpekaanca: ::prost::alloc::vec::Vec<i32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7005)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Djoimnjjfhd {
    #[prost(uint32, tag = "4")]
    pub dlhajheokgi: u32,
    #[prost(uint32, tag = "7")]
    pub klgckdkjfbo: u32,
    #[prost(uint32, tag = "12")]
    pub group_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2656)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Egheoakenog {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9064)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Iddgchdfihe {
    #[prost(uint32, tag = "4")]
    pub param: u32,
    #[prost(enumeration = "VisionType", tag = "9")]
    pub appear_type: i32,
    #[prost(message, repeated, tag = "11")]
    pub entity_list: ::prost::alloc::vec::Vec<SceneEntityInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24526)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dndfbkbcpke {
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "7")]
    pub opaaejnkkel: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "9")]
    pub jhiohajfmge: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "11")]
    pub moekhdpgihj: ::prost::alloc::vec::Vec<Dpdmgojjjle>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1018)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pjfclnkkmaf {
    #[prost(uint32, tag = "8")]
    pub key_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26937)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dpdhgnodimc {
    #[prost(uint32, tag = "13")]
    pub jnfdnflbejo: u32,
    #[prost(uint32, tag = "14")]
    pub ecpgnbgdbbn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25540)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ahodcfheodj {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jnfbjnedpid {
    #[prost(message, repeated, tag = "3")]
    pub geiagfpmlof: ::prost::alloc::vec::Vec<Hegojohefib>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5041)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Diobbmddkdk {
    #[prost(uint32, repeated, tag = "3")]
    pub ihgfdoebbgk: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "8")]
    pub pjabefajbgb: u32,
    #[prost(uint32, repeated, tag = "13")]
    pub iipdboidffp: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hdnfcemgfoj {
    #[prost(map = "uint32, uint32", tag = "6")]
    pub skill_group_cd_map: ::std::collections::HashMap<u32, u32>,
    #[prost(map = "uint32, uint32", tag = "9")]
    pub skill_cd_map: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Opjhhafpdak {
    #[prost(uint32, tag = "6")]
    pub nmikcmlkndm: u32,
    #[prost(bool, tag = "8")]
    pub mpfldfdogai: bool,
    #[prost(message, repeated, tag = "15")]
    pub emipfngkdpk: ::prost::alloc::vec::Vec<Cnhhcbommbh>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9991)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Copgdhmgipp {
    #[prost(string, tag = "3")]
    pub kpiogbmlmem: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1464)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hdpppmdmbkc {
    #[prost(string, tag = "13")]
    pub name: ::prost::alloc::string::String,
    #[prost(bool, tag = "1")]
    pub nkjbdclkogp: bool,
    #[prost(uint32, tag = "7")]
    pub cnaifgicldh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dgblphdfcbi {
    #[prost(bool, tag = "1")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "2")]
    pub iejpghnlidb: u32,
    #[prost(uint32, tag = "8")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4448)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bmkojlhbkcd {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(float, tag = "8")]
    pub cccipjeenfc: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22748)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hdeckjalglb {
    #[prost(uint32, repeated, tag = "10")]
    pub eifailjdgdg: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fkheidfjkdo {
    #[prost(uint32, repeated, tag = "1")]
    pub fiekpelikle: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "11")]
    pub costume_id: u32,
    #[prost(bool, tag = "12")]
    pub hdnildcefmg: bool,
    #[prost(uint32, tag = "14")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21509)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ifdcengofjm {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "5")]
    pub kcenfcebeha: u32,
    #[prost(string, tag = "7")]
    pub nkanjijnimc: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub ampbndiacmi: ::prost::alloc::string::String,
    #[prost(uint32, tag = "12")]
    pub nocbcgejpfi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jkcniffeiem {
    #[prost(uint32, tag = "3")]
    pub score: u32,
    #[prost(uint32, tag = "5")]
    pub fjapapjhjjd: u32,
    #[prost(uint32, tag = "7")]
    pub lmdfcdkbmai: u32,
    #[prost(uint64, tag = "8")]
    pub jconfcmgjmi: u64,
    #[prost(uint32, tag = "14")]
    pub epgemldmhei: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2394)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cfaighgnopm {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25871)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fapgmoojhei {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "9")]
    pub emfhfegcjjb: ::prost::alloc::vec::Vec<Hkhgfihoknc>,
    #[prost(bool, tag = "10")]
    pub ilnbddpakhp: bool,
    #[prost(bool, tag = "11")]
    pub hnjjlaanflg: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28058)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ecdbgigoiak {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oplpjlcpjdo {
    #[prost(bool, tag = "1")]
    pub glkngddnocn: bool,
    #[prost(message, repeated, tag = "10")]
    pub geiagfpmlof: ::prost::alloc::vec::Vec<Idaealglhhh>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cljabgnojbh {
    #[prost(bool, tag = "2")]
    pub mpfldfdogai: bool,
    #[prost(uint32, repeated, tag = "3")]
    pub oejipiobdai: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "7")]
    pub gipepnionak: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "8")]
    pub nmikcmlkndm: u32,
    #[prost(message, repeated, tag = "11")]
    pub kckepcmlihi: ::prost::alloc::vec::Vec<Egekcoijoln>,
    #[prost(message, repeated, tag = "14")]
    pub mfohckaffmm: ::prost::alloc::vec::Vec<Cnjodfljdie>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29520)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ofjfligbkjd {
    #[prost(bool, tag = "1")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "2")]
    pub lhmdbbfaifm: u32,
    #[prost(uint32, tag = "7")]
    pub ffhpdcibkod: u32,
    #[prost(message, optional, tag = "8")]
    pub nganceicghc: ::core::option::Option<Cccchpgcjkp>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28702)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hefglohfhgj {
    #[prost(bool, tag = "1")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "2")]
    pub gfdlfnmfala: u32,
    #[prost(uint32, tag = "13")]
    pub lchbeahgheo: u32,
    #[prost(uint32, tag = "15")]
    pub aemocbabopf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6089)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bogodaaomni {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3154)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bhljhondlcn {
    #[prost(uint32, tag = "4")]
    pub debogmdglmi: u32,
    #[prost(uint32, repeated, tag = "7")]
    pub bmoiodgmnij: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "8")]
    pub nkgdgkcidjj: u32,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(uint32, tag = "13")]
    pub epnfmephpbm: u32,
    #[prost(uint32, repeated, tag = "14")]
    pub blifkkbjmjo: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint64, tag = "15")]
    pub jahlenghnmj: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1700)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jindpadjgjn {
    #[prost(uint32, tag = "6")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21703)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hfadmabnmjb {
    #[prost(bool, tag = "1")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "2")]
    pub jiogpokkgag: u32,
    #[prost(uint32, tag = "5")]
    pub lmofdccbkoi: u32,
    #[prost(uint64, tag = "6")]
    pub nkcolnajdca: u64,
    #[prost(uint32, tag = "9")]
    pub ifhgkopekpm: u32,
    #[prost(message, repeated, tag = "10")]
    pub olflngkoajk: ::prost::alloc::vec::Vec<Ioflibiggbm>,
    #[prost(uint32, tag = "13")]
    pub jimelgdjmlf: u32,
    #[prost(uint32, tag = "14")]
    pub group_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28672)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kjofioiadli {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21394)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Icmfhbicgkg {
    #[prost(message, optional, tag = "2")]
    pub baoaeppfeon: ::core::option::Option<Mbjeplkjnig>,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nfigjikiapk {
    #[prost(uint32, repeated, tag = "2")]
    pub alpfbhghfhk: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "9")]
    pub lladmbnfoam: u32,
    #[prost(message, repeated, tag = "11")]
    pub mdkplbdanef: ::prost::alloc::vec::Vec<Mlecmfllogc>,
    #[prost(uint32, repeated, tag = "12")]
    pub kogmmcnpjll: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9833)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Diklmnjeiln {
    #[prost(uint32, tag = "9")]
    pub index: u32,
    #[prost(uint32, tag = "8")]
    pub miolbjepfgp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kkhblipjobe {
    #[prost(uint64, tag = "10")]
    pub mcppeknbhfk: u64,
    #[prost(uint32, tag = "11")]
    pub mhjhgimlhln: u32,
    #[prost(enumeration = "Cdokjpipbgi", tag = "13")]
    pub kkkdpooibjl: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21821)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Chaefncbiak {
    #[prost(uint32, tag = "2")]
    pub id: u32,
    #[prost(uint32, tag = "4")]
    pub iacgokeaoob: u32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2372)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PathfindingEnterSceneRsp {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ffiamakjoda {
    #[prost(uint32, tag = "4")]
    pub heclkjbbncm: u32,
    #[prost(uint32, tag = "8")]
    pub jfocdfoobep: u32,
    #[prost(uint32, tag = "9")]
    pub bkhlphlghde: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28995)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Onjecklajok {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23574)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Imbhbkocaei {
    #[prost(message, optional, tag = "4")]
    pub jmbhpbemffh: ::core::option::Option<Dnjmjfmebml>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24435)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mldipeplogg {
    #[prost(uint32, tag = "3")]
    pub cbpdgcponhm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21834)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cfodphjeiaa {
    #[prost(message, repeated, tag = "5")]
    pub info_list: ::prost::alloc::vec::Vec<Mfpiodoealk>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct EntityRendererChangedInfo {
    #[prost(map = "string, uint32", tag = "1")]
    pub changed_renderers: ::std::collections::HashMap<
        ::prost::alloc::string::String,
        u32,
    >,
    #[prost(uint32, tag = "2")]
    pub visibility_count: u32,
    #[prost(bool, tag = "3")]
    pub is_cached: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20423)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ccpncdlombb {
    #[prost(uint32, tag = "8")]
    pub level_id: u32,
    #[prost(uint32, tag = "1")]
    pub edkmhlpplgh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2475)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oiemkdplmeh {
    #[prost(bool, tag = "1")]
    pub ckmajkehggf: bool,
    #[prost(float, tag = "2")]
    pub hepnmknekmp: f32,
    #[prost(float, tag = "4")]
    pub mjpllnofcom: f32,
    #[prost(uint32, tag = "6")]
    pub pemggkiikih: u32,
    #[prost(uint32, tag = "9")]
    pub bglnmbnmidp: u32,
    #[prost(string, tag = "14")]
    pub bfooopoojnm: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27923)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct EnterSceneDoneReq {
    #[prost(uint32, tag = "3")]
    pub enter_scene_token: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25133)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ecfaabejldb {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(798)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dggkakgdkng {
    #[prost(uint32, repeated, tag = "13")]
    pub jmeooofdnpd: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "15")]
    pub nmgddmpcncc: u32,
    #[prost(uint32, tag = "14")]
    pub jgbonoledic: u32,
    #[prost(uint32, tag = "9")]
    pub lmmbcmmondg: u32,
    #[prost(uint32, tag = "11")]
    pub iojmahjnjfg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8035)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Edcifjdmdgf {
    #[prost(uint32, tag = "7")]
    pub group_id: u32,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21923)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pmbkcmjpdbb {
    #[prost(message, repeated, tag = "8")]
    pub ffihpkacmka: ::prost::alloc::vec::Vec<Dalekdkmmbf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6303)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lhfcnmnfjgc {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28332)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oookglnkdad {
    #[prost(uint32, tag = "5")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ngdkieindnn {
    #[prost(message, optional, tag = "4")]
    pub joegechcbpi: ::core::option::Option<Ckpijbmmbgj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oildamfjodc {
    #[prost(message, repeated, tag = "1")]
    pub leddhciflbc: ::prost::alloc::vec::Vec<Ioahicpmieb>,
    #[prost(uint32, repeated, tag = "2")]
    pub bfjahdaheml: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "3")]
    pub djpdelljhjf: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "4")]
    pub jepoompbgln: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "5")]
    pub dkeflellnck: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "6")]
    pub bgjfemoacpl: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "7")]
    pub aopgdgmgkia: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8142)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pgbckopmbpe {
    #[prost(bool, tag = "7")]
    pub kahmigbkaio: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5664)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mleabcdgbld {
    #[prost(uint32, tag = "7")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7524)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nnjancchkpb {
    #[prost(uint32, tag = "10")]
    pub game_time: u32,
    #[prost(uint32, tag = "13")]
    pub ighbpbioank: u32,
    #[prost(bool, tag = "1")]
    pub is_force_set: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27957)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dfkhjfbehll {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27764)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gopbflblemf {
    #[prost(uint32, tag = "2")]
    pub ffhpdcibkod: u32,
    #[prost(uint32, tag = "3")]
    pub jdnmpoegnon: u32,
    #[prost(uint32, tag = "4")]
    pub kclhhifondh: u32,
    #[prost(uint32, tag = "5")]
    pub oboacmnpddo: u32,
    #[prost(bool, tag = "6")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "7")]
    pub kngjhmllcnp: u32,
    #[prost(uint32, tag = "11")]
    pub echofhfnhmg: u32,
    #[prost(uint32, tag = "12")]
    pub hhfgmocfjdl: u32,
    #[prost(enumeration = "Lfjlgojmkeh", tag = "15")]
    pub imiogmdokcb: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hkpplkipnac {
    #[prost(map = "uint32, message", tag = "11")]
    pub ldcjeflljjk: ::std::collections::HashMap<u32, Fhpeaioogci>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bcdomhbdhaj {
    #[prost(uint32, tag = "4")]
    pub hiikcehnefl: u32,
    #[prost(uint32, tag = "9")]
    pub nmaapldbbni: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Olnffmgjbmi {
    #[prost(uint32, tag = "5")]
    pub ooipgfedjmn: u32,
    #[prost(enumeration = "Cmgooomlaia", tag = "9")]
    pub imiogmdokcb: i32,
    #[prost(uint32, repeated, tag = "13")]
    pub jbpmefjklcn: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pinogoecnfa {
    #[prost(uint32, tag = "1")]
    pub oajoobghagm: u32,
    #[prost(uint32, tag = "4")]
    pub gjapbkelhog: u32,
    #[prost(uint32, tag = "8")]
    pub hgbbglkplfi: u32,
    #[prost(uint32, tag = "9")]
    pub gnmadohhmoi: u32,
    #[prost(message, optional, tag = "11")]
    pub kgakhdpkial: ::core::option::Option<WeeklyBossResinDiscountInfo>,
    #[prost(bool, tag = "14")]
    pub gfjokboegnb: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1456)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pnfaikejlch {
    #[prost(uint32, repeated, tag = "15")]
    pub dhoiliolkja: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ngmpcgloeac {
    #[prost(bool, tag = "6")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "7")]
    pub level_id: u32,
    #[prost(bool, tag = "8")]
    pub is_finish: bool,
    #[prost(uint32, tag = "15")]
    pub score: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9861)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kojnmfiiclc {
    #[prost(uint32, tag = "11")]
    pub cebhhjpnhna: u32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28334)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Plkocmnbgpa {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ephjfofebda {
    #[prost(float, tag = "4")]
    pub cdgfmjbofaa: f32,
    #[prost(bool, tag = "6")]
    pub is_finish: bool,
    #[prost(uint32, tag = "7")]
    pub hcmcegihlba: u32,
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
    #[prost(bool, tag = "13")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Akahoglpana {
    #[prost(bool, tag = "3")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "14")]
    pub score: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(190)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fkiljmolhlb {
    #[prost(message, optional, tag = "6")]
    pub nmmgkopadfd: ::core::option::Option<CustomGadgetTreeInfo>,
    #[prost(uint32, tag = "15")]
    pub dfpmclgdgbo: u32,
    #[prost(uint32, tag = "4")]
    pub ghlbjahjehf: u32,
    #[prost(uint32, tag = "10")]
    pub hpikgkfpdnk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dcfhfeceecm {
    #[prost(message, optional, tag = "1")]
    pub hdjfkpnlnjh: ::core::option::Option<Oplpjlcpjdo>,
    #[prost(message, repeated, tag = "5")]
    pub abgcdbhmojl: ::prost::alloc::vec::Vec<Mifikpohmng>,
    #[prost(message, optional, tag = "8")]
    pub hmecaecdcjn: ::core::option::Option<Ddapmcmnfcd>,
    #[prost(message, optional, tag = "13")]
    pub kplgkjkfjdn: ::core::option::Option<Algfohhnnod>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27400)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jjfiimdclnp {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4482)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Heibijbpcec {
    #[prost(enumeration = "Bdcdecgdjgf", tag = "4")]
    pub ocmlkeoonko: i32,
    #[prost(uint64, tag = "5")]
    pub ihgjlfcgfin: u64,
    #[prost(enumeration = "Kpfoblalblc", tag = "11")]
    pub daakpcoabep: i32,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
    #[prost(oneof = "heibijbpcec::Fdjmhhhdkae", tags = "9")]
    pub fdjmhhhdkae: ::core::option::Option<heibijbpcec::Fdjmhhhdkae>,
    #[prost(oneof = "heibijbpcec::Bfhmjlgchpd", tags = "221")]
    pub bfhmjlgchpd: ::core::option::Option<heibijbpcec::Bfhmjlgchpd>,
}
/// Nested message and enum types in `HEIBIJBPCEC`.
pub mod heibijbpcec {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Fdjmhhhdkae {
        #[prost(message, tag = "9")]
        MusicRecord(super::Ookjdbingha),
    }
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Bfhmjlgchpd {
        #[prost(message, tag = "221")]
        MusicBriefInfo(super::Gdmlpoedpjo),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21585)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nbfohopmfaj {
    #[prost(message, repeated, tag = "5")]
    pub gmlaoagjcao: ::prost::alloc::vec::Vec<Cegmhfpbajj>,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "11")]
    pub avatar_list: ::prost::alloc::vec::Vec<Cegmhfpbajj>,
    #[prost(uint32, repeated, tag = "13")]
    pub dhopbdihgcg: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9241)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ajnpjbonpic {
    #[prost(uint32, repeated, tag = "10")]
    pub jjknehanbaj: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "11")]
    pub omofoomljod: ::prost::alloc::vec::Vec<u32>,
    #[prost(enumeration = "Mnlilcbgkng", repeated, tag = "13")]
    pub mkjpgmhmhbj: ::prost::alloc::vec::Vec<i32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23961)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cjcnddibpjj {
    #[prost(uint32, repeated, tag = "1")]
    pub ikkmdalleed: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "3")]
    pub ldchdeepako: u32,
    #[prost(uint32, tag = "12")]
    pub khokohacffb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ldkjnpenphg {
    #[prost(message, optional, tag = "1")]
    pub kfjeadmaplk: ::core::option::Option<Eplphilhohe>,
    #[prost(bytes = "vec", tag = "4")]
    pub fabfbkdgmjk: ::prost::alloc::vec::Vec<u8>,
    #[prost(double, tag = "5")]
    pub total_tick_time: f64,
    #[prost(enumeration = "Fjknaamgemm", tag = "7")]
    pub argument_type: i32,
    #[prost(uint32, tag = "9")]
    pub entity_id: u32,
    #[prost(enumeration = "ForwardType", tag = "10")]
    pub forward_type: i32,
    #[prost(bool, tag = "11")]
    pub ldkiinlhcop: bool,
    #[prost(uint32, tag = "14")]
    pub jphbokdmdah: u32,
    #[prost(uint32, tag = "15")]
    pub hnogkehflhe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21882)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mfjgnmlejfp {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4998)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jjgfjoegkkp {
    #[prost(message, optional, tag = "3")]
    pub edjlngfglcp: ::core::option::Option<Djlpgkfhgek>,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24111)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kapnlpkphpd {
    #[prost(map = "uint32, uint32", tag = "2")]
    pub bmanejiimah: ::std::collections::HashMap<u32, u32>,
    #[prost(bool, tag = "13")]
    pub ddhipejambc: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24946)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fnhfleelmdm {
    #[prost(uint32, tag = "1")]
    pub jcmchgnnlmj: u32,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(uint32, tag = "15")]
    pub level: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24207)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ibloccljhlc {
    #[prost(uint32, tag = "1")]
    pub ojbehpeboep: u32,
    #[prost(bool, tag = "2")]
    pub hcjfdjhilam: bool,
    #[prost(enumeration = "Oaopjbocjjd", tag = "3")]
    pub liceocklogd: i32,
    #[prost(uint32, tag = "7")]
    pub lcddidljedn: u32,
    #[prost(bool, tag = "8")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "11")]
    pub japeoejlnpd: u32,
    #[prost(uint32, tag = "12")]
    pub ljaikbehodc: u32,
    #[prost(map = "uint32, message", tag = "15")]
    pub fmiebpkjjpj: ::std::collections::HashMap<u32, Ofbhcgggggn>,
    #[prost(oneof = "ibloccljhlc::Detail", tags = "116, 492, 496, 1278")]
    pub detail: ::core::option::Option<ibloccljhlc::Detail>,
}
/// Nested message and enum types in `IBLOCCLJHLC`.
pub mod ibloccljhlc {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(message, tag = "116")]
        CustomDungeonResultInfo(super::Ngnchiomjnb),
        #[prost(message, tag = "492")]
        PotionDungeonResultInfo(super::Dbacenhlldc),
        #[prost(message, tag = "496")]
        EffigyChallengeDungeonResultInfo(super::Fcheommkjeb),
        #[prost(message, tag = "1278")]
        ChannellerSlabLoopDungeonResultInfo(super::Bcdhnjpildb),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eicplponkjg {
    #[prost(uint32, tag = "3")]
    pub nmaapldbbni: u32,
    #[prost(bool, tag = "4")]
    pub is_finish: bool,
    #[prost(bool, tag = "8")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "12")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4197)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kgiepknflgh {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(uint32, tag = "9")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20433)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ppdehpoicjj {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nppcmgnnkbg {
    #[prost(uint32, repeated, tag = "1")]
    pub ffpegcficad: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, optional, tag = "4")]
    pub akgooiibcom: ::core::option::Option<Hopfeeipgjp>,
    #[prost(uint32, tag = "9")]
    pub chmhlonaajb: u32,
    #[prost(bool, tag = "10")]
    pub nofdmpeggce: bool,
    #[prost(bool, tag = "13")]
    pub jkjhkfdnepm: bool,
    #[prost(bool, tag = "15")]
    pub hhdnnmnhnci: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bkaioeadfhe {
    #[prost(message, repeated, tag = "4")]
    pub oikklpfpkfd: ::prost::alloc::vec::Vec<Ajpkfjdokfh>,
    #[prost(uint32, tag = "12")]
    pub equip_type: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27177)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jmdekfcadbd {
    #[prost(bool, tag = "1")]
    pub nmcgocikdmo: bool,
    #[prost(message, repeated, tag = "6")]
    pub server_buff_list: ::prost::alloc::vec::Vec<ServerBuff>,
    #[prost(uint32, repeated, tag = "10")]
    pub eekfelfangn: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint64, repeated, tag = "12")]
    pub avatar_guid_list: ::prost::alloc::vec::Vec<u64>,
    #[prost(enumeration = "Okdjoojeagf", tag = "13")]
    pub cjkknfaamoe: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23316)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fnblmlfjoaa {
    #[prost(message, optional, tag = "5")]
    pub olkacabnmfp: ::core::option::Option<Kdfclhhkgih>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kkhdbnnaejl {
    #[prost(uint32, tag = "4")]
    pub nkblahmplmp: u32,
    #[prost(uint32, tag = "7")]
    pub ebnghfimaeb: u32,
    #[prost(uint32, tag = "11")]
    pub nhpcfleibll: u32,
    #[prost(message, optional, tag = "12")]
    pub pemoigkjagh: ::core::option::Option<Okfhjlfojep>,
    #[prost(uint32, tag = "14")]
    pub joiefhbhfjk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3284)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nlpbbdmlllc {
    #[prost(uint32, tag = "1")]
    pub feehhbklage: u32,
    #[prost(uint32, tag = "9")]
    pub parent_quest_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20071)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Blpbcbigipj {
    #[prost(uint32, tag = "6")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Odinlcpmnmp {
    #[prost(uint32, tag = "12")]
    pub score: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4436)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ignlfeiabfc {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3635)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Edlggkmpbip {
    #[prost(message, optional, tag = "11")]
    pub oiajdljoipd: ::core::option::Option<Hjiiipeeiim>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lbkljnjcmpd {
    #[prost(bool, tag = "2")]
    pub pgpkmokbfam: bool,
    #[prost(uint32, tag = "11")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2339)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kpoalhljfoj {
    #[prost(message, repeated, tag = "1")]
    pub jjpnoajfkhe: ::prost::alloc::vec::Vec<Dccikbofgkg>,
    #[prost(int32, tag = "15")]
    pub uid: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2350)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Emnonpldljc {
    #[prost(message, repeated, tag = "6")]
    pub edhkembmoch: ::prost::alloc::vec::Vec<Jkdhcoekbcf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7958)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Onfgbccgcpm {
    #[prost(message, optional, tag = "3")]
    pub fgaeincckdk: ::core::option::Option<Ofnigdfjlcd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pcbjoagjiol {
    #[prost(uint32, tag = "11")]
    pub score: u32,
    #[prost(message, repeated, tag = "13")]
    pub nehpgmldkmf: ::prost::alloc::vec::Vec<Gdffbgabind>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Amejldminee {
    #[prost(message, repeated, tag = "3")]
    pub cjgofeodnah: ::prost::alloc::vec::Vec<Gdmlpoedpjo>,
    #[prost(message, repeated, tag = "5")]
    pub pjeeoonmmdk: ::prost::alloc::vec::Vec<Gdmlpoedpjo>,
    #[prost(map = "uint32, message", tag = "14")]
    pub cpieainbkdh: ::std::collections::HashMap<u32, Hofcoaifplb>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ekiamhkemoo {
    #[prost(uint32, tag = "11")]
    pub kfaadeeklbj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5547)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cclobjbfeac {
    #[prost(message, repeated, tag = "8")]
    pub gjihlnaeggd: ::prost::alloc::vec::Vec<Clhnpakhdgh>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28810)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hofdmadjnjk {
    #[prost(message, optional, tag = "9")]
    pub fpjcjmgoape: ::core::option::Option<Fndlklbaapg>,
    #[prost(enumeration = "Ghjfblobgpa", tag = "12")]
    pub op: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ofcloobnfgl {
    #[prost(uint32, repeated, tag = "2")]
    pub hlohgjibkji: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "3")]
    pub cmghnoodlig: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "4")]
    pub lalofcfejgg: ::prost::alloc::vec::Vec<u32>,
    #[prost(enumeration = "Dfipjepbgpi", tag = "5")]
    pub state: i32,
    #[prost(message, repeated, tag = "6")]
    pub pgloenagafi: ::prost::alloc::vec::Vec<Lhioajddipl>,
    #[prost(message, repeated, tag = "7")]
    pub fclhdjmaopl: ::prost::alloc::vec::Vec<Mgaijnjiojk>,
    #[prost(map = "uint32, uint32", tag = "9")]
    pub fkjphkihbmd: ::std::collections::HashMap<u32, u32>,
    #[prost(message, repeated, tag = "10")]
    pub eebokmcfepe: ::prost::alloc::vec::Vec<Lgppbgenjbn>,
    #[prost(uint32, tag = "12")]
    pub id: u32,
    #[prost(uint32, tag = "14")]
    pub einppdekdhb: u32,
    #[prost(uint32, tag = "15")]
    pub dbcjojclnad: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24237)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Npealpcemff {
    #[prost(uint32, tag = "10")]
    pub shell_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9526)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jdgebgdglmj {
    #[prost(uint32, tag = "11")]
    pub finahglfhag: u32,
    #[prost(uint32, tag = "15")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kdkfaoloaof {
    #[prost(uint32, tag = "8")]
    pub dajhkhflndj: u32,
    #[prost(uint32, tag = "10")]
    pub ooipgfedjmn: u32,
    #[prost(uint32, tag = "12")]
    pub iciffmdnmdb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22952)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gpbadnioaag {
    #[prost(enumeration = "Opadjpdffbm", tag = "2")]
    pub ngfmchnlnpi: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(681)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gbejgoggaae {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ioflibiggbm {
    #[prost(uint32, tag = "3")]
    pub hpodkdccikj: u32,
    #[prost(bool, tag = "6")]
    pub knppnagnbng: bool,
    #[prost(uint32, tag = "8")]
    pub kljcagkgilp: u32,
    #[prost(uint32, tag = "11")]
    pub ebjejlglodb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27480)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hkadkhnjbhd {
    #[prost(uint32, repeated, tag = "5")]
    pub mhpjhmdbaok: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "6")]
    pub emfhfegcjjb: ::prost::alloc::vec::Vec<Hkhgfihoknc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nenebpfhckd {
    #[prost(enumeration = "Jelhpplflpk", tag = "1")]
    pub mlpkbbfeafg: i32,
    #[prost(uint32, repeated, tag = "2")]
    pub iiednjnoojh: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nlpnkejgibf {
    #[prost(uint32, tag = "5")]
    pub progress: u32,
    #[prost(uint32, tag = "7")]
    pub aoikhjcanfc: u32,
    #[prost(uint32, tag = "10")]
    pub iggkiijfgmj: u32,
    #[prost(bool, tag = "13")]
    pub pmjlllfophk: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Odhoccfkmfd {
    #[prost(message, optional, tag = "1")]
    pub fdfmckagnck: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(30)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Llbacnnofdh {
    #[prost(uint32, tag = "15")]
    pub bpappfhmkmk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28872)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Afcmckhfilo {
    #[prost(message, repeated, tag = "1")]
    pub cjgofeodnah: ::prost::alloc::vec::Vec<Gdmlpoedpjo>,
    #[prost(message, repeated, tag = "4")]
    pub cidmbdphchj: ::prost::alloc::vec::Vec<Oaodpgjompf>,
    #[prost(message, repeated, tag = "12")]
    pub cbakcklkjhj: ::prost::alloc::vec::Vec<Cacglibjiie>,
    #[prost(message, repeated, tag = "14")]
    pub pjeeoonmmdk: ::prost::alloc::vec::Vec<Gdmlpoedpjo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25689)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ngnlloinaaf {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8276)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ekfpnajjpnc {
    #[prost(uint32, tag = "5")]
    pub scene_id: u32,
    #[prost(uint32, tag = "8")]
    pub ffplkfhbfap: u32,
    #[prost(uint32, tag = "13")]
    pub lkkifhknkfe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2330)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lbibmeppmfi {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3462)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aecoicigcii {
    #[prost(map = "uint32, message", tag = "13")]
    pub prop_map: ::std::collections::HashMap<u32, PropValue>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3109)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Camofilfafd {
    #[prost(uint32, tag = "15")]
    pub oajoobghagm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28720)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cddmjppikdd {
    #[prost(uint32, tag = "3")]
    pub level: u32,
    #[prost(uint32, tag = "10")]
    pub city_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fegojcjloln {
    #[prost(message, repeated, tag = "12")]
    pub cohilmhjldp: ::prost::alloc::vec::Vec<Ajcpmkdebkj>,
    #[prost(message, repeated, tag = "13")]
    pub oaeagfnlfae: ::prost::alloc::vec::Vec<Ajcpmkdebkj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29904)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cmodliimoie {
    #[prost(string, tag = "9")]
    pub biplmjjinbn: ::prost::alloc::string::String,
    #[prost(uint32, tag = "12")]
    pub live_id: u32,
    #[prost(string, tag = "13")]
    pub oflamphgcnp: ::prost::alloc::string::String,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(541)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lhlljhpagae {
    #[prost(map = "uint32, uint64", tag = "3")]
    pub enkjahlkibo: ::std::collections::HashMap<u32, u64>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct AnimatorParameterValueInfoPair {
    #[prost(int32, tag = "1")]
    pub name_id: i32,
    #[prost(message, optional, tag = "2")]
    pub animator_para: ::core::option::Option<AnimatorParameterValueInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1302)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kjhmahpbhmj {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8346)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ejejgomgedd {
    #[prost(uint32, tag = "11")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cfkoflpomok {
    #[prost(uint32, tag = "3")]
    pub score: u32,
    #[prost(message, optional, tag = "10")]
    pub fgaeincckdk: ::core::option::Option<Ambnedakhfp>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hgnogamjlaf {
    #[prost(uint32, repeated, tag = "9")]
    pub kndedillfba: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "12")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21380)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Abdpglhojjb {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8601)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ldaphlkdcoa {
    #[prost(uint32, repeated, tag = "8")]
    pub hdigmjmlpdp: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "12")]
    pub scene_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24467)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aenknfoeojg {
    #[prost(uint32, tag = "3")]
    pub play_type: u32,
    #[prost(uint32, tag = "8")]
    pub beipohdbmbi: u32,
    #[prost(uint32, tag = "15")]
    pub aoegkkajean: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ljjfjilbnll {
    #[prost(message, repeated, tag = "13")]
    pub hhemamfcpgg: ::prost::alloc::vec::Vec<Dhlbgcekggd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6476)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jpkipbnplkd {
    #[prost(uint32, repeated, tag = "15")]
    pub fiekpelikle: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(238)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ghklgcaecah {
    #[prost(map = "string, string", tag = "11")]
    pub bfilfabkeki: ::std::collections::HashMap<
        ::prost::alloc::string::String,
        ::prost::alloc::string::String,
    >,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23711)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cihneehidep {
    #[prost(uint32, tag = "2")]
    pub hplkpcgfili: u32,
    #[prost(uint64, tag = "3")]
    pub jahlenghnmj: u64,
    #[prost(uint32, repeated, tag = "4")]
    pub blifkkbjmjo: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "5")]
    pub bmoiodgmnij: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(uint32, tag = "11")]
    pub bbeabgnbbfi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mmbadkceelo {
    #[prost(uint32, tag = "4")]
    pub lcaglcidnjl: u32,
    #[prost(uint32, tag = "8")]
    pub epfcidiklkg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gljgndbodki {
    #[prost(uint32, tag = "1")]
    pub fjapapjhjjd: u32,
    #[prost(uint32, tag = "2")]
    pub uid: u32,
    #[prost(sfixed64, tag = "3")]
    pub macoplfjfnl: i64,
    #[prost(sfixed64, tag = "4")]
    pub iecdmbjccpe: i64,
    #[prost(uint32, tag = "5")]
    pub ogdcenflhjn: u32,
    #[prost(uint32, tag = "7")]
    pub pieapgepmlf: u32,
    #[prost(sfixed64, tag = "10")]
    pub gnpohkghnmg: i64,
    #[prost(uint32, tag = "14")]
    pub lmdfcdkbmai: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jnpbfjbkkee {
    #[prost(uint32, tag = "4")]
    pub pjabefajbgb: u32,
    #[prost(message, repeated, tag = "9")]
    pub ldhhngnfdgh: ::prost::alloc::vec::Vec<Ipfboikancm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27184)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dlclkkggadp {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "12")]
    pub hfdblmejkgj: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28704)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Apkaofaahbj {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1395)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hbnaelmigbe {
    #[prost(uint32, tag = "14")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20133)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ogiikojihpm {
    #[prost(uint64, tag = "1")]
    pub avatar_guid: u64,
    #[prost(uint32, tag = "5")]
    pub skill_depot_id: u32,
    #[prost(uint32, tag = "6")]
    pub oacjabibpdd: u32,
    #[prost(uint32, tag = "10")]
    pub nkgdgkcidjj: u32,
    #[prost(uint32, tag = "12")]
    pub debogmdglmi: u32,
    #[prost(uint32, tag = "14")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gmkmjijolgg {
    #[prost(uint32, tag = "4")]
    pub jkpcjabbgjb: u32,
    #[prost(uint32, tag = "5")]
    pub jhbjebbiikf: u32,
    #[prost(string, tag = "6")]
    pub hklclnpkoan: ::prost::alloc::string::String,
    #[prost(uint32, repeated, tag = "8")]
    pub mjaoninhiib: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "10")]
    pub jmehmgcpfbo: u32,
    #[prost(uint32, tag = "15")]
    pub mkecmpigili: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jbiioanajdi {
    #[prost(uint32, tag = "2")]
    pub progress: u32,
    #[prost(bool, tag = "5")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "7")]
    pub fffjdphlcje: u32,
    #[prost(uint32, tag = "10")]
    pub bdeflcdkdbi: u32,
    #[prost(uint32, tag = "14")]
    pub iejpghnlidb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5210)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jcnddjmaode {
    #[prost(uint32, tag = "9")]
    pub ajjeblpnahp: u32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25667)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hmdcodafpog {
    #[prost(uint32, tag = "2")]
    pub oajoobghagm: u32,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(bool, tag = "12")]
    pub mcjbkfnjdpc: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kjgmhfigabd {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(enumeration = "Pmnjncleonj", tag = "14")]
    pub enoekklhbnh: i32,
    #[prost(oneof = "kjgmhfigabd::Hkfoeceoobo", tags = "3, 4, 7, 10, 15")]
    pub hkfoeceoobo: ::core::option::Option<kjgmhfigabd::Hkfoeceoobo>,
}
/// Nested message and enum types in `KJGMHFIGABD`.
pub mod kjgmhfigabd {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Hkfoeceoobo {
        #[prost(message, tag = "3")]
        SyncPing(super::Llcghkfbadc),
        #[prost(message, tag = "4")]
        SyncAction(super::Pfnkkmioaee),
        #[prost(message, tag = "7")]
        SyncSnapShot(super::Kgphjfjggdj),
        #[prost(message, tag = "10")]
        SyncFinishGame(super::Oojgokpcgnj),
        #[prost(message, tag = "15")]
        SyncCreateConnect(super::Njfhdjnkjkk),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fifpjpaggod {
    #[prost(bool, tag = "2")]
    pub pmjlllfophk: bool,
    #[prost(uint32, tag = "4")]
    pub nmaapldbbni: u32,
    #[prost(uint32, tag = "8")]
    pub eaipgemknpo: u32,
    #[prost(message, repeated, tag = "9")]
    pub pmjgjnilmbp: ::prost::alloc::vec::Vec<Pbeodmmdbgb>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27850)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Abnedacafdb {
    #[prost(uint32, tag = "15")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29951)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gbnmlclmeec {
    #[prost(message, repeated, tag = "1")]
    pub pjmiheedbdb: ::prost::alloc::vec::Vec<Cjeimokenam>,
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fdhdepgnmph {
    #[prost(enumeration = "Lfjlgojmkeh", tag = "2")]
    pub imiogmdokcb: i32,
    #[prost(bool, tag = "12")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "13")]
    pub level_id: u32,
    #[prost(uint32, tag = "14")]
    pub kngjhmllcnp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2263)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kdhkjfplaeg {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(message, optional, tag = "7")]
    pub ibeakhhnohb: ::core::option::Option<Hcjgifnjppj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eaolkafmalm {
    #[prost(message, repeated, tag = "8")]
    pub pndpnmbdokf: ::prost::alloc::vec::Vec<Clpbkemplnm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Weapon {
    #[prost(uint32, tag = "1")]
    pub level: u32,
    #[prost(uint32, tag = "2")]
    pub exp: u32,
    #[prost(uint32, tag = "3")]
    pub promote_level: u32,
    #[prost(map = "uint32, uint32", tag = "4")]
    pub affix_map: ::std::collections::HashMap<u32, u32>,
    #[prost(bool, tag = "5")]
    pub jafjmobleni: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9910)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lbhddebcckc {
    #[prost(uint32, tag = "3")]
    pub neikciohndh: u32,
    #[prost(uint32, tag = "4")]
    pub ffhpdcibkod: u32,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hfildbllmop {
    #[prost(message, repeated, tag = "7")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Bgegonkipil>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20699)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Geocpflcjop {
    #[prost(message, repeated, tag = "1")]
    pub kihkadfpgpp: ::prost::alloc::vec::Vec<Mkkmacfgjbg>,
    #[prost(uint32, tag = "2")]
    pub nfickllnfgn: u32,
    #[prost(uint32, tag = "6")]
    pub group_id: u32,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22284)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bgjnghhgcfp {
    #[prost(uint64, tag = "15")]
    pub ihgjlfcgfin: u64,
    #[prost(bool, tag = "9")]
    pub ednnnddpaij: bool,
    #[prost(enumeration = "Kpfoblalblc", tag = "8")]
    pub daakpcoabep: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4470)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jeffcplijjp {
    #[prost(message, optional, tag = "8")]
    pub okkjcbojaod: ::core::option::Option<Ncgpmhoihhl>,
    #[prost(bool, tag = "7")]
    pub fenmlnkglib: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23902)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Afjcaphkpgb {
    #[prost(uint32, tag = "9")]
    pub ffhpdcibkod: u32,
    #[prost(message, optional, tag = "11")]
    pub nganceicghc: ::core::option::Option<Kbofojidpgh>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(986)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jicfaommmag {
    #[prost(uint32, tag = "5")]
    pub bhgdnciojdj: u32,
    #[prost(message, repeated, tag = "10")]
    pub djmchfpiflm: ::prost::alloc::vec::Vec<Llgcdcdhdpd>,
    #[prost(message, optional, tag = "13")]
    pub bdaledoahfa: ::core::option::Option<Llgcdcdhdpd>,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct AbilityAttachedModifier {
    #[prost(bool, tag = "1")]
    pub is_invalid: bool,
    #[prost(uint32, tag = "2")]
    pub owner_entity_id: u32,
    #[prost(uint32, tag = "3")]
    pub instanced_modifier_id: u32,
    #[prost(bool, tag = "4")]
    pub is_serverbuff_modifier: bool,
    #[prost(int32, tag = "5")]
    pub attach_name_hash: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8028)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dhoeljbgham {
    #[prost(uint32, tag = "7")]
    pub hggehlmhkmp: u32,
    #[prost(uint32, tag = "5")]
    pub dnbefljlamb: u32,
    #[prost(uint32, tag = "1")]
    pub ghlbjahjehf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lfjndjlgphf {
    #[prost(string, tag = "1")]
    pub nkanjijnimc: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub ampbndiacmi: ::prost::alloc::string::String,
    #[prost(uint32, tag = "3")]
    pub manaanibalb: u32,
    #[prost(uint32, tag = "4")]
    pub ljbncmidobm: u32,
    #[prost(uint32, tag = "5")]
    pub ibcoiokmgge: u32,
    #[prost(uint32, tag = "6")]
    pub mbdfamekckb: u32,
    #[prost(uint32, tag = "7")]
    pub agopllenlao: u32,
    #[prost(oneof = "lfjndjlgphf::Ioimlmbjhhn", tags = "101")]
    pub ioimlmbjhhn: ::core::option::Option<lfjndjlgphf::Ioimlmbjhhn>,
}
/// Nested message and enum types in `LFJNDJLGPHF`.
pub mod lfjndjlgphf {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Ioimlmbjhhn {
        #[prost(message, tag = "101")]
        ResinCard(super::Coanhifnghk),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Coanhifnghk {
    #[prost(message, repeated, tag = "1")]
    pub gipfialaeog: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(message, repeated, tag = "2")]
    pub omdenbgjflh: ::prost::alloc::vec::Vec<Jickppdlohc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8707)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fakdhgenkgk {
    #[prost(enumeration = "StoreType", tag = "7")]
    pub store_type: i32,
    #[prost(uint64, repeated, tag = "8")]
    pub jbpmefjklcn: ::prost::alloc::vec::Vec<u64>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fndlklbaapg {
    #[prost(bool, tag = "1")]
    pub is_active: bool,
    #[prost(uint32, tag = "5")]
    pub kngbdmdcnhk: u32,
    #[prost(enumeration = "Jnkfgjmmhma", tag = "8")]
    pub dpnadjbahem: i32,
    #[prost(uint32, tag = "15")]
    pub ilfeimmpfik: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gancjaoghkj {
    #[prost(message, optional, tag = "8")]
    pub nganceicghc: ::core::option::Option<Alggbjmhace>,
    #[prost(bool, tag = "11")]
    pub omeniamedce: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4395)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Onimnbdcakh {
    #[prost(uint32, tag = "1")]
    pub ghlbjahjehf: u32,
    #[prost(uint32, tag = "7")]
    pub lbeinahahka: u32,
    #[prost(uint32, tag = "2")]
    pub nilalkpfcco: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AbilitySyncStateInfo {
    #[prost(bool, tag = "1")]
    pub is_inited: bool,
    #[prost(message, repeated, tag = "2")]
    pub dynamic_value_map: ::prost::alloc::vec::Vec<AbilityScalarValueEntry>,
    #[prost(message, repeated, tag = "3")]
    pub applied_abilities: ::prost::alloc::vec::Vec<AbilityAppliedAbility>,
    #[prost(message, repeated, tag = "4")]
    pub applied_modifiers: ::prost::alloc::vec::Vec<AbilityAppliedModifier>,
    #[prost(message, repeated, tag = "5")]
    pub mixin_recover_infos: ::prost::alloc::vec::Vec<AbilityMixinRecoverInfo>,
    #[prost(message, repeated, tag = "6")]
    pub sgv_dynamic_value_map: ::prost::alloc::vec::Vec<AbilityScalarValueEntry>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26253)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nphlhlefbki {
    #[prost(uint64, repeated, tag = "13")]
    pub hkpocefgkin: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint64, tag = "11")]
    pub cur_avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22542)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hfkcdpeblhc {
    #[prost(uint32, repeated, tag = "6")]
    pub kkpkggpfpim: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lfkheeoicgd {
    #[prost(bool, tag = "1")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "8")]
    pub level_id: u32,
    #[prost(uint32, tag = "11")]
    pub nmaapldbbni: u32,
    #[prost(uint32, tag = "13")]
    pub kngjhmllcnp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29181)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bdlikkdbjnf {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub kngbdmdcnhk: u32,
    #[prost(oneof = "bdlikkdbjnf::Nbdofgcpfej", tags = "11, 13")]
    pub nbdofgcpfej: ::core::option::Option<bdlikkdbjnf::Nbdofgcpfej>,
}
/// Nested message and enum types in `BDLIKKDBJNF`.
pub mod bdlikkdbjnf {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Nbdofgcpfej {
        #[prost(message, tag = "11")]
        DetectorData(super::Oehgbgealhn),
        #[prost(message, tag = "13")]
        ClientCollectorData(super::Ijjkjdgcbem),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cjceknnabgi {
    #[prost(uint32, tag = "1")]
    pub epfboihfkgd: u32,
    #[prost(uint32, repeated, tag = "4")]
    pub ghlamelehhi: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "7")]
    pub najomfiffam: bool,
    #[prost(uint32, tag = "8")]
    pub bgdbnpejchj: u32,
    #[prost(uint32, tag = "9")]
    pub mdnekfclggc: u32,
    #[prost(uint32, tag = "10")]
    pub glciaekdpgl: u32,
    #[prost(uint32, tag = "11")]
    pub lmffceogljp: u32,
    #[prost(uint32, repeated, tag = "13")]
    pub cimghifcjei: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "14")]
    pub kiohbpjaooi: u32,
    #[prost(enumeration = "Elehhooedfn", tag = "15")]
    pub pocidnhbiam: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mlobecpaoca {
    #[prost(message, optional, tag = "13")]
    pub bdaledoahfa: ::core::option::Option<Ngofpeolopf>,
    #[prost(uint32, tag = "14")]
    pub bhgdnciojdj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28647)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pdgdjhkeehe {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gfnbecnpkge {
    #[prost(uint32, tag = "2")]
    pub group_id: u32,
    #[prost(uint32, tag = "3")]
    pub nhbhfclnjid: u32,
    #[prost(uint32, tag = "5")]
    pub jabgacillec: u32,
    #[prost(uint32, tag = "7")]
    pub play_type: u32,
    #[prost(uint32, tag = "8")]
    pub kkppjfkddep: u32,
    #[prost(uint32, tag = "10")]
    pub jimelgdjmlf: u32,
    #[prost(uint32, tag = "13")]
    pub duration: u32,
    #[prost(
        oneof = "gfnbecnpkge::Detail",
        tags = "275, 284, 299, 362, 403, 418, 606, 698, 733, 774, 791, 873, 952, 1035, 1148, 1400, 1661, 1853, 1949, 2040"
    )]
    pub detail: ::core::option::Option<gfnbecnpkge::Detail>,
}
/// Nested message and enum types in `GFNBECNPKGE`.
pub mod gfnbecnpkge {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(message, tag = "275")]
        PitchPotInfo(super::Inaebpbpikm),
        #[prost(message, tag = "284")]
        HideAndSeekV4Info(super::Jbcfnmiamoe),
        #[prost(message, tag = "299")]
        FleurFairInfo(super::Lfhbfkhjibo),
        #[prost(message, tag = "362")]
        CeremonyGhostInfo(super::Lpcohhokfjo),
        #[prost(message, tag = "403")]
        CoinCollectInfo(super::Bkheifhdkfo),
        #[prost(message, tag = "418")]
        WatergunInfo(super::Annjkelgkml),
        #[prost(message, tag = "606")]
        LanV4PartyLionInfo(super::Egbghopmdob),
        #[prost(message, tag = "698")]
        LanV3BoatInfo(super::Gbgpedlahil),
        #[prost(message, tag = "733")]
        BallGameInfo(super::Nfbmjkmeflm),
        #[prost(message, tag = "774")]
        FleurFairV2PacmanInfo(super::Pnikpledjkh),
        #[prost(message, tag = "791")]
        HideAndSeekInfo(super::Njjjhojajbb),
        #[prost(message, tag = "873")]
        BrickBreakerInfo(super::Jdeneddimao),
        #[prost(message, tag = "952")]
        IrodoriChessInfo(super::Epipocjflfd),
        #[prost(message, tag = "1035")]
        CooperateChallengeInfo(super::Figglddicmk),
        #[prost(message, tag = "1148")]
        BirdBallInfo(super::Mlmkbichnog),
        #[prost(message, tag = "1400")]
        MechanicusInfo(super::Pmeondciopo),
        #[prost(message, tag = "1661")]
        TargetShootingInfo(super::Ncdahfbiepn),
        #[prost(message, tag = "1853")]
        MonsterVsMonsterInfo(super::Dibnpkdbjif),
        #[prost(message, tag = "1949")]
        CharAmusementInfo(super::Kmkiaakgnph),
        #[prost(message, tag = "2040")]
        ChessInfo(super::Iggncaelhii),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ipilfealjcl {
    #[prost(message, repeated, tag = "12")]
    pub hgaibenioci: ::prost::alloc::vec::Vec<Hchccihilmh>,
    #[prost(message, repeated, tag = "13")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Joejjofmcib>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24573)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pmbnlhikcof {
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9836)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ebmaedkijfo {
    #[prost(message, optional, tag = "14")]
    pub edjlngfglcp: ::core::option::Option<Hpdpklfdmce>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Foojbbjplak {
    #[prost(map = "uint32, uint32", tag = "1")]
    pub hgnkfijpjaa: ::std::collections::HashMap<u32, u32>,
    #[prost(message, repeated, tag = "2")]
    pub pgejgjmggog: ::prost::alloc::vec::Vec<Hbfbkimoogd>,
    #[prost(uint32, tag = "9")]
    pub hdbfknjhboo: u32,
    #[prost(bool, tag = "15")]
    pub dikjlillncc: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3957)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bfffpnedmbi {
    #[prost(uint32, tag = "4")]
    pub entity_id: u32,
    #[prost(uint64, tag = "6")]
    pub avatar_guid: u64,
    #[prost(uint32, tag = "10")]
    pub fnojnpdbbhd: u32,
    #[prost(uint32, tag = "12")]
    pub skill_depot_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ablleikokbn {
    #[prost(message, optional, tag = "2")]
    pub kgkedkpmdpl: ::core::option::Option<Hdpfodicaan>,
    #[prost(message, optional, tag = "4")]
    pub dlhgohekhjh: ::core::option::Option<Nfilmagdngj>,
    #[prost(message, optional, tag = "7")]
    pub adofooabkfo: ::core::option::Option<Clindendfkl>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kbcoimhaboi {
    #[prost(uint32, tag = "4")]
    pub fagpphacnbj: u32,
    #[prost(uint32, tag = "9")]
    pub pigdgcojmgl: u32,
    #[prost(uint32, tag = "10")]
    pub nkgekomllng: u32,
    #[prost(uint32, tag = "12")]
    pub khpfgeiljbh: u32,
    #[prost(enumeration = "Dchonjfdddo", tag = "13")]
    pub state: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23765)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Abdahiimebi {
    #[prost(bool, tag = "10")]
    pub nkaogolciad: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25384)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oljplnnehfl {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7795)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ojcojigkdhp {
    #[prost(bool, tag = "2")]
    pub lhcpmanhdno: bool,
    #[prost(uint32, tag = "5")]
    pub epfcidiklkg: u32,
    #[prost(uint32, tag = "6")]
    pub level_id: u32,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4319)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bafflhkapla {
    #[prost(uint32, tag = "10")]
    pub pjabefajbgb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23325)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ibmpfnklmia {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3903)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fkllpokconi {
    #[prost(uint32, tag = "2")]
    pub hcjjhghgbkn: u32,
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6205)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nnngmcdgabn {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27096)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nngokhkkiko {
    #[prost(message, optional, tag = "2")]
    pub ienmpnlkpmh: ::core::option::Option<Nbgckgbplal>,
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(bool, tag = "5")]
    pub bgijeboffhh: bool,
    #[prost(string, tag = "9")]
    pub hglnccjieag: ::prost::alloc::string::String,
    #[prost(uint32, tag = "13")]
    pub lnbgblbmadj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1796)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Opfkkkojjgd {
    #[prost(uint32, repeated, tag = "5")]
    pub hlhllfeobjg: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8848)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hjiimkablbp {
    #[prost(uint32, tag = "7")]
    pub scene_id: u32,
    #[prost(uint32, tag = "5")]
    pub point_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jngmojcffnm {
    #[prost(uint32, tag = "2")]
    pub nmaapldbbni: u32,
    #[prost(uint32, repeated, tag = "9")]
    pub affix_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "12")]
    pub level_id: u32,
    #[prost(uint32, tag = "15")]
    pub konankaciem: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26958)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Goeibbpjpde {
    #[prost(message, repeated, tag = "3")]
    pub dcofbpaiimp: ::prost::alloc::vec::Vec<Lkdgphdkhll>,
    #[prost(message, repeated, tag = "10")]
    pub ckdpfjplblj: ::prost::alloc::vec::Vec<Ombeifnnedf>,
    #[prost(uint32, repeated, tag = "12")]
    pub cbmeecgebak: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pganmgpelld {
    #[prost(uint32, tag = "8")]
    pub dajhkhflndj: u32,
    #[prost(uint32, repeated, tag = "10")]
    pub skill_id_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24996)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ncjjpjblenl {
    #[prost(bool, tag = "7")]
    pub ikgdojfkhco: bool,
    #[prost(uint32, tag = "14")]
    pub id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3737)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Npjgjaloimk {
    #[prost(message, optional, tag = "3")]
    pub npfflknkfnd: ::core::option::Option<CustomGadgetTreeInfo>,
    #[prost(uint32, tag = "6")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pekddgfcgfd {
    #[prost(message, optional, tag = "4")]
    pub eilnenalnfd: ::core::option::Option<Mlclboekhne>,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3274)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Miomhkedibh {
    #[prost(uint32, repeated, tag = "15")]
    pub iijjngcpipb: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25146)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pocgnioclie {
    #[prost(uint32, repeated, tag = "6")]
    pub jahppelnedf: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20183)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jmplbalcpff {
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3614)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ifkcejjglef {
    #[prost(message, repeated, tag = "4")]
    pub egmhbndhmjj: ::prost::alloc::vec::Vec<Okaehfflkad>,
    #[prost(uint32, tag = "5")]
    pub ooipgfedjmn: u32,
    #[prost(message, repeated, tag = "6")]
    pub cmikeiiiefi: ::prost::alloc::vec::Vec<Ihcbfibhglh>,
    #[prost(message, repeated, tag = "10")]
    pub ibadbfdeoeo: ::prost::alloc::vec::Vec<Gdjefkjaclf>,
    #[prost(uint32, tag = "12")]
    pub lklemlfnadn: u32,
    #[prost(message, repeated, tag = "14")]
    pub fjhpcmefmbk: ::prost::alloc::vec::Vec<Nbecpcoejpd>,
    #[prost(message, repeated, tag = "15")]
    pub idlimhkcfoj: ::prost::alloc::vec::Vec<Hhidcmmajml>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ofifgoopcdo {
    #[prost(message, repeated, tag = "1")]
    pub efcdelgmmkg: ::prost::alloc::vec::Vec<Daaelfamfea>,
    #[prost(uint32, repeated, tag = "5")]
    pub dhpclkchdim: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bccdgmaddob {
    #[prost(uint32, tag = "1")]
    pub gmdcmocijab: u32,
    #[prost(bool, tag = "2")]
    pub apfdcpllheb: bool,
    #[prost(message, repeated, tag = "3")]
    pub bolpflhnipi: ::prost::alloc::vec::Vec<Ljciaefkooa>,
    #[prost(uint32, tag = "6")]
    pub oaliohamlgn: u32,
    #[prost(uint32, tag = "8")]
    pub poaohggjfel: u32,
    #[prost(bool, tag = "13")]
    pub mpfldfdogai: bool,
    #[prost(uint32, tag = "15")]
    pub nmikcmlkndm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26652)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nhjmkngfalm {
    #[prost(uint32, tag = "4")]
    pub aoegkkajean: u32,
    #[prost(bool, tag = "7")]
    pub moaelibphoi: bool,
    #[prost(uint32, tag = "11")]
    pub kajbpilckoo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mpnllbgocmc {
    #[prost(message, optional, tag = "1")]
    pub biebpdejgab: ::core::option::Option<Edbkkjhjbmg>,
    #[prost(message, optional, tag = "5")]
    pub kloimiakbgb: ::core::option::Option<Jdnlhbmjfia>,
    #[prost(message, optional, tag = "12")]
    pub mgnfkeiamje: ::core::option::Option<Gcfhdmbfkmn>,
    #[prost(message, optional, tag = "13")]
    pub cbblgbkgmpd: ::core::option::Option<Pdnkjpocbei>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9301)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bcmfcmlnpbj {
    #[prost(uint32, tag = "14")]
    pub pjabefajbgb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ajcpmkdebkj {
    #[prost(uint32, tag = "5")]
    pub ieamgpojogl: u32,
    #[prost(uint32, tag = "6")]
    pub ionhghgajgg: u32,
    #[prost(uint32, tag = "8")]
    pub epfcidiklkg: u32,
    #[prost(uint32, tag = "10")]
    pub ooipgfedjmn: u32,
    #[prost(enumeration = "Kbaiomioccp", tag = "11")]
    pub jmlabobclde: i32,
    #[prost(uint32, tag = "12")]
    pub dajhkhflndj: u32,
    #[prost(uint32, tag = "14")]
    pub abeaibhkcjn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8534)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pmepocikefp {
    #[prost(message, repeated, tag = "1")]
    pub ajioiboimfp: ::prost::alloc::vec::Vec<Igidjdammbo>,
    #[prost(uint32, tag = "9")]
    pub scene_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ikmncnbemla {
    #[prost(bool, tag = "2")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "4")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "9")]
    pub mkcgmmganlk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8928)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Agbfpeaaffd {
    #[prost(map = "uint32, uint32", tag = "2")]
    pub bmanejiimah: ::std::collections::HashMap<u32, u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21078)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Iednlklcoha {
    #[prost(uint32, tag = "3")]
    pub kledmfebmki: u32,
    #[prost(uint32, repeated, tag = "7")]
    pub bjihlnaejbe: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub dangdbehnfe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Koedpmfbbnh {
    #[prost(uint32, tag = "1")]
    pub kbhdphnaeao: u32,
    #[prost(uint32, tag = "4")]
    pub cfkgeelkobh: u32,
    #[prost(uint32, tag = "5")]
    pub gnojcafhfch: u32,
    #[prost(uint32, tag = "15")]
    pub debdnmjfpep: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3432)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kinfhdfcdbl {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pbdbfhjjlpb {
    #[prost(uint32, tag = "7")]
    pub kljcagkgilp: u32,
    #[prost(uint32, tag = "9")]
    pub lchbeahgheo: u32,
    #[prost(uint32, tag = "10")]
    pub hpodkdccikj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(125)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aknpkjcbfko {
    #[prost(message, repeated, tag = "9")]
    pub efcdelgmmkg: ::prost::alloc::vec::Vec<Lbkljnjcmpd>,
    #[prost(uint32, tag = "1")]
    pub level_id: u32,
    #[prost(uint32, tag = "6")]
    pub bodiejclgmb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8552)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fbmgaljkbjo {
    #[prost(uint32, tag = "10")]
    pub ennbdoajdml: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5618)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Piolmfiphab {
    #[prost(uint32, repeated, tag = "14")]
    pub ihflgbgnaje: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nnihkekcjoc {
    #[prost(int32, tag = "2")]
    pub hleppmejppc: i32,
    #[prost(enumeration = "Glgcidhmkka", tag = "8")]
    pub ncpecohfomb: i32,
    #[prost(message, optional, tag = "10")]
    pub nljplcolkfj: ::core::option::Option<Vector>,
    #[prost(float, tag = "12")]
    pub lihakppemkl: f32,
    #[prost(message, optional, tag = "14")]
    pub gjhmjafnloj: ::core::option::Option<Vector>,
    #[prost(float, tag = "15")]
    pub hcgdidcaoff: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(643)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Imclocdaeap {
    #[prost(uint32, tag = "1")]
    pub ipdobhbahcn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22910)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kaiepfamflf {
    #[prost(uint32, tag = "5")]
    pub mlnmecigdmh: u32,
    #[prost(bool, tag = "8")]
    pub nhnplcpploc: bool,
    #[prost(uint32, tag = "4")]
    pub cbpdgcponhm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Caigikcheoc {
    #[prost(uint32, tag = "1")]
    pub pmonmgggpip: u32,
    #[prost(message, optional, tag = "3")]
    pub oipcdlondgp: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "5")]
    pub entity_id: u32,
    #[prost(uint32, tag = "12")]
    pub ifdnhohdebi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2414)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jjejpfdepbj {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(message, optional, tag = "14")]
    pub dnkjojhbjld: ::core::option::Option<Epjopbfflfl>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lmhdddnbccc {
    #[prost(float, tag = "2")]
    pub cpcfonaoafa: f32,
    #[prost(message, optional, tag = "4")]
    pub fnkgobllfoh: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "6")]
    pub entity_id: u32,
    #[prost(float, tag = "7")]
    pub konpjajdpnh: f32,
    #[prost(int32, tag = "8")]
    pub oholbofjfal: i32,
    #[prost(message, optional, tag = "10")]
    pub oicfbjmlifc: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "11")]
    pub jamfdabajbb: ::core::option::Option<Vector>,
    #[prost(bool, tag = "12")]
    pub jikfmkfcdhn: bool,
    #[prost(message, optional, tag = "13")]
    pub lgepidaghea: ::core::option::Option<Vector>,
    #[prost(bool, tag = "14")]
    pub fpchlfkinec: bool,
    #[prost(int32, tag = "15")]
    pub plhjklgjblc: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22411)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fmamommnhbl {
    #[prost(uint32, tag = "4")]
    pub ggjjfndhapl: u32,
    #[prost(uint32, tag = "8")]
    pub hkkadanmjie: u32,
    #[prost(message, repeated, tag = "12")]
    pub ijgdemjnfnn: ::prost::alloc::vec::Vec<Cegmhfpbajj>,
    #[prost(bool, tag = "15")]
    pub nehnefodogm: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27172)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Epndibjeeam {
    #[prost(uint32, tag = "1")]
    pub bodiejclgmb: u32,
    #[prost(bool, tag = "6")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "8")]
    pub fbkeofgncpm: u32,
    #[prost(uint32, tag = "10")]
    pub score: u32,
    #[prost(uint32, tag = "12")]
    pub anblhiacjil: u32,
    #[prost(bool, tag = "13")]
    pub hcjfdjhilam: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Njjjhojajbb {
    #[prost(uint32, tag = "2")]
    pub ikdajelleai: u32,
    #[prost(bool, tag = "3")]
    pub haeaoofajng: bool,
    #[prost(uint32, repeated, tag = "7")]
    pub lpgmaehcbob: ::prost::alloc::vec::Vec<u32>,
    #[prost(map = "uint32, message", tag = "8")]
    pub jenacepcgof: ::std::collections::HashMap<u32, Kmjbmefjigo>,
    #[prost(enumeration = "Ikemebcaiic", tag = "12")]
    pub kkppjfkddep: i32,
    #[prost(uint32, tag = "15")]
    pub dombdimffii: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25907)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ahmdjbjgeid {
    #[prost(uint32, tag = "9")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "1")]
    pub lchbeahgheo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oknbffifigj {
    #[prost(message, optional, tag = "3")]
    pub gdjkcknogbd: ::core::option::Option<Apmhhcohpld>,
    #[prost(uint32, tag = "10")]
    pub dlgfbkcffao: u32,
    #[prost(uint32, repeated, tag = "11")]
    pub scene_tag_id_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Obnkiapklnb {
    #[prost(message, repeated, tag = "8")]
    pub info_list: ::prost::alloc::vec::Vec<Bjfpgdpgbkc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1808)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jjgcamjfkbc {
    #[prost(message, repeated, tag = "12")]
    pub efcdelgmmkg: ::prost::alloc::vec::Vec<Nhflidhfael>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9634)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ncfaopodnhl {
    #[prost(uint32, tag = "9")]
    pub cnaifgicldh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7653)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lkjmieafmln {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20808)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ServerTimeNotify {
    #[prost(uint64, tag = "6")]
    pub server_time: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hbnhjhamkdp {
    #[prost(message, repeated, tag = "13")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Mlioehpbife>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3701)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kmeohalobep {
    #[prost(message, repeated, tag = "7")]
    pub efcdelgmmkg: ::prost::alloc::vec::Vec<Nhflidhfael>,
    #[prost(uint32, tag = "8")]
    pub bodiejclgmb: u32,
    #[prost(uint32, tag = "2")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22226)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nedgiclknkn {
    #[prost(uint32, tag = "3")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22120)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fihhbonfeik {
    #[prost(uint32, tag = "5")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pnikpledjkh {
    #[prost(bool, tag = "2")]
    pub heaiodoopia: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aembkbpmapb {
    #[prost(uint32, repeated, tag = "1")]
    pub dmbcgdcnjjp: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "3")]
    pub kfphmnghbfg: u32,
    #[prost(message, repeated, tag = "6")]
    pub kckepcmlihi: ::prost::alloc::vec::Vec<Dgblphdfcbi>,
    #[prost(message, repeated, tag = "8")]
    pub ckiclldghgh: ::prost::alloc::vec::Vec<Jklpnoghioi>,
    #[prost(message, repeated, tag = "10")]
    pub dclkhfdnifn: ::prost::alloc::vec::Vec<Djcgmlcfklc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29456)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ejeiedajkee {
    #[prost(bool, tag = "1")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "4")]
    pub bilmacefnpf: u32,
    #[prost(bool, tag = "6")]
    pub bpdljhgnngd: bool,
    #[prost(uint32, tag = "8")]
    pub jimelgdjmlf: u32,
    #[prost(bool, tag = "9")]
    pub kodnaagljdl: bool,
    #[prost(message, repeated, tag = "10")]
    pub fagjdjiglon: ::prost::alloc::vec::Vec<Pliajbgkcmd>,
    #[prost(uint32, repeated, tag = "11")]
    pub cljikpeplec: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "12")]
    pub kkppjfkddep: u32,
    #[prost(message, repeated, tag = "15")]
    pub meikgboldgh: ::prost::alloc::vec::Vec<Hfhjkhoplmn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27930)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ldkcfkglbim {
    #[prost(bool, tag = "2")]
    pub hcinocnlhcb: bool,
    #[prost(uint32, tag = "10")]
    pub draft_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21221)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Diaheangmgn {
    #[prost(message, optional, tag = "3")]
    pub achepmkcklh: ::core::option::Option<Ljafoaoodob>,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Peijajnggoe {
    #[prost(bool, tag = "3")]
    pub pgpkmokbfam: bool,
    #[prost(uint32, tag = "13")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20618)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jcbogbmijim {
    #[prost(uint32, tag = "1")]
    pub mmenfljeomn: u32,
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "5")]
    pub fdfnjfbhcce: u32,
    #[prost(uint32, tag = "8")]
    pub blkbiofllpc: u32,
    #[prost(message, repeated, tag = "9")]
    pub dnklcncgmkb: ::prost::alloc::vec::Vec<Jickppdlohc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4845)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ddhnligdcid {
    #[prost(message, repeated, tag = "10")]
    pub aaehpgkinop: ::prost::alloc::vec::Vec<Jdbkonempdd>,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29098)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Faghoobkkai {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, tag = "5")]
    pub position: u32,
    #[prost(uint32, tag = "9")]
    pub jcmchgnnlmj: u32,
    #[prost(uint32, tag = "13")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1754)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nhmfjdaagdp {
    #[prost(uint32, tag = "3")]
    pub hdmadegneio: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4375)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Doffjaccpal {
    #[prost(uint32, tag = "2")]
    pub debogmdglmi: u32,
    #[prost(uint64, tag = "5")]
    pub avatar_guid: u64,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub nkgdgkcidjj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9248)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ihhokgmoflo {
    #[prost(uint32, tag = "2")]
    pub level_id: u32,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gdjefkjaclf {
    #[prost(uint32, tag = "6")]
    pub olekbaakakh: u32,
    #[prost(uint32, tag = "9")]
    pub kcflolpdgem: u32,
    #[prost(message, optional, tag = "10")]
    pub kfjadbohlap: ::core::option::Option<Okaehfflkad>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pkgoclimoig {
    #[prost(uint32, tag = "6")]
    pub guid: u32,
    #[prost(message, optional, tag = "9")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(message, optional, tag = "13")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "14")]
    pub block_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26764)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fcallcklpbn {
    #[prost(uint32, tag = "5")]
    pub score: u32,
    #[prost(bool, tag = "7")]
    pub hcjfdjhilam: bool,
    #[prost(bool, tag = "8")]
    pub ocgnmnobjgm: bool,
    #[prost(uint32, tag = "9")]
    pub cmifcdnepli: u32,
    #[prost(uint32, tag = "10")]
    pub ffhpdcibkod: u32,
    #[prost(uint32, tag = "12")]
    pub mknhlamihmc: u32,
    #[prost(uint32, tag = "14")]
    pub mdoghkccjcp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1095)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ponhpankoan {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bcbohnagdhm {
    #[prost(uint32, tag = "1")]
    pub aadkglakicj: u32,
    #[prost(uint32, tag = "4")]
    pub anfojiidmhn: u32,
    #[prost(uint32, tag = "9")]
    pub bjcabobcjce: u32,
    #[prost(uint32, tag = "15")]
    pub jbokehbehop: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7649)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nekhlipehgl {
    #[prost(bool, tag = "1")]
    pub gapbeakmpma: bool,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(873)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mfgbnjmibce {
    #[prost(uint32, tag = "2")]
    pub skill_id: u32,
    #[prost(uint64, tag = "9")]
    pub jbfhaejbgdk: u64,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24383)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iedkhhgpnal {
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lkdgphdkhll {
    #[prost(uint32, tag = "1")]
    pub dnbefljlamb: u32,
    #[prost(uint32, tag = "2")]
    pub finahglfhag: u32,
    #[prost(uint32, tag = "4")]
    pub jabgacillec: u32,
    #[prost(uint32, repeated, tag = "6")]
    pub chdookbiklm: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "7")]
    pub keoojgfgmlh: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "8")]
    pub end_time: u32,
    #[prost(bool, tag = "9")]
    pub pffnepjbnne: bool,
    #[prost(uint32, tag = "10")]
    pub mjpbpgchnfa: u32,
    #[prost(bool, tag = "12")]
    pub pmjlllfophk: bool,
    #[prost(bool, tag = "14")]
    pub hpbajopibla: bool,
    #[prost(message, repeated, tag = "15")]
    pub ibkfnginfnk: ::prost::alloc::vec::Vec<Ppdgbnhkljj>,
    #[prost(map = "uint32, uint32", tag = "270")]
    pub pappmadoema: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, repeated, tag = "322")]
    pub phoaehgeall: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "413")]
    pub pakfdciiemf: u32,
    #[prost(message, optional, tag = "632")]
    pub occanhcocie: ::core::option::Option<Ogkdehbnjlm>,
    #[prost(uint64, repeated, tag = "815")]
    pub noepkonbfik: ::prost::alloc::vec::Vec<u64>,
    #[prost(bool, tag = "823")]
    pub cbmiejodeml: bool,
    #[prost(bool, tag = "1081")]
    pub hacchmnkkdf: bool,
    #[prost(uint32, tag = "1301")]
    pub ampfagmdjlj: u32,
    #[prost(uint32, tag = "1408")]
    pub dilobkceegc: u32,
    #[prost(message, repeated, tag = "1422")]
    pub kcahjmfnmmk: ::prost::alloc::vec::Vec<Eblgakaodkk>,
    #[prost(map = "uint32, uint32", tag = "1498")]
    pub dhdbeohjehh: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "1565")]
    pub pieapgepmlf: u32,
    #[prost(uint32, tag = "1583")]
    pub palekjjhcmj: u32,
    #[prost(bool, tag = "1589")]
    pub dpffadgbhif: bool,
    #[prost(uint32, repeated, tag = "1772")]
    pub hipdkjofklk: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint64, tag = "1922")]
    pub jhkkdcpbnmf: u64,
    #[prost(bool, tag = "1931")]
    pub lnobfaijgmm: bool,
    #[prost(
        oneof = "lkdgphdkhll::Detail",
        tags = "3, 5, 11, 13, 76, 83, 86, 88, 124, 133, 137, 147, 210, 234, 239, 251, 254, 262, 266, 272, 280, 304, 373, 394, 395, 412, 416, 470, 472, 489, 532, 535, 554, 572, 578, 584, 662, 671, 729, 741, 752, 760, 779, 794, 795, 800, 876, 891, 904, 954, 959, 968, 985, 991, 996, 1054, 1058, 1068, 1080, 1106, 1126, 1132, 1147, 1168, 1175, 1183, 1203, 1261, 1280, 1285, 1293, 1319, 1340, 1342, 1343, 1359, 1362, 1363, 1382, 1394, 1411, 1416, 1435, 1444, 1494, 1497, 1501, 1507, 1548, 1597, 1620, 1622, 1626, 1629, 1642, 1648, 1651, 1684, 1690, 1728, 1733, 1751, 1759, 1789, 1803, 1805, 1807, 1835, 1846, 1853, 1870, 1877, 1887, 1889, 1895, 1900, 1927, 1934, 1953, 1967, 2003, 2011, 2012"
    )]
    pub detail: ::core::option::Option<lkdgphdkhll::Detail>,
}
/// Nested message and enum types in `LKDGPHDKHLL`.
pub mod lkdgphdkhll {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(message, tag = "3")]
        SalesmanInfo(super::Oefkeljinli),
        #[prost(message, tag = "5")]
        CrucibleInfo(super::Mabdmhfidbf),
        #[prost(message, tag = "11")]
        SamLampInfo(super::Ganfnnpfodc),
        #[prost(message, tag = "13")]
        TrialAvatarInfo(super::Odgfdjghjgm),
        #[prost(message, tag = "76")]
        UgcV2Info(super::Fofbdkcpidc),
        #[prost(message, tag = "83")]
        UgcInfo(super::Nlblpmejofk),
        #[prost(message, tag = "86")]
        LuminanceStoneChallengeInfo(super::Bbgdglphgbl),
        #[prost(message, tag = "88")]
        DragonSpineInfo(super::Baijndcgabo),
        #[prost(message, tag = "124")]
        CrystalLinkInfo(super::Likjanhfgeh),
        #[prost(message, tag = "133")]
        TanukiTravelActivityInfo(super::Pikdlmgginc),
        #[prost(message, tag = "137")]
        RogueDiaryInfo(super::Iphflgnbhfg),
        #[prost(message, tag = "147")]
        ExpeditionInfo(super::Bjocdgnjeib),
        #[prost(message, tag = "210")]
        FungusFighterV2Info(super::Jnfbjnedpid),
        #[prost(message, tag = "234")]
        BomberDodocoDetailInfo(super::Oefgijnblkg),
        #[prost(message, tag = "239")]
        BrickBreakerInfo(super::Lhpccempkbb),
        #[prost(message, tag = "251")]
        AlchemySimDetailInfo(super::Lbambfindck),
        #[prost(message, tag = "254")]
        NahidaBirthDetailInfo(super::Llochdpglhh),
        #[prost(message, tag = "262")]
        LanternRiteActivityInfo(super::Ijeocmpdmnf),
        #[prost(message, tag = "266")]
        MonsterVsMonsterDetailInfo(super::Kkaklbdlooe),
        #[prost(message, tag = "272")]
        TeamChainInfo(super::Ecllggpfagl),
        #[prost(message, tag = "280")]
        EffigyChallengeV4Info(super::Aepkkifpnjb),
        #[prost(message, tag = "304")]
        NatlanTourDetailInfo(super::Kpddljecbcj),
        #[prost(message, tag = "373")]
        BlessingInfo(super::Ololckgipjn),
        #[prost(message, tag = "394")]
        AnimalViewInfo(super::Defholmeihg),
        #[prost(message, tag = "395")]
        MonsterChessDetailInfo(super::Agidndbcppj),
        #[prost(message, tag = "412")]
        LostSamachurlInfo(super::Pnbpkfnhmhm),
        #[prost(message, tag = "416")]
        TreasureMapInfo(super::Bnagcibncgo),
        #[prost(message, tag = "470")]
        BulletHellDetailInfo(super::Kjjdiddjiij),
        #[prost(message, tag = "472")]
        ArenaChallengeInfo(super::Foojbbjplak),
        #[prost(message, tag = "489")]
        SlimeCannonDetailInfo(super::Kcbpeegbflm),
        #[prost(message, tag = "532")]
        RainbowPrinceDetailInfo(super::Oamilbdlaid),
        #[prost(message, tag = "535")]
        GcgPveInfiniteInfo(super::Johjogecpln),
        #[prost(message, tag = "554")]
        FilmfestDetailInfo(super::Banpaideplm),
        #[prost(message, tag = "572")]
        BoltbugAbyssDetailInfo(super::Ohikeimfpdl),
        #[prost(message, tag = "578")]
        ActivityMultiCharacterInfo(super::Nbdblggcjbb),
        #[prost(message, tag = "584")]
        CoinCollectInfo(super::Epidgkfmcne),
        #[prost(message, tag = "662")]
        JourneyInfo(super::Mpnllbgocmc),
        #[prost(message, tag = "671")]
        WindFieldInfo(super::Eaolkafmalm),
        #[prost(message, tag = "729")]
        TreasureHuntV4Info(super::Hanpgehfnma),
        #[prost(message, tag = "741")]
        GearInfo(super::Fakfjbedhhf),
        #[prost(message, tag = "752")]
        LanternRiteV4Info(super::Ablleikokbn),
        #[prost(message, tag = "760")]
        PoetryFestivalDetailInfo(super::Gpbhbcbehki),
        #[prost(message, tag = "779")]
        CatcafeDetailInfo(super::Pcppncibcin),
        #[prost(message, tag = "794")]
        ElectroherculesBattleInfo(super::Bcdnbomphii),
        #[prost(message, tag = "795")]
        LunaRiteInfo(super::Gcmhkmflobd),
        #[prost(message, tag = "800")]
        TreasureSeelieInfo(super::Knnfimgeieh),
        #[prost(message, tag = "876")]
        MuqadasPotionInfo(super::Lanfemmhknb),
        #[prost(message, tag = "891")]
        AutoTimeStopDetailInfo(super::Okonenhbhdj),
        #[prost(message, tag = "904")]
        FishBlasterInfo(super::Hgjlmpojcoa),
        #[prost(message, tag = "954")]
        GcgFestivalInfo(super::Kngjmlbkoon),
        #[prost(message, tag = "959")]
        RechargeDiskDetailInfo(super::Jjonjlomkhh),
        #[prost(message, tag = "968")]
        CollectUnderwaterInfo(super::Fgdipmphkkg),
        #[prost(message, tag = "985")]
        CooperateChallengeDetailInfo(super::Hikcagdidfb),
        #[prost(message, tag = "991")]
        ChallnelerSlabInfo(super::Joclmphljbb),
        #[prost(message, tag = "996")]
        BlitzRushInfo(super::Ndfpefjlelm),
        #[prost(message, tag = "1054")]
        FairyTalesDetailInfo(super::Adelheaccbc),
        #[prost(message, tag = "1058")]
        WatergunInfo(super::Hflndeggkma),
        #[prost(message, tag = "1068")]
        GcgPvePuzzleInfo(super::Eogmdmbjgjp),
        #[prost(message, tag = "1080")]
        DuelHeartInfo(super::Nacpblgdmne),
        #[prost(message, tag = "1106")]
        HachiInfo(super::Lkkccncgdon),
        #[prost(message, tag = "1126")]
        SummerTimeV2Info(super::Aeflpkaejde),
        #[prost(message, tag = "1132")]
        MusicGameInfo(super::Amejldminee),
        #[prost(message, tag = "1147")]
        CeremonyInfo(super::Jdpnpjbihji),
        #[prost(message, tag = "1168")]
        GcgPveInfo(super::Agagoebmfca),
        #[prost(message, tag = "1175")]
        GainBuffDetailInfo(super::Nijhgckhnhg),
        #[prost(message, tag = "1183")]
        RockBoardExploreInfo(super::Ilajgemjlko),
        #[prost(message, tag = "1203")]
        StaminaFightInfo(super::Ojgjdfemdio),
        #[prost(message, tag = "1261")]
        SandwormCannonDetailInfo(super::Ienbgpnmdfp),
        #[prost(message, tag = "1280")]
        ToyBattleInfo(super::Ekgjkeobkbk),
        #[prost(message, tag = "1285")]
        PotionInfo(super::Egdlgkkgnnn),
        #[prost(message, tag = "1293")]
        AcrobaticsBattleDetailInfo(super::Bmkcgeinekp),
        #[prost(message, tag = "1319")]
        EchoShellInfo(super::Lkckgeamlnc),
        #[prost(message, tag = "1340")]
        WaterSpiritInfo(super::Mjmmbpjnadl),
        #[prost(message, tag = "1342")]
        EffigyInfo(super::Fkdddhiegmf),
        #[prost(message, tag = "1343")]
        SeaLampV3Info(super::Ikoplpgjpje),
        #[prost(message, tag = "1359")]
        PhotoUnderseaInfo(super::Ipilfealjcl),
        #[prost(message, tag = "1362")]
        CookGameDetailInfo(super::Madfgjddkme),
        #[prost(message, tag = "1363")]
        VintageInfo(super::Fdpihnkleaj),
        #[prost(message, tag = "1382")]
        CharAmusementInfo(super::Nnkijpdejke),
        #[prost(message, tag = "1394")]
        EffigyChallengeInfo(super::Gdnjjlciica),
        #[prost(message, tag = "1411")]
        FontaineGatherInfo(super::Lieoeelledn),
        #[prost(message, tag = "1416")]
        AkaFesInfo(super::Fdjcebepfad),
        #[prost(message, tag = "1435")]
        GoalChallengeInfo(super::Bbkpgdlljhp),
        #[prost(message, tag = "1444")]
        HideAndSeekV4DetailInfo(super::Omlbdblbakk),
        #[prost(message, tag = "1494")]
        SumoInfo(super::Mddagbicmke),
        #[prost(message, tag = "1497")]
        FlightInfo(super::Jkphagebjpi),
        #[prost(message, tag = "1501")]
        ChessInfo(super::Eliiddffaef),
        #[prost(message, tag = "1507")]
        DeliveryInfo(super::Eooapdhfobe),
        #[prost(message, tag = "1548")]
        BounceConjuringInfo(super::Opjhhafpdak),
        #[prost(message, tag = "1597")]
        BuoyantCombatInfo(super::Ijffcjiolal),
        #[prost(message, tag = "1620")]
        SorushTrialInfo(super::Fepjaehjdic),
        #[prost(message, tag = "1622")]
        AsterInfo(super::Gicfhmmmklk),
        #[prost(message, tag = "1626")]
        FleurFairV2Info(super::Cdmobolhbjl),
        #[prost(message, tag = "1629")]
        GravenInnocenceInfo(super::Ibkgcggjodp),
        #[prost(message, tag = "1642")]
        PhotoInfo(super::Ejmmnhefofg),
        #[prost(message, tag = "1648")]
        SeaLampInfo(super::Kmjchhjlfod),
        #[prost(message, tag = "1651")]
        BlessingV2Info(super::Dfbabjjigbb),
        #[prost(message, tag = "1684")]
        FungusFighterInfo(super::Pokbdlijmjg),
        #[prost(message, tag = "1690")]
        MichiaeMatsuriInfo(super::Aembkbpmapb),
        #[prost(message, tag = "1728")]
        ArenaChallengeV5DetailInfo(super::Phlkjjnbnhc),
        #[prost(message, tag = "1733")]
        MistTrialActivityInfo(super::Ienjaifdnep),
        #[prost(message, tag = "1751")]
        IslandPartyInfo(super::Cipkalfkaoi),
        #[prost(message, tag = "1759")]
        GcgAutoBattleCardDetailInfo(super::Mdmmhlcdbjl),
        #[prost(message, tag = "1789")]
        GreatFestivalV2DetailInfo(super::Nbnoomekhie),
        #[prost(message, tag = "1803")]
        QuickTimeCombatInfo(super::Hnecjfgcafg),
        #[prost(message, tag = "1805")]
        GachaInfo(super::Iiollkfcned),
        #[prost(message, tag = "1807")]
        SpiceInfo(super::Mahblnhancc),
        #[prost(message, tag = "1835")]
        IrodoriInfo(super::Dcfhfeceecm),
        #[prost(message, tag = "1846")]
        DigInfo(super::Aakbijikbnm),
        #[prost(message, tag = "1853")]
        EffigyChallengeV5DetailInfo(super::Dccnbnfgkma),
        #[prost(message, tag = "1870")]
        BirdBallDetailInfo(super::Hilipcbnedd),
        #[prost(message, tag = "1877")]
        SummerTimeInfo(super::Jkbikpknbie),
        #[prost(message, tag = "1887")]
        PlantFlowerInfo(super::Hibompkipin),
        #[prost(message, tag = "1889")]
        BartenderInfo(super::Akllemmholi),
        #[prost(message, tag = "1895")]
        WinterCampInfo(super::Jeidecdidle),
        #[prost(message, tag = "1900")]
        InstableSprayInfo(super::Ckjcchipmdc),
        #[prost(message, tag = "1927")]
        RoguelikeDungoenInfo(super::Cljabgnojbh),
        #[prost(message, tag = "1934")]
        FindHilichurlInfo(super::Bccdgmaddob),
        #[prost(message, tag = "1953")]
        HideAndSeekInfo(super::Loemgpfcbbi),
        #[prost(message, tag = "1967")]
        FungusFighterV3Info(super::Ejibhkpofag),
        #[prost(message, tag = "2003")]
        MoonfinTrialInfo(super::Kogikbgoicn),
        #[prost(message, tag = "2011")]
        FleurFairInfo(super::Ppdjhnjdegm),
        #[prost(message, tag = "2012")]
        PenumbraAdventureInfo(super::Bbohkcceccc),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21336)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Okcbgjkcgmk {
    #[prost(message, optional, tag = "1")]
    pub jeaofagmkof: ::core::option::Option<Lccnnipfkne>,
    #[prost(bool, tag = "2")]
    pub ldcnpdkabal: bool,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29216)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hpehongkhdc {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2036)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mjpnnookjpp {
    #[prost(uint32, tag = "1")]
    pub dafbmphnlma: u32,
    #[prost(uint32, tag = "5")]
    pub iidncnkmbao: u32,
    #[prost(uint32, tag = "6")]
    pub pihndegfmph: u32,
    #[prost(enumeration = "Egmcilpconk", tag = "11")]
    pub icedebjhcgf: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22836)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nfpempkknfl {
    #[prost(uint32, tag = "5")]
    pub bnddagfahhn: u32,
    #[prost(uint32, tag = "6")]
    pub ffhpdcibkod: u32,
    #[prost(uint32, tag = "14")]
    pub dccchkbighp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27275)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bjolokpcjaa {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub mp_play_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eoiaolfaimc {
    #[prost(uint32, tag = "1")]
    pub gadefephlim: u32,
    #[prost(uint32, tag = "3")]
    pub noldhjnlgnn: u32,
    #[prost(uint32, tag = "8")]
    pub apfgkddhnfb: u32,
    #[prost(uint32, tag = "14")]
    pub pfffgknkief: u32,
    #[prost(int32, tag = "15")]
    pub kaihcacfcge: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cdfinadpjap {
    #[prost(uint32, tag = "1")]
    pub mbbdimbcmef: u32,
    #[prost(uint32, tag = "4")]
    pub gjlmnohpjka: u32,
    #[prost(uint32, repeated, tag = "6")]
    pub ahhodbpifho: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fabgoappdao {
    #[prost(bool, tag = "1")]
    pub jfjbenngkbb: bool,
    #[prost(bool, tag = "10")]
    pub jeenpidkklm: bool,
    #[prost(bool, tag = "11")]
    pub afohhejbgib: bool,
    #[prost(uint32, tag = "13")]
    pub skill_id: u32,
    #[prost(bool, tag = "14")]
    pub jaalidnikja: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hkbgidacbim {
    #[prost(enumeration = "Ohjpbjbafnj", tag = "13")]
    pub fmmplgjnhmb: i32,
    #[prost(uint32, repeated, tag = "14")]
    pub llnpceifdbo: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "15")]
    pub hlmjflepcdo: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22598)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fnombolbkae {
    #[prost(uint32, repeated, tag = "8")]
    pub jahppelnedf: ::prost::alloc::vec::Vec<u32>,
    #[prost(string, tag = "13")]
    pub name: ::prost::alloc::string::String,
    #[prost(uint32, repeated, tag = "12")]
    pub npmpjingpof: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "15")]
    pub cnaifgicldh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mdljnanfjmc {
    #[prost(string, tag = "1")]
    pub omknbnmebik: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub efajihmnobk: ::prost::alloc::string::String,
    #[prost(message, repeated, tag = "4")]
    pub jahppelnedf: ::prost::alloc::vec::Vec<Hfhjkhoplmn>,
    #[prost(uint32, tag = "6")]
    pub uid: u32,
    #[prost(message, optional, tag = "8")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
    #[prost(uint32, tag = "13")]
    pub odcpaeconnd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22475)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Elenoekfgoj {
    #[prost(uint32, tag = "6")]
    pub jjeglhjpmco: u32,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
    #[prost(uint32, tag = "9")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gdjgmnhbkoi {
    #[prost(uint32, tag = "9")]
    pub dajhkhflndj: u32,
    #[prost(uint32, tag = "14")]
    pub skill_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cahhbehncgl {
    #[prost(uint32, tag = "1")]
    pub mcjnlbadfin: u32,
    #[prost(uint32, tag = "3")]
    pub group_id: u32,
    #[prost(message, optional, tag = "6")]
    pub pos: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "15")]
    pub config_id: u32,
    #[prost(oneof = "cahhbehncgl::Ificmkdabaa", tags = "17, 550, 1644, 1664")]
    pub ificmkdabaa: ::core::option::Option<cahhbehncgl::Ificmkdabaa>,
}
/// Nested message and enum types in `CAHHBEHNCGL`.
pub mod cahhbehncgl {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Ificmkdabaa {
        #[prost(message, tag = "17")]
        CubicSize(super::Vector),
        #[prost(float, tag = "550")]
        SphereRadius(f32),
        #[prost(message, tag = "1644")]
        CylinderSize(super::Omdefnfdgcf),
        #[prost(message, tag = "1664")]
        PolygonSize(super::Hmffljogoia),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25945)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dakfanbkgnb {
    #[prost(message, optional, tag = "2")]
    pub ilmadkljkjk: ::core::option::Option<Apglckhigha>,
    #[prost(uint32, tag = "8")]
    pub kngbdmdcnhk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nhmfhfjppkm {
    #[prost(uint32, tag = "1")]
    pub lfgcgedebgm: u32,
    #[prost(uint32, repeated, tag = "2")]
    pub tag_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "4")]
    pub dfanclikioi: bool,
    #[prost(message, repeated, tag = "5")]
    pub njbfnifmokj: ::prost::alloc::vec::Vec<Mpmgngljgjp>,
    #[prost(uint32, tag = "6")]
    pub pcjnmggmlje: u32,
    #[prost(message, optional, tag = "7")]
    pub mpamgdhbmgh: ::core::option::Option<Gphnlhkijfc>,
    #[prost(uint64, tag = "9")]
    pub kejdlaebhif: u64,
    #[prost(uint32, tag = "11")]
    pub joildljpnec: u32,
    #[prost(uint32, tag = "12")]
    pub ahbidiaelpl: u32,
    #[prost(bool, tag = "15")]
    pub jmgeocmbekf: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28329)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Njicnkppmhp {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20507)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cjofcnackjm {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cpiejkniloo {
    #[prost(uint32, tag = "1")]
    pub lfajnkbnfna: u32,
    #[prost(uint32, tag = "2")]
    pub ommkdidfibl: u32,
    #[prost(uint32, tag = "6")]
    pub nclblialnmk: u32,
    #[prost(uint32, tag = "9")]
    pub olekbaakakh: u32,
    #[prost(uint32, tag = "12")]
    pub skill_id: u32,
    #[prost(message, repeated, tag = "13")]
    pub empcckdemll: ::prost::alloc::vec::Vec<Pdpehfdjbam>,
    #[prost(uint32, tag = "15")]
    pub mpcmnambobb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25222)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ckikmlkmpjh {
    #[prost(uint32, tag = "13")]
    pub parent_quest_id: u32,
    #[prost(uint32, tag = "2")]
    pub npc_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kmfnkoeikcd {
    #[prost(uint32, tag = "6")]
    pub jiiamcfehmj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kokdnepggbh {
    #[prost(message, repeated, tag = "2")]
    pub klcmlkeicic: ::prost::alloc::vec::Vec<Oeipmhmdadf>,
    #[prost(uint32, tag = "3")]
    pub pool_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nppkgklhlod {
    #[prost(uint32, tag = "7")]
    pub score: u32,
    #[prost(uint32, tag = "13")]
    pub fedjbgplmhi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ciimaojpkck {
    #[prost(bool, tag = "7")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "12")]
    pub iejpghnlidb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25481)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lanakbbochj {
    #[prost(uint32, tag = "3")]
    pub item_id: u32,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(uint32, tag = "12")]
    pub jlgjbaleioi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28149)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pkkohdahjlj {
    #[prost(uint32, tag = "6")]
    pub eaipgemknpo: u32,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3878)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ieekgnaecbf {
    #[prost(message, optional, tag = "10")]
    pub efbhadimhnf: ::core::option::Option<Kbgffpmolnp>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7772)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Doaaoakpkfb {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27966)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Egjpekccngk {
    #[prost(uint32, tag = "9")]
    pub entity_id: u32,
    #[prost(uint32, tag = "12")]
    pub start_time: u32,
    #[prost(uint32, tag = "13")]
    pub play_type: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Miblpeikdbp {
    #[prost(bool, tag = "2")]
    pub abhdemelcdn: bool,
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
    #[prost(bool, tag = "13")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9195)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nmohoajpmpg {
    #[prost(uint32, tag = "8")]
    pub entity_id: u32,
    #[prost(uint32, tag = "5")]
    pub npc_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jdgedojpjoe {
    #[prost(message, optional, tag = "2")]
    pub jmgkjpackgi: ::core::option::Option<Jdapcomimko>,
    #[prost(bool, tag = "4")]
    pub glkngddnocn: bool,
    #[prost(bool, tag = "7")]
    pub is_finish: bool,
    #[prost(uint32, tag = "9")]
    pub level_id: u32,
    #[prost(uint32, tag = "13")]
    pub score: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24814)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Idjmdadlnbe {
    #[prost(bool, tag = "11")]
    pub bmlkmdnpcdg: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27158)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mgkbgciioaj {
    #[prost(uint32, tag = "8")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24669)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetAreaExplorePointReq {
    #[prost(uint32, repeated, tag = "8")]
    pub area_id_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nipgcfogihp {
    #[prost(enumeration = "Nbpleololnc", repeated, tag = "5")]
    pub mknmfbmciio: ::prost::alloc::vec::Vec<i32>,
    #[prost(uint32, repeated, tag = "9")]
    pub dfbmbdomkig: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "11")]
    pub pgejgjmggog: ::prost::alloc::vec::Vec<Oaimbjcnjli>,
    #[prost(enumeration = "Nbpleololnc", repeated, tag = "13")]
    pub damgpkcjmmm: ::prost::alloc::vec::Vec<i32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9848)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Inaclnelnkj {
    #[prost(message, repeated, tag = "9")]
    pub olaehfohihl: ::prost::alloc::vec::Vec<Lojadoadkgd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pafmondclkh {
    #[prost(uint32, tag = "5")]
    pub hchpohcncfe: u32,
    #[prost(uint32, tag = "6")]
    pub jkhoegaadje: u32,
    #[prost(uint32, repeated, tag = "7")]
    pub cjppdkiiogp: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "11")]
    pub pchjnhfoiem: u32,
    #[prost(uint32, tag = "14")]
    pub niljpcammnj: u32,
    #[prost(uint32, tag = "15")]
    pub pnnmigaince: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6577)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mcoaemdnkoe {
    #[prost(uint64, repeated, tag = "8")]
    pub nhcoakjjffo: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint64, repeated, tag = "3")]
    pub eanfdfijjji: ::prost::alloc::vec::Vec<u64>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4103)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fhdiicioiom {
    #[prost(uint32, tag = "5")]
    pub ghlbjahjehf: u32,
    #[prost(uint32, tag = "7")]
    pub ncpmecmgbio: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ojpkagfjmmm {
    #[prost(float, tag = "1")]
    pub hfdeifejmgi: f32,
    #[prost(uint32, tag = "2")]
    pub r#type: u32,
    #[prost(float, tag = "7")]
    pub pmbodagbohn: f32,
    #[prost(float, tag = "8")]
    pub mdmmnleemdf: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct MirrorAvatarInfo {
    #[prost(uint32, tag = "1")]
    pub copy_from_avatar_type: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22562)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kmnikgpgmll {
    #[prost(uint32, tag = "1")]
    pub area_id: u32,
    #[prost(enumeration = "Binoocjmlcb", tag = "2")]
    pub cejabhlhhac: i32,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "8")]
    pub bigkkeoicgl: ::prost::alloc::vec::Vec<Lkiamjcjlak>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4127)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Epbebjkaogh {
    #[prost(uint32, tag = "3")]
    pub avatar_id: u32,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7201)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ChangeAvatarRsp {
    #[prost(uint32, tag = "10")]
    pub skill_id: u32,
    #[prost(uint64, tag = "11")]
    pub cur_guid: u64,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9415)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hdpgggoppcn {
    #[prost(enumeration = "Ckleegmpdgn", tag = "14")]
    pub agmhmdhefkd: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21363)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dlbdmeikapj {
    #[prost(message, repeated, tag = "15")]
    pub mark_list: ::prost::alloc::vec::Vec<MapMarkPoint>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lgppbgenjbn {
    #[prost(bool, tag = "12")]
    pub bnaccmflpko: bool,
    #[prost(uint32, tag = "14")]
    pub id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1556)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pinnkenpgmg {
    #[prost(map = "uint32, float", tag = "2")]
    pub fight_prop_map: ::std::collections::HashMap<u32, f32>,
    #[prost(uint64, tag = "15")]
    pub avatar_guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7246)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ohfapilmpln {
    #[prost(uint32, repeated, tag = "1")]
    pub gohagohhglk: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint64, tag = "9")]
    pub avatar_guid: u64,
    #[prost(uint32, tag = "10")]
    pub entity_id: u32,
    #[prost(uint32, tag = "13")]
    pub skill_depot_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Annjkelgkml {
    #[prost(message, repeated, tag = "4")]
    pub cdflgiidfef: ::prost::alloc::vec::Vec<Ikdandkmino>,
    #[prost(uint32, tag = "7")]
    pub level_id: u32,
    #[prost(bool, tag = "9")]
    pub edojgafakda: bool,
    #[prost(uint32, tag = "11")]
    pub nekecfnahom: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kohnlafgbmo {
    #[prost(bool, tag = "4")]
    pub nniiakkdnib: bool,
    #[prost(uint32, tag = "8")]
    pub gjlmnohpjka: u32,
    #[prost(uint32, tag = "14")]
    pub njmcfomhdpi: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mpmgngljgjp {
    #[prost(uint64, tag = "2")]
    pub avatar_guid: u64,
    #[prost(uint64, tag = "4")]
    pub kejdlaebhif: u64,
    #[prost(bool, tag = "5")]
    pub cobdjndegmf: bool,
    #[prost(uint32, tag = "7")]
    pub ahhneocname: u32,
    #[prost(uint32, tag = "10")]
    pub pcjnmggmlje: u32,
    #[prost(uint32, tag = "11")]
    pub epfcidiklkg: u32,
    #[prost(bool, tag = "12")]
    pub jmgeocmbekf: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21784)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Caghmjmmmii {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23847)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nbmpbckoakc {
    #[prost(uint32, tag = "4")]
    pub dcfhppakofh: u32,
    #[prost(uint64, tag = "12")]
    pub kejdlaebhif: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26760)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Agnmidcbicn {
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20748)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pmdhopaahni {
    #[prost(uint32, repeated, tag = "6")]
    pub cbffbjncpnd: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9961)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Akilklopflj {
    #[prost(uint32, tag = "3")]
    pub cehggcbcmfi: u32,
    #[prost(message, optional, tag = "4")]
    pub ecmnhbjiojk: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "6")]
    pub ffobionlmoj: u32,
    #[prost(uint32, tag = "8")]
    pub gmbfnpljddk: u32,
    #[prost(uint32, tag = "9")]
    pub config_id: u32,
    #[prost(uint32, tag = "11")]
    pub offering_id: u32,
    #[prost(uint32, tag = "12")]
    pub group_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hodbenfnelc {
    #[prost(uint32, tag = "1")]
    pub heleegcnjge: u32,
    #[prost(uint32, tag = "6")]
    pub niahkplmghf: u32,
    #[prost(bool, tag = "8")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "12")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1081)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pmbkmccimne {
    #[prost(uint32, repeated, tag = "2")]
    pub gpdepmclkmm: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "8")]
    pub id: u32,
    #[prost(uint32, tag = "6")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2525)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Adefdjiildd {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22661)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oheklifhibn {
    #[prost(enumeration = "Ckleegmpdgn", tag = "3")]
    pub agmhmdhefkd: i32,
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "8")]
    pub nekecfnahom: u32,
    #[prost(bool, tag = "14")]
    pub jfjndakfjek: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23796)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ooafehfkfoe {
    #[prost(uint32, repeated, tag = "14")]
    pub nmpnimglgda: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28051)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lpmjcojmhop {
    #[prost(map = "uint32, uint32", tag = "4")]
    pub gdjomhloeoh: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, tag = "14")]
    pub gainccncano: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22260)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Apkckmcbnei {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(uint32, tag = "8")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ejpncmkcpoa {
    #[prost(uint32, tag = "14")]
    pub lladmbnfoam: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20585)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Khjhjomnhop {
    #[prost(bool, tag = "15")]
    pub lhcpmanhdno: bool,
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
    #[prost(uint32, tag = "9")]
    pub epfcidiklkg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21121)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fofjjmhpolb {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
    #[prost(bool, tag = "12")]
    pub is_locked: bool,
    #[prost(uint64, tag = "15")]
    pub ddbhgoeeohb: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25221)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fgdkjkfidbj {
    #[prost(uint32, tag = "6")]
    pub entity_id: u32,
    #[prost(message, repeated, tag = "7")]
    pub jjblblmdphc: ::prost::alloc::vec::Vec<Ldkjnpenphg>,
    #[prost(bool, tag = "13")]
    pub ipmckcjnbma: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7182)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Edheilffboa {
    #[prost(message, optional, tag = "14")]
    pub ogljomedjfh: ::core::option::Option<Oildamfjodc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22761)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eodjcckakdn {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26175)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hfjdaphecda {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kjdpjhlalai {
    #[prost(message, repeated, tag = "3")]
    pub lkfkkglgfgm: ::prost::alloc::vec::Vec<Pebkjghepnc>,
    #[prost(uint32, tag = "5")]
    pub end_time: u32,
    #[prost(message, optional, tag = "7")]
    pub efleddjogop: ::core::option::Option<Fdljmdjjnkd>,
    #[prost(uint32, tag = "8")]
    pub owner_uid: u32,
    #[prost(uint32, tag = "9")]
    pub mabnefajhej: u32,
    #[prost(uint32, tag = "10")]
    pub start_time: u32,
    #[prost(uint32, tag = "11")]
    pub ffhpdcibkod: u32,
    #[prost(uint32, tag = "12")]
    pub kiodadonnlo: u32,
    #[prost(enumeration = "Cekeaiacebm", tag = "15")]
    pub iieilnhpcji: i32,
    #[prost(message, optional, tag = "291")]
    pub ionillbmdbe: ::core::option::Option<Mehbmjjamhe>,
    #[prost(
        oneof = "kjdpjhlalai::Dapnlkepgjn",
        tags = "1, 2, 4, 6, 13, 14, 39, 85, 112, 178, 195, 206, 209, 254, 275, 293, 344, 381, 404, 464, 469, 526, 532, 597, 829, 849, 855, 871, 883, 898, 921, 961, 992, 1034, 1046, 1104, 1156, 1167, 1255, 1293, 1354, 1361, 1449, 1475, 1526, 1527, 1538, 1574, 1611, 1635, 1741, 1787, 1824, 1923, 1947, 2037, 2047"
    )]
    pub dapnlkepgjn: ::core::option::Option<kjdpjhlalai::Dapnlkepgjn>,
}
/// Nested message and enum types in `KJDPJHLALAI`.
pub mod kjdpjhlalai {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Dapnlkepgjn {
        #[prost(message, tag = "1")]
        FallInfo(super::Ajemjecfbak),
        #[prost(message, tag = "2")]
        BulletInfo(super::Jihimnomjic),
        #[prost(message, tag = "4")]
        HideAndSeekInfo(super::Dinonclfblj),
        #[prost(message, tag = "6")]
        FlowerInfo(super::Ojdbdjolmih),
        #[prost(message, tag = "13")]
        BalloonInfo(super::Kmedihgpbph),
        #[prost(message, tag = "14")]
        BrokenFloorInfo(super::Dgolkhnihbm),
        #[prost(message, tag = "39")]
        IslandPartySailInfo(super::Djmchpnhkij),
        #[prost(message, tag = "85")]
        AkaFesArchaeologyInfo(super::Dfhohanjnne),
        #[prost(message, tag = "112")]
        BoxMatchInfo(super::Kmakdildplk),
        #[prost(message, tag = "178")]
        TreasureHuntV4Info(super::Nplemepblbm),
        #[prost(message, tag = "195")]
        FungusFighterV3Info(super::Mialielhlfj),
        #[prost(message, tag = "206")]
        MuqadasPotionInfo(super::Hkplhdfkfdc),
        #[prost(message, tag = "209")]
        AkaFesRhythmInfo(super::Ohmfkkpghkp),
        #[prost(message, tag = "254")]
        FilmfestBattleInfo(super::Djpkgmogmdj),
        #[prost(message, tag = "275")]
        RemusArenaInfo(super::Mpijinlmaie),
        #[prost(message, tag = "293")]
        InstableSprayInfo(super::Pcbjoagjiol),
        #[prost(message, tag = "344")]
        AutoTimeStopInfo(super::Pdpbfmhbnfa),
        #[prost(message, tag = "381")]
        BoatMultiInfo(super::Pnopjihgjdg),
        #[prost(message, tag = "404")]
        IslandPartyDownHillInfo(super::Mlconcinkjg),
        #[prost(message, tag = "464")]
        FungusFighterCaptureInfo(super::Mmcjndkihhg),
        #[prost(message, tag = "469")]
        FungusFighterV2Info(super::Iiflpnicpim),
        #[prost(message, tag = "526")]
        FilmfestSniperInfo(super::Oiplmjplebg),
        #[prost(message, tag = "532")]
        FungusFighterTrainingInfo(super::Jiefokipopm),
        #[prost(message, tag = "597")]
        CrystalLinkInfo(super::Nldmkaepdkp),
        #[prost(message, tag = "829")]
        IslandPartyRaftInfo(super::Nppgolacmci),
        #[prost(message, tag = "849")]
        SlimeCannonInfo(super::Jkcniffeiem),
        #[prost(message, tag = "855")]
        PhotoInfo(super::Kbafijfpklo),
        #[prost(message, tag = "871")]
        SumoInfo(super::Diaodefajlo),
        #[prost(message, tag = "883")]
        LuminanceStoneChallengeInfo(super::Hicmpfmfljc),
        #[prost(message, tag = "898")]
        HomeBalloonInfo(super::Odinlcpmnmp),
        #[prost(message, tag = "921")]
        CharAmusementInfo(super::Hpbdhglaknl),
        #[prost(message, tag = "961")]
        HandballInfo(super::Nppkacnelmc),
        #[prost(message, tag = "992")]
        SalvageEscortInfo(super::Nfgbcpjbdmj),
        #[prost(message, tag = "1034")]
        JourneyDiceInfo(super::Dnobndbhidi),
        #[prost(message, tag = "1046")]
        HomeSeekFurnitureInfo(super::Bnpmpofaeka),
        #[prost(message, tag = "1104")]
        SummerTimeV2BoatInfo(super::Neembbolnep),
        #[prost(message, tag = "1156")]
        PacmanInfo(super::Nloibnmgbmj),
        #[prost(message, tag = "1167")]
        SandwormInfo(super::Onlfefmibla),
        #[prost(message, tag = "1255")]
        VintageHuntingInfo(super::Kooomjkkomo),
        #[prost(message, tag = "1293")]
        TreasureSeelieInfo(super::Abohmmgdige),
        #[prost(message, tag = "1354")]
        BounceConjuringInfo(super::Ojicceilgmk),
        #[prost(message, tag = "1361")]
        HideAndSeekV4Info(super::Nckgllfekhm),
        #[prost(message, tag = "1449")]
        SalvagePreventInfo(super::Fmdnknhkbjg),
        #[prost(message, tag = "1475")]
        AnimalViewInfo(super::Jcdklogibbp),
        #[prost(message, tag = "1526")]
        DuelHeartInfo(super::Eonjgnlckla),
        #[prost(message, tag = "1527")]
        WindFieldInfo(super::Mgjcpolajad),
        #[prost(message, tag = "1538")]
        QuickTimeCombatInfo(super::Gmkmjijolgg),
        #[prost(message, tag = "1574")]
        IrodoriMasterInfo(super::Npcmaaojada),
        #[prost(message, tag = "1611")]
        EffigyChallengeInfo(super::Bbicdkoepob),
        #[prost(message, tag = "1635")]
        CoinCollectInfo(super::Phcnfhkapef),
        #[prost(message, tag = "1741")]
        FlightGearInfo(super::Fofmfcdckip),
        #[prost(message, tag = "1787")]
        TeamChainInfo(super::Pfpcomibmjc),
        #[prost(message, tag = "1824")]
        TargetShootingInfo(super::Fkfkbcfbopd),
        #[prost(message, tag = "1923")]
        BuoyantCombatInfo(super::Fiagicichlj),
        #[prost(message, tag = "1947")]
        SorushTrialPhotoMatchInfo(super::Ekedbcobigb),
        #[prost(message, tag = "2037")]
        InspirationSpurtInfo(super::Edfdomnmmnn),
        #[prost(message, tag = "2047")]
        SorushTrialHitmanInfo(super::Jlpmgednlij),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1576)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jnmbpmbcbke {
    #[prost(message, repeated, tag = "7")]
    pub mark_list: ::prost::alloc::vec::Vec<MapMarkPoint>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8697)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Abgmhaicmol {
    #[prost(uint32, tag = "2")]
    pub pkakcbkjnlm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nghmhjbalkh {
    #[prost(bool, tag = "1")]
    pub glkngddnocn: bool,
    #[prost(bool, tag = "4")]
    pub is_finish: bool,
    #[prost(uint32, tag = "5")]
    pub mkcgmmganlk: u32,
    #[prost(uint32, tag = "6")]
    pub level_id: u32,
    #[prost(uint32, repeated, tag = "7")]
    pub njmbolljioj: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "11")]
    pub bcplkamgppd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ModifierDurability {
    #[prost(float, tag = "1")]
    pub reduce_ratio: f32,
    #[prost(float, tag = "2")]
    pub remaining_durability: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hbpjookkejm {
    #[prost(map = "uint32, uint32", tag = "8")]
    pub penkdnooohf: ::std::collections::HashMap<u32, u32>,
    #[prost(uint32, repeated, tag = "11")]
    pub ojhcppehhkg: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "13")]
    pub dpjgkagiaoh: u32,
    #[prost(map = "uint32, message", tag = "14")]
    pub oapkmmmajlg: ::std::collections::HashMap<u32, Nnggbcfbfaj>,
    #[prost(uint32, repeated, tag = "15")]
    pub emedjdnngji: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Abkhljombbc {
    #[prost(uint32, tag = "1")]
    pub kfaadeeklbj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5680)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nohjdckokll {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Onfppnppneg {
    #[prost(message, repeated, tag = "7")]
    pub pndpnmbdokf: ::prost::alloc::vec::Vec<Conlnjpjidn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Llochdpglhh {
    #[prost(message, optional, tag = "1")]
    pub lepochaidci: ::core::option::Option<Mblgamkolnh>,
    #[prost(message, optional, tag = "11")]
    pub ejljpgfdgdh: ::core::option::Option<Kepedpmnkmh>,
    #[prost(message, optional, tag = "12")]
    pub laghfecapim: ::core::option::Option<Pdchbpphcio>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29221)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mgbnbbjombl {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25623)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kkdffgafoom {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8485)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lhhnnhicgnf {
    #[prost(uint32, tag = "1")]
    pub city_id: u32,
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(uint32, tag = "15")]
    pub nkgekomllng: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9970)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bhjboedkfaa {
    #[prost(enumeration = "Kpfoblalblc", tag = "4")]
    pub daakpcoabep: i32,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(oneof = "bhjboedkfaa::Dapnlkepgjn", tags = "10")]
    pub dapnlkepgjn: ::core::option::Option<bhjboedkfaa::Dapnlkepgjn>,
}
/// Nested message and enum types in `BHJBOEDKFAA`.
pub mod bhjboedkfaa {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Dapnlkepgjn {
        #[prost(message, tag = "10")]
        MusicInfo(super::Gekcbfmhpam),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bkheifhdkfo {
    #[prost(uint32, tag = "8")]
    pub jimelgdjmlf: u32,
    #[prost(uint32, tag = "9")]
    pub level_id: u32,
    #[prost(message, repeated, tag = "14")]
    pub kabodnmegek: ::prost::alloc::vec::Vec<Lhfnlmoinel>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26007)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Holgpbhnhdp {
    #[prost(enumeration = "Fbkkieljbgm", tag = "3")]
    pub imiogmdokcb: i32,
    #[prost(string, tag = "12")]
    pub omknbnmebik: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gmbaailcdec {
    #[prost(uint32, tag = "11")]
    pub start_time: u32,
    #[prost(uint32, tag = "14")]
    pub end_time: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9992)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ldaffbeglci {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1783)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cfamjdhabpg {
    #[prost(uint32, tag = "8")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Oieplejogjc {
    #[prost(bool, tag = "6")]
    pub omeniamedce: bool,
    #[prost(message, optional, tag = "8")]
    pub nganceicghc: ::core::option::Option<Minghcpobng>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(334)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lbaghpmjdgk {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "5")]
    pub oifgogccpkj: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "12")]
    pub mfciacojejf: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hadnndfnild {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23931)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dlmfipfadam {
    #[prost(message, optional, tag = "4")]
    pub bbgighkhkdm: ::core::option::Option<CityInfo>,
    #[prost(uint32, tag = "10")]
    pub area_id: u32,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
    #[prost(uint32, tag = "12")]
    pub scene_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20557)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mhmjmbhkkal {
    #[prost(message, optional, tag = "12")]
    pub motion_info: ::core::option::Option<MotionInfo>,
    #[prost(uint32, tag = "15")]
    pub scene_time: u32,
    #[prost(uint32, tag = "9")]
    pub entity_id: u32,
    #[prost(uint32, tag = "8")]
    pub reliable_seq: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20981)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mnopigfhpok {
    #[prost(uint32, tag = "7")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5458)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gmpdpnpddje {
    #[prost(uint32, tag = "1")]
    pub score: u32,
    #[prost(uint32, tag = "3")]
    pub level_id: u32,
    #[prost(uint32, tag = "4")]
    pub hjjfokhfnko: u32,
    #[prost(uint32, tag = "7")]
    pub ffhpdcibkod: u32,
    #[prost(uint32, tag = "8")]
    pub igcjkhgdhgl: u32,
    #[prost(bool, tag = "11")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "13")]
    pub dmkkmolpglk: u32,
    #[prost(bool, tag = "14")]
    pub hcjfdjhilam: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fembhmjoegm {
    #[prost(uint32, tag = "5")]
    pub ghdcfehnmno: u32,
    #[prost(uint32, tag = "6")]
    pub kicinekppjo: u32,
    #[prost(message, repeated, tag = "9")]
    pub kabodnmegek: ::prost::alloc::vec::Vec<Kogandhhocg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6988)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nillhgepeeo {
    #[prost(uint32, tag = "1")]
    pub group_id: u32,
    #[prost(uint32, tag = "3")]
    pub chpheaedcjl: u32,
    #[prost(uint32, tag = "7")]
    pub jimelgdjmlf: u32,
    #[prost(message, repeated, tag = "8")]
    pub jahppelnedf: ::prost::alloc::vec::Vec<Ofelnadbnkc>,
    #[prost(map = "uint32, uint32", tag = "10")]
    pub ahkllfkidcn: ::std::collections::HashMap<u32, u32>,
    #[prost(uint64, tag = "15")]
    pub nnpgpkkblih: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Kekpbpfecog {
    #[prost(bool, tag = "4")]
    pub daifjefecdd: bool,
    #[prost(uint32, tag = "11")]
    pub iciffmdnmdb: u32,
    #[prost(uint32, repeated, tag = "12")]
    pub jbpmefjklcn: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25878)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nmnafjacnpk {
    #[prost(uint32, tag = "8")]
    pub kjdmoofknek: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20669)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hbebihijofp {
    #[prost(uint32, tag = "11")]
    pub pcchfphgcjb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24990)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dpmfeebcldp {
    #[prost(uint32, tag = "6")]
    pub bljgcongpkk: u32,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21898)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fblcdfhlncn {
    #[prost(message, optional, tag = "9")]
    pub kalfabhanic: ::core::option::Option<Igkafpdnpba>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26948)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hbgiegleogo {
    #[prost(message, optional, tag = "3")]
    pub fgaeincckdk: ::core::option::Option<Ggjnmdcoehi>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26480)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fhmgalgbbpi {
    #[prost(uint32, tag = "2")]
    pub costume_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20184)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eldjedmbnbg {
    #[prost(map = "uint32, uint32", tag = "2")]
    pub dodfajfpakb: ::std::collections::HashMap<u32, u32>,
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(message, optional, tag = "8")]
    pub hpdgogmdljf: ::core::option::Option<Icieahbemcj>,
    #[prost(message, optional, tag = "9")]
    pub ghihaidbacf: ::core::option::Option<Kbdgjpclchj>,
    #[prost(uint32, tag = "10")]
    pub nflakfjlcme: u32,
    #[prost(enumeration = "Npaglleibjm", tag = "15")]
    pub enoekklhbnh: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7670)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ogieeagfnlk {
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9830)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fkflbckfpnp {
    #[prost(uint32, repeated, tag = "12")]
    pub jhlbppfggpg: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28015)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Flbbiomegma {
    #[prost(bool, tag = "8")]
    pub lgfkdhdidih: bool,
    #[prost(bool, tag = "12")]
    pub hejleaaeooa: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5677)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kfjjbbljebd {
    #[prost(uint32, tag = "1")]
    pub ghkijlbfjad: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25920)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ipdcikdpjoj {
    #[prost(uint32, tag = "12")]
    pub fagpphacnbj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25943)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Phcoiocffff {
    #[prost(uint32, tag = "8")]
    pub dnbefljlamb: u32,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jbnlghjjkmo {
    #[prost(uint32, tag = "5")]
    pub jabgacillec: u32,
    #[prost(bool, tag = "8")]
    pub ejlgmdffmoo: bool,
    #[prost(uint32, tag = "11")]
    pub end_time: u32,
    #[prost(uint32, tag = "13")]
    pub dnbefljlamb: u32,
    #[prost(uint32, tag = "15")]
    pub finahglfhag: u32,
    #[prost(oneof = "jbnlghjjkmo::Detail", tags = "7")]
    pub detail: ::core::option::Option<jbnlghjjkmo::Detail>,
}
/// Nested message and enum types in `JBNLGHJJKMO`.
pub mod jbnlghjjkmo {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Detail {
        #[prost(message, tag = "7")]
        BonusInfo(super::Nmcegcnobki),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7252)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hdabopphfpg {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27197)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ibgjncnbpco {
    #[prost(uint32, tag = "5")]
    pub ffhpdcibkod: u32,
    #[prost(uint32, tag = "13")]
    pub jcpmenncbda: u32,
    #[prost(bool, tag = "14")]
    pub hcjfdjhilam: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8776)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ckehnpjminh {
    #[prost(uint32, tag = "1")]
    pub level_id: u32,
    #[prost(bool, tag = "3")]
    pub is_finish: bool,
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(bool, tag = "7")]
    pub omeniamedce: bool,
    #[prost(uint32, tag = "8")]
    pub gnpfegingko: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Idlaejgilnl {
    #[prost(message, repeated, tag = "4")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Dadnlgakamg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3643)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ilbfckagpbo {
    #[prost(message, optional, tag = "11")]
    pub jiibcmjnbpj: ::core::option::Option<Nfklnncfjlj>,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29969)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dlpmbgodkag {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "14")]
    pub jdennklkbgo: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6034)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lojgnepmnbf {
    #[prost(uint32, tag = "1")]
    pub monster_config_id: u32,
    #[prost(uint32, tag = "11")]
    pub nkgekomllng: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27422)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pifgifibdnk {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint32, tag = "13")]
    pub pjabefajbgb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22839)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hbckclkhjkb {
    #[prost(uint32, tag = "2")]
    pub city_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27689)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lcnkgmfbpfj {
    #[prost(uint32, tag = "4")]
    pub moiflkmcicg: u32,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3436)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gbellmndkmf {
    #[prost(message, optional, tag = "13")]
    pub cknnpjpfnoj: ::core::option::Option<Jbnlghjjkmo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29383)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kbcapjpklfe {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
    #[prost(message, optional, tag = "13")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29252)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aifhblennac {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3315)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oncicmfhckn {
    #[prost(int32, tag = "1")]
    pub retcode: i32,
    #[prost(uint64, tag = "2")]
    pub guid: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23049)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cdlejjednip {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
    #[prost(uint32, tag = "11")]
    pub oeocpoekcmj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ignbahodbee {
    #[prost(int32, tag = "9")]
    pub lokbdjbaipj: i32,
    #[prost(message, optional, tag = "10")]
    pub hpoeckekafa: ::core::option::Option<Vector>,
    #[prost(int32, tag = "13")]
    pub level: i32,
    #[prost(int32, tag = "15")]
    pub mdcjioheeem: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23800)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Miiickilloi {
    #[prost(bool, tag = "9")]
    pub pnkllaojdmk: bool,
    #[prost(message, optional, tag = "10")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5978)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Obellghiief {
    #[prost(string, tag = "8")]
    pub kpiogbmlmem: ::prost::alloc::string::String,
    #[prost(uint32, tag = "10")]
    pub cbpdgcponhm: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1020)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pffdcddldgo {
    #[prost(bool, tag = "13")]
    pub hcjfdjhilam: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24451)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ipmhapbfbdm {
    #[prost(uint32, tag = "9")]
    pub aekageebaaa: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23690)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Miffhbkhieo {
    #[prost(uint32, tag = "3")]
    pub ghlbjahjehf: u32,
    #[prost(message, optional, tag = "7")]
    pub dbdnmhcjfoc: ::core::option::Option<FoundationInfo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(585)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fagncncpfdk {
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24379)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lfgpbimmdjd {
    #[prost(uint32, tag = "10")]
    pub draft_id: u32,
    #[prost(uint32, tag = "11")]
    pub mamgkiogfpe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1472)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pcoccehffdc {
    #[prost(message, repeated, tag = "7")]
    pub item_list: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "14")]
    pub ffiojcpbnma: ::prost::alloc::vec::Vec<Agadfdcmglk>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29825)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hldcnbmbjoj {
    #[prost(uint32, tag = "15")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gibcmdkpgae {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1710)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lkbbdkhmbeg {
    #[prost(string, tag = "4")]
    pub mfmojfdcego: ::prost::alloc::string::String,
    #[prost(string, tag = "15")]
    pub lnnjilnldal: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lcpdopfdndg {
    #[prost(uint32, tag = "1")]
    pub scene_id: u32,
    #[prost(uint32, tag = "2")]
    pub jennmghpfee: u32,
    #[prost(message, optional, tag = "3")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "6")]
    pub end_time: u32,
    #[prost(message, optional, tag = "8")]
    pub pos: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21787)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Khhjmbjlbhf {
    #[prost(bool, tag = "2")]
    pub hcjfdjhilam: bool,
    #[prost(uint32, tag = "14")]
    pub level_id: u32,
    #[prost(uint32, tag = "5")]
    pub score: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9600)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nkhdldlpmok {
    #[prost(message, repeated, tag = "1")]
    pub oplnnbdhhia: ::prost::alloc::vec::Vec<Kjdpjhlalai>,
    #[prost(int32, tag = "12")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23844)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kafbniackla {
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ijlhhneflkk {
    #[prost(uint32, tag = "10")]
    pub oegjaildlbk: u32,
    #[prost(uint32, tag = "11")]
    pub omkmhhjlcib: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21384)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gappjpimbcn {
    #[prost(uint32, tag = "2")]
    pub ogfeicdecao: u32,
    #[prost(uint32, tag = "12")]
    pub dnbefljlamb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2375)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jephcfnkfhl {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24219)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eepeeadhegm {
    #[prost(uint32, tag = "8")]
    pub uid: u32,
    #[prost(uint32, repeated, tag = "14")]
    pub kkpkggpfpim: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29307)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Djocpbbnobg {
    #[prost(uint32, tag = "6")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5905)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ckoilklbjdc {
    #[prost(uint32, tag = "3")]
    pub level_id: u32,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27081)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nmdaknknpfn {
    #[prost(uint32, tag = "7")]
    pub target_uid: u32,
    #[prost(int32, tag = "13")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hkplhdfkfdc {
    #[prost(uint32, tag = "2")]
    pub score: u32,
    #[prost(uint32, tag = "8")]
    pub olakbcbiodd: u32,
    #[prost(uint32, tag = "9")]
    pub ggaancbkcbf: u32,
    #[prost(uint32, tag = "11")]
    pub elkbgajhbld: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4773)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kmhfdfelefe {
    #[prost(uint32, tag = "2")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(855)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Efdccbdjgnp {
    #[prost(uint32, tag = "13")]
    pub mklebmojiac: u32,
    #[prost(uint32, tag = "3")]
    pub fclhhlbcnin: u32,
    #[prost(uint32, tag = "4")]
    pub lbmcnlfdhkl: u32,
    #[prost(uint32, tag = "14")]
    pub baoncbkpiic: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Enckbcppnhg {
    #[prost(bool, tag = "3")]
    pub is_finish: bool,
    #[prost(message, repeated, tag = "4")]
    pub nngfnbcaapi: ::prost::alloc::vec::Vec<Djfnbcgcgcp>,
    #[prost(uint32, tag = "9")]
    pub level_id: u32,
    #[prost(bool, tag = "11")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "15")]
    pub nmaapldbbni: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3422)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mmpmmghipbn {
    #[prost(uint32, tag = "15")]
    pub epfcidiklkg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27782)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lbcpmgalonb {
    #[prost(int32, tag = "5")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jlpmgednlij {
    #[prost(uint64, tag = "12")]
    pub fmfepjpcalk: u64,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29296)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ikchjbbgoka {
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9250)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dnjagijalmf {
    #[prost(uint32, tag = "3")]
    pub lchbeahgheo: u32,
    #[prost(uint32, tag = "6")]
    pub hggehlmhkmp: u32,
    #[prost(uint32, repeated, tag = "10")]
    pub jggobknpmfj: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9765)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pbokgpiopop {
    #[prost(message, optional, tag = "8")]
    pub bdaledoahfa: ::core::option::Option<Llgcdcdhdpd>,
    #[prost(uint32, tag = "9")]
    pub bhgdnciojdj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4563)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nmebcaalgjo {
    #[prost(uint32, tag = "4")]
    pub dnbefljlamb: u32,
    #[prost(uint32, tag = "8")]
    pub gpknhhnjcfi: u32,
    #[prost(uint32, tag = "9")]
    pub pipckjelpij: u32,
    #[prost(message, repeated, tag = "11")]
    pub item_list: ::prost::alloc::vec::Vec<Jickppdlohc>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27473)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hindmdaogpa {
    #[prost(uint32, tag = "15")]
    pub group_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22510)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ngfapmeiopo {
    #[prost(message, repeated, tag = "10")]
    pub iijoenfbbaj: ::prost::alloc::vec::Vec<Bkbnobjbonj>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25485)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ikgedjkbihp {
    #[prost(uint32, tag = "5")]
    pub ffhpdcibkod: u32,
    #[prost(message, optional, tag = "6")]
    pub progress: ::core::option::Option<Kiappnbmobo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8329)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cbncfkjifna {
    #[prost(message, repeated, tag = "1")]
    pub gfckaoeolbl: ::prost::alloc::vec::Vec<Nlcdhfnmhld>,
    #[prost(int32, tag = "3")]
    pub retcode: i32,
    #[prost(int32, repeated, tag = "5")]
    pub agkpekaanca: ::prost::alloc::vec::Vec<i32>,
    #[prost(message, repeated, tag = "10")]
    pub jbphchjpdem: ::prost::alloc::vec::Vec<Nlcdhfnmhld>,
    #[prost(message, repeated, tag = "13")]
    pub empejfognpa: ::prost::alloc::vec::Vec<Nlcdhfnmhld>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Keehocbahkg {
    #[prost(message, repeated, tag = "4")]
    pub iflibbifjcc: ::prost::alloc::vec::Vec<Pofjalommmf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5751)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ebhcbfmpkla {
    #[prost(uint32, tag = "2")]
    pub level_id: u32,
    #[prost(int32, tag = "7")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1144)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ojejdbgidol {
    #[prost(uint32, tag = "2")]
    pub cjdimmaimho: u32,
    #[prost(uint32, tag = "5")]
    pub pieapgepmlf: u32,
    #[prost(uint32, tag = "7")]
    pub noldhjnlgnn: u32,
    #[prost(uint32, tag = "13")]
    pub ffhpdcibkod: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2055)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pbniihbhplo {
    #[prost(uint64, tag = "2")]
    pub mcppeknbhfk: u64,
    #[prost(bool, tag = "14")]
    pub is_add: bool,
    #[prost(uint32, tag = "5")]
    pub room_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3568)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Emfnfghflfm {
    #[prost(uint32, tag = "1")]
    pub mp_play_id: u32,
    #[prost(uint32, tag = "3")]
    pub lenjloinpff: u32,
    #[prost(message, optional, tag = "6")]
    pub ocpppldkfed: ::core::option::Option<Bgapieakhec>,
    #[prost(uint32, tag = "9")]
    pub najdgkjkpdp: u32,
    #[prost(message, optional, tag = "10")]
    pub fcacnbkbdnp: ::core::option::Option<Lkpclfanofb>,
    #[prost(uint32, tag = "11")]
    pub oajoobghagm: u32,
    #[prost(enumeration = "Ckleegmpdgn", tag = "14")]
    pub agmhmdhefkd: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24647)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lgfofjapeea {
    #[prost(uint32, tag = "7")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ebhcmmihdjl {
    #[prost(message, repeated, tag = "13")]
    pub nbieahkjhop: ::prost::alloc::vec::Vec<Llofbjjhiia>,
    #[prost(bool, tag = "15")]
    pub glkngddnocn: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Llofbjjhiia {
    #[prost(uint32, tag = "1")]
    pub bdbgopiikfo: u32,
    #[prost(uint32, tag = "4")]
    pub pjabefajbgb: u32,
    #[prost(bool, tag = "7")]
    pub lnfkcefiabm: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23595)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Aegdgfjdjhh {
    #[prost(uint32, tag = "9")]
    pub eaipgemknpo: u32,
    #[prost(bool, tag = "12")]
    pub mjadamhjpcm: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27121)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aekkicelmll {
    #[prost(uint64, repeated, tag = "4")]
    pub cigegfbilja: ::prost::alloc::vec::Vec<u64>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26589)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Begbghppoic {
    #[prost(uint32, tag = "8")]
    pub jnfdnflbejo: u32,
    #[prost(bool, tag = "11")]
    pub fpdpadmhfdg: bool,
    #[prost(bool, tag = "13")]
    pub flkeageghne: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hkpgngddocl {
    #[prost(oneof = "hkpgngddocl::Dbaomoingdj", tags = "3")]
    pub dbaomoingdj: ::core::option::Option<hkpgngddocl::Dbaomoingdj>,
}
/// Nested message and enum types in `HKPGNGDDOCL`.
pub mod hkpgngddocl {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Dbaomoingdj {
        #[prost(message, tag = "3")]
        Discover(super::Kekpbpfecog),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6777)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bongcfefggm {
    #[prost(int32, tag = "14")]
    pub clkodfdpdcb: i32,
    #[prost(uint32, tag = "12")]
    pub ddmbgnhphpc: u32,
    #[prost(uint32, tag = "6")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2277)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ckndjjmemba {
    #[prost(uint32, tag = "6")]
    pub index: u32,
    #[prost(uint32, tag = "4")]
    pub gdcoffhmcfj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(237)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pngipnejpcd {
    #[prost(message, repeated, tag = "1")]
    pub eopinfbdgmg: ::prost::alloc::vec::Vec<Bjjpihmlnkl>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ocaabicbpni {
    #[prost(uint32, tag = "2")]
    pub avatar_id: u32,
    #[prost(bool, tag = "7")]
    pub hdnildcefmg: bool,
    #[prost(uint32, tag = "14")]
    pub costume_id: u32,
    #[prost(uint32, tag = "15")]
    pub uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29870)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nipgmnoloof {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22237)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lbkhhhlijme {
    #[prost(uint32, tag = "6")]
    pub oajoobghagm: u32,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub point_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20320)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nggkgjcpjea {
    #[prost(message, repeated, tag = "2")]
    pub fciibbajibk: ::prost::alloc::vec::Vec<Fnloebiajie>,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Likjanhfgeh {
    #[prost(message, repeated, tag = "6")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Bmakgnmonka>,
    #[prost(uint32, tag = "14")]
    pub hggehlmhkmp: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26988)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ppnfhlmjoob {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25756)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fimgeafcbbh {
    #[prost(message, repeated, tag = "8")]
    pub poglcoeecbf: ::prost::alloc::vec::Vec<Hmfkkbjdeig>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26497)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dgbggmnhhkn {
    #[prost(uint64, tag = "3")]
    pub ihgjlfcgfin: u64,
    #[prost(bool, tag = "6")]
    pub bpnkheifahp: bool,
    #[prost(enumeration = "Kpfoblalblc", tag = "8")]
    pub daakpcoabep: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21459)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cebjofgfong {
    #[prost(message, optional, tag = "10")]
    pub bcknoeppdbm: ::core::option::Option<Lkdgphdkhll>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21290)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Omjchmhhfnj {
    #[prost(uint32, tag = "5")]
    pub pcepaceobhm: u32,
    #[prost(uint32, tag = "13")]
    pub gefnmjhabgj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6212)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Podmeegbdjb {
    #[prost(uint32, tag = "15")]
    pub level_id: u32,
    #[prost(uint32, tag = "11")]
    pub pallgbdlkic: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4306)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pchhidbecfe {
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25792)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nebgdmcclap {
    #[prost(enumeration = "Bblamelipgm", tag = "3")]
    pub imiogmdokcb: i32,
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(uint32, repeated, tag = "10")]
    pub mdifampdnhd: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22690)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gjfoocjghjo {
    #[prost(uint32, tag = "1")]
    pub clhglaehcia: u32,
    #[prost(uint32, tag = "11")]
    pub kcjmimeolgn: u32,
    #[prost(uint32, tag = "13")]
    pub dccchkbighp: u32,
    #[prost(uint32, tag = "14")]
    pub point_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pnfgmcacfni {
    #[prost(uint32, tag = "3")]
    pub point_id: u32,
    #[prost(message, repeated, tag = "5")]
    pub ibaoldbfomp: ::prost::alloc::vec::Vec<Pinogoecnfa>,
    #[prost(uint32, tag = "10")]
    pub algddkoleom: u32,
    #[prost(uint32, tag = "14")]
    pub scene_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28953)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ldaanlkfook {
    #[prost(uint32, tag = "15")]
    pub iadkemlaeae: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23025)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Knldmannndb {
    #[prost(uint64, tag = "8")]
    pub avatar_guid: u64,
    #[prost(uint32, tag = "15")]
    pub dplieaghmco: u32,
    #[prost(uint32, tag = "1")]
    pub goafakcddfj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jnajjandbmo {
    #[prost(uint32, tag = "1")]
    pub jmafbiekcdm: u32,
    #[prost(uint32, repeated, tag = "4")]
    pub bgloljmdaeo: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "5")]
    pub gndclfhkmpj: u32,
    #[prost(uint32, repeated, tag = "6")]
    pub nigkcicpboa: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "7")]
    pub progress: u32,
    #[prost(uint32, tag = "11")]
    pub dplhmanabai: u32,
    #[prost(uint32, tag = "15")]
    pub jdeobbnjjhk: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24003)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ehpbknifoeg {
    #[prost(uint32, tag = "1")]
    pub entity_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25002)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gklcephfffp {
    #[prost(bool, tag = "6")]
    pub kooligmdcim: bool,
    #[prost(message, optional, tag = "9")]
    pub fflmnbgaogn: ::core::option::Option<Jnajjandbmo>,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5838)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hjeokffemin {
    #[prost(message, optional, tag = "1")]
    pub jgepcnmgkjn: ::core::option::Option<Epangooiecn>,
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5713)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct AvatarWearFlycloakReq {
    #[prost(uint64, tag = "3")]
    pub avatar_guid: u64,
    #[prost(uint32, tag = "7")]
    pub flycloak_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7270)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oipiifhoboh {
    #[prost(uint32, tag = "4")]
    pub ffhpdcibkod: u32,
    #[prost(uint32, tag = "14")]
    pub score: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9491)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bohjgcfkjhg {
    #[prost(uint64, tag = "1")]
    pub server_time: u64,
    #[prost(uint64, tag = "8")]
    pub oackjcbimgo: u64,
    #[prost(bool, tag = "11")]
    pub is_paused: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(29111)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Imajlaignlm {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20101)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Aonpgpipnce {
    #[prost(string, tag = "7")]
    pub nihanlgjpla: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub lkfgeagbpga: ::prost::alloc::string::String,
    #[prost(enumeration = "Ajlcommpdic", tag = "14")]
    pub oalfnniohcm: i32,
    #[prost(enumeration = "Fbonnigmeip", tag = "15")]
    pub imiogmdokcb: i32,
    #[prost(uint32, tag = "12")]
    pub ebljfmcmdgd: u32,
    #[prost(uint32, tag = "10")]
    pub target_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(21514)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dnolajglhfm {
    #[prost(message, optional, tag = "6")]
    pub pifpioeehkj: ::core::option::Option<AvatarInfo>,
    #[prost(bool, tag = "12")]
    pub acjfjmlfjea: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pjedohkakpg {
    #[prost(string, tag = "1")]
    pub gmcabiaoljh: ::prost::alloc::string::String,
    #[prost(uint32, tag = "3")]
    pub mlmbmlbpmco: u32,
    #[prost(uint32, tag = "6")]
    pub akbciccacok: u32,
    #[prost(uint64, tag = "7")]
    pub exp: u64,
    #[prost(uint32, tag = "9")]
    pub gcgipignpda: u32,
    #[prost(uint32, tag = "10")]
    pub level: u32,
    #[prost(bool, tag = "11")]
    pub jcjiofhanom: bool,
    #[prost(message, optional, tag = "14")]
    pub jmcfomabghd: ::core::option::Option<Cbggfcjfplh>,
    #[prost(uint32, tag = "15")]
    pub odecbcebgef: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(4757)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hokplcmblkc {
    #[prost(uint32, tag = "1")]
    pub noldhjnlgnn: u32,
    #[prost(uint32, tag = "2")]
    pub ffhpdcibkod: u32,
    #[prost(int32, tag = "7")]
    pub cjdimmaimho: i32,
    #[prost(uint32, tag = "8")]
    pub combo: u32,
    #[prost(uint64, tag = "9")]
    pub migncckkjaf: u64,
    #[prost(uint32, tag = "12")]
    pub pieapgepmlf: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kmjjchgblhb {
    #[prost(bool, tag = "4")]
    pub pmjlllfophk: bool,
    #[prost(uint64, tag = "5")]
    pub mjcbiohimkf: u64,
    #[prost(bool, tag = "9")]
    pub pjjdjmgpnle: bool,
    #[prost(uint32, tag = "14")]
    pub mkcgmmganlk: u32,
    #[prost(uint32, tag = "15")]
    pub level_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23920)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Odbbhkmeoni {
    #[prost(message, repeated, tag = "9")]
    pub pmjgjnilmbp: ::prost::alloc::vec::Vec<Hdcfbppbplf>,
    #[prost(uint32, tag = "2")]
    pub eaipgemknpo: u32,
    #[prost(uint32, tag = "3")]
    pub bodiejclgmb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6061)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mnmgcfjgmfo {
    #[prost(bool, tag = "3")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "6")]
    pub diceglmncpd: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2164)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gncedgeeppe {
    #[prost(message, optional, tag = "3")]
    pub ibeakhhnohb: ::core::option::Option<Hcjgifnjppj>,
    #[prost(message, optional, tag = "10")]
    pub ncokibkjkbb: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "12")]
    pub ofgjoiolmph: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27948)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pfeokhjbjmf {
    #[prost(bool, tag = "1")]
    pub pgdgnmgcekm: bool,
    #[prost(uint32, repeated, tag = "8")]
    pub iogjleamhca: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "11")]
    pub eacibincaei: u32,
    #[prost(message, repeated, tag = "15")]
    pub iecbcfcicoj: ::prost::alloc::vec::Vec<Ofcloobnfgl>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6195)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fmkfiffjjlm {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
    #[prost(message, repeated, tag = "12")]
    pub gobgghodjma: ::prost::alloc::vec::Vec<Kglmkabnmmm>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23406)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hgjgfonlbjd {
    #[prost(bool, tag = "4")]
    pub ilnbddpakhp: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(5321)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Oinbndpfndl {
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26691)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fogfjolghdh {
    #[prost(uint32, repeated, tag = "2")]
    pub ejoofdibice: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gphnoomojpd {
    #[prost(uint32, repeated, tag = "1")]
    pub dnodmeklbgh: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "4")]
    pub dajhkhflndj: u32,
    #[prost(message, repeated, tag = "9")]
    pub jembdaoophf: ::prost::alloc::vec::Vec<Ocbnhnopdnd>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gkjmgiklfbj {
    #[prost(float, tag = "11")]
    pub nkoahmhcobe: f32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3947)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Olhccjooiee {
    #[prost(uint64, tag = "2")]
    pub eehlmdngeln: u64,
    #[prost(int32, tag = "3")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mkkmacfgjbg {
    #[prost(uint32, tag = "10")]
    pub jlgjbaleioi: u32,
    #[prost(uint32, tag = "13")]
    pub item_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lhcgihkbblc {
    #[prost(uint32, tag = "1")]
    pub uid: u32,
    #[prost(string, tag = "2")]
    pub omknbnmebik: ::prost::alloc::string::String,
    #[prost(uint32, tag = "3")]
    pub level: u32,
    #[prost(uint32, tag = "4")]
    pub avatar_id: u32,
    #[prost(string, tag = "5")]
    pub dkhhpajbjif: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "6")]
    pub ohjnpjckgeg: ::core::option::Option<Cppnhdpjmec>,
    #[prost(uint32, tag = "7")]
    pub hdbfknjhboo: u32,
    #[prost(uint32, repeated, tag = "8")]
    pub ladhahgompo: ::prost::alloc::vec::Vec<u32>,
    #[prost(enumeration = "Hkamlcimkjl", tag = "9")]
    pub kiihmcahnpm: i32,
    #[prost(uint32, tag = "10")]
    pub param: u32,
    #[prost(bool, tag = "11")]
    pub phlicjnogkk: bool,
    #[prost(bool, tag = "12")]
    pub amikdfcmbmp: bool,
    #[prost(string, tag = "13")]
    pub efajihmnobk: ::prost::alloc::string::String,
    #[prost(uint32, tag = "14")]
    pub mkhendmflmf: u32,
    #[prost(bool, tag = "15")]
    pub fdapemmeolc: bool,
    #[prost(bool, tag = "16")]
    pub fakdleihgml: bool,
    #[prost(string, tag = "17")]
    pub bmfkoonmmee: ::prost::alloc::string::String,
    #[prost(uint32, tag = "18")]
    pub hgokghfbngm: u32,
    #[prost(uint32, tag = "19")]
    pub ibdeojoliea: u32,
    #[prost(uint32, tag = "20")]
    pub ieockdgcmaa: u32,
    #[prost(bool, tag = "21")]
    pub okbjjgemmke: bool,
    #[prost(message, repeated, tag = "22")]
    pub hilllclaile: ::prost::alloc::vec::Vec<Eppegdiefjn>,
    #[prost(uint32, repeated, tag = "23")]
    pub hfdblmejkgj: ::prost::alloc::vec::Vec<u32>,
    #[prost(enumeration = "Glnndhihpdf", tag = "24")]
    pub mbeniijdlna: i32,
    #[prost(message, optional, tag = "25")]
    pub ianebdkambm: ::core::option::Option<Pkjmpcpeggo>,
    #[prost(string, tag = "26")]
    pub ocnikcmddpi: ::prost::alloc::string::String,
    #[prost(uint32, tag = "27")]
    pub hainniimjan: u32,
    #[prost(uint32, tag = "28")]
    pub mbbjboepghd: u32,
    #[prost(string, tag = "29")]
    pub ijlhlcllene: ::prost::alloc::string::String,
    #[prost(string, tag = "30")]
    pub lbkdgoefebc: ::prost::alloc::string::String,
    #[prost(enumeration = "Nfonhfamdne", tag = "31")]
    pub ajcgkkpccgd: i32,
    #[prost(uint32, tag = "32")]
    pub hnlbjephjhl: u32,
    #[prost(bool, tag = "33")]
    pub pkcnafaffgd: bool,
    #[prost(uint32, tag = "34")]
    pub cemdjiipnkb: u32,
    #[prost(uint32, tag = "35")]
    pub effaaokcjbc: u32,
    #[prost(enumeration = "Gflaagcbngm", tag = "36")]
    pub lkoigpffhbi: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ngofpeolopf {
    #[prost(uint32, repeated, tag = "1")]
    pub hjdnhjgeihi: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "2")]
    pub fmhpjlfhlfm: u32,
    #[prost(uint32, tag = "3")]
    pub koadgmhfjbp: u32,
    #[prost(message, optional, tag = "4")]
    pub jaffemmjmkg: ::core::option::Option<Jickppdlohc>,
    #[prost(uint32, tag = "5")]
    pub kjocamidmkb: u32,
    #[prost(uint32, tag = "6")]
    pub codggikbhlh: u32,
    #[prost(uint32, tag = "7")]
    pub cjanlhkaagf: u32,
    #[prost(uint32, tag = "8")]
    pub bilekhiened: u32,
    #[prost(uint32, tag = "9")]
    pub lbdkibbijml: u32,
    #[prost(uint32, tag = "10")]
    pub iadkemlaeae: u32,
    #[prost(uint32, tag = "11")]
    pub icjncaedclm: u32,
    #[prost(uint32, tag = "12")]
    pub hgbbglkplfi: u32,
    #[prost(message, repeated, tag = "13")]
    pub jplkhapgpao: ::prost::alloc::vec::Vec<Jickppdlohc>,
    #[prost(uint32, tag = "14")]
    pub end_time: u32,
    #[prost(uint32, tag = "15")]
    pub jabgacillec: u32,
    #[prost(uint32, tag = "177")]
    pub alecifbcmba: u32,
    #[prost(uint32, tag = "191")]
    pub oalphhpamfh: u32,
    #[prost(uint32, tag = "347")]
    pub aaeeaffahcg: u32,
    #[prost(uint32, tag = "1086")]
    pub panfnkeabgi: u32,
    #[prost(bool, tag = "1326")]
    pub jfnopccnpjf: bool,
    #[prost(uint32, tag = "1794")]
    pub kdhbgpolgdg: u32,
    #[prost(bool, tag = "1843")]
    pub cmnlikfpdlo: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct SceneNpcInfo {
    #[prost(uint32, tag = "1")]
    pub npc_id: u32,
    #[prost(uint32, tag = "2")]
    pub room_id: u32,
    #[prost(uint32, tag = "3")]
    pub parent_quest_id: u32,
    #[prost(uint32, tag = "4")]
    pub block_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jpchppmeffm {
    #[prost(uint32, tag = "8")]
    pub dajhkhflndj: u32,
    #[prost(uint32, tag = "9")]
    pub ooipgfedjmn: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ppbiopoleib {
    #[prost(uint32, tag = "3")]
    pub level_id: u32,
    #[prost(message, repeated, tag = "4")]
    pub jflllbiccih: ::prost::alloc::vec::Vec<Bbicghbhcba>,
    #[prost(bool, tag = "6")]
    pub glkngddnocn: bool,
    #[prost(uint32, tag = "7")]
    pub iejpghnlidb: u32,
    #[prost(uint32, tag = "9")]
    pub djaiidldajm: u32,
    #[prost(message, optional, tag = "13")]
    pub labbimkclje: ::core::option::Option<Bbicghbhcba>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mobcemckpjd {
    #[prost(uint32, tag = "3")]
    pub mfcnijagffk: u32,
    #[prost(enumeration = "Fgalhngkmkc", tag = "4")]
    pub state: i32,
    #[prost(uint32, tag = "8")]
    pub ghlbjahjehf: u32,
    #[prost(message, optional, tag = "9")]
    pub rot: ::core::option::Option<Vector>,
    #[prost(uint32, tag = "11")]
    pub scene_id: u32,
    #[prost(message, optional, tag = "14")]
    pub pos: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Nkckdblfbmp {
    #[prost(enumeration = "Dchonjfdddo", tag = "3")]
    pub state: i32,
    #[prost(message, optional, tag = "10")]
    pub ibeakhhnohb: ::core::option::Option<Hcjgifnjppj>,
    #[prost(uint32, tag = "13")]
    pub city_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1715)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fimagflffpa {}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25553)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ejfhgohceof {
    #[prost(uint32, repeated, tag = "7")]
    pub jahppelnedf: ::prost::alloc::vec::Vec<u32>,
    #[prost(bool, tag = "15")]
    pub mfonfjeahdd: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27841)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jhoohfhhfka {
    #[prost(uint64, repeated, tag = "1")]
    pub avatar_guid_list: ::prost::alloc::vec::Vec<u64>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ngbdcgmninn {
    #[prost(double, repeated, tag = "9")]
    pub agccflajbil: ::prost::alloc::vec::Vec<f64>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1066)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Blebplcngge {
    #[prost(uint32, tag = "7")]
    pub config_id: u32,
    #[prost(uint32, tag = "9")]
    pub group_id: u32,
    #[prost(uint32, tag = "15")]
    pub offering_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6339)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SetUpAvatarTeamRsp {
    #[prost(uint64, tag = "3")]
    pub cur_avatar_guid: u64,
    #[prost(uint64, repeated, tag = "5")]
    pub avatar_team_guid_list: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint32, tag = "6")]
    pub team_id: u32,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6383)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Npgcdcgcifm {
    #[prost(uint32, tag = "9")]
    pub kdjifcpbgen: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6564)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Nlcbpnefpln {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(uint32, repeated, tag = "7")]
    pub onpgicebpfj: ::prost::alloc::vec::Vec<u32>,
    #[prost(int32, tag = "10")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27572)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jcchapbhded {
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28598)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eikbkcpnigg {
    #[prost(uint32, tag = "1")]
    pub entity_id: u32,
    #[prost(int32, tag = "2")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23946)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ffajmhiamje {
    #[prost(int32, tag = "9")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25161)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Beggfkckgif {
    #[prost(uint32, tag = "3")]
    pub costume_id: u32,
    #[prost(uint64, tag = "14")]
    pub avatar_guid: u64,
    #[prost(int32, tag = "15")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Omlbdblbakk {
    #[prost(bool, tag = "5")]
    pub bmfaadbocfn: bool,
    #[prost(uint32, repeated, tag = "8")]
    pub ocafmmjenec: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "12")]
    pub fepdfdjhlhp: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "14")]
    pub ehkdkemonbl: ::prost::alloc::vec::Vec<Mkneamdhffn>,
    #[prost(message, repeated, tag = "15")]
    pub ibofhcjmfni: ::prost::alloc::vec::Vec<Mkneamdhffn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(9697)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dddlcmkcafo {
    #[prost(message, optional, tag = "15")]
    pub fciibbajibk: ::core::option::Option<Fnloebiajie>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(1599)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jcendlaghdm {
    #[prost(uint32, tag = "7")]
    pub level: u32,
    #[prost(uint32, tag = "11")]
    pub exp: u32,
    #[prost(uint32, tag = "13")]
    pub mdmedlnoedp: u32,
    #[prost(uint32, tag = "15")]
    pub fagpphacnbj: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ppjgpbjfedb {
    #[prost(enumeration = "Jkeepgbaafh", tag = "4")]
    pub r#type: i32,
    #[prost(int32, tag = "12")]
    pub mdmmnleemdf: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cccchpgcjkp {
    #[prost(uint32, tag = "5")]
    pub jcpmenncbda: u32,
    #[prost(uint32, tag = "8")]
    pub score: u32,
    #[prost(enumeration = "Lfjlgojmkeh", tag = "12")]
    pub imiogmdokcb: i32,
    #[prost(uint32, tag = "14")]
    pub owner_uid: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pnopjihgjdg {
    #[prost(message, repeated, tag = "5")]
    pub jfjkedfafpm: ::prost::alloc::vec::Vec<Iakpnfngoac>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Efjgfdfllck {
    #[prost(uint32, tag = "3")]
    pub skill_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6747)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dhmceacooho {
    #[prost(message, repeated, tag = "12")]
    pub dpcnckebbhb: ::prost::alloc::vec::Vec<Ombeifnnedf>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(26878)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cohmdaholai {
    #[prost(uint32, repeated, tag = "1")]
    pub param_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "2")]
    pub group_id: u32,
    #[prost(uint32, tag = "4")]
    pub nplojbgbpaf: u32,
    #[prost(uint32, repeated, tag = "7")]
    pub uid_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, tag = "8")]
    pub lcddidljedn: u32,
    #[prost(uint32, tag = "11")]
    pub lchbeahgheo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27766)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mjlghdijnda {
    #[prost(int32, tag = "10")]
    pub retcode: i32,
    #[prost(uint32, tag = "14")]
    pub epfcidiklkg: u32,
    #[prost(uint32, tag = "15")]
    pub poecpaaaloe: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cppnhdpjmec {
    #[prost(uint32, tag = "1")]
    pub gagilagdgnd: u32,
    #[prost(uint32, tag = "2")]
    pub mfkhlpoaccg: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(6949)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ialdceialag {
    #[prost(message, optional, tag = "4")]
    pub jmbhpbemffh: ::core::option::Option<Dnjmjfmebml>,
    #[prost(int32, tag = "14")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ohikeimfpdl {
    #[prost(message, repeated, tag = "1")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Ijmjomapcjn>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Knoppnbpebm {
    #[prost(uint32, tag = "8")]
    pub pcfiaajeoij: u32,
    #[prost(uint32, tag = "15")]
    pub avatar_id: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Fldalopdbcg {
    #[prost(bool, tag = "3")]
    pub nikomnaaipp: bool,
    #[prost(uint32, tag = "5")]
    pub ipdonpggmnl: u32,
    #[prost(uint32, tag = "7")]
    pub coegonfeekd: u32,
    #[prost(bool, tag = "10")]
    pub gflfmiogcgl: bool,
    #[prost(bool, tag = "15")]
    pub hndocfihefk: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7295)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dobjpgpjjef {
    #[prost(int32, tag = "6")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hanpgehfnma {
    #[prost(message, repeated, tag = "12")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Cljnapnhblo>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(24160)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Eepepdlabge {
    #[prost(uint32, tag = "13")]
    pub cnaifgicldh: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pmeondciopo {
    #[prost(uint64, tag = "1")]
    pub nnpgpkkblih: u64,
    #[prost(uint64, tag = "2")]
    pub jelhbknknka: u64,
    #[prost(uint32, tag = "3")]
    pub fckgaeokoid: u32,
    #[prost(uint64, tag = "4")]
    pub pkbjkjejnak: u64,
    #[prost(uint32, tag = "5")]
    pub hkegebjnjjd: u32,
    #[prost(uint32, tag = "6")]
    pub beiddfknape: u32,
    #[prost(enumeration = "Kmhnikbioee", tag = "7")]
    pub iieilnhpcji: i32,
    #[prost(uint32, tag = "8")]
    pub fkladmolana: u32,
    #[prost(message, repeated, tag = "9")]
    pub mdkplbdanef: ::prost::alloc::vec::Vec<Nndlcndekfh>,
    #[prost(message, repeated, tag = "10")]
    pub laeadeafgkm: ::prost::alloc::vec::Vec<Ofelnadbnkc>,
    #[prost(message, repeated, tag = "11")]
    pub mallffajnbm: ::prost::alloc::vec::Vec<Ofelnadbnkc>,
    #[prost(uint32, tag = "12")]
    pub jpdbmdleeec: u32,
    #[prost(uint32, tag = "13")]
    pub gdnjamhmafh: u32,
    #[prost(uint32, tag = "14")]
    pub chpheaedcjl: u32,
    #[prost(message, repeated, tag = "15")]
    pub ophejhkgdgj: ::prost::alloc::vec::Vec<Naklngmflhf>,
    #[prost(uint32, repeated, tag = "273")]
    pub dpnelnafkbd: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, tag = "641")]
    pub ohlnfphiegi: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Edbkkjhjbmg {
    #[prost(uint32, repeated, tag = "4")]
    pub glicmdbpfkh: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(3677)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jhhplpddmhh {
    #[prost(uint32, tag = "2")]
    pub group_id: u32,
    #[prost(uint32, tag = "3")]
    pub dnbefljlamb: u32,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Millgcohbji {
    #[prost(int32, repeated, tag = "4")]
    pub madgndnllei: ::prost::alloc::vec::Vec<i32>,
    #[prost(uint32, tag = "7")]
    pub okdgooakcpa: u32,
    #[prost(bool, tag = "10")]
    pub jfilodihipm: bool,
    #[prost(uint32, tag = "11")]
    pub guid: u32,
    #[prost(message, optional, tag = "15")]
    pub bnheafcgijm: ::core::option::Option<Vector>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20838)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cjgknimepgk {
    #[prost(uint32, tag = "6")]
    pub ghlbjahjehf: u32,
    #[prost(uint32, repeated, tag = "15")]
    pub option_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(25299)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ickfoblbmfp {
    #[prost(message, repeated, tag = "1")]
    pub bjjpecnjije: ::prost::alloc::vec::Vec<Cknodnhicol>,
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(uint32, tag = "9")]
    pub gainccncano: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(22873)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Hpopkinhbaf {}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mhceoaicljf {
    #[prost(message, repeated, tag = "3")]
    pub bagjbbknadl: ::prost::alloc::vec::Vec<Moaoopfppie>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28480)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Jbfhhopalce {
    #[prost(uint32, tag = "6")]
    pub scene_id: u32,
    #[prost(uint32, tag = "3")]
    pub lkkifhknkfe: u32,
    #[prost(uint32, tag = "12")]
    pub ffplkfhbfap: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bfbeoaeghhk {
    #[prost(string, tag = "5")]
    pub ampbndiacmi: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub nkanjijnimc: ::prost::alloc::string::String,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(28936)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Lhmeingekjp {
    #[prost(bool, tag = "5")]
    pub nhnplcpploc: bool,
    #[prost(uint32, tag = "6")]
    pub score: u32,
    #[prost(bool, tag = "7")]
    pub kodnaagljdl: bool,
    #[prost(uint32, tag = "8")]
    pub max_combo: u32,
    #[prost(uint32, tag = "10")]
    pub level_id: u32,
    #[prost(uint32, tag = "13")]
    pub fjapapjhjjd: u32,
    #[prost(uint32, tag = "14")]
    pub onhjaboekhb: u32,
    #[prost(bool, tag = "15")]
    pub omeniamedce: bool,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(8651)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ebpambijdhp {
    #[prost(int32, tag = "8")]
    pub retcode: i32,
    #[prost(enumeration = "Kpfoblalblc", tag = "10")]
    pub daakpcoabep: i32,
    #[prost(oneof = "ebpambijdhp::Dmnpbhgdmch", tags = "2")]
    pub dmnpbhgdmch: ::core::option::Option<ebpambijdhp::Dmnpbhgdmch>,
}
/// Nested message and enum types in `EBPAMBIJDHP`.
pub mod ebpambijdhp {
    #[derive(sakura_proto_derive::CmdID)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Dmnpbhgdmch {
        #[prost(message, tag = "2")]
        MusicBriefInfo(super::Fdockhoiobj),
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Ahppbjiakai {
    #[prost(map = "uint32, message", tag = "12")]
    pub jpjlocplihl: ::std::collections::HashMap<u32, Lgnoebmgbob>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(27911)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Eellmffoane {
    #[prost(int32, tag = "4")]
    pub retcode: i32,
    #[prost(uint32, tag = "6")]
    pub dnbefljlamb: u32,
    #[prost(message, optional, tag = "10")]
    pub oddoanihjcl: ::core::option::Option<Hpmjajcbegh>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(2767)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mflecbppnke {
    #[prost(uint32, tag = "4")]
    pub nljejpgcpci: u32,
    #[prost(int32, tag = "11")]
    pub retcode: i32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(20249)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pgpcljibnog {
    #[prost(message, optional, tag = "11")]
    pub jpddhbfmpcc: ::core::option::Option<Kbdmhdnkjlg>,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(7849)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cdalbjcnnnn {
    #[prost(message, repeated, tag = "15")]
    pub fookdbcngal: ::prost::alloc::vec::Vec<Debenkfigjp>,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Jdapcomimko {
    #[prost(message, repeated, tag = "3")]
    pub bbopfhaodop: ::prost::alloc::vec::Vec<Lameaodojid>,
    #[prost(uint32, tag = "6")]
    pub ckecbimkape: u32,
    #[prost(uint32, tag = "14")]
    pub fiigjjaaakh: u32,
    #[prost(uint32, tag = "15")]
    pub bodiejclgmb: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[cmdid(23100)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Labjbongfbj {
    #[prost(uint32, tag = "6")]
    pub eaipgemknpo: u32,
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Ekmpekpeaaj {
    GcgSkillHpChangeNone = 0,
    GcgSkillHpChangeDamage = 1,
    GcgSkillHpChangeHeal = 2,
}
impl Ekmpekpeaaj {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::GcgSkillHpChangeNone => "EKMPEKPEAAJ_GcgSkillHpChangeNone",
            Self::GcgSkillHpChangeDamage => "EKMPEKPEAAJ_GcgSkillHpChangeDamage",
            Self::GcgSkillHpChangeHeal => "EKMPEKPEAAJ_GcgSkillHpChangeHeal",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "EKMPEKPEAAJ_GcgSkillHpChangeNone" => Some(Self::GcgSkillHpChangeNone),
            "EKMPEKPEAAJ_GcgSkillHpChangeDamage" => Some(Self::GcgSkillHpChangeDamage),
            "EKMPEKPEAAJ_GcgSkillHpChangeHeal" => Some(Self::GcgSkillHpChangeHeal),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Inooiehhkli {
    WidgetCreatorTypeNone = 0,
    WidgetCreatorTypeRetract = 1,
    WidgetCreatorTypeRetractAndCreate = 2,
}
impl Inooiehhkli {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::WidgetCreatorTypeNone => "INOOIEHHKLI_WidgetCreatorTypeNone",
            Self::WidgetCreatorTypeRetract => "INOOIEHHKLI_WidgetCreatorTypeRetract",
            Self::WidgetCreatorTypeRetractAndCreate => {
                "INOOIEHHKLI_WidgetCreatorTypeRetractAndCreate"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "INOOIEHHKLI_WidgetCreatorTypeNone" => Some(Self::WidgetCreatorTypeNone),
            "INOOIEHHKLI_WidgetCreatorTypeRetract" => {
                Some(Self::WidgetCreatorTypeRetract)
            }
            "INOOIEHHKLI_WidgetCreatorTypeRetractAndCreate" => {
                Some(Self::WidgetCreatorTypeRetractAndCreate)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Kfbhhddeagb {
    None = 0,
    DestoryVehcile = 1,
    EnterScene = 2,
    LeaveScene = 3,
    ActiveVehcile = 4,
    EnterVehicle = 5,
    SpeedCheck = 6,
    Gm = 7,
    UseWidgetTp = 8,
    UseWidgetNotTp = 9,
    GalleryVehcileNotTp = 10,
    QuestExec = 11,
}
impl Kfbhhddeagb {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "KFBHHDDEAGB_None",
            Self::DestoryVehcile => "KFBHHDDEAGB_DestoryVehcile",
            Self::EnterScene => "KFBHHDDEAGB_EnterScene",
            Self::LeaveScene => "KFBHHDDEAGB_LeaveScene",
            Self::ActiveVehcile => "KFBHHDDEAGB_ActiveVehcile",
            Self::EnterVehicle => "KFBHHDDEAGB_EnterVehicle",
            Self::SpeedCheck => "KFBHHDDEAGB_SpeedCheck",
            Self::Gm => "KFBHHDDEAGB_Gm",
            Self::UseWidgetTp => "KFBHHDDEAGB_UseWidgetTp",
            Self::UseWidgetNotTp => "KFBHHDDEAGB_UseWidgetNotTp",
            Self::GalleryVehcileNotTp => "KFBHHDDEAGB_GalleryVehcileNotTp",
            Self::QuestExec => "KFBHHDDEAGB_QuestExec",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "KFBHHDDEAGB_None" => Some(Self::None),
            "KFBHHDDEAGB_DestoryVehcile" => Some(Self::DestoryVehcile),
            "KFBHHDDEAGB_EnterScene" => Some(Self::EnterScene),
            "KFBHHDDEAGB_LeaveScene" => Some(Self::LeaveScene),
            "KFBHHDDEAGB_ActiveVehcile" => Some(Self::ActiveVehcile),
            "KFBHHDDEAGB_EnterVehicle" => Some(Self::EnterVehicle),
            "KFBHHDDEAGB_SpeedCheck" => Some(Self::SpeedCheck),
            "KFBHHDDEAGB_Gm" => Some(Self::Gm),
            "KFBHHDDEAGB_UseWidgetTp" => Some(Self::UseWidgetTp),
            "KFBHHDDEAGB_UseWidgetNotTp" => Some(Self::UseWidgetNotTp),
            "KFBHHDDEAGB_GalleryVehcileNotTp" => Some(Self::GalleryVehcileNotTp),
            "KFBHHDDEAGB_QuestExec" => Some(Self::QuestExec),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Blcapebdfdm {
    GcgActionNone = 0,
    GcgActionSpecialPhase = 1,
    GcgActionNextPhase = 2,
    GcgActionDraw = 3,
    GcgActionRedraw = 4,
    GcgActionSelectOnstage = 5,
    GcgActionRoll = 6,
    GcgActionReroll = 7,
    GcgActionAttack = 8,
    GcgActionPlayCard = 9,
    GcgActionPass = 10,
    GcgActionReboot = 11,
    GcgActionGameOver = 12,
    GcgActionTrigger = 13,
    GcgActionPhaseExit = 14,
    GcgActionCustom = 15,
    GcgActionNotifyCost = 16,
    GcgActionAfterOperation = 17,
    GcgActionUseSkill = 18,
    GcgActionNotifySkillPreview = 19,
    GcgActionPreviewAttack = 20,
    GcgActionPreviewAfterAttack = 21,
    GcgActionSendMessage = 22,
    GcgActionWaitingCharacter = 23,
    GcgActionTriggerSkill = 24,
    GcgActionBeforeNextOperation = 25,
    GcgActionRemoveCharacterCard = 26,
    GcgActionOnstageCheck = 27,
    GcgActionRecordBeforeOperationDiceNum = 28,
    GcgActionCreateAutoOperation = 29,
    GcgActionStartControllerTimer = 30,
    GcgActionUseVehicleSkill = 31,
    GcgActionPreviewUseVehicleSkill = 32,
    GcgActionDiscover = 33,
    GcgActionAutoBattleCardPlayCard = 35,
    GcgActionChangeCharacterIndex = 36,
}
impl Blcapebdfdm {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::GcgActionNone => "BLCAPEBDFDM_GcgActionNone",
            Self::GcgActionSpecialPhase => "BLCAPEBDFDM_GcgActionSpecialPhase",
            Self::GcgActionNextPhase => "BLCAPEBDFDM_GcgActionNextPhase",
            Self::GcgActionDraw => "BLCAPEBDFDM_GcgActionDraw",
            Self::GcgActionRedraw => "BLCAPEBDFDM_GcgActionRedraw",
            Self::GcgActionSelectOnstage => "BLCAPEBDFDM_GcgActionSelectOnstage",
            Self::GcgActionRoll => "BLCAPEBDFDM_GcgActionRoll",
            Self::GcgActionReroll => "BLCAPEBDFDM_GcgActionReroll",
            Self::GcgActionAttack => "BLCAPEBDFDM_GcgActionAttack",
            Self::GcgActionPlayCard => "BLCAPEBDFDM_GcgActionPlayCard",
            Self::GcgActionPass => "BLCAPEBDFDM_GcgActionPass",
            Self::GcgActionReboot => "BLCAPEBDFDM_GcgActionReboot",
            Self::GcgActionGameOver => "BLCAPEBDFDM_GcgActionGameOver",
            Self::GcgActionTrigger => "BLCAPEBDFDM_GcgActionTrigger",
            Self::GcgActionPhaseExit => "BLCAPEBDFDM_GcgActionPhaseExit",
            Self::GcgActionCustom => "BLCAPEBDFDM_GcgActionCustom",
            Self::GcgActionNotifyCost => "BLCAPEBDFDM_GcgActionNotifyCost",
            Self::GcgActionAfterOperation => "BLCAPEBDFDM_GcgActionAfterOperation",
            Self::GcgActionUseSkill => "BLCAPEBDFDM_GcgActionUseSkill",
            Self::GcgActionNotifySkillPreview => {
                "BLCAPEBDFDM_GcgActionNotifySkillPreview"
            }
            Self::GcgActionPreviewAttack => "BLCAPEBDFDM_GcgActionPreviewAttack",
            Self::GcgActionPreviewAfterAttack => {
                "BLCAPEBDFDM_GcgActionPreviewAfterAttack"
            }
            Self::GcgActionSendMessage => "BLCAPEBDFDM_GcgActionSendMessage",
            Self::GcgActionWaitingCharacter => "BLCAPEBDFDM_GcgActionWaitingCharacter",
            Self::GcgActionTriggerSkill => "BLCAPEBDFDM_GcgActionTriggerSkill",
            Self::GcgActionBeforeNextOperation => {
                "BLCAPEBDFDM_GcgActionBeforeNextOperation"
            }
            Self::GcgActionRemoveCharacterCard => {
                "BLCAPEBDFDM_GcgActionRemoveCharacterCard"
            }
            Self::GcgActionOnstageCheck => "BLCAPEBDFDM_GcgActionOnstageCheck",
            Self::GcgActionRecordBeforeOperationDiceNum => {
                "BLCAPEBDFDM_GcgActionRecordBeforeOperationDiceNum"
            }
            Self::GcgActionCreateAutoOperation => {
                "BLCAPEBDFDM_GcgActionCreateAutoOperation"
            }
            Self::GcgActionStartControllerTimer => {
                "BLCAPEBDFDM_GcgActionStartControllerTimer"
            }
            Self::GcgActionUseVehicleSkill => "BLCAPEBDFDM_GcgActionUseVehicleSkill",
            Self::GcgActionPreviewUseVehicleSkill => {
                "BLCAPEBDFDM_GcgActionPreviewUseVehicleSkill"
            }
            Self::GcgActionDiscover => "BLCAPEBDFDM_GcgActionDiscover",
            Self::GcgActionAutoBattleCardPlayCard => {
                "BLCAPEBDFDM_GcgActionAutoBattleCardPlayCard"
            }
            Self::GcgActionChangeCharacterIndex => {
                "BLCAPEBDFDM_GcgActionChangeCharacterIndex"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "BLCAPEBDFDM_GcgActionNone" => Some(Self::GcgActionNone),
            "BLCAPEBDFDM_GcgActionSpecialPhase" => Some(Self::GcgActionSpecialPhase),
            "BLCAPEBDFDM_GcgActionNextPhase" => Some(Self::GcgActionNextPhase),
            "BLCAPEBDFDM_GcgActionDraw" => Some(Self::GcgActionDraw),
            "BLCAPEBDFDM_GcgActionRedraw" => Some(Self::GcgActionRedraw),
            "BLCAPEBDFDM_GcgActionSelectOnstage" => Some(Self::GcgActionSelectOnstage),
            "BLCAPEBDFDM_GcgActionRoll" => Some(Self::GcgActionRoll),
            "BLCAPEBDFDM_GcgActionReroll" => Some(Self::GcgActionReroll),
            "BLCAPEBDFDM_GcgActionAttack" => Some(Self::GcgActionAttack),
            "BLCAPEBDFDM_GcgActionPlayCard" => Some(Self::GcgActionPlayCard),
            "BLCAPEBDFDM_GcgActionPass" => Some(Self::GcgActionPass),
            "BLCAPEBDFDM_GcgActionReboot" => Some(Self::GcgActionReboot),
            "BLCAPEBDFDM_GcgActionGameOver" => Some(Self::GcgActionGameOver),
            "BLCAPEBDFDM_GcgActionTrigger" => Some(Self::GcgActionTrigger),
            "BLCAPEBDFDM_GcgActionPhaseExit" => Some(Self::GcgActionPhaseExit),
            "BLCAPEBDFDM_GcgActionCustom" => Some(Self::GcgActionCustom),
            "BLCAPEBDFDM_GcgActionNotifyCost" => Some(Self::GcgActionNotifyCost),
            "BLCAPEBDFDM_GcgActionAfterOperation" => Some(Self::GcgActionAfterOperation),
            "BLCAPEBDFDM_GcgActionUseSkill" => Some(Self::GcgActionUseSkill),
            "BLCAPEBDFDM_GcgActionNotifySkillPreview" => {
                Some(Self::GcgActionNotifySkillPreview)
            }
            "BLCAPEBDFDM_GcgActionPreviewAttack" => Some(Self::GcgActionPreviewAttack),
            "BLCAPEBDFDM_GcgActionPreviewAfterAttack" => {
                Some(Self::GcgActionPreviewAfterAttack)
            }
            "BLCAPEBDFDM_GcgActionSendMessage" => Some(Self::GcgActionSendMessage),
            "BLCAPEBDFDM_GcgActionWaitingCharacter" => {
                Some(Self::GcgActionWaitingCharacter)
            }
            "BLCAPEBDFDM_GcgActionTriggerSkill" => Some(Self::GcgActionTriggerSkill),
            "BLCAPEBDFDM_GcgActionBeforeNextOperation" => {
                Some(Self::GcgActionBeforeNextOperation)
            }
            "BLCAPEBDFDM_GcgActionRemoveCharacterCard" => {
                Some(Self::GcgActionRemoveCharacterCard)
            }
            "BLCAPEBDFDM_GcgActionOnstageCheck" => Some(Self::GcgActionOnstageCheck),
            "BLCAPEBDFDM_GcgActionRecordBeforeOperationDiceNum" => {
                Some(Self::GcgActionRecordBeforeOperationDiceNum)
            }
            "BLCAPEBDFDM_GcgActionCreateAutoOperation" => {
                Some(Self::GcgActionCreateAutoOperation)
            }
            "BLCAPEBDFDM_GcgActionStartControllerTimer" => {
                Some(Self::GcgActionStartControllerTimer)
            }
            "BLCAPEBDFDM_GcgActionUseVehicleSkill" => {
                Some(Self::GcgActionUseVehicleSkill)
            }
            "BLCAPEBDFDM_GcgActionPreviewUseVehicleSkill" => {
                Some(Self::GcgActionPreviewUseVehicleSkill)
            }
            "BLCAPEBDFDM_GcgActionDiscover" => Some(Self::GcgActionDiscover),
            "BLCAPEBDFDM_GcgActionAutoBattleCardPlayCard" => {
                Some(Self::GcgActionAutoBattleCardPlayCard)
            }
            "BLCAPEBDFDM_GcgActionChangeCharacterIndex" => {
                Some(Self::GcgActionChangeCharacterIndex)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Nkkkbohmanl {
    FoundationOpNone = 0,
    FoundationOpBuild = 1,
    FoundationOpDemolition = 2,
    FoundationOpRebuild = 3,
    FoundationOpRotate = 4,
    FoundationOpLock = 5,
    FoundationOpUnlock = 6,
}
impl Nkkkbohmanl {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::FoundationOpNone => "NKKKBOHMANL_FoundationOpNone",
            Self::FoundationOpBuild => "NKKKBOHMANL_FoundationOpBuild",
            Self::FoundationOpDemolition => "NKKKBOHMANL_FoundationOpDemolition",
            Self::FoundationOpRebuild => "NKKKBOHMANL_FoundationOpRebuild",
            Self::FoundationOpRotate => "NKKKBOHMANL_FoundationOpRotate",
            Self::FoundationOpLock => "NKKKBOHMANL_FoundationOpLock",
            Self::FoundationOpUnlock => "NKKKBOHMANL_FoundationOpUnlock",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "NKKKBOHMANL_FoundationOpNone" => Some(Self::FoundationOpNone),
            "NKKKBOHMANL_FoundationOpBuild" => Some(Self::FoundationOpBuild),
            "NKKKBOHMANL_FoundationOpDemolition" => Some(Self::FoundationOpDemolition),
            "NKKKBOHMANL_FoundationOpRebuild" => Some(Self::FoundationOpRebuild),
            "NKKKBOHMANL_FoundationOpRotate" => Some(Self::FoundationOpRotate),
            "NKKKBOHMANL_FoundationOpLock" => Some(Self::FoundationOpLock),
            "NKKKBOHMANL_FoundationOpUnlock" => Some(Self::FoundationOpUnlock),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Bdcdecgdjgf {
    UgcRecordUsageNone = 0,
    UgcRecordUsageImport = 1,
    UgcRecordUsagePlay = 2,
    UgcRecordUsageTrial = 3,
    UgcRecordUsageCompare = 4,
}
impl Bdcdecgdjgf {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::UgcRecordUsageNone => "BDCDECGDJGF_UgcRecordUsageNone",
            Self::UgcRecordUsageImport => "BDCDECGDJGF_UgcRecordUsageImport",
            Self::UgcRecordUsagePlay => "BDCDECGDJGF_UgcRecordUsagePlay",
            Self::UgcRecordUsageTrial => "BDCDECGDJGF_UgcRecordUsageTrial",
            Self::UgcRecordUsageCompare => "BDCDECGDJGF_UgcRecordUsageCompare",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "BDCDECGDJGF_UgcRecordUsageNone" => Some(Self::UgcRecordUsageNone),
            "BDCDECGDJGF_UgcRecordUsageImport" => Some(Self::UgcRecordUsageImport),
            "BDCDECGDJGF_UgcRecordUsagePlay" => Some(Self::UgcRecordUsagePlay),
            "BDCDECGDJGF_UgcRecordUsageTrial" => Some(Self::UgcRecordUsageTrial),
            "BDCDECGDJGF_UgcRecordUsageCompare" => Some(Self::UgcRecordUsageCompare),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum ProtEntityType {
    ProtEntityNone = 0,
    ProtEntityAvatar = 1,
    ProtEntityMonster = 2,
    ProtEntityNpc = 3,
    ProtEntityGadget = 4,
    ProtEntityRegion = 5,
    ProtEntityWeapon = 6,
    ProtEntityWeather = 7,
    ProtEntityScene = 8,
    ProtEntityTeam = 9,
    ProtEntityMpLevel = 11,
    ProtEntityPlayTeamEntity = 12,
    ProtEntityEyePoint = 13,
    ProtEntityMax = 14,
}
impl ProtEntityType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::ProtEntityNone => "ProtEntityType_ProtEntityNone",
            Self::ProtEntityAvatar => "ProtEntityType_ProtEntityAvatar",
            Self::ProtEntityMonster => "ProtEntityType_ProtEntityMonster",
            Self::ProtEntityNpc => "ProtEntityType_ProtEntityNpc",
            Self::ProtEntityGadget => "ProtEntityType_ProtEntityGadget",
            Self::ProtEntityRegion => "ProtEntityType_ProtEntityRegion",
            Self::ProtEntityWeapon => "ProtEntityType_ProtEntityWeapon",
            Self::ProtEntityWeather => "ProtEntityType_ProtEntityWeather",
            Self::ProtEntityScene => "ProtEntityType_ProtEntityScene",
            Self::ProtEntityTeam => "ProtEntityType_ProtEntityTeam",
            Self::ProtEntityMpLevel => "ProtEntityType_ProtEntityMpLevel",
            Self::ProtEntityPlayTeamEntity => "ProtEntityType_ProtEntityPlayTeamEntity",
            Self::ProtEntityEyePoint => "ProtEntityType_ProtEntityEyePoint",
            Self::ProtEntityMax => "ProtEntityType_ProtEntityMax",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "ProtEntityType_ProtEntityNone" => Some(Self::ProtEntityNone),
            "ProtEntityType_ProtEntityAvatar" => Some(Self::ProtEntityAvatar),
            "ProtEntityType_ProtEntityMonster" => Some(Self::ProtEntityMonster),
            "ProtEntityType_ProtEntityNpc" => Some(Self::ProtEntityNpc),
            "ProtEntityType_ProtEntityGadget" => Some(Self::ProtEntityGadget),
            "ProtEntityType_ProtEntityRegion" => Some(Self::ProtEntityRegion),
            "ProtEntityType_ProtEntityWeapon" => Some(Self::ProtEntityWeapon),
            "ProtEntityType_ProtEntityWeather" => Some(Self::ProtEntityWeather),
            "ProtEntityType_ProtEntityScene" => Some(Self::ProtEntityScene),
            "ProtEntityType_ProtEntityTeam" => Some(Self::ProtEntityTeam),
            "ProtEntityType_ProtEntityMpLevel" => Some(Self::ProtEntityMpLevel),
            "ProtEntityType_ProtEntityPlayTeamEntity" => {
                Some(Self::ProtEntityPlayTeamEntity)
            }
            "ProtEntityType_ProtEntityEyePoint" => Some(Self::ProtEntityEyePoint),
            "ProtEntityType_ProtEntityMax" => Some(Self::ProtEntityMax),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Gniinhjicad {
    None = 0,
    Effect = 1,
}
impl Gniinhjicad {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "GNIINHJICAD_None",
            Self::Effect => "GNIINHJICAD_Effect",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "GNIINHJICAD_None" => Some(Self::None),
            "GNIINHJICAD_Effect" => Some(Self::Effect),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Fgiblimhhik {
    OpNone = 0,
    OpActivate = 1,
    OpDeactivate = 2,
}
impl Fgiblimhhik {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::OpNone => "FGIBLIMHHIK_OpNone",
            Self::OpActivate => "FGIBLIMHHIK_OpActivate",
            Self::OpDeactivate => "FGIBLIMHHIK_OpDeactivate",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "FGIBLIMHHIK_OpNone" => Some(Self::OpNone),
            "FGIBLIMHHIK_OpActivate" => Some(Self::OpActivate),
            "FGIBLIMHHIK_OpDeactivate" => Some(Self::OpDeactivate),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Elfnofggcia {
    CustomDungeonFinishPlayNormal = 0,
    CustomDungeonFinishPlayTry = 1,
    CustomDungeonFinishEditTry = 2,
    CustomDungeonFinishSelfPlayNormal = 3,
}
impl Elfnofggcia {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::CustomDungeonFinishPlayNormal => {
                "ELFNOFGGCIA_CustomDungeonFinishPlayNormal"
            }
            Self::CustomDungeonFinishPlayTry => "ELFNOFGGCIA_CustomDungeonFinishPlayTry",
            Self::CustomDungeonFinishEditTry => "ELFNOFGGCIA_CustomDungeonFinishEditTry",
            Self::CustomDungeonFinishSelfPlayNormal => {
                "ELFNOFGGCIA_CustomDungeonFinishSelfPlayNormal"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "ELFNOFGGCIA_CustomDungeonFinishPlayNormal" => {
                Some(Self::CustomDungeonFinishPlayNormal)
            }
            "ELFNOFGGCIA_CustomDungeonFinishPlayTry" => {
                Some(Self::CustomDungeonFinishPlayTry)
            }
            "ELFNOFGGCIA_CustomDungeonFinishEditTry" => {
                Some(Self::CustomDungeonFinishEditTry)
            }
            "ELFNOFGGCIA_CustomDungeonFinishSelfPlayNormal" => {
                Some(Self::CustomDungeonFinishSelfPlayNormal)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Hipgpmncmbp {
    HomeFieldStatueNone = 0,
    HomeFieldStatueSeed = 1,
    HomeFieldStatueSprout = 2,
    HomeFieldStatueGather = 3,
}
impl Hipgpmncmbp {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::HomeFieldStatueNone => "HIPGPMNCMBP_HomeFieldStatueNone",
            Self::HomeFieldStatueSeed => "HIPGPMNCMBP_HomeFieldStatueSeed",
            Self::HomeFieldStatueSprout => "HIPGPMNCMBP_HomeFieldStatueSprout",
            Self::HomeFieldStatueGather => "HIPGPMNCMBP_HomeFieldStatueGather",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "HIPGPMNCMBP_HomeFieldStatueNone" => Some(Self::HomeFieldStatueNone),
            "HIPGPMNCMBP_HomeFieldStatueSeed" => Some(Self::HomeFieldStatueSeed),
            "HIPGPMNCMBP_HomeFieldStatueSprout" => Some(Self::HomeFieldStatueSprout),
            "HIPGPMNCMBP_HomeFieldStatueGather" => Some(Self::HomeFieldStatueGather),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Beljhldaojh {
    StatusFail = 0,
    StatusSucc = 1,
    StatusPartial = 2,
}
impl Beljhldaojh {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::StatusFail => "BELJHLDAOJH_StatusFail",
            Self::StatusSucc => "BELJHLDAOJH_StatusSucc",
            Self::StatusPartial => "BELJHLDAOJH_StatusPartial",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "BELJHLDAOJH_StatusFail" => Some(Self::StatusFail),
            "BELJHLDAOJH_StatusSucc" => Some(Self::StatusSucc),
            "BELJHLDAOJH_StatusPartial" => Some(Self::StatusPartial),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum MapMarkPointType {
    Npc = 0,
    Quest = 1,
    Special = 2,
    Mine = 3,
    Collection = 4,
    Monster = 5,
    FishPool = 6,
}
impl MapMarkPointType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Npc => "MapMarkPointType_Npc",
            Self::Quest => "MapMarkPointType_Quest",
            Self::Special => "MapMarkPointType_Special",
            Self::Mine => "MapMarkPointType_Mine",
            Self::Collection => "MapMarkPointType_Collection",
            Self::Monster => "MapMarkPointType_Monster",
            Self::FishPool => "MapMarkPointType_FishPool",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "MapMarkPointType_Npc" => Some(Self::Npc),
            "MapMarkPointType_Quest" => Some(Self::Quest),
            "MapMarkPointType_Special" => Some(Self::Special),
            "MapMarkPointType_Mine" => Some(Self::Mine),
            "MapMarkPointType_Collection" => Some(Self::Collection),
            "MapMarkPointType_Monster" => Some(Self::Monster),
            "MapMarkPointType_FishPool" => Some(Self::FishPool),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Kbaiomioccp {
    GcgZoneInvalid = 0,
    GcgZoneDeck = 1,
    GcgZoneHand = 2,
    GcgZoneCharacter = 3,
    GcgZoneModify = 4,
    GcgZoneSummon = 5,
    GcgZoneAssist = 7,
    GcgZoneOnstage = 8,
    GcgZoneRule = 9,
}
impl Kbaiomioccp {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::GcgZoneInvalid => "KBAIOMIOCCP_GcgZoneInvalid",
            Self::GcgZoneDeck => "KBAIOMIOCCP_GcgZoneDeck",
            Self::GcgZoneHand => "KBAIOMIOCCP_GcgZoneHand",
            Self::GcgZoneCharacter => "KBAIOMIOCCP_GcgZoneCharacter",
            Self::GcgZoneModify => "KBAIOMIOCCP_GcgZoneModify",
            Self::GcgZoneSummon => "KBAIOMIOCCP_GcgZoneSummon",
            Self::GcgZoneAssist => "KBAIOMIOCCP_GcgZoneAssist",
            Self::GcgZoneOnstage => "KBAIOMIOCCP_GcgZoneOnstage",
            Self::GcgZoneRule => "KBAIOMIOCCP_GcgZoneRule",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "KBAIOMIOCCP_GcgZoneInvalid" => Some(Self::GcgZoneInvalid),
            "KBAIOMIOCCP_GcgZoneDeck" => Some(Self::GcgZoneDeck),
            "KBAIOMIOCCP_GcgZoneHand" => Some(Self::GcgZoneHand),
            "KBAIOMIOCCP_GcgZoneCharacter" => Some(Self::GcgZoneCharacter),
            "KBAIOMIOCCP_GcgZoneModify" => Some(Self::GcgZoneModify),
            "KBAIOMIOCCP_GcgZoneSummon" => Some(Self::GcgZoneSummon),
            "KBAIOMIOCCP_GcgZoneAssist" => Some(Self::GcgZoneAssist),
            "KBAIOMIOCCP_GcgZoneOnstage" => Some(Self::GcgZoneOnstage),
            "KBAIOMIOCCP_GcgZoneRule" => Some(Self::GcgZoneRule),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Pcpkmbjdjak {
    InteractNone = 0,
    InteractPickItem = 1,
    InteractGather = 2,
    InteractOpenChest = 3,
    InteractOpenStatue = 4,
    InteractConsum = 5,
    InteractMpPlayReward = 6,
    InteractView = 7,
    InteractGeneralReward = 8,
    InteractMiracleRing = 9,
    InteractFoundation = 10,
    InteractEchoShell = 11,
    InteractHomeGather = 12,
    InteractEnvAnimal = 13,
    InteractQuestGadget = 14,
    InteractUiInteract = 15,
    InteractDeshretObelisk = 16,
}
impl Pcpkmbjdjak {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::InteractNone => "PCPKMBJDJAK_InteractNone",
            Self::InteractPickItem => "PCPKMBJDJAK_InteractPickItem",
            Self::InteractGather => "PCPKMBJDJAK_InteractGather",
            Self::InteractOpenChest => "PCPKMBJDJAK_InteractOpenChest",
            Self::InteractOpenStatue => "PCPKMBJDJAK_InteractOpenStatue",
            Self::InteractConsum => "PCPKMBJDJAK_InteractConsum",
            Self::InteractMpPlayReward => "PCPKMBJDJAK_InteractMpPlayReward",
            Self::InteractView => "PCPKMBJDJAK_InteractView",
            Self::InteractGeneralReward => "PCPKMBJDJAK_InteractGeneralReward",
            Self::InteractMiracleRing => "PCPKMBJDJAK_InteractMiracleRing",
            Self::InteractFoundation => "PCPKMBJDJAK_InteractFoundation",
            Self::InteractEchoShell => "PCPKMBJDJAK_InteractEchoShell",
            Self::InteractHomeGather => "PCPKMBJDJAK_InteractHomeGather",
            Self::InteractEnvAnimal => "PCPKMBJDJAK_InteractEnvAnimal",
            Self::InteractQuestGadget => "PCPKMBJDJAK_InteractQuestGadget",
            Self::InteractUiInteract => "PCPKMBJDJAK_InteractUiInteract",
            Self::InteractDeshretObelisk => "PCPKMBJDJAK_InteractDeshretObelisk",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "PCPKMBJDJAK_InteractNone" => Some(Self::InteractNone),
            "PCPKMBJDJAK_InteractPickItem" => Some(Self::InteractPickItem),
            "PCPKMBJDJAK_InteractGather" => Some(Self::InteractGather),
            "PCPKMBJDJAK_InteractOpenChest" => Some(Self::InteractOpenChest),
            "PCPKMBJDJAK_InteractOpenStatue" => Some(Self::InteractOpenStatue),
            "PCPKMBJDJAK_InteractConsum" => Some(Self::InteractConsum),
            "PCPKMBJDJAK_InteractMpPlayReward" => Some(Self::InteractMpPlayReward),
            "PCPKMBJDJAK_InteractView" => Some(Self::InteractView),
            "PCPKMBJDJAK_InteractGeneralReward" => Some(Self::InteractGeneralReward),
            "PCPKMBJDJAK_InteractMiracleRing" => Some(Self::InteractMiracleRing),
            "PCPKMBJDJAK_InteractFoundation" => Some(Self::InteractFoundation),
            "PCPKMBJDJAK_InteractEchoShell" => Some(Self::InteractEchoShell),
            "PCPKMBJDJAK_InteractHomeGather" => Some(Self::InteractHomeGather),
            "PCPKMBJDJAK_InteractEnvAnimal" => Some(Self::InteractEnvAnimal),
            "PCPKMBJDJAK_InteractQuestGadget" => Some(Self::InteractQuestGadget),
            "PCPKMBJDJAK_InteractUiInteract" => Some(Self::InteractUiInteract),
            "PCPKMBJDJAK_InteractDeshretObelisk" => Some(Self::InteractDeshretObelisk),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Lobgomipgai {
    LuaOptionNone = 0,
    LuaOptionPlayerInput = 1,
}
impl Lobgomipgai {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::LuaOptionNone => "LOBGOMIPGAI_LuaOptionNone",
            Self::LuaOptionPlayerInput => "LOBGOMIPGAI_LuaOptionPlayerInput",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "LOBGOMIPGAI_LuaOptionNone" => Some(Self::LuaOptionNone),
            "LOBGOMIPGAI_LuaOptionPlayerInput" => Some(Self::LuaOptionPlayerInput),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Fofklbnokdh {
    SandwormCannonNoneEffect = 0,
    SandwormCannonWeakEffect = 1,
    SandwormCannonStrongEffect = 2,
}
impl Fofklbnokdh {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::SandwormCannonNoneEffect => "FOFKLBNOKDH_SandwormCannonNoneEffect",
            Self::SandwormCannonWeakEffect => "FOFKLBNOKDH_SandwormCannonWeakEffect",
            Self::SandwormCannonStrongEffect => "FOFKLBNOKDH_SandwormCannonStrongEffect",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "FOFKLBNOKDH_SandwormCannonNoneEffect" => {
                Some(Self::SandwormCannonNoneEffect)
            }
            "FOFKLBNOKDH_SandwormCannonWeakEffect" => {
                Some(Self::SandwormCannonWeakEffect)
            }
            "FOFKLBNOKDH_SandwormCannonStrongEffect" => {
                Some(Self::SandwormCannonStrongEffect)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Nfonhfamdne {
    Editor = 0,
    Ios = 1,
    Android = 2,
    Pc = 3,
    Ps4 = 4,
    Server = 5,
    CloudAndroid = 6,
    CloudIos = 7,
    Ps5 = 8,
    CloudWeb = 9,
    CloudTv = 10,
    CloudMac = 11,
    CloudPc = 12,
    CloudThirdPartyMobile = 13,
    CloudThirdPartyPc = 14,
    CloudWebAndroid = 15,
    CloudWebIos = 16,
    CloudWebPc = 17,
    CloudWebMac = 18,
    CloudWebTouch = 19,
    CloudWebKeyboard = 20,
    XboxScarlett = 21,
}
impl Nfonhfamdne {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Editor => "NFONHFAMDNE_Editor",
            Self::Ios => "NFONHFAMDNE_Ios",
            Self::Android => "NFONHFAMDNE_Android",
            Self::Pc => "NFONHFAMDNE_Pc",
            Self::Ps4 => "NFONHFAMDNE_Ps4",
            Self::Server => "NFONHFAMDNE_Server",
            Self::CloudAndroid => "NFONHFAMDNE_CloudAndroid",
            Self::CloudIos => "NFONHFAMDNE_CloudIos",
            Self::Ps5 => "NFONHFAMDNE_Ps5",
            Self::CloudWeb => "NFONHFAMDNE_CloudWeb",
            Self::CloudTv => "NFONHFAMDNE_CloudTv",
            Self::CloudMac => "NFONHFAMDNE_CloudMac",
            Self::CloudPc => "NFONHFAMDNE_CloudPc",
            Self::CloudThirdPartyMobile => "NFONHFAMDNE_CloudThirdPartyMobile",
            Self::CloudThirdPartyPc => "NFONHFAMDNE_CloudThirdPartyPc",
            Self::CloudWebAndroid => "NFONHFAMDNE_CloudWebAndroid",
            Self::CloudWebIos => "NFONHFAMDNE_CloudWebIos",
            Self::CloudWebPc => "NFONHFAMDNE_CloudWebPc",
            Self::CloudWebMac => "NFONHFAMDNE_CloudWebMac",
            Self::CloudWebTouch => "NFONHFAMDNE_CloudWebTouch",
            Self::CloudWebKeyboard => "NFONHFAMDNE_CloudWebKeyboard",
            Self::XboxScarlett => "NFONHFAMDNE_XboxScarlett",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "NFONHFAMDNE_Editor" => Some(Self::Editor),
            "NFONHFAMDNE_Ios" => Some(Self::Ios),
            "NFONHFAMDNE_Android" => Some(Self::Android),
            "NFONHFAMDNE_Pc" => Some(Self::Pc),
            "NFONHFAMDNE_Ps4" => Some(Self::Ps4),
            "NFONHFAMDNE_Server" => Some(Self::Server),
            "NFONHFAMDNE_CloudAndroid" => Some(Self::CloudAndroid),
            "NFONHFAMDNE_CloudIos" => Some(Self::CloudIos),
            "NFONHFAMDNE_Ps5" => Some(Self::Ps5),
            "NFONHFAMDNE_CloudWeb" => Some(Self::CloudWeb),
            "NFONHFAMDNE_CloudTv" => Some(Self::CloudTv),
            "NFONHFAMDNE_CloudMac" => Some(Self::CloudMac),
            "NFONHFAMDNE_CloudPc" => Some(Self::CloudPc),
            "NFONHFAMDNE_CloudThirdPartyMobile" => Some(Self::CloudThirdPartyMobile),
            "NFONHFAMDNE_CloudThirdPartyPc" => Some(Self::CloudThirdPartyPc),
            "NFONHFAMDNE_CloudWebAndroid" => Some(Self::CloudWebAndroid),
            "NFONHFAMDNE_CloudWebIos" => Some(Self::CloudWebIos),
            "NFONHFAMDNE_CloudWebPc" => Some(Self::CloudWebPc),
            "NFONHFAMDNE_CloudWebMac" => Some(Self::CloudWebMac),
            "NFONHFAMDNE_CloudWebTouch" => Some(Self::CloudWebTouch),
            "NFONHFAMDNE_CloudWebKeyboard" => Some(Self::CloudWebKeyboard),
            "NFONHFAMDNE_XboxScarlett" => Some(Self::XboxScarlett),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Cdokjpipbgi {
    None = 0,
    Layout = 1,
}
impl Cdokjpipbgi {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "CDOKJPIPBGI_None",
            Self::Layout => "CDOKJPIPBGI_Layout",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "CDOKJPIPBGI_None" => Some(Self::None),
            "CDOKJPIPBGI_Layout" => Some(Self::Layout),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Hkamlcimkjl {
    FreiendDisconnect = 0,
    FriendOnline = 1,
}
impl Hkamlcimkjl {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::FreiendDisconnect => "HKAMLCIMKJL_FreiendDisconnect",
            Self::FriendOnline => "HKAMLCIMKJL_FriendOnline",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "HKAMLCIMKJL_FreiendDisconnect" => Some(Self::FreiendDisconnect),
            "HKAMLCIMKJL_FriendOnline" => Some(Self::FriendOnline),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Aipiihkmogo {
    TryCustomDungeonNone = 0,
    TryCustomDungeonRoom = 1,
    TryCustomDungeonAll = 2,
    TryCustomDungeonOfficialPlay = 3,
}
impl Aipiihkmogo {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::TryCustomDungeonNone => "AIPIIHKMOGO_TryCustomDungeonNone",
            Self::TryCustomDungeonRoom => "AIPIIHKMOGO_TryCustomDungeonRoom",
            Self::TryCustomDungeonAll => "AIPIIHKMOGO_TryCustomDungeonAll",
            Self::TryCustomDungeonOfficialPlay => {
                "AIPIIHKMOGO_TryCustomDungeonOfficialPlay"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "AIPIIHKMOGO_TryCustomDungeonNone" => Some(Self::TryCustomDungeonNone),
            "AIPIIHKMOGO_TryCustomDungeonRoom" => Some(Self::TryCustomDungeonRoom),
            "AIPIIHKMOGO_TryCustomDungeonAll" => Some(Self::TryCustomDungeonAll),
            "AIPIIHKMOGO_TryCustomDungeonOfficialPlay" => {
                Some(Self::TryCustomDungeonOfficialPlay)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Mgobeipgija {
    ReceiveOutput = 0,
    StopForge = 1,
}
impl Mgobeipgija {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::ReceiveOutput => "MGOBEIPGIJA_ReceiveOutput",
            Self::StopForge => "MGOBEIPGIJA_StopForge",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "MGOBEIPGIJA_ReceiveOutput" => Some(Self::ReceiveOutput),
            "MGOBEIPGIJA_StopForge" => Some(Self::StopForge),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Gafkaplofdb {
    LuashellNone = 0,
    LuashellNormal = 1,
    LuashellSecurity = 2,
    LuashellShellCode = 3,
}
impl Gafkaplofdb {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::LuashellNone => "GAFKAPLOFDB_LuashellNone",
            Self::LuashellNormal => "GAFKAPLOFDB_LuashellNormal",
            Self::LuashellSecurity => "GAFKAPLOFDB_LuashellSecurity",
            Self::LuashellShellCode => "GAFKAPLOFDB_LuashellShellCode",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "GAFKAPLOFDB_LuashellNone" => Some(Self::LuashellNone),
            "GAFKAPLOFDB_LuashellNormal" => Some(Self::LuashellNormal),
            "GAFKAPLOFDB_LuashellSecurity" => Some(Self::LuashellSecurity),
            "GAFKAPLOFDB_LuashellShellCode" => Some(Self::LuashellShellCode),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Deihielefen {
    Added = 0,
    Removed = 1,
}
impl Deihielefen {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Added => "DEIHIELEFEN_Added",
            Self::Removed => "DEIHIELEFEN_Removed",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "DEIHIELEFEN_Added" => Some(Self::Added),
            "DEIHIELEFEN_Removed" => Some(Self::Removed),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Aplfhdmbkhc {
    LogLevelNone = 0,
    LogLevelDebug = 1,
    LogLevelInfo = 2,
    LogLevelWarning = 3,
    LogLevelError = 4,
}
impl Aplfhdmbkhc {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::LogLevelNone => "APLFHDMBKHC_LogLevelNone",
            Self::LogLevelDebug => "APLFHDMBKHC_LogLevelDebug",
            Self::LogLevelInfo => "APLFHDMBKHC_LogLevelInfo",
            Self::LogLevelWarning => "APLFHDMBKHC_LogLevelWarning",
            Self::LogLevelError => "APLFHDMBKHC_LogLevelError",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "APLFHDMBKHC_LogLevelNone" => Some(Self::LogLevelNone),
            "APLFHDMBKHC_LogLevelDebug" => Some(Self::LogLevelDebug),
            "APLFHDMBKHC_LogLevelInfo" => Some(Self::LogLevelInfo),
            "APLFHDMBKHC_LogLevelWarning" => Some(Self::LogLevelWarning),
            "APLFHDMBKHC_LogLevelError" => Some(Self::LogLevelError),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Oacinifekjn {
    DungeonCandidateTpdrNormal = 0,
    DungeonCandidateTpdrDie = 1,
    DungeonCandidateTpdrDisconnect = 2,
}
impl Oacinifekjn {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::DungeonCandidateTpdrNormal => "OACINIFEKJN_DungeonCandidateTpdrNormal",
            Self::DungeonCandidateTpdrDie => "OACINIFEKJN_DungeonCandidateTpdrDie",
            Self::DungeonCandidateTpdrDisconnect => {
                "OACINIFEKJN_DungeonCandidateTpdrDisconnect"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "OACINIFEKJN_DungeonCandidateTpdrNormal" => {
                Some(Self::DungeonCandidateTpdrNormal)
            }
            "OACINIFEKJN_DungeonCandidateTpdrDie" => Some(Self::DungeonCandidateTpdrDie),
            "OACINIFEKJN_DungeonCandidateTpdrDisconnect" => {
                Some(Self::DungeonCandidateTpdrDisconnect)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum FoundationStatus {
    None = 0,
    Init = 1,
    Building = 2,
    Built = 3,
}
impl FoundationStatus {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "FoundationStatus_None",
            Self::Init => "FoundationStatus_Init",
            Self::Building => "FoundationStatus_Building",
            Self::Built => "FoundationStatus_Built",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "FoundationStatus_None" => Some(Self::None),
            "FoundationStatus_Init" => Some(Self::Init),
            "FoundationStatus_Building" => Some(Self::Building),
            "FoundationStatus_Built" => Some(Self::Built),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Imenpajgoaf {
    GcgHintNone = 0,
    GcgHintGameNotFound = 1,
}
impl Imenpajgoaf {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::GcgHintNone => "IMENPAJGOAF_GcgHintNone",
            Self::GcgHintGameNotFound => "IMENPAJGOAF_GcgHintGameNotFound",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "IMENPAJGOAF_GcgHintNone" => Some(Self::GcgHintNone),
            "IMENPAJGOAF_GcgHintGameNotFound" => Some(Self::GcgHintGameNotFound),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Mcfiemolici {
    AuditNone = 0,
    AuditWaiting = 1,
    AuditFailed = 2,
}
impl Mcfiemolici {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::AuditNone => "MCFIEMOLICI_AuditNone",
            Self::AuditWaiting => "MCFIEMOLICI_AuditWaiting",
            Self::AuditFailed => "MCFIEMOLICI_AuditFailed",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "MCFIEMOLICI_AuditNone" => Some(Self::AuditNone),
            "MCFIEMOLICI_AuditWaiting" => Some(Self::AuditWaiting),
            "MCFIEMOLICI_AuditFailed" => Some(Self::AuditFailed),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Ndfpcjooapl {
    LockNone = 0,
    LockQuest = 1,
}
impl Ndfpcjooapl {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::LockNone => "NDFPCJOOAPL_LockNone",
            Self::LockQuest => "NDFPCJOOAPL_LockQuest",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "NDFPCJOOAPL_LockNone" => Some(Self::LockNone),
            "NDFPCJOOAPL_LockQuest" => Some(Self::LockQuest),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Afogmhlhodn {
    ClientReconnnectNone = 0,
    ClientReconnnectQuitMp = 1,
    ClientReconnnectSceneTimeCheckFail = 2,
    ClientReconnnectEnterQuestFocus = 3,
}
impl Afogmhlhodn {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::ClientReconnnectNone => "AFOGMHLHODN_ClientReconnnectNone",
            Self::ClientReconnnectQuitMp => "AFOGMHLHODN_ClientReconnnectQuitMp",
            Self::ClientReconnnectSceneTimeCheckFail => {
                "AFOGMHLHODN_ClientReconnnectSceneTimeCheckFail"
            }
            Self::ClientReconnnectEnterQuestFocus => {
                "AFOGMHLHODN_ClientReconnnectEnterQuestFocus"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "AFOGMHLHODN_ClientReconnnectNone" => Some(Self::ClientReconnnectNone),
            "AFOGMHLHODN_ClientReconnnectQuitMp" => Some(Self::ClientReconnnectQuitMp),
            "AFOGMHLHODN_ClientReconnnectSceneTimeCheckFail" => {
                Some(Self::ClientReconnnectSceneTimeCheckFail)
            }
            "AFOGMHLHODN_ClientReconnnectEnterQuestFocus" => {
                Some(Self::ClientReconnnectEnterQuestFocus)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Djncinjhhok {
    PlayerJudge = 0,
    PlayerEnterOptionRefuse = 1,
    PlayerEnterOptionDirect = 2,
    SystemJudge = 3,
    HostInMatch = 4,
    PsPlayerNotAcceptOthers = 5,
    OpenStateNotOpen = 6,
    HostInEditMode = 7,
    PriorCheck = 8,
    PlayerOffline = 9,
    XboxPlayerNotAcceptOthers = 10,
    PlayerNotAcceptOtherPlatform = 11,
    XboxOnly = 12,
}
impl Djncinjhhok {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::PlayerJudge => "DJNCINJHHOK_PlayerJudge",
            Self::PlayerEnterOptionRefuse => "DJNCINJHHOK_PlayerEnterOptionRefuse",
            Self::PlayerEnterOptionDirect => "DJNCINJHHOK_PlayerEnterOptionDirect",
            Self::SystemJudge => "DJNCINJHHOK_SystemJudge",
            Self::HostInMatch => "DJNCINJHHOK_HostInMatch",
            Self::PsPlayerNotAcceptOthers => "DJNCINJHHOK_PsPlayerNotAcceptOthers",
            Self::OpenStateNotOpen => "DJNCINJHHOK_OpenStateNotOpen",
            Self::HostInEditMode => "DJNCINJHHOK_HostInEditMode",
            Self::PriorCheck => "DJNCINJHHOK_PriorCheck",
            Self::PlayerOffline => "DJNCINJHHOK_PlayerOffline",
            Self::XboxPlayerNotAcceptOthers => "DJNCINJHHOK_XboxPlayerNotAcceptOthers",
            Self::PlayerNotAcceptOtherPlatform => {
                "DJNCINJHHOK_PlayerNotAcceptOtherPlatform"
            }
            Self::XboxOnly => "DJNCINJHHOK_XboxOnly",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "DJNCINJHHOK_PlayerJudge" => Some(Self::PlayerJudge),
            "DJNCINJHHOK_PlayerEnterOptionRefuse" => Some(Self::PlayerEnterOptionRefuse),
            "DJNCINJHHOK_PlayerEnterOptionDirect" => Some(Self::PlayerEnterOptionDirect),
            "DJNCINJHHOK_SystemJudge" => Some(Self::SystemJudge),
            "DJNCINJHHOK_HostInMatch" => Some(Self::HostInMatch),
            "DJNCINJHHOK_PsPlayerNotAcceptOthers" => Some(Self::PsPlayerNotAcceptOthers),
            "DJNCINJHHOK_OpenStateNotOpen" => Some(Self::OpenStateNotOpen),
            "DJNCINJHHOK_HostInEditMode" => Some(Self::HostInEditMode),
            "DJNCINJHHOK_PriorCheck" => Some(Self::PriorCheck),
            "DJNCINJHHOK_PlayerOffline" => Some(Self::PlayerOffline),
            "DJNCINJHHOK_XboxPlayerNotAcceptOthers" => {
                Some(Self::XboxPlayerNotAcceptOthers)
            }
            "DJNCINJHHOK_PlayerNotAcceptOtherPlatform" => {
                Some(Self::PlayerNotAcceptOtherPlatform)
            }
            "DJNCINJHHOK_XboxOnly" => Some(Self::XboxOnly),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Bkeodgbcbki {
    TribalChapterNone = 0,
    TribalChapterNotOpen = 1,
    TribalChapterLock = 2,
    TribalChapterUnlock = 3,
    TribalChapterFinish = 4,
}
impl Bkeodgbcbki {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::TribalChapterNone => "BKEODGBCBKI_TribalChapterNone",
            Self::TribalChapterNotOpen => "BKEODGBCBKI_TribalChapterNotOpen",
            Self::TribalChapterLock => "BKEODGBCBKI_TribalChapterLock",
            Self::TribalChapterUnlock => "BKEODGBCBKI_TribalChapterUnlock",
            Self::TribalChapterFinish => "BKEODGBCBKI_TribalChapterFinish",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "BKEODGBCBKI_TribalChapterNone" => Some(Self::TribalChapterNone),
            "BKEODGBCBKI_TribalChapterNotOpen" => Some(Self::TribalChapterNotOpen),
            "BKEODGBCBKI_TribalChapterLock" => Some(Self::TribalChapterLock),
            "BKEODGBCBKI_TribalChapterUnlock" => Some(Self::TribalChapterUnlock),
            "BKEODGBCBKI_TribalChapterFinish" => Some(Self::TribalChapterFinish),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Ephalejpikm {
    None = 0,
    Succ = 1,
    Fail = 2,
}
impl Ephalejpikm {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "EPHALEJPIKM_None",
            Self::Succ => "EPHALEJPIKM_Succ",
            Self::Fail => "EPHALEJPIKM_Fail",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "EPHALEJPIKM_None" => Some(Self::None),
            "EPHALEJPIKM_Succ" => Some(Self::Succ),
            "EPHALEJPIKM_Fail" => Some(Self::Fail),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Lopfafplahp {
    SettleReasonNone = 0,
    SettleReasonSucc = 1,
    SettleReasonTimeOut = 2,
    SettleReasonAllDie = 3,
    SettleReasonFail = 4,
}
impl Lopfafplahp {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::SettleReasonNone => "LOPFAFPLAHP_SettleReasonNone",
            Self::SettleReasonSucc => "LOPFAFPLAHP_SettleReasonSucc",
            Self::SettleReasonTimeOut => "LOPFAFPLAHP_SettleReasonTimeOut",
            Self::SettleReasonAllDie => "LOPFAFPLAHP_SettleReasonAllDie",
            Self::SettleReasonFail => "LOPFAFPLAHP_SettleReasonFail",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "LOPFAFPLAHP_SettleReasonNone" => Some(Self::SettleReasonNone),
            "LOPFAFPLAHP_SettleReasonSucc" => Some(Self::SettleReasonSucc),
            "LOPFAFPLAHP_SettleReasonTimeOut" => Some(Self::SettleReasonTimeOut),
            "LOPFAFPLAHP_SettleReasonAllDie" => Some(Self::SettleReasonAllDie),
            "LOPFAFPLAHP_SettleReasonFail" => Some(Self::SettleReasonFail),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Hjkiglgddon {
    None = 0,
    InBag = 1,
    CanForge = 2,
}
impl Hjkiglgddon {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "HJKIGLGDDON_None",
            Self::InBag => "HJKIGLGDDON_InBag",
            Self::CanForge => "HJKIGLGDDON_CanForge",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "HJKIGLGDDON_None" => Some(Self::None),
            "HJKIGLGDDON_InBag" => Some(Self::InBag),
            "HJKIGLGDDON_CanForge" => Some(Self::CanForge),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Aigmbjebmnn {
    ActionTypeNone = 0,
    ActionTypePlayerMove = 1,
    ActionTypeSpawnWave = 2,
    ActionTypeAddObstacle = 3,
    ActionTypeRemoveObstacle = 4,
    ActionTypeTeamScore = 5,
    ActionTypeCollectObstacles = 6,
}
impl Aigmbjebmnn {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::ActionTypeNone => "AIGMBJEBMNN_ActionTypeNone",
            Self::ActionTypePlayerMove => "AIGMBJEBMNN_ActionTypePlayerMove",
            Self::ActionTypeSpawnWave => "AIGMBJEBMNN_ActionTypeSpawnWave",
            Self::ActionTypeAddObstacle => "AIGMBJEBMNN_ActionTypeAddObstacle",
            Self::ActionTypeRemoveObstacle => "AIGMBJEBMNN_ActionTypeRemoveObstacle",
            Self::ActionTypeTeamScore => "AIGMBJEBMNN_ActionTypeTeamScore",
            Self::ActionTypeCollectObstacles => "AIGMBJEBMNN_ActionTypeCollectObstacles",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "AIGMBJEBMNN_ActionTypeNone" => Some(Self::ActionTypeNone),
            "AIGMBJEBMNN_ActionTypePlayerMove" => Some(Self::ActionTypePlayerMove),
            "AIGMBJEBMNN_ActionTypeSpawnWave" => Some(Self::ActionTypeSpawnWave),
            "AIGMBJEBMNN_ActionTypeAddObstacle" => Some(Self::ActionTypeAddObstacle),
            "AIGMBJEBMNN_ActionTypeRemoveObstacle" => {
                Some(Self::ActionTypeRemoveObstacle)
            }
            "AIGMBJEBMNN_ActionTypeTeamScore" => Some(Self::ActionTypeTeamScore),
            "AIGMBJEBMNN_ActionTypeCollectObstacles" => {
                Some(Self::ActionTypeCollectObstacles)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Jjhobjbapei {
    VehicleInteractNone = 0,
    VehicleInteractIn = 1,
    VehicleInteractOut = 2,
}
impl Jjhobjbapei {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::VehicleInteractNone => "JJHOBJBAPEI_VehicleInteractNone",
            Self::VehicleInteractIn => "JJHOBJBAPEI_VehicleInteractIn",
            Self::VehicleInteractOut => "JJHOBJBAPEI_VehicleInteractOut",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "JJHOBJBAPEI_VehicleInteractNone" => Some(Self::VehicleInteractNone),
            "JJHOBJBAPEI_VehicleInteractIn" => Some(Self::VehicleInteractIn),
            "JJHOBJBAPEI_VehicleInteractOut" => Some(Self::VehicleInteractOut),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Glbcdbehhij {
    Invalid = 0,
    HostNoOtherPlayer = 1,
    KickByHost = 2,
    BackToMyWorld = 3,
    KickByHostLogout = 4,
    KickByHostBlock = 5,
    BeBlocked = 6,
    KickByHostEnterHome = 7,
    HostSceneInvalid = 8,
    KickByPlay = 9,
    KickByIslandPartyGalleryStartFailed = 10,
    KickByHostAdsBlock = 11,
    BeAdsBlocked = 12,
}
impl Glbcdbehhij {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Invalid => "GLBCDBEHHIJ_Invalid",
            Self::HostNoOtherPlayer => "GLBCDBEHHIJ_HostNoOtherPlayer",
            Self::KickByHost => "GLBCDBEHHIJ_KickByHost",
            Self::BackToMyWorld => "GLBCDBEHHIJ_BackToMyWorld",
            Self::KickByHostLogout => "GLBCDBEHHIJ_KickByHostLogout",
            Self::KickByHostBlock => "GLBCDBEHHIJ_KickByHostBlock",
            Self::BeBlocked => "GLBCDBEHHIJ_BeBlocked",
            Self::KickByHostEnterHome => "GLBCDBEHHIJ_KickByHostEnterHome",
            Self::HostSceneInvalid => "GLBCDBEHHIJ_HostSceneInvalid",
            Self::KickByPlay => "GLBCDBEHHIJ_KickByPlay",
            Self::KickByIslandPartyGalleryStartFailed => {
                "GLBCDBEHHIJ_KickByIslandPartyGalleryStartFailed"
            }
            Self::KickByHostAdsBlock => "GLBCDBEHHIJ_KickByHostAdsBlock",
            Self::BeAdsBlocked => "GLBCDBEHHIJ_BeAdsBlocked",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "GLBCDBEHHIJ_Invalid" => Some(Self::Invalid),
            "GLBCDBEHHIJ_HostNoOtherPlayer" => Some(Self::HostNoOtherPlayer),
            "GLBCDBEHHIJ_KickByHost" => Some(Self::KickByHost),
            "GLBCDBEHHIJ_BackToMyWorld" => Some(Self::BackToMyWorld),
            "GLBCDBEHHIJ_KickByHostLogout" => Some(Self::KickByHostLogout),
            "GLBCDBEHHIJ_KickByHostBlock" => Some(Self::KickByHostBlock),
            "GLBCDBEHHIJ_BeBlocked" => Some(Self::BeBlocked),
            "GLBCDBEHHIJ_KickByHostEnterHome" => Some(Self::KickByHostEnterHome),
            "GLBCDBEHHIJ_HostSceneInvalid" => Some(Self::HostSceneInvalid),
            "GLBCDBEHHIJ_KickByPlay" => Some(Self::KickByPlay),
            "GLBCDBEHHIJ_KickByIslandPartyGalleryStartFailed" => {
                Some(Self::KickByIslandPartyGalleryStartFailed)
            }
            "GLBCDBEHHIJ_KickByHostAdsBlock" => Some(Self::KickByHostAdsBlock),
            "GLBCDBEHHIJ_BeAdsBlocked" => Some(Self::BeAdsBlocked),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Pgmjcmnhalc {
    StatusFail = 0,
    StatusSucc = 1,
    StatusPartial = 2,
}
impl Pgmjcmnhalc {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::StatusFail => "PGMJCMNHALC_StatusFail",
            Self::StatusSucc => "PGMJCMNHALC_StatusSucc",
            Self::StatusPartial => "PGMJCMNHALC_StatusPartial",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "PGMJCMNHALC_StatusFail" => Some(Self::StatusFail),
            "PGMJCMNHALC_StatusSucc" => Some(Self::StatusSucc),
            "PGMJCMNHALC_StatusPartial" => Some(Self::StatusPartial),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Bmdigaiggbk {
    TimeOut = 0,
    SettlePlayEnd = 1,
    SettlePlayerQuit = 2,
}
impl Bmdigaiggbk {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::TimeOut => "BMDIGAIGGBK_TimeOut",
            Self::SettlePlayEnd => "BMDIGAIGGBK_SettlePlayEnd",
            Self::SettlePlayerQuit => "BMDIGAIGGBK_SettlePlayerQuit",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "BMDIGAIGGBK_TimeOut" => Some(Self::TimeOut),
            "BMDIGAIGGBK_SettlePlayEnd" => Some(Self::SettlePlayEnd),
            "BMDIGAIGGBK_SettlePlayerQuit" => Some(Self::SettlePlayerQuit),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum QueryPathReqOptionType {
    OptionNone = 0,
    OptionNormal = 1,
    OptionFirstCanGo = 2,
}
impl QueryPathReqOptionType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::OptionNone => "QueryPathReqOptionType_OptionNone",
            Self::OptionNormal => "QueryPathReqOptionType_OptionNormal",
            Self::OptionFirstCanGo => "QueryPathReqOptionType_OptionFirstCanGo",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "QueryPathReqOptionType_OptionNone" => Some(Self::OptionNone),
            "QueryPathReqOptionType_OptionNormal" => Some(Self::OptionNormal),
            "QueryPathReqOptionType_OptionFirstCanGo" => Some(Self::OptionFirstCanGo),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Cekeaiacebm {
    GalleryNone = 0,
    GalleryPrestart = 1,
    GalleryStart = 2,
}
impl Cekeaiacebm {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::GalleryNone => "CEKEAIACEBM_GalleryNone",
            Self::GalleryPrestart => "CEKEAIACEBM_GalleryPrestart",
            Self::GalleryStart => "CEKEAIACEBM_GalleryStart",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "CEKEAIACEBM_GalleryNone" => Some(Self::GalleryNone),
            "CEKEAIACEBM_GalleryPrestart" => Some(Self::GalleryPrestart),
            "CEKEAIACEBM_GalleryStart" => Some(Self::GalleryStart),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Jnkfgjmmhma {
    WidgetSlotQuickUse = 0,
    WidgetSlotAttachAvatar = 1,
}
impl Jnkfgjmmhma {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::WidgetSlotQuickUse => "JNKFGJMMHMA_WidgetSlotQuickUse",
            Self::WidgetSlotAttachAvatar => "JNKFGJMMHMA_WidgetSlotAttachAvatar",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "JNKFGJMMHMA_WidgetSlotQuickUse" => Some(Self::WidgetSlotQuickUse),
            "JNKFGJMMHMA_WidgetSlotAttachAvatar" => Some(Self::WidgetSlotAttachAvatar),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Acjbafcalin {
    Level = 0,
    Quest = 1,
}
impl Acjbafcalin {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Level => "ACJBAFCALIN_Level",
            Self::Quest => "ACJBAFCALIN_Quest",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "ACJBAFCALIN_Level" => Some(Self::Level),
            "ACJBAFCALIN_Quest" => Some(Self::Quest),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Iebmahkgipd {
    None = 0,
    Normal = 1,
    Condense = 2,
    ReunionPrivilege = 3,
    OpActivity = 4,
    Material = 5,
}
impl Iebmahkgipd {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "IEBMAHKGIPD_None",
            Self::Normal => "IEBMAHKGIPD_Normal",
            Self::Condense => "IEBMAHKGIPD_Condense",
            Self::ReunionPrivilege => "IEBMAHKGIPD_ReunionPrivilege",
            Self::OpActivity => "IEBMAHKGIPD_OpActivity",
            Self::Material => "IEBMAHKGIPD_Material",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "IEBMAHKGIPD_None" => Some(Self::None),
            "IEBMAHKGIPD_Normal" => Some(Self::Normal),
            "IEBMAHKGIPD_Condense" => Some(Self::Condense),
            "IEBMAHKGIPD_ReunionPrivilege" => Some(Self::ReunionPrivilege),
            "IEBMAHKGIPD_OpActivity" => Some(Self::OpActivity),
            "IEBMAHKGIPD_Material" => Some(Self::Material),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Olahjgdbfjl {
    MpSettingNoEnter = 0,
    MpSettingEnterFreely = 1,
    MpSettingEnterAfterApply = 2,
}
impl Olahjgdbfjl {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::MpSettingNoEnter => "OLAHJGDBFJL_MpSettingNoEnter",
            Self::MpSettingEnterFreely => "OLAHJGDBFJL_MpSettingEnterFreely",
            Self::MpSettingEnterAfterApply => "OLAHJGDBFJL_MpSettingEnterAfterApply",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "OLAHJGDBFJL_MpSettingNoEnter" => Some(Self::MpSettingNoEnter),
            "OLAHJGDBFJL_MpSettingEnterFreely" => Some(Self::MpSettingEnterFreely),
            "OLAHJGDBFJL_MpSettingEnterAfterApply" => {
                Some(Self::MpSettingEnterAfterApply)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Glgcidhmkka {
    HitColliderInvalid = 0,
    HitColliderHitBox = 1,
    HitColliderWetHitBox = 2,
    HitColliderHeadBox = 3,
}
impl Glgcidhmkka {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::HitColliderInvalid => "GLGCIDHMKKA_HitColliderInvalid",
            Self::HitColliderHitBox => "GLGCIDHMKKA_HitColliderHitBox",
            Self::HitColliderWetHitBox => "GLGCIDHMKKA_HitColliderWetHitBox",
            Self::HitColliderHeadBox => "GLGCIDHMKKA_HitColliderHeadBox",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "GLGCIDHMKKA_HitColliderInvalid" => Some(Self::HitColliderInvalid),
            "GLGCIDHMKKA_HitColliderHitBox" => Some(Self::HitColliderHitBox),
            "GLGCIDHMKKA_HitColliderWetHitBox" => Some(Self::HitColliderWetHitBox),
            "GLGCIDHMKKA_HitColliderHeadBox" => Some(Self::HitColliderHeadBox),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Afaplaefbil {
    Invalid = 0,
    Unfinished = 1,
    Finished = 2,
    RewardTaken = 3,
}
impl Afaplaefbil {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Invalid => "AFAPLAEFBIL_Invalid",
            Self::Unfinished => "AFAPLAEFBIL_Unfinished",
            Self::Finished => "AFAPLAEFBIL_Finished",
            Self::RewardTaken => "AFAPLAEFBIL_RewardTaken",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "AFAPLAEFBIL_Invalid" => Some(Self::Invalid),
            "AFAPLAEFBIL_Unfinished" => Some(Self::Unfinished),
            "AFAPLAEFBIL_Finished" => Some(Self::Finished),
            "AFAPLAEFBIL_RewardTaken" => Some(Self::RewardTaken),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Dchonjfdddo {
    None = 0,
    Started = 1,
    Unstarted = 2,
    Succ = 3,
}
impl Dchonjfdddo {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "DCHONJFDDDO_None",
            Self::Started => "DCHONJFDDDO_Started",
            Self::Unstarted => "DCHONJFDDDO_Unstarted",
            Self::Succ => "DCHONJFDDDO_Succ",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "DCHONJFDDDO_None" => Some(Self::None),
            "DCHONJFDDDO_Started" => Some(Self::Started),
            "DCHONJFDDDO_Unstarted" => Some(Self::Unstarted),
            "DCHONJFDDDO_Succ" => Some(Self::Succ),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Kndodpcnljf {
    TimeOut = 0,
    SettlePlayEnd = 1,
    SettlePlayerQuit = 2,
}
impl Kndodpcnljf {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::TimeOut => "KNDODPCNLJF_TimeOut",
            Self::SettlePlayEnd => "KNDODPCNLJF_SettlePlayEnd",
            Self::SettlePlayerQuit => "KNDODPCNLJF_SettlePlayerQuit",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "KNDODPCNLJF_TimeOut" => Some(Self::TimeOut),
            "KNDODPCNLJF_SettlePlayEnd" => Some(Self::SettlePlayEnd),
            "KNDODPCNLJF_SettlePlayerQuit" => Some(Self::SettlePlayerQuit),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Cgphggdkihf {
    GetUgcNone = 0,
    Mine = 1,
    Publish = 2,
}
impl Cgphggdkihf {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::GetUgcNone => "CGPHGGDKIHF_GetUgcNone",
            Self::Mine => "CGPHGGDKIHF_Mine",
            Self::Publish => "CGPHGGDKIHF_Publish",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "CGPHGGDKIHF_GetUgcNone" => Some(Self::GetUgcNone),
            "CGPHGGDKIHF_Mine" => Some(Self::Mine),
            "CGPHGGDKIHF_Publish" => Some(Self::Publish),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum VisionType {
    VisionNone = 0,
    VisionMeet = 1,
    VisionReborn = 2,
    VisionReplace = 3,
    VisionWaypointReborn = 4,
    VisionMiss = 5,
    VisionDie = 6,
    VisionGatherEscape = 7,
    VisionRefresh = 8,
    VisionTransport = 9,
    VisionReplaceDie = 10,
    VisionReplaceNoNotify = 11,
    VisionBorn = 12,
    VisionPickup = 13,
    VisionRemove = 14,
    VisionChangeCostume = 15,
    VisionFishRefresh = 16,
    VisionFishBigShock = 17,
    VisionFishQteSucc = 18,
    VisionCaptureDisappear = 19,
}
impl VisionType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::VisionNone => "VisionType_VisionNone",
            Self::VisionMeet => "VisionType_VisionMeet",
            Self::VisionReborn => "VisionType_VisionReborn",
            Self::VisionReplace => "VisionType_VisionReplace",
            Self::VisionWaypointReborn => "VisionType_VisionWaypointReborn",
            Self::VisionMiss => "VisionType_VisionMiss",
            Self::VisionDie => "VisionType_VisionDie",
            Self::VisionGatherEscape => "VisionType_VisionGatherEscape",
            Self::VisionRefresh => "VisionType_VisionRefresh",
            Self::VisionTransport => "VisionType_VisionTransport",
            Self::VisionReplaceDie => "VisionType_VisionReplaceDie",
            Self::VisionReplaceNoNotify => "VisionType_VisionReplaceNoNotify",
            Self::VisionBorn => "VisionType_VisionBorn",
            Self::VisionPickup => "VisionType_VisionPickup",
            Self::VisionRemove => "VisionType_VisionRemove",
            Self::VisionChangeCostume => "VisionType_VisionChangeCostume",
            Self::VisionFishRefresh => "VisionType_VisionFishRefresh",
            Self::VisionFishBigShock => "VisionType_VisionFishBigShock",
            Self::VisionFishQteSucc => "VisionType_VisionFishQteSucc",
            Self::VisionCaptureDisappear => "VisionType_VisionCaptureDisappear",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "VisionType_VisionNone" => Some(Self::VisionNone),
            "VisionType_VisionMeet" => Some(Self::VisionMeet),
            "VisionType_VisionReborn" => Some(Self::VisionReborn),
            "VisionType_VisionReplace" => Some(Self::VisionReplace),
            "VisionType_VisionWaypointReborn" => Some(Self::VisionWaypointReborn),
            "VisionType_VisionMiss" => Some(Self::VisionMiss),
            "VisionType_VisionDie" => Some(Self::VisionDie),
            "VisionType_VisionGatherEscape" => Some(Self::VisionGatherEscape),
            "VisionType_VisionRefresh" => Some(Self::VisionRefresh),
            "VisionType_VisionTransport" => Some(Self::VisionTransport),
            "VisionType_VisionReplaceDie" => Some(Self::VisionReplaceDie),
            "VisionType_VisionReplaceNoNotify" => Some(Self::VisionReplaceNoNotify),
            "VisionType_VisionBorn" => Some(Self::VisionBorn),
            "VisionType_VisionPickup" => Some(Self::VisionPickup),
            "VisionType_VisionRemove" => Some(Self::VisionRemove),
            "VisionType_VisionChangeCostume" => Some(Self::VisionChangeCostume),
            "VisionType_VisionFishRefresh" => Some(Self::VisionFishRefresh),
            "VisionType_VisionFishBigShock" => Some(Self::VisionFishBigShock),
            "VisionType_VisionFishQteSucc" => Some(Self::VisionFishQteSucc),
            "VisionType_VisionCaptureDisappear" => Some(Self::VisionCaptureDisappear),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Gijcldfplmh {
    FisnEscapeNone = 0,
    FishEscapeShocked = 1,
    FishEscapeUnhook = 2,
}
impl Gijcldfplmh {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::FisnEscapeNone => "GIJCLDFPLMH_FisnEscapeNone",
            Self::FishEscapeShocked => "GIJCLDFPLMH_FishEscapeShocked",
            Self::FishEscapeUnhook => "GIJCLDFPLMH_FishEscapeUnhook",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "GIJCLDFPLMH_FisnEscapeNone" => Some(Self::FisnEscapeNone),
            "GIJCLDFPLMH_FishEscapeShocked" => Some(Self::FishEscapeShocked),
            "GIJCLDFPLMH_FishEscapeUnhook" => Some(Self::FishEscapeUnhook),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Hckoghgenic {
    DraftFailUnknown = 0,
    DraftActivityNotOpen = 1,
    DraftActivityPlayNotOpen = 2,
    DraftSceneNotMeet = 3,
    DraftWorldNotMeet = 4,
    DraftPlayLimitNotMeet = 5,
    DraftActivityConfigNotFound = 6,
}
impl Hckoghgenic {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::DraftFailUnknown => "HCKOGHGENIC_DraftFailUnknown",
            Self::DraftActivityNotOpen => "HCKOGHGENIC_DraftActivityNotOpen",
            Self::DraftActivityPlayNotOpen => "HCKOGHGENIC_DraftActivityPlayNotOpen",
            Self::DraftSceneNotMeet => "HCKOGHGENIC_DraftSceneNotMeet",
            Self::DraftWorldNotMeet => "HCKOGHGENIC_DraftWorldNotMeet",
            Self::DraftPlayLimitNotMeet => "HCKOGHGENIC_DraftPlayLimitNotMeet",
            Self::DraftActivityConfigNotFound => {
                "HCKOGHGENIC_DraftActivityConfigNotFound"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "HCKOGHGENIC_DraftFailUnknown" => Some(Self::DraftFailUnknown),
            "HCKOGHGENIC_DraftActivityNotOpen" => Some(Self::DraftActivityNotOpen),
            "HCKOGHGENIC_DraftActivityPlayNotOpen" => {
                Some(Self::DraftActivityPlayNotOpen)
            }
            "HCKOGHGENIC_DraftSceneNotMeet" => Some(Self::DraftSceneNotMeet),
            "HCKOGHGENIC_DraftWorldNotMeet" => Some(Self::DraftWorldNotMeet),
            "HCKOGHGENIC_DraftPlayLimitNotMeet" => Some(Self::DraftPlayLimitNotMeet),
            "HCKOGHGENIC_DraftActivityConfigNotFound" => {
                Some(Self::DraftActivityConfigNotFound)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Gkfginklnch {
    LifeByOwnerNone = 0,
    LifeByOwnerV2 = 1,
    LifeByOwnerV3 = 2,
}
impl Gkfginklnch {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::LifeByOwnerNone => "GKFGINKLNCH_LifeByOwnerNone",
            Self::LifeByOwnerV2 => "GKFGINKLNCH_LifeByOwnerV2",
            Self::LifeByOwnerV3 => "GKFGINKLNCH_LifeByOwnerV3",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "GKFGINKLNCH_LifeByOwnerNone" => Some(Self::LifeByOwnerNone),
            "GKFGINKLNCH_LifeByOwnerV2" => Some(Self::LifeByOwnerV2),
            "GKFGINKLNCH_LifeByOwnerV3" => Some(Self::LifeByOwnerV3),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Faoppmcikhj {
    SandwormLevelNotOpen = 0,
    SandwormLevelPreQuest = 1,
    SandwormLevelStart = 2,
    SandwormLevelSequelQuest = 3,
}
impl Faoppmcikhj {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::SandwormLevelNotOpen => "FAOPPMCIKHJ_SandwormLevelNotOpen",
            Self::SandwormLevelPreQuest => "FAOPPMCIKHJ_SandwormLevelPreQuest",
            Self::SandwormLevelStart => "FAOPPMCIKHJ_SandwormLevelStart",
            Self::SandwormLevelSequelQuest => "FAOPPMCIKHJ_SandwormLevelSequelQuest",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "FAOPPMCIKHJ_SandwormLevelNotOpen" => Some(Self::SandwormLevelNotOpen),
            "FAOPPMCIKHJ_SandwormLevelPreQuest" => Some(Self::SandwormLevelPreQuest),
            "FAOPPMCIKHJ_SandwormLevelStart" => Some(Self::SandwormLevelStart),
            "FAOPPMCIKHJ_SandwormLevelSequelQuest" => {
                Some(Self::SandwormLevelSequelQuest)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Oaopjbocjjd {
    None = 0,
    Fail = 1,
    Succ = 2,
    Pause = 3,
}
impl Oaopjbocjjd {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "OAOPJBOCJJD_None",
            Self::Fail => "OAOPJBOCJJD_Fail",
            Self::Succ => "OAOPJBOCJJD_Succ",
            Self::Pause => "OAOPJBOCJJD_Pause",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "OAOPJBOCJJD_None" => Some(Self::None),
            "OAOPJBOCJJD_Fail" => Some(Self::Fail),
            "OAOPJBOCJJD_Succ" => Some(Self::Succ),
            "OAOPJBOCJJD_Pause" => Some(Self::Pause),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum MotionState {
    MotionNone = 0,
    MotionReset = 1,
    MotionStandby = 2,
    MotionStandbyMove = 3,
    MotionWalk = 4,
    MotionRun = 5,
    MotionDash = 6,
    MotionClimb = 7,
    MotionClimbJump = 8,
    MotionStandbyToClimb = 9,
    MotionFight = 10,
    MotionJump = 11,
    MotionDrop = 12,
    MotionFly = 13,
    MotionSwimMove = 14,
    MotionSwimIdle = 15,
    MotionSwimDash = 16,
    MotionSwimJump = 17,
    MotionSlip = 18,
    MotionGoUpstairs = 19,
    MotionFallOnGround = 20,
    MotionJumpUpWallForStandby = 21,
    MotionJumpOffWall = 22,
    MotionPoweredFly = 23,
    MotionLadderIdle = 24,
    MotionLadderMove = 25,
    MotionLadderSlip = 26,
    MotionStandbyToLadder = 27,
    MotionLadderToStandby = 28,
    MotionDangerStandby = 29,
    MotionDangerStandbyMove = 30,
    MotionDangerWalk = 31,
    MotionDangerRun = 32,
    MotionDangerDash = 33,
    MotionCrouchIdle = 34,
    MotionCrouchMove = 35,
    MotionCrouchRoll = 36,
    MotionNotify = 37,
    MotionLandSpeed = 38,
    MotionMoveFailAck = 39,
    MotionWaterfall = 40,
    MotionDashBeforeShake = 41,
    MotionSitIdle = 42,
    MotionForceSetPos = 43,
    MotionQuestForceDrag = 44,
    MotionFollowRoute = 45,
    MotionSkiffBoarding = 46,
    MotionSkiffNormal = 47,
    MotionSkiffDash = 48,
    MotionSkiffPoweredDash = 49,
    MotionDestroyVehicle = 50,
    MotionFlyIdle = 51,
    MotionFlySlow = 52,
    MotionFlyFast = 53,
    MotionAimMove = 54,
    MotionAirCompensation = 55,
    MotionSorushNormal = 56,
    MotionRollerCoaster = 57,
    MotionDiveIdle = 58,
    MotionDiveMove = 59,
    MotionDiveDash = 60,
    MotionDiveDolphine = 61,
    MotionDebug = 62,
    MotionOceanCurrent = 63,
    MotionDiveSwimMove = 64,
    MotionDiveSwimIdle = 65,
    MotionDiveSwimDash = 66,
    MotionArcLight = 67,
    MotionArcLightSafe = 68,
    MotionVehicleStandby = 69,
    MotionVehicleRun = 70,
    MotionVehicleDash = 71,
    MotionVehicleClimb = 72,
    MotionVehicleClimbJump = 73,
    MotionVehicleStandbyToClimb = 74,
    MotionVehicleFight = 75,
    MotionVehicleJump = 76,
    MotionVehicleDrop = 77,
    MotionVehicleFly = 78,
    MotionVehicleSwimMove = 79,
    MotionVehicleSwimIdle = 80,
    MotionVehicleSwimDash = 81,
    MotionVehicleSlip = 82,
    MotionVehicleGoUpstairs = 83,
    MotionVehicleFallOnGround = 84,
    MotionVehicleJumpOffWall = 85,
    MotionVehiclePoweredFly = 86,
    MotionVehicleDangerStandby = 87,
    MotionVehicleDangerRun = 88,
    MotionVehicleDangerDash = 89,
    MotionVehicleNotify = 90,
    MotionVehicleLandSpeed = 91,
    MotionVehicleDashBeforeShake = 92,
    MotionVehicleQuestForceDrag = 93,
    MotionVehicleFollowRoute = 94,
    MotionVehicleFlyIdle = 95,
    MotionVehicleFlySlow = 96,
    MotionVehicleFlyFast = 97,
    MotionVehicleAirCompensation = 98,
    MotionVehicleArcLight = 99,
    MotionVehicleArcLightSafe = 100,
    MotionVehicleDangerSwimMove = 101,
    MotionVehicleDangerSwimIdle = 102,
    MotionVehicleDangerSwimDash = 103,
    MotionFollowCurveRoute = 104,
    MotionVehicleFollowCurveRoute = 105,
    MotionNatsaurusNormal = 106,
    MotionNatsaurusEntering = 107,
    MotionNum = 108,
}
impl MotionState {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::MotionNone => "MotionState_MotionNone",
            Self::MotionReset => "MotionState_MotionReset",
            Self::MotionStandby => "MotionState_MotionStandby",
            Self::MotionStandbyMove => "MotionState_MotionStandbyMove",
            Self::MotionWalk => "MotionState_MotionWalk",
            Self::MotionRun => "MotionState_MotionRun",
            Self::MotionDash => "MotionState_MotionDash",
            Self::MotionClimb => "MotionState_MotionClimb",
            Self::MotionClimbJump => "MotionState_MotionClimbJump",
            Self::MotionStandbyToClimb => "MotionState_MotionStandbyToClimb",
            Self::MotionFight => "MotionState_MotionFight",
            Self::MotionJump => "MotionState_MotionJump",
            Self::MotionDrop => "MotionState_MotionDrop",
            Self::MotionFly => "MotionState_MotionFly",
            Self::MotionSwimMove => "MotionState_MotionSwimMove",
            Self::MotionSwimIdle => "MotionState_MotionSwimIdle",
            Self::MotionSwimDash => "MotionState_MotionSwimDash",
            Self::MotionSwimJump => "MotionState_MotionSwimJump",
            Self::MotionSlip => "MotionState_MotionSlip",
            Self::MotionGoUpstairs => "MotionState_MotionGoUpstairs",
            Self::MotionFallOnGround => "MotionState_MotionFallOnGround",
            Self::MotionJumpUpWallForStandby => "MotionState_MotionJumpUpWallForStandby",
            Self::MotionJumpOffWall => "MotionState_MotionJumpOffWall",
            Self::MotionPoweredFly => "MotionState_MotionPoweredFly",
            Self::MotionLadderIdle => "MotionState_MotionLadderIdle",
            Self::MotionLadderMove => "MotionState_MotionLadderMove",
            Self::MotionLadderSlip => "MotionState_MotionLadderSlip",
            Self::MotionStandbyToLadder => "MotionState_MotionStandbyToLadder",
            Self::MotionLadderToStandby => "MotionState_MotionLadderToStandby",
            Self::MotionDangerStandby => "MotionState_MotionDangerStandby",
            Self::MotionDangerStandbyMove => "MotionState_MotionDangerStandbyMove",
            Self::MotionDangerWalk => "MotionState_MotionDangerWalk",
            Self::MotionDangerRun => "MotionState_MotionDangerRun",
            Self::MotionDangerDash => "MotionState_MotionDangerDash",
            Self::MotionCrouchIdle => "MotionState_MotionCrouchIdle",
            Self::MotionCrouchMove => "MotionState_MotionCrouchMove",
            Self::MotionCrouchRoll => "MotionState_MotionCrouchRoll",
            Self::MotionNotify => "MotionState_MotionNotify",
            Self::MotionLandSpeed => "MotionState_MotionLandSpeed",
            Self::MotionMoveFailAck => "MotionState_MotionMoveFailAck",
            Self::MotionWaterfall => "MotionState_MotionWaterfall",
            Self::MotionDashBeforeShake => "MotionState_MotionDashBeforeShake",
            Self::MotionSitIdle => "MotionState_MotionSitIdle",
            Self::MotionForceSetPos => "MotionState_MotionForceSetPos",
            Self::MotionQuestForceDrag => "MotionState_MotionQuestForceDrag",
            Self::MotionFollowRoute => "MotionState_MotionFollowRoute",
            Self::MotionSkiffBoarding => "MotionState_MotionSkiffBoarding",
            Self::MotionSkiffNormal => "MotionState_MotionSkiffNormal",
            Self::MotionSkiffDash => "MotionState_MotionSkiffDash",
            Self::MotionSkiffPoweredDash => "MotionState_MotionSkiffPoweredDash",
            Self::MotionDestroyVehicle => "MotionState_MotionDestroyVehicle",
            Self::MotionFlyIdle => "MotionState_MotionFlyIdle",
            Self::MotionFlySlow => "MotionState_MotionFlySlow",
            Self::MotionFlyFast => "MotionState_MotionFlyFast",
            Self::MotionAimMove => "MotionState_MotionAimMove",
            Self::MotionAirCompensation => "MotionState_MotionAirCompensation",
            Self::MotionSorushNormal => "MotionState_MotionSorushNormal",
            Self::MotionRollerCoaster => "MotionState_MotionRollerCoaster",
            Self::MotionDiveIdle => "MotionState_MotionDiveIdle",
            Self::MotionDiveMove => "MotionState_MotionDiveMove",
            Self::MotionDiveDash => "MotionState_MotionDiveDash",
            Self::MotionDiveDolphine => "MotionState_MotionDiveDolphine",
            Self::MotionDebug => "MotionState_MotionDebug",
            Self::MotionOceanCurrent => "MotionState_MotionOceanCurrent",
            Self::MotionDiveSwimMove => "MotionState_MotionDiveSwimMove",
            Self::MotionDiveSwimIdle => "MotionState_MotionDiveSwimIdle",
            Self::MotionDiveSwimDash => "MotionState_MotionDiveSwimDash",
            Self::MotionArcLight => "MotionState_MotionArcLight",
            Self::MotionArcLightSafe => "MotionState_MotionArcLightSafe",
            Self::MotionVehicleStandby => "MotionState_MotionVehicleStandby",
            Self::MotionVehicleRun => "MotionState_MotionVehicleRun",
            Self::MotionVehicleDash => "MotionState_MotionVehicleDash",
            Self::MotionVehicleClimb => "MotionState_MotionVehicleClimb",
            Self::MotionVehicleClimbJump => "MotionState_MotionVehicleClimbJump",
            Self::MotionVehicleStandbyToClimb => {
                "MotionState_MotionVehicleStandbyToClimb"
            }
            Self::MotionVehicleFight => "MotionState_MotionVehicleFight",
            Self::MotionVehicleJump => "MotionState_MotionVehicleJump",
            Self::MotionVehicleDrop => "MotionState_MotionVehicleDrop",
            Self::MotionVehicleFly => "MotionState_MotionVehicleFly",
            Self::MotionVehicleSwimMove => "MotionState_MotionVehicleSwimMove",
            Self::MotionVehicleSwimIdle => "MotionState_MotionVehicleSwimIdle",
            Self::MotionVehicleSwimDash => "MotionState_MotionVehicleSwimDash",
            Self::MotionVehicleSlip => "MotionState_MotionVehicleSlip",
            Self::MotionVehicleGoUpstairs => "MotionState_MotionVehicleGoUpstairs",
            Self::MotionVehicleFallOnGround => "MotionState_MotionVehicleFallOnGround",
            Self::MotionVehicleJumpOffWall => "MotionState_MotionVehicleJumpOffWall",
            Self::MotionVehiclePoweredFly => "MotionState_MotionVehiclePoweredFly",
            Self::MotionVehicleDangerStandby => "MotionState_MotionVehicleDangerStandby",
            Self::MotionVehicleDangerRun => "MotionState_MotionVehicleDangerRun",
            Self::MotionVehicleDangerDash => "MotionState_MotionVehicleDangerDash",
            Self::MotionVehicleNotify => "MotionState_MotionVehicleNotify",
            Self::MotionVehicleLandSpeed => "MotionState_MotionVehicleLandSpeed",
            Self::MotionVehicleDashBeforeShake => {
                "MotionState_MotionVehicleDashBeforeShake"
            }
            Self::MotionVehicleQuestForceDrag => {
                "MotionState_MotionVehicleQuestForceDrag"
            }
            Self::MotionVehicleFollowRoute => "MotionState_MotionVehicleFollowRoute",
            Self::MotionVehicleFlyIdle => "MotionState_MotionVehicleFlyIdle",
            Self::MotionVehicleFlySlow => "MotionState_MotionVehicleFlySlow",
            Self::MotionVehicleFlyFast => "MotionState_MotionVehicleFlyFast",
            Self::MotionVehicleAirCompensation => {
                "MotionState_MotionVehicleAirCompensation"
            }
            Self::MotionVehicleArcLight => "MotionState_MotionVehicleArcLight",
            Self::MotionVehicleArcLightSafe => "MotionState_MotionVehicleArcLightSafe",
            Self::MotionVehicleDangerSwimMove => {
                "MotionState_MotionVehicleDangerSwimMove"
            }
            Self::MotionVehicleDangerSwimIdle => {
                "MotionState_MotionVehicleDangerSwimIdle"
            }
            Self::MotionVehicleDangerSwimDash => {
                "MotionState_MotionVehicleDangerSwimDash"
            }
            Self::MotionFollowCurveRoute => "MotionState_MotionFollowCurveRoute",
            Self::MotionVehicleFollowCurveRoute => {
                "MotionState_MotionVehicleFollowCurveRoute"
            }
            Self::MotionNatsaurusNormal => "MotionState_MotionNatsaurusNormal",
            Self::MotionNatsaurusEntering => "MotionState_MotionNatsaurusEntering",
            Self::MotionNum => "MotionState_MotionNum",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "MotionState_MotionNone" => Some(Self::MotionNone),
            "MotionState_MotionReset" => Some(Self::MotionReset),
            "MotionState_MotionStandby" => Some(Self::MotionStandby),
            "MotionState_MotionStandbyMove" => Some(Self::MotionStandbyMove),
            "MotionState_MotionWalk" => Some(Self::MotionWalk),
            "MotionState_MotionRun" => Some(Self::MotionRun),
            "MotionState_MotionDash" => Some(Self::MotionDash),
            "MotionState_MotionClimb" => Some(Self::MotionClimb),
            "MotionState_MotionClimbJump" => Some(Self::MotionClimbJump),
            "MotionState_MotionStandbyToClimb" => Some(Self::MotionStandbyToClimb),
            "MotionState_MotionFight" => Some(Self::MotionFight),
            "MotionState_MotionJump" => Some(Self::MotionJump),
            "MotionState_MotionDrop" => Some(Self::MotionDrop),
            "MotionState_MotionFly" => Some(Self::MotionFly),
            "MotionState_MotionSwimMove" => Some(Self::MotionSwimMove),
            "MotionState_MotionSwimIdle" => Some(Self::MotionSwimIdle),
            "MotionState_MotionSwimDash" => Some(Self::MotionSwimDash),
            "MotionState_MotionSwimJump" => Some(Self::MotionSwimJump),
            "MotionState_MotionSlip" => Some(Self::MotionSlip),
            "MotionState_MotionGoUpstairs" => Some(Self::MotionGoUpstairs),
            "MotionState_MotionFallOnGround" => Some(Self::MotionFallOnGround),
            "MotionState_MotionJumpUpWallForStandby" => {
                Some(Self::MotionJumpUpWallForStandby)
            }
            "MotionState_MotionJumpOffWall" => Some(Self::MotionJumpOffWall),
            "MotionState_MotionPoweredFly" => Some(Self::MotionPoweredFly),
            "MotionState_MotionLadderIdle" => Some(Self::MotionLadderIdle),
            "MotionState_MotionLadderMove" => Some(Self::MotionLadderMove),
            "MotionState_MotionLadderSlip" => Some(Self::MotionLadderSlip),
            "MotionState_MotionStandbyToLadder" => Some(Self::MotionStandbyToLadder),
            "MotionState_MotionLadderToStandby" => Some(Self::MotionLadderToStandby),
            "MotionState_MotionDangerStandby" => Some(Self::MotionDangerStandby),
            "MotionState_MotionDangerStandbyMove" => Some(Self::MotionDangerStandbyMove),
            "MotionState_MotionDangerWalk" => Some(Self::MotionDangerWalk),
            "MotionState_MotionDangerRun" => Some(Self::MotionDangerRun),
            "MotionState_MotionDangerDash" => Some(Self::MotionDangerDash),
            "MotionState_MotionCrouchIdle" => Some(Self::MotionCrouchIdle),
            "MotionState_MotionCrouchMove" => Some(Self::MotionCrouchMove),
            "MotionState_MotionCrouchRoll" => Some(Self::MotionCrouchRoll),
            "MotionState_MotionNotify" => Some(Self::MotionNotify),
            "MotionState_MotionLandSpeed" => Some(Self::MotionLandSpeed),
            "MotionState_MotionMoveFailAck" => Some(Self::MotionMoveFailAck),
            "MotionState_MotionWaterfall" => Some(Self::MotionWaterfall),
            "MotionState_MotionDashBeforeShake" => Some(Self::MotionDashBeforeShake),
            "MotionState_MotionSitIdle" => Some(Self::MotionSitIdle),
            "MotionState_MotionForceSetPos" => Some(Self::MotionForceSetPos),
            "MotionState_MotionQuestForceDrag" => Some(Self::MotionQuestForceDrag),
            "MotionState_MotionFollowRoute" => Some(Self::MotionFollowRoute),
            "MotionState_MotionSkiffBoarding" => Some(Self::MotionSkiffBoarding),
            "MotionState_MotionSkiffNormal" => Some(Self::MotionSkiffNormal),
            "MotionState_MotionSkiffDash" => Some(Self::MotionSkiffDash),
            "MotionState_MotionSkiffPoweredDash" => Some(Self::MotionSkiffPoweredDash),
            "MotionState_MotionDestroyVehicle" => Some(Self::MotionDestroyVehicle),
            "MotionState_MotionFlyIdle" => Some(Self::MotionFlyIdle),
            "MotionState_MotionFlySlow" => Some(Self::MotionFlySlow),
            "MotionState_MotionFlyFast" => Some(Self::MotionFlyFast),
            "MotionState_MotionAimMove" => Some(Self::MotionAimMove),
            "MotionState_MotionAirCompensation" => Some(Self::MotionAirCompensation),
            "MotionState_MotionSorushNormal" => Some(Self::MotionSorushNormal),
            "MotionState_MotionRollerCoaster" => Some(Self::MotionRollerCoaster),
            "MotionState_MotionDiveIdle" => Some(Self::MotionDiveIdle),
            "MotionState_MotionDiveMove" => Some(Self::MotionDiveMove),
            "MotionState_MotionDiveDash" => Some(Self::MotionDiveDash),
            "MotionState_MotionDiveDolphine" => Some(Self::MotionDiveDolphine),
            "MotionState_MotionDebug" => Some(Self::MotionDebug),
            "MotionState_MotionOceanCurrent" => Some(Self::MotionOceanCurrent),
            "MotionState_MotionDiveSwimMove" => Some(Self::MotionDiveSwimMove),
            "MotionState_MotionDiveSwimIdle" => Some(Self::MotionDiveSwimIdle),
            "MotionState_MotionDiveSwimDash" => Some(Self::MotionDiveSwimDash),
            "MotionState_MotionArcLight" => Some(Self::MotionArcLight),
            "MotionState_MotionArcLightSafe" => Some(Self::MotionArcLightSafe),
            "MotionState_MotionVehicleStandby" => Some(Self::MotionVehicleStandby),
            "MotionState_MotionVehicleRun" => Some(Self::MotionVehicleRun),
            "MotionState_MotionVehicleDash" => Some(Self::MotionVehicleDash),
            "MotionState_MotionVehicleClimb" => Some(Self::MotionVehicleClimb),
            "MotionState_MotionVehicleClimbJump" => Some(Self::MotionVehicleClimbJump),
            "MotionState_MotionVehicleStandbyToClimb" => {
                Some(Self::MotionVehicleStandbyToClimb)
            }
            "MotionState_MotionVehicleFight" => Some(Self::MotionVehicleFight),
            "MotionState_MotionVehicleJump" => Some(Self::MotionVehicleJump),
            "MotionState_MotionVehicleDrop" => Some(Self::MotionVehicleDrop),
            "MotionState_MotionVehicleFly" => Some(Self::MotionVehicleFly),
            "MotionState_MotionVehicleSwimMove" => Some(Self::MotionVehicleSwimMove),
            "MotionState_MotionVehicleSwimIdle" => Some(Self::MotionVehicleSwimIdle),
            "MotionState_MotionVehicleSwimDash" => Some(Self::MotionVehicleSwimDash),
            "MotionState_MotionVehicleSlip" => Some(Self::MotionVehicleSlip),
            "MotionState_MotionVehicleGoUpstairs" => Some(Self::MotionVehicleGoUpstairs),
            "MotionState_MotionVehicleFallOnGround" => {
                Some(Self::MotionVehicleFallOnGround)
            }
            "MotionState_MotionVehicleJumpOffWall" => {
                Some(Self::MotionVehicleJumpOffWall)
            }
            "MotionState_MotionVehiclePoweredFly" => Some(Self::MotionVehiclePoweredFly),
            "MotionState_MotionVehicleDangerStandby" => {
                Some(Self::MotionVehicleDangerStandby)
            }
            "MotionState_MotionVehicleDangerRun" => Some(Self::MotionVehicleDangerRun),
            "MotionState_MotionVehicleDangerDash" => Some(Self::MotionVehicleDangerDash),
            "MotionState_MotionVehicleNotify" => Some(Self::MotionVehicleNotify),
            "MotionState_MotionVehicleLandSpeed" => Some(Self::MotionVehicleLandSpeed),
            "MotionState_MotionVehicleDashBeforeShake" => {
                Some(Self::MotionVehicleDashBeforeShake)
            }
            "MotionState_MotionVehicleQuestForceDrag" => {
                Some(Self::MotionVehicleQuestForceDrag)
            }
            "MotionState_MotionVehicleFollowRoute" => {
                Some(Self::MotionVehicleFollowRoute)
            }
            "MotionState_MotionVehicleFlyIdle" => Some(Self::MotionVehicleFlyIdle),
            "MotionState_MotionVehicleFlySlow" => Some(Self::MotionVehicleFlySlow),
            "MotionState_MotionVehicleFlyFast" => Some(Self::MotionVehicleFlyFast),
            "MotionState_MotionVehicleAirCompensation" => {
                Some(Self::MotionVehicleAirCompensation)
            }
            "MotionState_MotionVehicleArcLight" => Some(Self::MotionVehicleArcLight),
            "MotionState_MotionVehicleArcLightSafe" => {
                Some(Self::MotionVehicleArcLightSafe)
            }
            "MotionState_MotionVehicleDangerSwimMove" => {
                Some(Self::MotionVehicleDangerSwimMove)
            }
            "MotionState_MotionVehicleDangerSwimIdle" => {
                Some(Self::MotionVehicleDangerSwimIdle)
            }
            "MotionState_MotionVehicleDangerSwimDash" => {
                Some(Self::MotionVehicleDangerSwimDash)
            }
            "MotionState_MotionFollowCurveRoute" => Some(Self::MotionFollowCurveRoute),
            "MotionState_MotionVehicleFollowCurveRoute" => {
                Some(Self::MotionVehicleFollowCurveRoute)
            }
            "MotionState_MotionNatsaurusNormal" => Some(Self::MotionNatsaurusNormal),
            "MotionState_MotionNatsaurusEntering" => Some(Self::MotionNatsaurusEntering),
            "MotionState_MotionNum" => Some(Self::MotionNum),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Heaiploaaok {
    FishNoRewardNone = 0,
    FishNoRewardActivityLimit = 1,
    FishNoRewardBagLimit = 2,
    FishNoRewardPoolLimit = 3,
}
impl Heaiploaaok {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::FishNoRewardNone => "HEAIPLOAAOK_FishNoRewardNone",
            Self::FishNoRewardActivityLimit => "HEAIPLOAAOK_FishNoRewardActivityLimit",
            Self::FishNoRewardBagLimit => "HEAIPLOAAOK_FishNoRewardBagLimit",
            Self::FishNoRewardPoolLimit => "HEAIPLOAAOK_FishNoRewardPoolLimit",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "HEAIPLOAAOK_FishNoRewardNone" => Some(Self::FishNoRewardNone),
            "HEAIPLOAAOK_FishNoRewardActivityLimit" => {
                Some(Self::FishNoRewardActivityLimit)
            }
            "HEAIPLOAAOK_FishNoRewardBagLimit" => Some(Self::FishNoRewardBagLimit),
            "HEAIPLOAAOK_FishNoRewardPoolLimit" => Some(Self::FishNoRewardPoolLimit),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Jkbhgieflni {
    PlayerJudge = 0,
    PlayerEnterOptionRefuse = 1,
    PlayerEnterOptionDirect = 2,
    SystemJudge = 3,
    HostInMatch = 4,
    PsPlayerNotAcceptOthers = 5,
    OpenStateNotOpen = 6,
    HostInEditMode = 7,
    PriorCheck = 8,
    XboxPlayerNotAcceptOthers = 9,
    PlayerNotAcceptOtherPlatform = 10,
    XboxOnly = 11,
}
impl Jkbhgieflni {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::PlayerJudge => "JKBHGIEFLNI_PlayerJudge",
            Self::PlayerEnterOptionRefuse => "JKBHGIEFLNI_PlayerEnterOptionRefuse",
            Self::PlayerEnterOptionDirect => "JKBHGIEFLNI_PlayerEnterOptionDirect",
            Self::SystemJudge => "JKBHGIEFLNI_SystemJudge",
            Self::HostInMatch => "JKBHGIEFLNI_HostInMatch",
            Self::PsPlayerNotAcceptOthers => "JKBHGIEFLNI_PsPlayerNotAcceptOthers",
            Self::OpenStateNotOpen => "JKBHGIEFLNI_OpenStateNotOpen",
            Self::HostInEditMode => "JKBHGIEFLNI_HostInEditMode",
            Self::PriorCheck => "JKBHGIEFLNI_PriorCheck",
            Self::XboxPlayerNotAcceptOthers => "JKBHGIEFLNI_XboxPlayerNotAcceptOthers",
            Self::PlayerNotAcceptOtherPlatform => {
                "JKBHGIEFLNI_PlayerNotAcceptOtherPlatform"
            }
            Self::XboxOnly => "JKBHGIEFLNI_XboxOnly",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "JKBHGIEFLNI_PlayerJudge" => Some(Self::PlayerJudge),
            "JKBHGIEFLNI_PlayerEnterOptionRefuse" => Some(Self::PlayerEnterOptionRefuse),
            "JKBHGIEFLNI_PlayerEnterOptionDirect" => Some(Self::PlayerEnterOptionDirect),
            "JKBHGIEFLNI_SystemJudge" => Some(Self::SystemJudge),
            "JKBHGIEFLNI_HostInMatch" => Some(Self::HostInMatch),
            "JKBHGIEFLNI_PsPlayerNotAcceptOthers" => Some(Self::PsPlayerNotAcceptOthers),
            "JKBHGIEFLNI_OpenStateNotOpen" => Some(Self::OpenStateNotOpen),
            "JKBHGIEFLNI_HostInEditMode" => Some(Self::HostInEditMode),
            "JKBHGIEFLNI_PriorCheck" => Some(Self::PriorCheck),
            "JKBHGIEFLNI_XboxPlayerNotAcceptOthers" => {
                Some(Self::XboxPlayerNotAcceptOthers)
            }
            "JKBHGIEFLNI_PlayerNotAcceptOtherPlatform" => {
                Some(Self::PlayerNotAcceptOtherPlatform)
            }
            "JKBHGIEFLNI_XboxOnly" => Some(Self::XboxOnly),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Bpobbmngmdl {
    MaterialDeleteReturnBag = 0,
    MaterialDeleteReturnSeed = 1,
}
impl Bpobbmngmdl {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::MaterialDeleteReturnBag => "BPOBBMNGMDL_MaterialDeleteReturnBag",
            Self::MaterialDeleteReturnSeed => "BPOBBMNGMDL_MaterialDeleteReturnSeed",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "BPOBBMNGMDL_MaterialDeleteReturnBag" => Some(Self::MaterialDeleteReturnBag),
            "BPOBBMNGMDL_MaterialDeleteReturnSeed" => {
                Some(Self::MaterialDeleteReturnSeed)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Peelkmkjkpp {
    RentSucc = 0,
    RentLimit = 1,
    RentRepeated = 2,
}
impl Peelkmkjkpp {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::RentSucc => "PEELKMKJKPP_RentSucc",
            Self::RentLimit => "PEELKMKJKPP_RentLimit",
            Self::RentRepeated => "PEELKMKJKPP_RentRepeated",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "PEELKMKJKPP_RentSucc" => Some(Self::RentSucc),
            "PEELKMKJKPP_RentLimit" => Some(Self::RentLimit),
            "PEELKMKJKPP_RentRepeated" => Some(Self::RentRepeated),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Hkjeajebbkk {
    Edit = 0,
    SelfPass = 1,
    Published = 2,
}
impl Hkjeajebbkk {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Edit => "HKJEAJEBBKK_Edit",
            Self::SelfPass => "HKJEAJEBBKK_SelfPass",
            Self::Published => "HKJEAJEBBKK_Published",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "HKJEAJEBBKK_Edit" => Some(Self::Edit),
            "HKJEAJEBBKK_SelfPass" => Some(Self::SelfPass),
            "HKJEAJEBBKK_Published" => Some(Self::Published),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Elldepilofc {
    None = 0,
    Enter = 1,
    Leave = 2,
}
impl Elldepilofc {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "ELLDEPILOFC_None",
            Self::Enter => "ELLDEPILOFC_Enter",
            Self::Leave => "ELLDEPILOFC_Leave",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "ELLDEPILOFC_None" => Some(Self::None),
            "ELLDEPILOFC_Enter" => Some(Self::Enter),
            "ELLDEPILOFC_Leave" => Some(Self::Leave),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Jpbmhlijinp {
    None = 0,
    Send = 1,
    Accept = 2,
    Refuse = 3,
}
impl Jpbmhlijinp {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "JPBMHLIJINP_None",
            Self::Send => "JPBMHLIJINP_Send",
            Self::Accept => "JPBMHLIJINP_Accept",
            Self::Refuse => "JPBMHLIJINP_Refuse",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "JPBMHLIJINP_None" => Some(Self::None),
            "JPBMHLIJINP_Send" => Some(Self::Send),
            "JPBMHLIJINP_Accept" => Some(Self::Accept),
            "JPBMHLIJINP_Refuse" => Some(Self::Refuse),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Ligdiknfkjc {
    None = 0,
    Succ = 1,
    Fail = 2,
    Timeout = 3,
    Cancel = 4,
    Exit = 5,
}
impl Ligdiknfkjc {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "LIGDIKNFKJC_None",
            Self::Succ => "LIGDIKNFKJC_Succ",
            Self::Fail => "LIGDIKNFKJC_Fail",
            Self::Timeout => "LIGDIKNFKJC_Timeout",
            Self::Cancel => "LIGDIKNFKJC_Cancel",
            Self::Exit => "LIGDIKNFKJC_Exit",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "LIGDIKNFKJC_None" => Some(Self::None),
            "LIGDIKNFKJC_Succ" => Some(Self::Succ),
            "LIGDIKNFKJC_Fail" => Some(Self::Fail),
            "LIGDIKNFKJC_Timeout" => Some(Self::Timeout),
            "LIGDIKNFKJC_Cancel" => Some(Self::Cancel),
            "LIGDIKNFKJC_Exit" => Some(Self::Exit),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Flmmanlpmnb {
    ServerLogNone = 0,
    ServerLogAbility = 1,
    ServerLogLevel = 2,
    ServerLogEntity = 3,
    ServerLogLua = 4,
    ServerLogDailytask = 5,
}
impl Flmmanlpmnb {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::ServerLogNone => "FLMMANLPMNB_ServerLogNone",
            Self::ServerLogAbility => "FLMMANLPMNB_ServerLogAbility",
            Self::ServerLogLevel => "FLMMANLPMNB_ServerLogLevel",
            Self::ServerLogEntity => "FLMMANLPMNB_ServerLogEntity",
            Self::ServerLogLua => "FLMMANLPMNB_ServerLogLua",
            Self::ServerLogDailytask => "FLMMANLPMNB_ServerLogDailytask",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "FLMMANLPMNB_ServerLogNone" => Some(Self::ServerLogNone),
            "FLMMANLPMNB_ServerLogAbility" => Some(Self::ServerLogAbility),
            "FLMMANLPMNB_ServerLogLevel" => Some(Self::ServerLogLevel),
            "FLMMANLPMNB_ServerLogEntity" => Some(Self::ServerLogEntity),
            "FLMMANLPMNB_ServerLogLua" => Some(Self::ServerLogLua),
            "FLMMANLPMNB_ServerLogDailytask" => Some(Self::ServerLogDailytask),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Kmhnikbioee {
    InBattleMechanicusStageNone = 0,
    InBattleMechanicusStageBuild = 1,
    InBattleMechanicusStageCardFlip = 2,
    InBattleMechanicusStageKill = 3,
}
impl Kmhnikbioee {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::InBattleMechanicusStageNone => {
                "KMHNIKBIOEE_InBattleMechanicusStageNone"
            }
            Self::InBattleMechanicusStageBuild => {
                "KMHNIKBIOEE_InBattleMechanicusStageBuild"
            }
            Self::InBattleMechanicusStageCardFlip => {
                "KMHNIKBIOEE_InBattleMechanicusStageCardFlip"
            }
            Self::InBattleMechanicusStageKill => {
                "KMHNIKBIOEE_InBattleMechanicusStageKill"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "KMHNIKBIOEE_InBattleMechanicusStageNone" => {
                Some(Self::InBattleMechanicusStageNone)
            }
            "KMHNIKBIOEE_InBattleMechanicusStageBuild" => {
                Some(Self::InBattleMechanicusStageBuild)
            }
            "KMHNIKBIOEE_InBattleMechanicusStageCardFlip" => {
                Some(Self::InBattleMechanicusStageCardFlip)
            }
            "KMHNIKBIOEE_InBattleMechanicusStageKill" => {
                Some(Self::InBattleMechanicusStageKill)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Gpkbobclbcl {
    CreateNone = 0,
    CreateQuest = 1,
    CreateEnergy = 2,
}
impl Gpkbobclbcl {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::CreateNone => "GPKBOBCLBCL_CreateNone",
            Self::CreateQuest => "GPKBOBCLBCL_CreateQuest",
            Self::CreateEnergy => "GPKBOBCLBCL_CreateEnergy",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "GPKBOBCLBCL_CreateNone" => Some(Self::CreateNone),
            "GPKBOBCLBCL_CreateQuest" => Some(Self::CreateQuest),
            "GPKBOBCLBCL_CreateEnergy" => Some(Self::CreateEnergy),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Hmbfchkmegd {
    None = 0,
    StarredDungeon = 1,
    StarredRoom = 2,
    Owner = 3,
    History = 4,
    Search = 5,
    Official = 6,
    Template = 7,
}
impl Hmbfchkmegd {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "HMBFCHKMEGD_None",
            Self::StarredDungeon => "HMBFCHKMEGD_StarredDungeon",
            Self::StarredRoom => "HMBFCHKMEGD_StarredRoom",
            Self::Owner => "HMBFCHKMEGD_Owner",
            Self::History => "HMBFCHKMEGD_History",
            Self::Search => "HMBFCHKMEGD_Search",
            Self::Official => "HMBFCHKMEGD_Official",
            Self::Template => "HMBFCHKMEGD_Template",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "HMBFCHKMEGD_None" => Some(Self::None),
            "HMBFCHKMEGD_StarredDungeon" => Some(Self::StarredDungeon),
            "HMBFCHKMEGD_StarredRoom" => Some(Self::StarredRoom),
            "HMBFCHKMEGD_Owner" => Some(Self::Owner),
            "HMBFCHKMEGD_History" => Some(Self::History),
            "HMBFCHKMEGD_Search" => Some(Self::Search),
            "HMBFCHKMEGD_Official" => Some(Self::Official),
            "HMBFCHKMEGD_Template" => Some(Self::Template),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Elenllnehne {
    None = 0,
    Normal = 1,
    Template = 2,
    Exam = 3,
}
impl Elenllnehne {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "ELENLLNEHNE_None",
            Self::Normal => "ELENLLNEHNE_Normal",
            Self::Template => "ELENLLNEHNE_Template",
            Self::Exam => "ELENLLNEHNE_Exam",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "ELENLLNEHNE_None" => Some(Self::None),
            "ELENLLNEHNE_Normal" => Some(Self::Normal),
            "ELENLLNEHNE_Template" => Some(Self::Template),
            "ELENLLNEHNE_Exam" => Some(Self::Exam),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Ikemebcaiic {
    HideAndSeekStagePrepare = 0,
    HideAndSeekStagePick = 1,
    HideAndSeekStageGame = 2,
    HideAndSeekStageHide = 3,
    HideAndSeekStageSeek = 4,
    HideAndSeekStageSettle = 5,
}
impl Ikemebcaiic {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::HideAndSeekStagePrepare => "IKEMEBCAIIC_HideAndSeekStagePrepare",
            Self::HideAndSeekStagePick => "IKEMEBCAIIC_HideAndSeekStagePick",
            Self::HideAndSeekStageGame => "IKEMEBCAIIC_HideAndSeekStageGame",
            Self::HideAndSeekStageHide => "IKEMEBCAIIC_HideAndSeekStageHide",
            Self::HideAndSeekStageSeek => "IKEMEBCAIIC_HideAndSeekStageSeek",
            Self::HideAndSeekStageSettle => "IKEMEBCAIIC_HideAndSeekStageSettle",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "IKEMEBCAIIC_HideAndSeekStagePrepare" => Some(Self::HideAndSeekStagePrepare),
            "IKEMEBCAIIC_HideAndSeekStagePick" => Some(Self::HideAndSeekStagePick),
            "IKEMEBCAIIC_HideAndSeekStageGame" => Some(Self::HideAndSeekStageGame),
            "IKEMEBCAIIC_HideAndSeekStageHide" => Some(Self::HideAndSeekStageHide),
            "IKEMEBCAIIC_HideAndSeekStageSeek" => Some(Self::HideAndSeekStageSeek),
            "IKEMEBCAIIC_HideAndSeekStageSettle" => Some(Self::HideAndSeekStageSettle),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Phfcnlmknfn {
    DealAddFriendReject = 0,
    DealAddFriendAccept = 1,
}
impl Phfcnlmknfn {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::DealAddFriendReject => "PHFCNLMKNFN_DealAddFriendReject",
            Self::DealAddFriendAccept => "PHFCNLMKNFN_DealAddFriendAccept",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "PHFCNLMKNFN_DealAddFriendReject" => Some(Self::DealAddFriendReject),
            "PHFCNLMKNFN_DealAddFriendAccept" => Some(Self::DealAddFriendAccept),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Fcaoiofeiga {
    Inner = 0,
    TileBound = 1,
    TileBoundUnconnect = 2,
    TileBoundOveride = 3,
}
impl Fcaoiofeiga {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Inner => "FCAOIOFEIGA_Inner",
            Self::TileBound => "FCAOIOFEIGA_TileBound",
            Self::TileBoundUnconnect => "FCAOIOFEIGA_TileBoundUnconnect",
            Self::TileBoundOveride => "FCAOIOFEIGA_TileBoundOveride",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "FCAOIOFEIGA_Inner" => Some(Self::Inner),
            "FCAOIOFEIGA_TileBound" => Some(Self::TileBound),
            "FCAOIOFEIGA_TileBoundUnconnect" => Some(Self::TileBoundUnconnect),
            "FCAOIOFEIGA_TileBoundOveride" => Some(Self::TileBoundOveride),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum PlayerDieType {
    PlayerDieNone = 0,
    PlayerDieKillByMonster = 1,
    PlayerDieKillByGear = 2,
    PlayerDieFall = 3,
    PlayerDieDrawn = 4,
    PlayerDieAbyss = 5,
    PlayerDieGm = 6,
    PlayerDieClimateCold = 7,
    PlayerDieStormLighting = 8,
    PlayerDieDirtyWaterErosion = 9,
    PlayerDieLiquidPhlogiston = 10,
}
impl PlayerDieType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::PlayerDieNone => "PlayerDieType_PlayerDieNone",
            Self::PlayerDieKillByMonster => "PlayerDieType_PlayerDieKillByMonster",
            Self::PlayerDieKillByGear => "PlayerDieType_PlayerDieKillByGear",
            Self::PlayerDieFall => "PlayerDieType_PlayerDieFall",
            Self::PlayerDieDrawn => "PlayerDieType_PlayerDieDrawn",
            Self::PlayerDieAbyss => "PlayerDieType_PlayerDieAbyss",
            Self::PlayerDieGm => "PlayerDieType_PlayerDieGm",
            Self::PlayerDieClimateCold => "PlayerDieType_PlayerDieClimateCold",
            Self::PlayerDieStormLighting => "PlayerDieType_PlayerDieStormLighting",
            Self::PlayerDieDirtyWaterErosion => {
                "PlayerDieType_PlayerDieDirtyWaterErosion"
            }
            Self::PlayerDieLiquidPhlogiston => "PlayerDieType_PlayerDieLiquidPhlogiston",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "PlayerDieType_PlayerDieNone" => Some(Self::PlayerDieNone),
            "PlayerDieType_PlayerDieKillByMonster" => Some(Self::PlayerDieKillByMonster),
            "PlayerDieType_PlayerDieKillByGear" => Some(Self::PlayerDieKillByGear),
            "PlayerDieType_PlayerDieFall" => Some(Self::PlayerDieFall),
            "PlayerDieType_PlayerDieDrawn" => Some(Self::PlayerDieDrawn),
            "PlayerDieType_PlayerDieAbyss" => Some(Self::PlayerDieAbyss),
            "PlayerDieType_PlayerDieGm" => Some(Self::PlayerDieGm),
            "PlayerDieType_PlayerDieClimateCold" => Some(Self::PlayerDieClimateCold),
            "PlayerDieType_PlayerDieStormLighting" => Some(Self::PlayerDieStormLighting),
            "PlayerDieType_PlayerDieDirtyWaterErosion" => {
                Some(Self::PlayerDieDirtyWaterErosion)
            }
            "PlayerDieType_PlayerDieLiquidPhlogiston" => {
                Some(Self::PlayerDieLiquidPhlogiston)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Makkgbfakjh {
    TowerSkipFloorStateNone = 0,
    TowerSkipFloorStateCanNotSkip = 1,
    TowerSkipFloorStateHasReward = 2,
    TowerSkipFloorStateTakenReward = 3,
}
impl Makkgbfakjh {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::TowerSkipFloorStateNone => "MAKKGBFAKJH_TowerSkipFloorStateNone",
            Self::TowerSkipFloorStateCanNotSkip => {
                "MAKKGBFAKJH_TowerSkipFloorStateCanNotSkip"
            }
            Self::TowerSkipFloorStateHasReward => {
                "MAKKGBFAKJH_TowerSkipFloorStateHasReward"
            }
            Self::TowerSkipFloorStateTakenReward => {
                "MAKKGBFAKJH_TowerSkipFloorStateTakenReward"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "MAKKGBFAKJH_TowerSkipFloorStateNone" => Some(Self::TowerSkipFloorStateNone),
            "MAKKGBFAKJH_TowerSkipFloorStateCanNotSkip" => {
                Some(Self::TowerSkipFloorStateCanNotSkip)
            }
            "MAKKGBFAKJH_TowerSkipFloorStateHasReward" => {
                Some(Self::TowerSkipFloorStateHasReward)
            }
            "MAKKGBFAKJH_TowerSkipFloorStateTakenReward" => {
                Some(Self::TowerSkipFloorStateTakenReward)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Mphajnofphp {
    None = 0,
    Leave = 1,
    Pending = 2,
    Idle = 3,
}
impl Mphajnofphp {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "MPHAJNOFPHP_None",
            Self::Leave => "MPHAJNOFPHP_Leave",
            Self::Pending => "MPHAJNOFPHP_Pending",
            Self::Idle => "MPHAJNOFPHP_Idle",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "MPHAJNOFPHP_None" => Some(Self::None),
            "MPHAJNOFPHP_Leave" => Some(Self::Leave),
            "MPHAJNOFPHP_Pending" => Some(Self::Pending),
            "MPHAJNOFPHP_Idle" => Some(Self::Idle),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Dmlkjlijnbd {
    None = 0,
    Offline = 1,
    Loading = 2,
    Entered = 3,
    Left = 4,
}
impl Dmlkjlijnbd {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "DMLKJLIJNBD_None",
            Self::Offline => "DMLKJLIJNBD_Offline",
            Self::Loading => "DMLKJLIJNBD_Loading",
            Self::Entered => "DMLKJLIJNBD_Entered",
            Self::Left => "DMLKJLIJNBD_Left",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "DMLKJLIJNBD_None" => Some(Self::None),
            "DMLKJLIJNBD_Offline" => Some(Self::Offline),
            "DMLKJLIJNBD_Loading" => Some(Self::Loading),
            "DMLKJLIJNBD_Entered" => Some(Self::Entered),
            "DMLKJLIJNBD_Left" => Some(Self::Left),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Lincbkjpoll {
    BattlePassUnlockInvalid = 0,
    BattlePassUnlockFree = 1,
    BattlePassUnlockPaid = 2,
}
impl Lincbkjpoll {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::BattlePassUnlockInvalid => "LINCBKJPOLL_BattlePassUnlockInvalid",
            Self::BattlePassUnlockFree => "LINCBKJPOLL_BattlePassUnlockFree",
            Self::BattlePassUnlockPaid => "LINCBKJPOLL_BattlePassUnlockPaid",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "LINCBKJPOLL_BattlePassUnlockInvalid" => Some(Self::BattlePassUnlockInvalid),
            "LINCBKJPOLL_BattlePassUnlockFree" => Some(Self::BattlePassUnlockFree),
            "LINCBKJPOLL_BattlePassUnlockPaid" => Some(Self::BattlePassUnlockPaid),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Kabbepllgoj {
    Default = 0,
    Die = 1,
    Surrender = 2,
    Disconnected = 3,
    RoundLimit = 4,
    Gm = 5,
    NoPlayer = 6,
    GiveUp = 7,
    InitTimeout = 8,
    Effect = 9,
    ExpireTimeout = 10,
}
impl Kabbepllgoj {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Default => "KABBEPLLGOJ_Default",
            Self::Die => "KABBEPLLGOJ_Die",
            Self::Surrender => "KABBEPLLGOJ_Surrender",
            Self::Disconnected => "KABBEPLLGOJ_Disconnected",
            Self::RoundLimit => "KABBEPLLGOJ_RoundLimit",
            Self::Gm => "KABBEPLLGOJ_Gm",
            Self::NoPlayer => "KABBEPLLGOJ_NoPlayer",
            Self::GiveUp => "KABBEPLLGOJ_GiveUp",
            Self::InitTimeout => "KABBEPLLGOJ_InitTimeout",
            Self::Effect => "KABBEPLLGOJ_Effect",
            Self::ExpireTimeout => "KABBEPLLGOJ_ExpireTimeout",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "KABBEPLLGOJ_Default" => Some(Self::Default),
            "KABBEPLLGOJ_Die" => Some(Self::Die),
            "KABBEPLLGOJ_Surrender" => Some(Self::Surrender),
            "KABBEPLLGOJ_Disconnected" => Some(Self::Disconnected),
            "KABBEPLLGOJ_RoundLimit" => Some(Self::RoundLimit),
            "KABBEPLLGOJ_Gm" => Some(Self::Gm),
            "KABBEPLLGOJ_NoPlayer" => Some(Self::NoPlayer),
            "KABBEPLLGOJ_GiveUp" => Some(Self::GiveUp),
            "KABBEPLLGOJ_InitTimeout" => Some(Self::InitTimeout),
            "KABBEPLLGOJ_Effect" => Some(Self::Effect),
            "KABBEPLLGOJ_ExpireTimeout" => Some(Self::ExpireTimeout),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Ecncmbdmagd {
    QuestAbyssWarLimitRegionStatusNone = 0,
    QuestAbyssWarLimitRegionStatusClose = 1,
    QuestAbyssWarLimitRegionStatusToBeStarted = 2,
    QuestAbyssWarLimitRegionStatusStart = 3,
    QuestAbyssWarLimitRegionStatusToBeClosed = 4,
}
impl Ecncmbdmagd {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::QuestAbyssWarLimitRegionStatusNone => {
                "ECNCMBDMAGD_QuestAbyssWarLimitRegionStatusNone"
            }
            Self::QuestAbyssWarLimitRegionStatusClose => {
                "ECNCMBDMAGD_QuestAbyssWarLimitRegionStatusClose"
            }
            Self::QuestAbyssWarLimitRegionStatusToBeStarted => {
                "ECNCMBDMAGD_QuestAbyssWarLimitRegionStatusToBeStarted"
            }
            Self::QuestAbyssWarLimitRegionStatusStart => {
                "ECNCMBDMAGD_QuestAbyssWarLimitRegionStatusStart"
            }
            Self::QuestAbyssWarLimitRegionStatusToBeClosed => {
                "ECNCMBDMAGD_QuestAbyssWarLimitRegionStatusToBeClosed"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "ECNCMBDMAGD_QuestAbyssWarLimitRegionStatusNone" => {
                Some(Self::QuestAbyssWarLimitRegionStatusNone)
            }
            "ECNCMBDMAGD_QuestAbyssWarLimitRegionStatusClose" => {
                Some(Self::QuestAbyssWarLimitRegionStatusClose)
            }
            "ECNCMBDMAGD_QuestAbyssWarLimitRegionStatusToBeStarted" => {
                Some(Self::QuestAbyssWarLimitRegionStatusToBeStarted)
            }
            "ECNCMBDMAGD_QuestAbyssWarLimitRegionStatusStart" => {
                Some(Self::QuestAbyssWarLimitRegionStatusStart)
            }
            "ECNCMBDMAGD_QuestAbyssWarLimitRegionStatusToBeClosed" => {
                Some(Self::QuestAbyssWarLimitRegionStatusToBeClosed)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Chdgojipkbe {
    ExpeditionNone = 0,
    ExpeditionStarted = 1,
    ExpeditionFinished = 2,
    ExpeditionRewarded = 3,
    ExpeditionLocked = 4,
}
impl Chdgojipkbe {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::ExpeditionNone => "CHDGOJIPKBE_ExpeditionNone",
            Self::ExpeditionStarted => "CHDGOJIPKBE_ExpeditionStarted",
            Self::ExpeditionFinished => "CHDGOJIPKBE_ExpeditionFinished",
            Self::ExpeditionRewarded => "CHDGOJIPKBE_ExpeditionRewarded",
            Self::ExpeditionLocked => "CHDGOJIPKBE_ExpeditionLocked",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "CHDGOJIPKBE_ExpeditionNone" => Some(Self::ExpeditionNone),
            "CHDGOJIPKBE_ExpeditionStarted" => Some(Self::ExpeditionStarted),
            "CHDGOJIPKBE_ExpeditionFinished" => Some(Self::ExpeditionFinished),
            "CHDGOJIPKBE_ExpeditionRewarded" => Some(Self::ExpeditionRewarded),
            "CHDGOJIPKBE_ExpeditionLocked" => Some(Self::ExpeditionLocked),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Gmidhcnckco {
    PlayerJudge = 0,
    SceneCannotEnter = 1,
    PlayerCannotEnterMp = 2,
    SystemJudge = 3,
    AllowEnterPlayerFull = 4,
    WorldLevelLowerThanHost = 5,
    HostInMatch = 6,
    PlayerInBlacklist = 7,
    PsPlayerNotAcceptOthers = 8,
    HostIsBlocked = 9,
    OtherDataVersionNotLatest = 10,
    DataVersionNotLatest = 11,
    PlayerNotInPlayerWorld = 12,
    MaxPlayer = 13,
    HostIsAdsBlocked = 14,
    XboxPlayerNotAcceptOthers = 15,
    PlayerNotAcceptOtherPlatform = 16,
    PlayerOffline = 17,
    XboxOnly = 18,
}
impl Gmidhcnckco {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::PlayerJudge => "GMIDHCNCKCO_PlayerJudge",
            Self::SceneCannotEnter => "GMIDHCNCKCO_SceneCannotEnter",
            Self::PlayerCannotEnterMp => "GMIDHCNCKCO_PlayerCannotEnterMp",
            Self::SystemJudge => "GMIDHCNCKCO_SystemJudge",
            Self::AllowEnterPlayerFull => "GMIDHCNCKCO_AllowEnterPlayerFull",
            Self::WorldLevelLowerThanHost => "GMIDHCNCKCO_WorldLevelLowerThanHost",
            Self::HostInMatch => "GMIDHCNCKCO_HostInMatch",
            Self::PlayerInBlacklist => "GMIDHCNCKCO_PlayerInBlacklist",
            Self::PsPlayerNotAcceptOthers => "GMIDHCNCKCO_PsPlayerNotAcceptOthers",
            Self::HostIsBlocked => "GMIDHCNCKCO_HostIsBlocked",
            Self::OtherDataVersionNotLatest => "GMIDHCNCKCO_OtherDataVersionNotLatest",
            Self::DataVersionNotLatest => "GMIDHCNCKCO_DataVersionNotLatest",
            Self::PlayerNotInPlayerWorld => "GMIDHCNCKCO_PlayerNotInPlayerWorld",
            Self::MaxPlayer => "GMIDHCNCKCO_MaxPlayer",
            Self::HostIsAdsBlocked => "GMIDHCNCKCO_HostIsAdsBlocked",
            Self::XboxPlayerNotAcceptOthers => "GMIDHCNCKCO_XboxPlayerNotAcceptOthers",
            Self::PlayerNotAcceptOtherPlatform => {
                "GMIDHCNCKCO_PlayerNotAcceptOtherPlatform"
            }
            Self::PlayerOffline => "GMIDHCNCKCO_PlayerOffline",
            Self::XboxOnly => "GMIDHCNCKCO_XboxOnly",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "GMIDHCNCKCO_PlayerJudge" => Some(Self::PlayerJudge),
            "GMIDHCNCKCO_SceneCannotEnter" => Some(Self::SceneCannotEnter),
            "GMIDHCNCKCO_PlayerCannotEnterMp" => Some(Self::PlayerCannotEnterMp),
            "GMIDHCNCKCO_SystemJudge" => Some(Self::SystemJudge),
            "GMIDHCNCKCO_AllowEnterPlayerFull" => Some(Self::AllowEnterPlayerFull),
            "GMIDHCNCKCO_WorldLevelLowerThanHost" => Some(Self::WorldLevelLowerThanHost),
            "GMIDHCNCKCO_HostInMatch" => Some(Self::HostInMatch),
            "GMIDHCNCKCO_PlayerInBlacklist" => Some(Self::PlayerInBlacklist),
            "GMIDHCNCKCO_PsPlayerNotAcceptOthers" => Some(Self::PsPlayerNotAcceptOthers),
            "GMIDHCNCKCO_HostIsBlocked" => Some(Self::HostIsBlocked),
            "GMIDHCNCKCO_OtherDataVersionNotLatest" => {
                Some(Self::OtherDataVersionNotLatest)
            }
            "GMIDHCNCKCO_DataVersionNotLatest" => Some(Self::DataVersionNotLatest),
            "GMIDHCNCKCO_PlayerNotInPlayerWorld" => Some(Self::PlayerNotInPlayerWorld),
            "GMIDHCNCKCO_MaxPlayer" => Some(Self::MaxPlayer),
            "GMIDHCNCKCO_HostIsAdsBlocked" => Some(Self::HostIsAdsBlocked),
            "GMIDHCNCKCO_XboxPlayerNotAcceptOthers" => {
                Some(Self::XboxPlayerNotAcceptOthers)
            }
            "GMIDHCNCKCO_PlayerNotAcceptOtherPlatform" => {
                Some(Self::PlayerNotAcceptOtherPlatform)
            }
            "GMIDHCNCKCO_PlayerOffline" => Some(Self::PlayerOffline),
            "GMIDHCNCKCO_XboxOnly" => Some(Self::XboxOnly),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Cmgooomlaia {
    Default = 0,
    Effect = 1,
    Cost = 2,
    Gm = 3,
    Attack = 4,
    Reboot = 5,
    PlayCard = 6,
    QuicklyOnstage = 7,
    RemoveAfterDie = 8,
    Init = 9,
    EffectDamage = 10,
    EffectHeal = 11,
    EffectRevive = 12,
    InitOnstage = 13,
    DieOnstage = 14,
    SelectOnstage = 15,
    CharacterDie = 16,
    ReviveWhenDeath = 17,
    TransferToOpponent = 18,
    TransferDice = 19,
    PlayCardBeingCounter = 20,
    UseVehicleSkill = 21,
    Discover = 22,
}
impl Cmgooomlaia {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Default => "CMGOOOMLAIA_Default",
            Self::Effect => "CMGOOOMLAIA_Effect",
            Self::Cost => "CMGOOOMLAIA_Cost",
            Self::Gm => "CMGOOOMLAIA_Gm",
            Self::Attack => "CMGOOOMLAIA_Attack",
            Self::Reboot => "CMGOOOMLAIA_Reboot",
            Self::PlayCard => "CMGOOOMLAIA_PlayCard",
            Self::QuicklyOnstage => "CMGOOOMLAIA_QuicklyOnstage",
            Self::RemoveAfterDie => "CMGOOOMLAIA_RemoveAfterDie",
            Self::Init => "CMGOOOMLAIA_Init",
            Self::EffectDamage => "CMGOOOMLAIA_EffectDamage",
            Self::EffectHeal => "CMGOOOMLAIA_EffectHeal",
            Self::EffectRevive => "CMGOOOMLAIA_EffectRevive",
            Self::InitOnstage => "CMGOOOMLAIA_InitOnstage",
            Self::DieOnstage => "CMGOOOMLAIA_DieOnstage",
            Self::SelectOnstage => "CMGOOOMLAIA_SelectOnstage",
            Self::CharacterDie => "CMGOOOMLAIA_CharacterDie",
            Self::ReviveWhenDeath => "CMGOOOMLAIA_ReviveWhenDeath",
            Self::TransferToOpponent => "CMGOOOMLAIA_TransferToOpponent",
            Self::TransferDice => "CMGOOOMLAIA_TransferDice",
            Self::PlayCardBeingCounter => "CMGOOOMLAIA_PlayCardBeingCounter",
            Self::UseVehicleSkill => "CMGOOOMLAIA_UseVehicleSkill",
            Self::Discover => "CMGOOOMLAIA_Discover",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "CMGOOOMLAIA_Default" => Some(Self::Default),
            "CMGOOOMLAIA_Effect" => Some(Self::Effect),
            "CMGOOOMLAIA_Cost" => Some(Self::Cost),
            "CMGOOOMLAIA_Gm" => Some(Self::Gm),
            "CMGOOOMLAIA_Attack" => Some(Self::Attack),
            "CMGOOOMLAIA_Reboot" => Some(Self::Reboot),
            "CMGOOOMLAIA_PlayCard" => Some(Self::PlayCard),
            "CMGOOOMLAIA_QuicklyOnstage" => Some(Self::QuicklyOnstage),
            "CMGOOOMLAIA_RemoveAfterDie" => Some(Self::RemoveAfterDie),
            "CMGOOOMLAIA_Init" => Some(Self::Init),
            "CMGOOOMLAIA_EffectDamage" => Some(Self::EffectDamage),
            "CMGOOOMLAIA_EffectHeal" => Some(Self::EffectHeal),
            "CMGOOOMLAIA_EffectRevive" => Some(Self::EffectRevive),
            "CMGOOOMLAIA_InitOnstage" => Some(Self::InitOnstage),
            "CMGOOOMLAIA_DieOnstage" => Some(Self::DieOnstage),
            "CMGOOOMLAIA_SelectOnstage" => Some(Self::SelectOnstage),
            "CMGOOOMLAIA_CharacterDie" => Some(Self::CharacterDie),
            "CMGOOOMLAIA_ReviveWhenDeath" => Some(Self::ReviveWhenDeath),
            "CMGOOOMLAIA_TransferToOpponent" => Some(Self::TransferToOpponent),
            "CMGOOOMLAIA_TransferDice" => Some(Self::TransferDice),
            "CMGOOOMLAIA_PlayCardBeingCounter" => Some(Self::PlayCardBeingCounter),
            "CMGOOOMLAIA_UseVehicleSkill" => Some(Self::UseVehicleSkill),
            "CMGOOOMLAIA_Discover" => Some(Self::Discover),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Ogbpbklaepc {
    Disconnect = 0,
    ClientReq = 1,
    Timeout = 2,
    AdminReq = 3,
    ServerClose = 4,
    GmClear = 5,
    PlayerTransfer = 6,
    ClientChecksumInvalid = 7,
    MuipMoveSaveWait = 8,
}
impl Ogbpbklaepc {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Disconnect => "OGBPBKLAEPC_Disconnect",
            Self::ClientReq => "OGBPBKLAEPC_ClientReq",
            Self::Timeout => "OGBPBKLAEPC_Timeout",
            Self::AdminReq => "OGBPBKLAEPC_AdminReq",
            Self::ServerClose => "OGBPBKLAEPC_ServerClose",
            Self::GmClear => "OGBPBKLAEPC_GmClear",
            Self::PlayerTransfer => "OGBPBKLAEPC_PlayerTransfer",
            Self::ClientChecksumInvalid => "OGBPBKLAEPC_ClientChecksumInvalid",
            Self::MuipMoveSaveWait => "OGBPBKLAEPC_MuipMoveSaveWait",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "OGBPBKLAEPC_Disconnect" => Some(Self::Disconnect),
            "OGBPBKLAEPC_ClientReq" => Some(Self::ClientReq),
            "OGBPBKLAEPC_Timeout" => Some(Self::Timeout),
            "OGBPBKLAEPC_AdminReq" => Some(Self::AdminReq),
            "OGBPBKLAEPC_ServerClose" => Some(Self::ServerClose),
            "OGBPBKLAEPC_GmClear" => Some(Self::GmClear),
            "OGBPBKLAEPC_PlayerTransfer" => Some(Self::PlayerTransfer),
            "OGBPBKLAEPC_ClientChecksumInvalid" => Some(Self::ClientChecksumInvalid),
            "OGBPBKLAEPC_MuipMoveSaveWait" => Some(Self::MuipMoveSaveWait),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Ljcngngdgph {
    GcgPhaseInvalid = 0,
    GcgPhaseStart = 1,
    GcgPhaseDraw = 2,
    GcgPhaseOnStage = 3,
    GcgPhaseDice = 4,
    GcgPhaseMain = 5,
    GcgPhaseEnd = 6,
    GcgPhaseDie = 7,
    GcgPhaseFin = 8,
    GcgPhasePreMain = 9,
    GcgPhaseReroll = 10,
    GcgPhaseRedraw = 11,
    GcgPhaseDiscover = 12,
    GcgPhaseAutoBattleCardStart = 13,
    GcgPhaseAutoBattleCardMain = 14,
    GcgPhaseAutoBattleCardPreMain = 15,
}
impl Ljcngngdgph {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::GcgPhaseInvalid => "LJCNGNGDGPH_GcgPhaseInvalid",
            Self::GcgPhaseStart => "LJCNGNGDGPH_GcgPhaseStart",
            Self::GcgPhaseDraw => "LJCNGNGDGPH_GcgPhaseDraw",
            Self::GcgPhaseOnStage => "LJCNGNGDGPH_GcgPhaseOnStage",
            Self::GcgPhaseDice => "LJCNGNGDGPH_GcgPhaseDice",
            Self::GcgPhaseMain => "LJCNGNGDGPH_GcgPhaseMain",
            Self::GcgPhaseEnd => "LJCNGNGDGPH_GcgPhaseEnd",
            Self::GcgPhaseDie => "LJCNGNGDGPH_GcgPhaseDie",
            Self::GcgPhaseFin => "LJCNGNGDGPH_GcgPhaseFin",
            Self::GcgPhasePreMain => "LJCNGNGDGPH_GcgPhasePreMain",
            Self::GcgPhaseReroll => "LJCNGNGDGPH_GcgPhaseReroll",
            Self::GcgPhaseRedraw => "LJCNGNGDGPH_GcgPhaseRedraw",
            Self::GcgPhaseDiscover => "LJCNGNGDGPH_GcgPhaseDiscover",
            Self::GcgPhaseAutoBattleCardStart => {
                "LJCNGNGDGPH_GcgPhaseAutoBattleCardStart"
            }
            Self::GcgPhaseAutoBattleCardMain => "LJCNGNGDGPH_GcgPhaseAutoBattleCardMain",
            Self::GcgPhaseAutoBattleCardPreMain => {
                "LJCNGNGDGPH_GcgPhaseAutoBattleCardPreMain"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "LJCNGNGDGPH_GcgPhaseInvalid" => Some(Self::GcgPhaseInvalid),
            "LJCNGNGDGPH_GcgPhaseStart" => Some(Self::GcgPhaseStart),
            "LJCNGNGDGPH_GcgPhaseDraw" => Some(Self::GcgPhaseDraw),
            "LJCNGNGDGPH_GcgPhaseOnStage" => Some(Self::GcgPhaseOnStage),
            "LJCNGNGDGPH_GcgPhaseDice" => Some(Self::GcgPhaseDice),
            "LJCNGNGDGPH_GcgPhaseMain" => Some(Self::GcgPhaseMain),
            "LJCNGNGDGPH_GcgPhaseEnd" => Some(Self::GcgPhaseEnd),
            "LJCNGNGDGPH_GcgPhaseDie" => Some(Self::GcgPhaseDie),
            "LJCNGNGDGPH_GcgPhaseFin" => Some(Self::GcgPhaseFin),
            "LJCNGNGDGPH_GcgPhasePreMain" => Some(Self::GcgPhasePreMain),
            "LJCNGNGDGPH_GcgPhaseReroll" => Some(Self::GcgPhaseReroll),
            "LJCNGNGDGPH_GcgPhaseRedraw" => Some(Self::GcgPhaseRedraw),
            "LJCNGNGDGPH_GcgPhaseDiscover" => Some(Self::GcgPhaseDiscover),
            "LJCNGNGDGPH_GcgPhaseAutoBattleCardStart" => {
                Some(Self::GcgPhaseAutoBattleCardStart)
            }
            "LJCNGNGDGPH_GcgPhaseAutoBattleCardMain" => {
                Some(Self::GcgPhaseAutoBattleCardMain)
            }
            "LJCNGNGDGPH_GcgPhaseAutoBattleCardPreMain" => {
                Some(Self::GcgPhaseAutoBattleCardPreMain)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Operation {
    Add = 0,
    Mod = 1,
    Del = 2,
    Get = 3,
}
impl Operation {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Add => "OPERATION_ADD",
            Self::Mod => "OPERATION_MOD",
            Self::Del => "OPERATION_DEL",
            Self::Get => "OPERATION_GET",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "OPERATION_ADD" => Some(Self::Add),
            "OPERATION_MOD" => Some(Self::Mod),
            "OPERATION_DEL" => Some(Self::Del),
            "OPERATION_GET" => Some(Self::Get),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Dbemgmellho {
    Unstarted = 0,
    Started = 1,
    Finished = 2,
}
impl Dbemgmellho {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Unstarted => "DBEMGMELLHO_Unstarted",
            Self::Started => "DBEMGMELLHO_Started",
            Self::Finished => "DBEMGMELLHO_Finished",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "DBEMGMELLHO_Unstarted" => Some(Self::Unstarted),
            "DBEMGMELLHO_Started" => Some(Self::Started),
            "DBEMGMELLHO_Finished" => Some(Self::Finished),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Mnlilcbgkng {
    GcgDiceSideInvalid = 0,
    GcgDiceSideCryo = 1,
    GcgDiceSideHydro = 2,
    GcgDiceSidePyro = 3,
    GcgDiceSideElectro = 4,
    GcgDiceSideGeo = 5,
    GcgDiceSideDendro = 6,
    GcgDiceSideAnemo = 7,
    GcgDiceSidePaimon = 8,
}
impl Mnlilcbgkng {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::GcgDiceSideInvalid => "MNLILCBGKNG_GcgDiceSideInvalid",
            Self::GcgDiceSideCryo => "MNLILCBGKNG_GcgDiceSideCryo",
            Self::GcgDiceSideHydro => "MNLILCBGKNG_GcgDiceSideHydro",
            Self::GcgDiceSidePyro => "MNLILCBGKNG_GcgDiceSidePyro",
            Self::GcgDiceSideElectro => "MNLILCBGKNG_GcgDiceSideElectro",
            Self::GcgDiceSideGeo => "MNLILCBGKNG_GcgDiceSideGeo",
            Self::GcgDiceSideDendro => "MNLILCBGKNG_GcgDiceSideDendro",
            Self::GcgDiceSideAnemo => "MNLILCBGKNG_GcgDiceSideAnemo",
            Self::GcgDiceSidePaimon => "MNLILCBGKNG_GcgDiceSidePaimon",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "MNLILCBGKNG_GcgDiceSideInvalid" => Some(Self::GcgDiceSideInvalid),
            "MNLILCBGKNG_GcgDiceSideCryo" => Some(Self::GcgDiceSideCryo),
            "MNLILCBGKNG_GcgDiceSideHydro" => Some(Self::GcgDiceSideHydro),
            "MNLILCBGKNG_GcgDiceSidePyro" => Some(Self::GcgDiceSidePyro),
            "MNLILCBGKNG_GcgDiceSideElectro" => Some(Self::GcgDiceSideElectro),
            "MNLILCBGKNG_GcgDiceSideGeo" => Some(Self::GcgDiceSideGeo),
            "MNLILCBGKNG_GcgDiceSideDendro" => Some(Self::GcgDiceSideDendro),
            "MNLILCBGKNG_GcgDiceSideAnemo" => Some(Self::GcgDiceSideAnemo),
            "MNLILCBGKNG_GcgDiceSidePaimon" => Some(Self::GcgDiceSidePaimon),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Abpkolenhap {
    GcgLevelNone = 0,
    GcgLevelConst = 1,
    GcgLevelWeek = 2,
    GcgLevelWorld = 3,
    GcgLevelBoss = 4,
    GcgLevelCharacter = 5,
    GcgLevelBreak = 6,
    GcgLevelQuest = 7,
    GcgLevelGuideGroup = 8,
    GcgLevelOther = 9,
    GcgLevelJourney = 10,
    GcgLevelPve = 11,
    GcgLevelPveInfinite = 12,
    GcgLevelPvePuzzle = 13,
}
impl Abpkolenhap {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::GcgLevelNone => "ABPKOLENHAP_GcgLevelNone",
            Self::GcgLevelConst => "ABPKOLENHAP_GcgLevelConst",
            Self::GcgLevelWeek => "ABPKOLENHAP_GcgLevelWeek",
            Self::GcgLevelWorld => "ABPKOLENHAP_GcgLevelWorld",
            Self::GcgLevelBoss => "ABPKOLENHAP_GcgLevelBoss",
            Self::GcgLevelCharacter => "ABPKOLENHAP_GcgLevelCharacter",
            Self::GcgLevelBreak => "ABPKOLENHAP_GcgLevelBreak",
            Self::GcgLevelQuest => "ABPKOLENHAP_GcgLevelQuest",
            Self::GcgLevelGuideGroup => "ABPKOLENHAP_GcgLevelGuideGroup",
            Self::GcgLevelOther => "ABPKOLENHAP_GcgLevelOther",
            Self::GcgLevelJourney => "ABPKOLENHAP_GcgLevelJourney",
            Self::GcgLevelPve => "ABPKOLENHAP_GcgLevelPve",
            Self::GcgLevelPveInfinite => "ABPKOLENHAP_GcgLevelPveInfinite",
            Self::GcgLevelPvePuzzle => "ABPKOLENHAP_GcgLevelPvePuzzle",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "ABPKOLENHAP_GcgLevelNone" => Some(Self::GcgLevelNone),
            "ABPKOLENHAP_GcgLevelConst" => Some(Self::GcgLevelConst),
            "ABPKOLENHAP_GcgLevelWeek" => Some(Self::GcgLevelWeek),
            "ABPKOLENHAP_GcgLevelWorld" => Some(Self::GcgLevelWorld),
            "ABPKOLENHAP_GcgLevelBoss" => Some(Self::GcgLevelBoss),
            "ABPKOLENHAP_GcgLevelCharacter" => Some(Self::GcgLevelCharacter),
            "ABPKOLENHAP_GcgLevelBreak" => Some(Self::GcgLevelBreak),
            "ABPKOLENHAP_GcgLevelQuest" => Some(Self::GcgLevelQuest),
            "ABPKOLENHAP_GcgLevelGuideGroup" => Some(Self::GcgLevelGuideGroup),
            "ABPKOLENHAP_GcgLevelOther" => Some(Self::GcgLevelOther),
            "ABPKOLENHAP_GcgLevelJourney" => Some(Self::GcgLevelJourney),
            "ABPKOLENHAP_GcgLevelPve" => Some(Self::GcgLevelPve),
            "ABPKOLENHAP_GcgLevelPveInfinite" => Some(Self::GcgLevelPveInfinite),
            "ABPKOLENHAP_GcgLevelPvePuzzle" => Some(Self::GcgLevelPvePuzzle),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Gpeibbjnhda {
    Idle = 0,
    ChangingAvatar = 1,
    Ready = 2,
}
impl Gpeibbjnhda {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Idle => "GPEIBBJNHDA_Idle",
            Self::ChangingAvatar => "GPEIBBJNHDA_ChangingAvatar",
            Self::Ready => "GPEIBBJNHDA_Ready",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "GPEIBBJNHDA_Idle" => Some(Self::Idle),
            "GPEIBBJNHDA_ChangingAvatar" => Some(Self::ChangingAvatar),
            "GPEIBBJNHDA_Ready" => Some(Self::Ready),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Lmfolodejfa {
    ChangeHpDebtsNone = 0,
    ChangeHpDebtsPay = 1,
    ChangeHpDebtsPayFinish = 2,
    ChangeHpDebtsClear = 21,
    ChangeHpDebtsReduceAbility = 41,
    ChangeHpDebtsAddAbility = 51,
}
impl Lmfolodejfa {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::ChangeHpDebtsNone => "LMFOLODEJFA_ChangeHpDebtsNone",
            Self::ChangeHpDebtsPay => "LMFOLODEJFA_ChangeHpDebtsPay",
            Self::ChangeHpDebtsPayFinish => "LMFOLODEJFA_ChangeHpDebtsPayFinish",
            Self::ChangeHpDebtsClear => "LMFOLODEJFA_ChangeHpDebtsClear",
            Self::ChangeHpDebtsReduceAbility => "LMFOLODEJFA_ChangeHpDebtsReduceAbility",
            Self::ChangeHpDebtsAddAbility => "LMFOLODEJFA_ChangeHpDebtsAddAbility",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "LMFOLODEJFA_ChangeHpDebtsNone" => Some(Self::ChangeHpDebtsNone),
            "LMFOLODEJFA_ChangeHpDebtsPay" => Some(Self::ChangeHpDebtsPay),
            "LMFOLODEJFA_ChangeHpDebtsPayFinish" => Some(Self::ChangeHpDebtsPayFinish),
            "LMFOLODEJFA_ChangeHpDebtsClear" => Some(Self::ChangeHpDebtsClear),
            "LMFOLODEJFA_ChangeHpDebtsReduceAbility" => {
                Some(Self::ChangeHpDebtsReduceAbility)
            }
            "LMFOLODEJFA_ChangeHpDebtsAddAbility" => Some(Self::ChangeHpDebtsAddAbility),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Fdigdfdcnjc {
    None = 0,
    Low = 1,
    Mid = 2,
    High = 3,
}
impl Fdigdfdcnjc {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "FDIGDFDCNJC_None",
            Self::Low => "FDIGDFDCNJC_Low",
            Self::Mid => "FDIGDFDCNJC_Mid",
            Self::High => "FDIGDFDCNJC_High",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "FDIGDFDCNJC_None" => Some(Self::None),
            "FDIGDFDCNJC_Low" => Some(Self::Low),
            "FDIGDFDCNJC_Mid" => Some(Self::Mid),
            "FDIGDFDCNJC_High" => Some(Self::High),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Ehclpiiploh {
    MailCollectibleUnkonw = 0,
    MailNotCollectible = 1,
    MailCollectibleUncollected = 2,
    MailCollectibleCollected = 3,
}
impl Ehclpiiploh {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::MailCollectibleUnkonw => "EHCLPIIPLOH_MailCollectibleUnkonw",
            Self::MailNotCollectible => "EHCLPIIPLOH_MailNotCollectible",
            Self::MailCollectibleUncollected => "EHCLPIIPLOH_MailCollectibleUncollected",
            Self::MailCollectibleCollected => "EHCLPIIPLOH_MailCollectibleCollected",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "EHCLPIIPLOH_MailCollectibleUnkonw" => Some(Self::MailCollectibleUnkonw),
            "EHCLPIIPLOH_MailNotCollectible" => Some(Self::MailNotCollectible),
            "EHCLPIIPLOH_MailCollectibleUncollected" => {
                Some(Self::MailCollectibleUncollected)
            }
            "EHCLPIIPLOH_MailCollectibleCollected" => {
                Some(Self::MailCollectibleCollected)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum GadgetBornType {
    GadgetBornNone = 0,
    GadgetBornInAir = 1,
    GadgetBornPlayer = 2,
    GadgetBornMonsterHit = 3,
    GadgetBornMonsterDie = 4,
    GadgetBornGadget = 5,
    GadgetBornGround = 6,
}
impl GadgetBornType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::GadgetBornNone => "GadgetBornType_GadgetBornNone",
            Self::GadgetBornInAir => "GadgetBornType_GadgetBornInAir",
            Self::GadgetBornPlayer => "GadgetBornType_GadgetBornPlayer",
            Self::GadgetBornMonsterHit => "GadgetBornType_GadgetBornMonsterHit",
            Self::GadgetBornMonsterDie => "GadgetBornType_GadgetBornMonsterDie",
            Self::GadgetBornGadget => "GadgetBornType_GadgetBornGadget",
            Self::GadgetBornGround => "GadgetBornType_GadgetBornGround",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "GadgetBornType_GadgetBornNone" => Some(Self::GadgetBornNone),
            "GadgetBornType_GadgetBornInAir" => Some(Self::GadgetBornInAir),
            "GadgetBornType_GadgetBornPlayer" => Some(Self::GadgetBornPlayer),
            "GadgetBornType_GadgetBornMonsterHit" => Some(Self::GadgetBornMonsterHit),
            "GadgetBornType_GadgetBornMonsterDie" => Some(Self::GadgetBornMonsterDie),
            "GadgetBornType_GadgetBornGadget" => Some(Self::GadgetBornGadget),
            "GadgetBornType_GadgetBornGround" => Some(Self::GadgetBornGround),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Kpadkhdbgcb {
    Default = 0,
    Clear = 1,
    Distance = 2,
    Finish = 3,
}
impl Kpadkhdbgcb {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Default => "KPADKHDBGCB_Default",
            Self::Clear => "KPADKHDBGCB_Clear",
            Self::Distance => "KPADKHDBGCB_Distance",
            Self::Finish => "KPADKHDBGCB_Finish",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "KPADKHDBGCB_Default" => Some(Self::Default),
            "KPADKHDBGCB_Clear" => Some(Self::Clear),
            "KPADKHDBGCB_Distance" => Some(Self::Distance),
            "KPADKHDBGCB_Finish" => Some(Self::Finish),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Oefkbifaplf {
    GcgIntentionChangeNone = 0,
    GcgIntentionChangeRm = 1,
}
impl Oefkbifaplf {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::GcgIntentionChangeNone => "OEFKBIFAPLF_GcgIntentionChangeNone",
            Self::GcgIntentionChangeRm => "OEFKBIFAPLF_GcgIntentionChangeRm",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "OEFKBIFAPLF_GcgIntentionChangeNone" => Some(Self::GcgIntentionChangeNone),
            "OEFKBIFAPLF_GcgIntentionChangeRm" => Some(Self::GcgIntentionChangeRm),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Cmhliijinhm {
    AreaPlayNone = 0,
    AreaPlayClimate = 1,
    AreaPlayRegionalPlay = 2,
}
impl Cmhliijinhm {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::AreaPlayNone => "CMHLIIJINHM_AreaPlayNone",
            Self::AreaPlayClimate => "CMHLIIJINHM_AreaPlayClimate",
            Self::AreaPlayRegionalPlay => "CMHLIIJINHM_AreaPlayRegionalPlay",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "CMHLIIJINHM_AreaPlayNone" => Some(Self::AreaPlayNone),
            "CMHLIIJINHM_AreaPlayClimate" => Some(Self::AreaPlayClimate),
            "CMHLIIJINHM_AreaPlayRegionalPlay" => Some(Self::AreaPlayRegionalPlay),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Jppcdgdpdbm {
    None = 0,
    ByKick = 1,
    Quit = 2,
}
impl Jppcdgdpdbm {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "JPPCDGDPDBM_None",
            Self::ByKick => "JPPCDGDPDBM_ByKick",
            Self::Quit => "JPPCDGDPDBM_Quit",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "JPPCDGDPDBM_None" => Some(Self::None),
            "JPPCDGDPDBM_ByKick" => Some(Self::ByKick),
            "JPPCDGDPDBM_Quit" => Some(Self::Quit),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Gbnidjgcplj {
    ChangeEnergyNone = 0,
    ChangeEnergySkillStart = 1,
    ChangeEnergyBall = 2,
    ChangeEnergyQuest = 3,
    ChangeEnergyAbility = 4,
    ChangeEnergyDie = 5,
    ChangeEnergySkillDepot = 6,
}
impl Gbnidjgcplj {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::ChangeEnergyNone => "GBNIDJGCPLJ_ChangeEnergyNone",
            Self::ChangeEnergySkillStart => "GBNIDJGCPLJ_ChangeEnergySkillStart",
            Self::ChangeEnergyBall => "GBNIDJGCPLJ_ChangeEnergyBall",
            Self::ChangeEnergyQuest => "GBNIDJGCPLJ_ChangeEnergyQuest",
            Self::ChangeEnergyAbility => "GBNIDJGCPLJ_ChangeEnergyAbility",
            Self::ChangeEnergyDie => "GBNIDJGCPLJ_ChangeEnergyDie",
            Self::ChangeEnergySkillDepot => "GBNIDJGCPLJ_ChangeEnergySkillDepot",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "GBNIDJGCPLJ_ChangeEnergyNone" => Some(Self::ChangeEnergyNone),
            "GBNIDJGCPLJ_ChangeEnergySkillStart" => Some(Self::ChangeEnergySkillStart),
            "GBNIDJGCPLJ_ChangeEnergyBall" => Some(Self::ChangeEnergyBall),
            "GBNIDJGCPLJ_ChangeEnergyQuest" => Some(Self::ChangeEnergyQuest),
            "GBNIDJGCPLJ_ChangeEnergyAbility" => Some(Self::ChangeEnergyAbility),
            "GBNIDJGCPLJ_ChangeEnergyDie" => Some(Self::ChangeEnergyDie),
            "GBNIDJGCPLJ_ChangeEnergySkillDepot" => Some(Self::ChangeEnergySkillDepot),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Ohjpbjbafnj {
    WindFieldDungeonFailNone = 0,
    WindFieldDungeonFailCancel = 1,
    WindFieldDungeonFailTimeout = 2,
    WindFieldDungeonFailAllAvatarDie = 3,
    WindFieldDungeonFailLuaInterrupt = 4,
}
impl Ohjpbjbafnj {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::WindFieldDungeonFailNone => "OHJPBJBAFNJ_WindFieldDungeonFailNone",
            Self::WindFieldDungeonFailCancel => "OHJPBJBAFNJ_WindFieldDungeonFailCancel",
            Self::WindFieldDungeonFailTimeout => {
                "OHJPBJBAFNJ_WindFieldDungeonFailTimeout"
            }
            Self::WindFieldDungeonFailAllAvatarDie => {
                "OHJPBJBAFNJ_WindFieldDungeonFailAllAvatarDie"
            }
            Self::WindFieldDungeonFailLuaInterrupt => {
                "OHJPBJBAFNJ_WindFieldDungeonFailLuaInterrupt"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "OHJPBJBAFNJ_WindFieldDungeonFailNone" => {
                Some(Self::WindFieldDungeonFailNone)
            }
            "OHJPBJBAFNJ_WindFieldDungeonFailCancel" => {
                Some(Self::WindFieldDungeonFailCancel)
            }
            "OHJPBJBAFNJ_WindFieldDungeonFailTimeout" => {
                Some(Self::WindFieldDungeonFailTimeout)
            }
            "OHJPBJBAFNJ_WindFieldDungeonFailAllAvatarDie" => {
                Some(Self::WindFieldDungeonFailAllAvatarDie)
            }
            "OHJPBJBAFNJ_WindFieldDungeonFailLuaInterrupt" => {
                Some(Self::WindFieldDungeonFailLuaInterrupt)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Nmbnhiogajk {
    None = 0,
    AllAvatarSelected = 1,
    ChanceForbidden = 2,
    CandidateAvatarNumZero = 3,
}
impl Nmbnhiogajk {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "NMBNHIOGAJK_None",
            Self::AllAvatarSelected => "NMBNHIOGAJK_AllAvatarSelected",
            Self::ChanceForbidden => "NMBNHIOGAJK_ChanceForbidden",
            Self::CandidateAvatarNumZero => "NMBNHIOGAJK_CandidateAvatarNumZero",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "NMBNHIOGAJK_None" => Some(Self::None),
            "NMBNHIOGAJK_AllAvatarSelected" => Some(Self::AllAvatarSelected),
            "NMBNHIOGAJK_ChanceForbidden" => Some(Self::ChanceForbidden),
            "NMBNHIOGAJK_CandidateAvatarNumZero" => Some(Self::CandidateAvatarNumZero),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Klmhegdblpj {
    EventTriggerNone = 0,
    EventTriggerEnterForce = 1,
}
impl Klmhegdblpj {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::EventTriggerNone => "KLMHEGDBLPJ_EventTriggerNone",
            Self::EventTriggerEnterForce => "KLMHEGDBLPJ_EventTriggerEnterForce",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "KLMHEGDBLPJ_EventTriggerNone" => Some(Self::EventTriggerNone),
            "KLMHEGDBLPJ_EventTriggerEnterForce" => Some(Self::EventTriggerEnterForce),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Fgalhngkmkc {
    WispCageStateNotExist = 0,
    WispCageStateCreated = 1,
    WispCageStateMaterialDelivered = 2,
    WispCageStateNotTakeReward = 3,
}
impl Fgalhngkmkc {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::WispCageStateNotExist => "FGALHNGKMKC_WispCageStateNotExist",
            Self::WispCageStateCreated => "FGALHNGKMKC_WispCageStateCreated",
            Self::WispCageStateMaterialDelivered => {
                "FGALHNGKMKC_WispCageStateMaterialDelivered"
            }
            Self::WispCageStateNotTakeReward => "FGALHNGKMKC_WispCageStateNotTakeReward",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "FGALHNGKMKC_WispCageStateNotExist" => Some(Self::WispCageStateNotExist),
            "FGALHNGKMKC_WispCageStateCreated" => Some(Self::WispCageStateCreated),
            "FGALHNGKMKC_WispCageStateMaterialDelivered" => {
                Some(Self::WispCageStateMaterialDelivered)
            }
            "FGALHNGKMKC_WispCageStateNotTakeReward" => {
                Some(Self::WispCageStateNotTakeReward)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Cdnoeaaolmh {
    PlaySoundNone = 0,
    PlaySoundStart = 1,
    PlaySoundStop = 2,
}
impl Cdnoeaaolmh {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::PlaySoundNone => "CDNOEAAOLMH_PlaySoundNone",
            Self::PlaySoundStart => "CDNOEAAOLMH_PlaySoundStart",
            Self::PlaySoundStop => "CDNOEAAOLMH_PlaySoundStop",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "CDNOEAAOLMH_PlaySoundNone" => Some(Self::PlaySoundNone),
            "CDNOEAAOLMH_PlaySoundStart" => Some(Self::PlaySoundStart),
            "CDNOEAAOLMH_PlaySoundStop" => Some(Self::PlaySoundStop),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Lfjlgojmkeh {
    GalleryStopNone = 0,
    GalleryStopTimeup = 1,
    GalleryStopClientInterrupt = 2,
    GalleryStopLuaInterruptSuccess = 3,
    GalleryStopLuaInterruptFail = 4,
    GalleryStopOwnerLeaveScene = 5,
    GalleryStopPlayInitFailed = 6,
    GalleryStopOtherPlayerEnter = 7,
    GalleryStopAvatarDie = 8,
    GalleryStopFinished = 9,
    GalleryStopFungusAllDie = 10,
    GalleryStopLifeCountZero = 11,
    GalleryStopActivityClosed = 12,
    GalleryStopLeaveRegionFail = 13,
    GalleryStopHeartBloodUsedOut = 14,
    GalleryStopGuardianStoneDie = 15,
}
impl Lfjlgojmkeh {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::GalleryStopNone => "LFJLGOJMKEH_GalleryStopNone",
            Self::GalleryStopTimeup => "LFJLGOJMKEH_GalleryStopTimeup",
            Self::GalleryStopClientInterrupt => "LFJLGOJMKEH_GalleryStopClientInterrupt",
            Self::GalleryStopLuaInterruptSuccess => {
                "LFJLGOJMKEH_GalleryStopLuaInterruptSuccess"
            }
            Self::GalleryStopLuaInterruptFail => {
                "LFJLGOJMKEH_GalleryStopLuaInterruptFail"
            }
            Self::GalleryStopOwnerLeaveScene => "LFJLGOJMKEH_GalleryStopOwnerLeaveScene",
            Self::GalleryStopPlayInitFailed => "LFJLGOJMKEH_GalleryStopPlayInitFailed",
            Self::GalleryStopOtherPlayerEnter => {
                "LFJLGOJMKEH_GalleryStopOtherPlayerEnter"
            }
            Self::GalleryStopAvatarDie => "LFJLGOJMKEH_GalleryStopAvatarDie",
            Self::GalleryStopFinished => "LFJLGOJMKEH_GalleryStopFinished",
            Self::GalleryStopFungusAllDie => "LFJLGOJMKEH_GalleryStopFungusAllDie",
            Self::GalleryStopLifeCountZero => "LFJLGOJMKEH_GalleryStopLifeCountZero",
            Self::GalleryStopActivityClosed => "LFJLGOJMKEH_GalleryStopActivityClosed",
            Self::GalleryStopLeaveRegionFail => "LFJLGOJMKEH_GalleryStopLeaveRegionFail",
            Self::GalleryStopHeartBloodUsedOut => {
                "LFJLGOJMKEH_GalleryStopHeartBloodUsedOut"
            }
            Self::GalleryStopGuardianStoneDie => {
                "LFJLGOJMKEH_GalleryStopGuardianStoneDie"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "LFJLGOJMKEH_GalleryStopNone" => Some(Self::GalleryStopNone),
            "LFJLGOJMKEH_GalleryStopTimeup" => Some(Self::GalleryStopTimeup),
            "LFJLGOJMKEH_GalleryStopClientInterrupt" => {
                Some(Self::GalleryStopClientInterrupt)
            }
            "LFJLGOJMKEH_GalleryStopLuaInterruptSuccess" => {
                Some(Self::GalleryStopLuaInterruptSuccess)
            }
            "LFJLGOJMKEH_GalleryStopLuaInterruptFail" => {
                Some(Self::GalleryStopLuaInterruptFail)
            }
            "LFJLGOJMKEH_GalleryStopOwnerLeaveScene" => {
                Some(Self::GalleryStopOwnerLeaveScene)
            }
            "LFJLGOJMKEH_GalleryStopPlayInitFailed" => {
                Some(Self::GalleryStopPlayInitFailed)
            }
            "LFJLGOJMKEH_GalleryStopOtherPlayerEnter" => {
                Some(Self::GalleryStopOtherPlayerEnter)
            }
            "LFJLGOJMKEH_GalleryStopAvatarDie" => Some(Self::GalleryStopAvatarDie),
            "LFJLGOJMKEH_GalleryStopFinished" => Some(Self::GalleryStopFinished),
            "LFJLGOJMKEH_GalleryStopFungusAllDie" => Some(Self::GalleryStopFungusAllDie),
            "LFJLGOJMKEH_GalleryStopLifeCountZero" => {
                Some(Self::GalleryStopLifeCountZero)
            }
            "LFJLGOJMKEH_GalleryStopActivityClosed" => {
                Some(Self::GalleryStopActivityClosed)
            }
            "LFJLGOJMKEH_GalleryStopLeaveRegionFail" => {
                Some(Self::GalleryStopLeaveRegionFail)
            }
            "LFJLGOJMKEH_GalleryStopHeartBloodUsedOut" => {
                Some(Self::GalleryStopHeartBloodUsedOut)
            }
            "LFJLGOJMKEH_GalleryStopGuardianStoneDie" => {
                Some(Self::GalleryStopGuardianStoneDie)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Gekhgcjeafi {
    InitFollowPos = 0,
    SetFollowPos = 1,
    SetAbsFollowPos = 2,
}
impl Gekhgcjeafi {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::InitFollowPos => "GEKHGCJEAFI_InitFollowPos",
            Self::SetFollowPos => "GEKHGCJEAFI_SetFollowPos",
            Self::SetAbsFollowPos => "GEKHGCJEAFI_SetAbsFollowPos",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "GEKHGCJEAFI_InitFollowPos" => Some(Self::InitFollowPos),
            "GEKHGCJEAFI_SetFollowPos" => Some(Self::SetFollowPos),
            "GEKHGCJEAFI_SetAbsFollowPos" => Some(Self::SetAbsFollowPos),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Bjikpodamda {
    ReunionReportTypeNone = 0,
    ReunionReportTypeStart = 1,
    ReunionReportTypeDouble = 2,
}
impl Bjikpodamda {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::ReunionReportTypeNone => "BJIKPODAMDA_ReunionReportTypeNone",
            Self::ReunionReportTypeStart => "BJIKPODAMDA_ReunionReportTypeStart",
            Self::ReunionReportTypeDouble => "BJIKPODAMDA_ReunionReportTypeDouble",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "BJIKPODAMDA_ReunionReportTypeNone" => Some(Self::ReunionReportTypeNone),
            "BJIKPODAMDA_ReunionReportTypeStart" => Some(Self::ReunionReportTypeStart),
            "BJIKPODAMDA_ReunionReportTypeDouble" => Some(Self::ReunionReportTypeDouble),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Iacmanpjhji {
    InterOpFinish = 0,
    InterOpStart = 1,
}
impl Iacmanpjhji {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::InterOpFinish => "IACMANPJHJI_InterOpFinish",
            Self::InterOpStart => "IACMANPJHJI_InterOpStart",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "IACMANPJHJI_InterOpFinish" => Some(Self::InterOpFinish),
            "IACMANPJHJI_InterOpStart" => Some(Self::InterOpStart),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Abbfnmpefpj {
    None = 0,
    CreateConnect = 1,
    StartGame = 2,
    Ping = 3,
    FinishGame = 4,
    SnapShot = 5,
    Action = 6,
    SnapShotForDebugLog = 7,
}
impl Abbfnmpefpj {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "ABBFNMPEFPJ_None",
            Self::CreateConnect => "ABBFNMPEFPJ_CreateConnect",
            Self::StartGame => "ABBFNMPEFPJ_StartGame",
            Self::Ping => "ABBFNMPEFPJ_Ping",
            Self::FinishGame => "ABBFNMPEFPJ_FinishGame",
            Self::SnapShot => "ABBFNMPEFPJ_SnapShot",
            Self::Action => "ABBFNMPEFPJ_Action",
            Self::SnapShotForDebugLog => "ABBFNMPEFPJ_SnapShotForDebugLog",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "ABBFNMPEFPJ_None" => Some(Self::None),
            "ABBFNMPEFPJ_CreateConnect" => Some(Self::CreateConnect),
            "ABBFNMPEFPJ_StartGame" => Some(Self::StartGame),
            "ABBFNMPEFPJ_Ping" => Some(Self::Ping),
            "ABBFNMPEFPJ_FinishGame" => Some(Self::FinishGame),
            "ABBFNMPEFPJ_SnapShot" => Some(Self::SnapShot),
            "ABBFNMPEFPJ_Action" => Some(Self::Action),
            "ABBFNMPEFPJ_SnapShotForDebugLog" => Some(Self::SnapShotForDebugLog),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Oloddmhddgc {
    None = 0,
    Giveup = 1,
    Timeout = 2,
    LeaveRegion = 3,
    LeaveScene = 4,
    CrossWeek = 5,
    AvatarDie = 6,
}
impl Oloddmhddgc {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "OLODDMHDDGC_None",
            Self::Giveup => "OLODDMHDDGC_Giveup",
            Self::Timeout => "OLODDMHDDGC_Timeout",
            Self::LeaveRegion => "OLODDMHDDGC_LeaveRegion",
            Self::LeaveScene => "OLODDMHDDGC_LeaveScene",
            Self::CrossWeek => "OLODDMHDDGC_CrossWeek",
            Self::AvatarDie => "OLODDMHDDGC_AvatarDie",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "OLODDMHDDGC_None" => Some(Self::None),
            "OLODDMHDDGC_Giveup" => Some(Self::Giveup),
            "OLODDMHDDGC_Timeout" => Some(Self::Timeout),
            "OLODDMHDDGC_LeaveRegion" => Some(Self::LeaveRegion),
            "OLODDMHDDGC_LeaveScene" => Some(Self::LeaveScene),
            "OLODDMHDDGC_CrossWeek" => Some(Self::CrossWeek),
            "OLODDMHDDGC_AvatarDie" => Some(Self::AvatarDie),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Ihpggfgcdph {
    Succ = 0,
    TargetSceneCannotEnter = 1,
    SelfMpUnavailable = 2,
    OtherDataVersionNotLatest = 3,
    DataVersionNotLatest = 4,
}
impl Ihpggfgcdph {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Succ => "IHPGGFGCDPH_Succ",
            Self::TargetSceneCannotEnter => "IHPGGFGCDPH_TargetSceneCannotEnter",
            Self::SelfMpUnavailable => "IHPGGFGCDPH_SelfMpUnavailable",
            Self::OtherDataVersionNotLatest => "IHPGGFGCDPH_OtherDataVersionNotLatest",
            Self::DataVersionNotLatest => "IHPGGFGCDPH_DataVersionNotLatest",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "IHPGGFGCDPH_Succ" => Some(Self::Succ),
            "IHPGGFGCDPH_TargetSceneCannotEnter" => Some(Self::TargetSceneCannotEnter),
            "IHPGGFGCDPH_SelfMpUnavailable" => Some(Self::SelfMpUnavailable),
            "IHPGGFGCDPH_OtherDataVersionNotLatest" => {
                Some(Self::OtherDataVersionNotLatest)
            }
            "IHPGGFGCDPH_DataVersionNotLatest" => Some(Self::DataVersionNotLatest),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Mlhhgnpclgk {
    PacmanDungeonStopNone = 0,
    PacmanDungeonStopSuccess = 1,
    PacmanDungeonStopTimeup = 2,
    PacmanDungeonStopClientInterrupt = 3,
    PacmanDungeonStopCancel = 4,
    PacmanDungeonStopActivityClosed = 5,
    PacmanDungeonStopFail = 6,
}
impl Mlhhgnpclgk {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::PacmanDungeonStopNone => "MLHHGNPCLGK_PacmanDungeonStopNone",
            Self::PacmanDungeonStopSuccess => "MLHHGNPCLGK_PacmanDungeonStopSuccess",
            Self::PacmanDungeonStopTimeup => "MLHHGNPCLGK_PacmanDungeonStopTimeup",
            Self::PacmanDungeonStopClientInterrupt => {
                "MLHHGNPCLGK_PacmanDungeonStopClientInterrupt"
            }
            Self::PacmanDungeonStopCancel => "MLHHGNPCLGK_PacmanDungeonStopCancel",
            Self::PacmanDungeonStopActivityClosed => {
                "MLHHGNPCLGK_PacmanDungeonStopActivityClosed"
            }
            Self::PacmanDungeonStopFail => "MLHHGNPCLGK_PacmanDungeonStopFail",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "MLHHGNPCLGK_PacmanDungeonStopNone" => Some(Self::PacmanDungeonStopNone),
            "MLHHGNPCLGK_PacmanDungeonStopSuccess" => {
                Some(Self::PacmanDungeonStopSuccess)
            }
            "MLHHGNPCLGK_PacmanDungeonStopTimeup" => Some(Self::PacmanDungeonStopTimeup),
            "MLHHGNPCLGK_PacmanDungeonStopClientInterrupt" => {
                Some(Self::PacmanDungeonStopClientInterrupt)
            }
            "MLHHGNPCLGK_PacmanDungeonStopCancel" => Some(Self::PacmanDungeonStopCancel),
            "MLHHGNPCLGK_PacmanDungeonStopActivityClosed" => {
                Some(Self::PacmanDungeonStopActivityClosed)
            }
            "MLHHGNPCLGK_PacmanDungeonStopFail" => Some(Self::PacmanDungeonStopFail),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Ehgpiloejjj {
    DieOptNone = 0,
    DieOptReplay = 1,
    DieOptCancel = 2,
    DieOptRevive = 3,
}
impl Ehgpiloejjj {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::DieOptNone => "EHGPILOEJJJ_DieOptNone",
            Self::DieOptReplay => "EHGPILOEJJJ_DieOptReplay",
            Self::DieOptCancel => "EHGPILOEJJJ_DieOptCancel",
            Self::DieOptRevive => "EHGPILOEJJJ_DieOptRevive",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "EHGPILOEJJJ_DieOptNone" => Some(Self::DieOptNone),
            "EHGPILOEJJJ_DieOptReplay" => Some(Self::DieOptReplay),
            "EHGPILOEJJJ_DieOptCancel" => Some(Self::DieOptCancel),
            "EHGPILOEJJJ_DieOptRevive" => Some(Self::DieOptRevive),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Ainahdonfeo {
    EnterCustomDungeonNone = 0,
    EnterCustomDungeonEdit = 1,
    EnterCustomDungeonPlay = 2,
    EnterCustomDungeonOfficial = 3,
}
impl Ainahdonfeo {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::EnterCustomDungeonNone => "AINAHDONFEO_EnterCustomDungeonNone",
            Self::EnterCustomDungeonEdit => "AINAHDONFEO_EnterCustomDungeonEdit",
            Self::EnterCustomDungeonPlay => "AINAHDONFEO_EnterCustomDungeonPlay",
            Self::EnterCustomDungeonOfficial => "AINAHDONFEO_EnterCustomDungeonOfficial",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "AINAHDONFEO_EnterCustomDungeonNone" => Some(Self::EnterCustomDungeonNone),
            "AINAHDONFEO_EnterCustomDungeonEdit" => Some(Self::EnterCustomDungeonEdit),
            "AINAHDONFEO_EnterCustomDungeonPlay" => Some(Self::EnterCustomDungeonPlay),
            "AINAHDONFEO_EnterCustomDungeonOfficial" => {
                Some(Self::EnterCustomDungeonOfficial)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Mggahfoamjf {
    Idle = 0,
    ChangingAvatar = 1,
    Ready = 2,
}
impl Mggahfoamjf {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Idle => "MGGAHFOAMJF_Idle",
            Self::ChangingAvatar => "MGGAHFOAMJF_ChangingAvatar",
            Self::Ready => "MGGAHFOAMJF_Ready",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "MGGAHFOAMJF_Idle" => Some(Self::Idle),
            "MGGAHFOAMJF_ChangingAvatar" => Some(Self::ChangingAvatar),
            "MGGAHFOAMJF_Ready" => Some(Self::Ready),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Olbpkdjigfi {
    Invalid = 0,
    InProgress = 1,
    Complete = 2,
    RewardTaken = 3,
}
impl Olbpkdjigfi {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Invalid => "OLBPKDJIGFI_Invalid",
            Self::InProgress => "OLBPKDJIGFI_InProgress",
            Self::Complete => "OLBPKDJIGFI_Complete",
            Self::RewardTaken => "OLBPKDJIGFI_RewardTaken",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "OLBPKDJIGFI_Invalid" => Some(Self::Invalid),
            "OLBPKDJIGFI_InProgress" => Some(Self::InProgress),
            "OLBPKDJIGFI_Complete" => Some(Self::Complete),
            "OLBPKDJIGFI_RewardTaken" => Some(Self::RewardTaken),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Bdkodfccnci {
    Null = 0,
    Active = 1,
    Passive = 2,
}
impl Bdkodfccnci {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Null => "BDKODFCCNCI_Null",
            Self::Active => "BDKODFCCNCI_Active",
            Self::Passive => "BDKODFCCNCI_Passive",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "BDKODFCCNCI_Null" => Some(Self::Null),
            "BDKODFCCNCI_Active" => Some(Self::Active),
            "BDKODFCCNCI_Passive" => Some(Self::Passive),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Mopophaajpd {
    MissionInvalid = 0,
    MissionUnfinished = 1,
    MissionFinished = 2,
    MissionPointTaken = 3,
}
impl Mopophaajpd {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::MissionInvalid => "MOPOPHAAJPD_MissionInvalid",
            Self::MissionUnfinished => "MOPOPHAAJPD_MissionUnfinished",
            Self::MissionFinished => "MOPOPHAAJPD_MissionFinished",
            Self::MissionPointTaken => "MOPOPHAAJPD_MissionPointTaken",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "MOPOPHAAJPD_MissionInvalid" => Some(Self::MissionInvalid),
            "MOPOPHAAJPD_MissionUnfinished" => Some(Self::MissionUnfinished),
            "MOPOPHAAJPD_MissionFinished" => Some(Self::MissionFinished),
            "MOPOPHAAJPD_MissionPointTaken" => Some(Self::MissionPointTaken),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum BreakoutActionType {
    ActionTypeNone = 0,
    ActionTypeLaunchBall = 1,
    ActionTypeDestroyBall = 2,
    ActionTypeFallingObject = 3,
    ActionTypeMissile = 4,
}
impl BreakoutActionType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::ActionTypeNone => "BreakoutActionType_ActionTypeNone",
            Self::ActionTypeLaunchBall => "BreakoutActionType_ActionTypeLaunchBall",
            Self::ActionTypeDestroyBall => "BreakoutActionType_ActionTypeDestroyBall",
            Self::ActionTypeFallingObject => "BreakoutActionType_ActionTypeFallingObject",
            Self::ActionTypeMissile => "BreakoutActionType_ActionTypeMissile",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "BreakoutActionType_ActionTypeNone" => Some(Self::ActionTypeNone),
            "BreakoutActionType_ActionTypeLaunchBall" => Some(Self::ActionTypeLaunchBall),
            "BreakoutActionType_ActionTypeDestroyBall" => {
                Some(Self::ActionTypeDestroyBall)
            }
            "BreakoutActionType_ActionTypeFallingObject" => {
                Some(Self::ActionTypeFallingObject)
            }
            "BreakoutActionType_ActionTypeMissile" => Some(Self::ActionTypeMissile),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Bpojddinjga {
    OpTypeNone = 0,
    OpTypeRelogin = 1,
    OpTypeMpRelogin = 2,
}
impl Bpojddinjga {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::OpTypeNone => "BPOJDDINJGA_OpTypeNone",
            Self::OpTypeRelogin => "BPOJDDINJGA_OpTypeRelogin",
            Self::OpTypeMpRelogin => "BPOJDDINJGA_OpTypeMpRelogin",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "BPOJDDINJGA_OpTypeNone" => Some(Self::OpTypeNone),
            "BPOJDDINJGA_OpTypeRelogin" => Some(Self::OpTypeRelogin),
            "BPOJDDINJGA_OpTypeMpRelogin" => Some(Self::OpTypeMpRelogin),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Mkgdmhjgphc {
    TypeNone = 0,
    TypePack = 1,
    TypeEvent = 2,
}
impl Mkgdmhjgphc {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::TypeNone => "MKGDMHJGPHC_TypeNone",
            Self::TypePack => "MKGDMHJGPHC_TypePack",
            Self::TypeEvent => "MKGDMHJGPHC_TypeEvent",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "MKGDMHJGPHC_TypeNone" => Some(Self::TypeNone),
            "MKGDMHJGPHC_TypePack" => Some(Self::TypePack),
            "MKGDMHJGPHC_TypeEvent" => Some(Self::TypeEvent),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Fjcnemlgmmh {
    EditUgcDungeonEdit = 0,
    EditUgcDungeonAudit = 1,
    EditUgcDungeonPublished = 2,
}
impl Fjcnemlgmmh {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::EditUgcDungeonEdit => "FJCNEMLGMMH_EditUgcDungeonEdit",
            Self::EditUgcDungeonAudit => "FJCNEMLGMMH_EditUgcDungeonAudit",
            Self::EditUgcDungeonPublished => "FJCNEMLGMMH_EditUgcDungeonPublished",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "FJCNEMLGMMH_EditUgcDungeonEdit" => Some(Self::EditUgcDungeonEdit),
            "FJCNEMLGMMH_EditUgcDungeonAudit" => Some(Self::EditUgcDungeonAudit),
            "FJCNEMLGMMH_EditUgcDungeonPublished" => Some(Self::EditUgcDungeonPublished),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Himopciifhk {
    StateNone = 0,
    StateScan = 1,
    StateAction = 2,
}
impl Himopciifhk {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::StateNone => "HIMOPCIIFHK_StateNone",
            Self::StateScan => "HIMOPCIIFHK_StateScan",
            Self::StateAction => "HIMOPCIIFHK_StateAction",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "HIMOPCIIFHK_StateNone" => Some(Self::StateNone),
            "HIMOPCIIFHK_StateScan" => Some(Self::StateScan),
            "HIMOPCIIFHK_StateAction" => Some(Self::StateAction),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Nppcjphmhbm {
    None = 0,
    SwitchControl = 1,
    ShootTimeout = 2,
    RunningTimeout = 3,
    RunningReconnect = 4,
}
impl Nppcjphmhbm {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "NPPCJPHMHBM_None",
            Self::SwitchControl => "NPPCJPHMHBM_SwitchControl",
            Self::ShootTimeout => "NPPCJPHMHBM_ShootTimeout",
            Self::RunningTimeout => "NPPCJPHMHBM_RunningTimeout",
            Self::RunningReconnect => "NPPCJPHMHBM_RunningReconnect",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "NPPCJPHMHBM_None" => Some(Self::None),
            "NPPCJPHMHBM_SwitchControl" => Some(Self::SwitchControl),
            "NPPCJPHMHBM_ShootTimeout" => Some(Self::ShootTimeout),
            "NPPCJPHMHBM_RunningTimeout" => Some(Self::RunningTimeout),
            "NPPCJPHMHBM_RunningReconnect" => Some(Self::RunningReconnect),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Klgpddijgjm {
    None = 0,
    Sail = 1,
    Battle = 2,
}
impl Klgpddijgjm {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "KLGPDDIJGJM_None",
            Self::Sail => "KLGPDDIJGJM_Sail",
            Self::Battle => "KLGPDDIJGJM_Battle",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "KLGPDDIJGJM_None" => Some(Self::None),
            "KLGPDDIJGJM_Sail" => Some(Self::Sail),
            "KLGPDDIJGJM_Battle" => Some(Self::Battle),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Jnflmhachji {
    Invalid = 0,
    InProgress = 1,
    Complete = 2,
    RewardTaken = 3,
}
impl Jnflmhachji {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Invalid => "JNFLMHACHJI_Invalid",
            Self::InProgress => "JNFLMHACHJI_InProgress",
            Self::Complete => "JNFLMHACHJI_Complete",
            Self::RewardTaken => "JNFLMHACHJI_RewardTaken",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "JNFLMHACHJI_Invalid" => Some(Self::Invalid),
            "JNFLMHACHJI_InProgress" => Some(Self::InProgress),
            "JNFLMHACHJI_Complete" => Some(Self::Complete),
            "JNFLMHACHJI_RewardTaken" => Some(Self::RewardTaken),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum QueryPathRspPathStatusType {
    StatusFail = 0,
    StatusSucc = 1,
    StatusPartial = 2,
}
impl QueryPathRspPathStatusType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::StatusFail => "QueryPathRspPathStatusType_StatusFail",
            Self::StatusSucc => "QueryPathRspPathStatusType_StatusSucc",
            Self::StatusPartial => "QueryPathRspPathStatusType_StatusPartial",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "QueryPathRspPathStatusType_StatusFail" => Some(Self::StatusFail),
            "QueryPathRspPathStatusType_StatusSucc" => Some(Self::StatusSucc),
            "QueryPathRspPathStatusType_StatusPartial" => Some(Self::StatusPartial),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Ddoipmkaohc {
    OptionNone = 0,
    OptionNormal = 1,
    OptionFirstCanGo = 2,
}
impl Ddoipmkaohc {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::OptionNone => "DDOIPMKAOHC_OptionNone",
            Self::OptionNormal => "DDOIPMKAOHC_OptionNormal",
            Self::OptionFirstCanGo => "DDOIPMKAOHC_OptionFirstCanGo",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "DDOIPMKAOHC_OptionNone" => Some(Self::OptionNone),
            "DDOIPMKAOHC_OptionNormal" => Some(Self::OptionNormal),
            "DDOIPMKAOHC_OptionFirstCanGo" => Some(Self::OptionFirstCanGo),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Pnkbkdloeij {
    Classic = 0,
    Tendency = 1,
    Adaptive = 2,
    Inflection = 3,
}
impl Pnkbkdloeij {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Classic => "PNKBKDLOEIJ_Classic",
            Self::Tendency => "PNKBKDLOEIJ_Tendency",
            Self::Adaptive => "PNKBKDLOEIJ_Adaptive",
            Self::Inflection => "PNKBKDLOEIJ_Inflection",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "PNKBKDLOEIJ_Classic" => Some(Self::Classic),
            "PNKBKDLOEIJ_Tendency" => Some(Self::Tendency),
            "PNKBKDLOEIJ_Adaptive" => Some(Self::Adaptive),
            "PNKBKDLOEIJ_Inflection" => Some(Self::Inflection),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Mblmioimcfg {
    All = 0,
    Air = 1,
    Water = 2,
}
impl Mblmioimcfg {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::All => "MBLMIOIMCFG_All",
            Self::Air => "MBLMIOIMCFG_Air",
            Self::Water => "MBLMIOIMCFG_Water",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "MBLMIOIMCFG_All" => Some(Self::All),
            "MBLMIOIMCFG_Air" => Some(Self::Air),
            "MBLMIOIMCFG_Water" => Some(Self::Water),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Ndbdleknhmf {
    CodexNone = 0,
    CodexQuest = 1,
    CodexWeapon = 2,
    CodexAnimal = 3,
    CodexMaterial = 4,
    CodexBooks = 5,
    CodexPushtips = 6,
    CodexView = 7,
    CodexReliquary = 8,
}
impl Ndbdleknhmf {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::CodexNone => "NDBDLEKNHMF_CodexNone",
            Self::CodexQuest => "NDBDLEKNHMF_CodexQuest",
            Self::CodexWeapon => "NDBDLEKNHMF_CodexWeapon",
            Self::CodexAnimal => "NDBDLEKNHMF_CodexAnimal",
            Self::CodexMaterial => "NDBDLEKNHMF_CodexMaterial",
            Self::CodexBooks => "NDBDLEKNHMF_CodexBooks",
            Self::CodexPushtips => "NDBDLEKNHMF_CodexPushtips",
            Self::CodexView => "NDBDLEKNHMF_CodexView",
            Self::CodexReliquary => "NDBDLEKNHMF_CodexReliquary",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "NDBDLEKNHMF_CodexNone" => Some(Self::CodexNone),
            "NDBDLEKNHMF_CodexQuest" => Some(Self::CodexQuest),
            "NDBDLEKNHMF_CodexWeapon" => Some(Self::CodexWeapon),
            "NDBDLEKNHMF_CodexAnimal" => Some(Self::CodexAnimal),
            "NDBDLEKNHMF_CodexMaterial" => Some(Self::CodexMaterial),
            "NDBDLEKNHMF_CodexBooks" => Some(Self::CodexBooks),
            "NDBDLEKNHMF_CodexPushtips" => Some(Self::CodexPushtips),
            "NDBDLEKNHMF_CodexView" => Some(Self::CodexView),
            "NDBDLEKNHMF_CodexReliquary" => Some(Self::CodexReliquary),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Pidfndlhkpg {
    QuestAbyssWarLevelStatusNone = 0,
    QuestAbyssWarLevelStatusNotRefresh = 1,
    QuestAbyssWarLevelStatusReadyToAccept = 2,
    QuestAbyssWarLevelStatusRunning = 3,
    QuestAbyssWarLevelStatusFinish = 4,
    QuestAbyssWarLevelStatusUnavaliable = 5,
}
impl Pidfndlhkpg {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::QuestAbyssWarLevelStatusNone => {
                "PIDFNDLHKPG_QuestAbyssWarLevelStatusNone"
            }
            Self::QuestAbyssWarLevelStatusNotRefresh => {
                "PIDFNDLHKPG_QuestAbyssWarLevelStatusNotRefresh"
            }
            Self::QuestAbyssWarLevelStatusReadyToAccept => {
                "PIDFNDLHKPG_QuestAbyssWarLevelStatusReadyToAccept"
            }
            Self::QuestAbyssWarLevelStatusRunning => {
                "PIDFNDLHKPG_QuestAbyssWarLevelStatusRunning"
            }
            Self::QuestAbyssWarLevelStatusFinish => {
                "PIDFNDLHKPG_QuestAbyssWarLevelStatusFinish"
            }
            Self::QuestAbyssWarLevelStatusUnavaliable => {
                "PIDFNDLHKPG_QuestAbyssWarLevelStatusUnavaliable"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "PIDFNDLHKPG_QuestAbyssWarLevelStatusNone" => {
                Some(Self::QuestAbyssWarLevelStatusNone)
            }
            "PIDFNDLHKPG_QuestAbyssWarLevelStatusNotRefresh" => {
                Some(Self::QuestAbyssWarLevelStatusNotRefresh)
            }
            "PIDFNDLHKPG_QuestAbyssWarLevelStatusReadyToAccept" => {
                Some(Self::QuestAbyssWarLevelStatusReadyToAccept)
            }
            "PIDFNDLHKPG_QuestAbyssWarLevelStatusRunning" => {
                Some(Self::QuestAbyssWarLevelStatusRunning)
            }
            "PIDFNDLHKPG_QuestAbyssWarLevelStatusFinish" => {
                Some(Self::QuestAbyssWarLevelStatusFinish)
            }
            "PIDFNDLHKPG_QuestAbyssWarLevelStatusUnavaliable" => {
                Some(Self::QuestAbyssWarLevelStatusUnavaliable)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Ncocchbfele {
    Invalid = 0,
    UnableToBegin = 1,
    Begin = 2,
    End = 3,
}
impl Ncocchbfele {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Invalid => "NCOCCHBFELE_Invalid",
            Self::UnableToBegin => "NCOCCHBFELE_UnableToBegin",
            Self::Begin => "NCOCCHBFELE_Begin",
            Self::End => "NCOCCHBFELE_End",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "NCOCCHBFELE_Invalid" => Some(Self::Invalid),
            "NCOCCHBFELE_UnableToBegin" => Some(Self::UnableToBegin),
            "NCOCCHBFELE_Begin" => Some(Self::Begin),
            "NCOCCHBFELE_End" => Some(Self::End),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Egmcilpconk {
    SealBattleKeepAlive = 0,
    SealBattleKillMonster = 1,
    SealBattleEnergyCharge = 2,
}
impl Egmcilpconk {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::SealBattleKeepAlive => "EGMCILPCONK_SealBattleKeepAlive",
            Self::SealBattleKillMonster => "EGMCILPCONK_SealBattleKillMonster",
            Self::SealBattleEnergyCharge => "EGMCILPCONK_SealBattleEnergyCharge",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "EGMCILPCONK_SealBattleKeepAlive" => Some(Self::SealBattleKeepAlive),
            "EGMCILPCONK_SealBattleKillMonster" => Some(Self::SealBattleKillMonster),
            "EGMCILPCONK_SealBattleEnergyCharge" => Some(Self::SealBattleEnergyCharge),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Kbdonbeeifa {
    GcgPerformInvalid = 0,
    GcgPerformCardExchange = 1,
    GcgPerformFirstHand = 2,
    GcgPerformReroll = 3,
    GcgPreformCostRevise = 4,
    GcgPerformRedraw = 5,
    GcgPerformHistory = 6,
    GcgPerformBeforeHenshin = 7,
}
impl Kbdonbeeifa {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::GcgPerformInvalid => "KBDONBEEIFA_GcgPerformInvalid",
            Self::GcgPerformCardExchange => "KBDONBEEIFA_GcgPerformCardExchange",
            Self::GcgPerformFirstHand => "KBDONBEEIFA_GcgPerformFirstHand",
            Self::GcgPerformReroll => "KBDONBEEIFA_GcgPerformReroll",
            Self::GcgPreformCostRevise => "KBDONBEEIFA_GcgPreformCostRevise",
            Self::GcgPerformRedraw => "KBDONBEEIFA_GcgPerformRedraw",
            Self::GcgPerformHistory => "KBDONBEEIFA_GcgPerformHistory",
            Self::GcgPerformBeforeHenshin => "KBDONBEEIFA_GcgPerformBeforeHenshin",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "KBDONBEEIFA_GcgPerformInvalid" => Some(Self::GcgPerformInvalid),
            "KBDONBEEIFA_GcgPerformCardExchange" => Some(Self::GcgPerformCardExchange),
            "KBDONBEEIFA_GcgPerformFirstHand" => Some(Self::GcgPerformFirstHand),
            "KBDONBEEIFA_GcgPerformReroll" => Some(Self::GcgPerformReroll),
            "KBDONBEEIFA_GcgPreformCostRevise" => Some(Self::GcgPreformCostRevise),
            "KBDONBEEIFA_GcgPerformRedraw" => Some(Self::GcgPerformRedraw),
            "KBDONBEEIFA_GcgPerformHistory" => Some(Self::GcgPerformHistory),
            "KBDONBEEIFA_GcgPerformBeforeHenshin" => Some(Self::GcgPerformBeforeHenshin),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Hhkmmkfncdl {
    Invalue = 0,
    Add = 1,
    Set = 2,
}
impl Hhkmmkfncdl {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Invalue => "HHKMMKFNCDL_Invalue",
            Self::Add => "HHKMMKFNCDL_Add",
            Self::Set => "HHKMMKFNCDL_Set",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "HHKMMKFNCDL_Invalue" => Some(Self::Invalue),
            "HHKMMKFNCDL_Add" => Some(Self::Add),
            "HHKMMKFNCDL_Set" => Some(Self::Set),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum EnterType {
    EnterNone = 0,
    EnterSelf = 1,
    EnterGoto = 2,
    EnterJump = 3,
    EnterOther = 4,
    EnterBack = 5,
    EnterDungeon = 6,
    EnterDungeonReplay = 7,
    EnterGotoByPortal = 8,
    EnterSelfHome = 9,
    EnterOtherHome = 10,
    EnterGotoRecreate = 11,
    EnterGotoByTpl = 12,
}
impl EnterType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::EnterNone => "EnterType_EnterNone",
            Self::EnterSelf => "EnterType_EnterSelf",
            Self::EnterGoto => "EnterType_EnterGoto",
            Self::EnterJump => "EnterType_EnterJump",
            Self::EnterOther => "EnterType_EnterOther",
            Self::EnterBack => "EnterType_EnterBack",
            Self::EnterDungeon => "EnterType_EnterDungeon",
            Self::EnterDungeonReplay => "EnterType_EnterDungeonReplay",
            Self::EnterGotoByPortal => "EnterType_EnterGotoByPortal",
            Self::EnterSelfHome => "EnterType_EnterSelfHome",
            Self::EnterOtherHome => "EnterType_EnterOtherHome",
            Self::EnterGotoRecreate => "EnterType_EnterGotoRecreate",
            Self::EnterGotoByTpl => "EnterType_EnterGotoByTpl",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "EnterType_EnterNone" => Some(Self::EnterNone),
            "EnterType_EnterSelf" => Some(Self::EnterSelf),
            "EnterType_EnterGoto" => Some(Self::EnterGoto),
            "EnterType_EnterJump" => Some(Self::EnterJump),
            "EnterType_EnterOther" => Some(Self::EnterOther),
            "EnterType_EnterBack" => Some(Self::EnterBack),
            "EnterType_EnterDungeon" => Some(Self::EnterDungeon),
            "EnterType_EnterDungeonReplay" => Some(Self::EnterDungeonReplay),
            "EnterType_EnterGotoByPortal" => Some(Self::EnterGotoByPortal),
            "EnterType_EnterSelfHome" => Some(Self::EnterSelfHome),
            "EnterType_EnterOtherHome" => Some(Self::EnterOtherHome),
            "EnterType_EnterGotoRecreate" => Some(Self::EnterGotoRecreate),
            "EnterType_EnterGotoByTpl" => Some(Self::EnterGotoByTpl),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Ppaicmkdnei {
    InBattleMechanicusCardChallengeNone = 0,
    InBattleMechanicusCardChallengeOnGoing = 1,
    InBattleMechanicusCardChallengeFail = 2,
    InBattleMechanicusCardChallengeSuccess = 3,
}
impl Ppaicmkdnei {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::InBattleMechanicusCardChallengeNone => {
                "PPAICMKDNEI_InBattleMechanicusCardChallengeNone"
            }
            Self::InBattleMechanicusCardChallengeOnGoing => {
                "PPAICMKDNEI_InBattleMechanicusCardChallengeOnGoing"
            }
            Self::InBattleMechanicusCardChallengeFail => {
                "PPAICMKDNEI_InBattleMechanicusCardChallengeFail"
            }
            Self::InBattleMechanicusCardChallengeSuccess => {
                "PPAICMKDNEI_InBattleMechanicusCardChallengeSuccess"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "PPAICMKDNEI_InBattleMechanicusCardChallengeNone" => {
                Some(Self::InBattleMechanicusCardChallengeNone)
            }
            "PPAICMKDNEI_InBattleMechanicusCardChallengeOnGoing" => {
                Some(Self::InBattleMechanicusCardChallengeOnGoing)
            }
            "PPAICMKDNEI_InBattleMechanicusCardChallengeFail" => {
                Some(Self::InBattleMechanicusCardChallengeFail)
            }
            "PPAICMKDNEI_InBattleMechanicusCardChallengeSuccess" => {
                Some(Self::InBattleMechanicusCardChallengeSuccess)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Jbgnlaedbhj {
    SettleReasonNone = 0,
    SettleReasonSucc = 1,
    SettleReasonPlayerNotEnough = 2,
}
impl Jbgnlaedbhj {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::SettleReasonNone => "JBGNLAEDBHJ_SettleReasonNone",
            Self::SettleReasonSucc => "JBGNLAEDBHJ_SettleReasonSucc",
            Self::SettleReasonPlayerNotEnough => {
                "JBGNLAEDBHJ_SettleReasonPlayerNotEnough"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "JBGNLAEDBHJ_SettleReasonNone" => Some(Self::SettleReasonNone),
            "JBGNLAEDBHJ_SettleReasonSucc" => Some(Self::SettleReasonSucc),
            "JBGNLAEDBHJ_SettleReasonPlayerNotEnough" => {
                Some(Self::SettleReasonPlayerNotEnough)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Illbojclabl {
    RogueEliteNormal = 0,
    RogueEliteHard = 1,
}
impl Illbojclabl {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::RogueEliteNormal => "ILLBOJCLABL_RogueEliteNormal",
            Self::RogueEliteHard => "ILLBOJCLABL_RogueEliteHard",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "ILLBOJCLABL_RogueEliteNormal" => Some(Self::RogueEliteNormal),
            "ILLBOJCLABL_RogueEliteHard" => Some(Self::RogueEliteHard),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Gmdpmagbaoe {
    None = 0,
    Start = 1,
    Read = 2,
}
impl Gmdpmagbaoe {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "GMDPMAGBAOE_None",
            Self::Start => "GMDPMAGBAOE_Start",
            Self::Read => "GMDPMAGBAOE_Read",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "GMDPMAGBAOE_None" => Some(Self::None),
            "GMDPMAGBAOE_Start" => Some(Self::Start),
            "GMDPMAGBAOE_Read" => Some(Self::Read),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Obdlodpceji {
    DungeonCandidateAvatarTypeNone = 0,
    DungeonCandidateAvatarTypeFormal = 1,
    DungeonCandidateAvatarTypeUgc = 2,
}
impl Obdlodpceji {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::DungeonCandidateAvatarTypeNone => {
                "OBDLODPCEJI_DungeonCandidateAvatarTypeNone"
            }
            Self::DungeonCandidateAvatarTypeFormal => {
                "OBDLODPCEJI_DungeonCandidateAvatarTypeFormal"
            }
            Self::DungeonCandidateAvatarTypeUgc => {
                "OBDLODPCEJI_DungeonCandidateAvatarTypeUgc"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "OBDLODPCEJI_DungeonCandidateAvatarTypeNone" => {
                Some(Self::DungeonCandidateAvatarTypeNone)
            }
            "OBDLODPCEJI_DungeonCandidateAvatarTypeFormal" => {
                Some(Self::DungeonCandidateAvatarTypeFormal)
            }
            "OBDLODPCEJI_DungeonCandidateAvatarTypeUgc" => {
                Some(Self::DungeonCandidateAvatarTypeUgc)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Fbonnigmeip {
    ReportReasonNone = 0,
    ReportReasonDeceptiveAds = 1,
    ReportReasonAbusing = 2,
    ReportReasonCheat = 3,
    ReportReasonPolitical = 4,
    ReportReasonOther = 5,
    ReportReasonHome = 6,
}
impl Fbonnigmeip {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::ReportReasonNone => "FBONNIGMEIP_ReportReasonNone",
            Self::ReportReasonDeceptiveAds => "FBONNIGMEIP_ReportReasonDeceptiveAds",
            Self::ReportReasonAbusing => "FBONNIGMEIP_ReportReasonAbusing",
            Self::ReportReasonCheat => "FBONNIGMEIP_ReportReasonCheat",
            Self::ReportReasonPolitical => "FBONNIGMEIP_ReportReasonPolitical",
            Self::ReportReasonOther => "FBONNIGMEIP_ReportReasonOther",
            Self::ReportReasonHome => "FBONNIGMEIP_ReportReasonHome",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "FBONNIGMEIP_ReportReasonNone" => Some(Self::ReportReasonNone),
            "FBONNIGMEIP_ReportReasonDeceptiveAds" => {
                Some(Self::ReportReasonDeceptiveAds)
            }
            "FBONNIGMEIP_ReportReasonAbusing" => Some(Self::ReportReasonAbusing),
            "FBONNIGMEIP_ReportReasonCheat" => Some(Self::ReportReasonCheat),
            "FBONNIGMEIP_ReportReasonPolitical" => Some(Self::ReportReasonPolitical),
            "FBONNIGMEIP_ReportReasonOther" => Some(Self::ReportReasonOther),
            "FBONNIGMEIP_ReportReasonHome" => Some(Self::ReportReasonHome),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Phggeopnmbp {
    CustomGalleryScoreBoardNormal = 0,
    CustomGalleryScoreBoardCountdown = 1,
    CustomGalleryScoreBoardTimer = 2,
}
impl Phggeopnmbp {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::CustomGalleryScoreBoardNormal => {
                "PHGGEOPNMBP_CustomGalleryScoreBoardNormal"
            }
            Self::CustomGalleryScoreBoardCountdown => {
                "PHGGEOPNMBP_CustomGalleryScoreBoardCountdown"
            }
            Self::CustomGalleryScoreBoardTimer => {
                "PHGGEOPNMBP_CustomGalleryScoreBoardTimer"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "PHGGEOPNMBP_CustomGalleryScoreBoardNormal" => {
                Some(Self::CustomGalleryScoreBoardNormal)
            }
            "PHGGEOPNMBP_CustomGalleryScoreBoardCountdown" => {
                Some(Self::CustomGalleryScoreBoardCountdown)
            }
            "PHGGEOPNMBP_CustomGalleryScoreBoardTimer" => {
                Some(Self::CustomGalleryScoreBoardTimer)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Edapkoefnda {
    None = 0,
    Auto = 1,
    Custom = 2,
}
impl Edapkoefnda {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "EDAPKOEFNDA_None",
            Self::Auto => "EDAPKOEFNDA_Auto",
            Self::Custom => "EDAPKOEFNDA_Custom",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "EDAPKOEFNDA_None" => Some(Self::None),
            "EDAPKOEFNDA_Auto" => Some(Self::Auto),
            "EDAPKOEFNDA_Custom" => Some(Self::Custom),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Ppphamdoacd {
    BargainCompleteSucc = 0,
    BargainSingleFail = 1,
    BargainCompleteFail = 2,
}
impl Ppphamdoacd {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::BargainCompleteSucc => "PPPHAMDOACD_BargainCompleteSucc",
            Self::BargainSingleFail => "PPPHAMDOACD_BargainSingleFail",
            Self::BargainCompleteFail => "PPPHAMDOACD_BargainCompleteFail",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "PPPHAMDOACD_BargainCompleteSucc" => Some(Self::BargainCompleteSucc),
            "PPPHAMDOACD_BargainSingleFail" => Some(Self::BargainSingleFail),
            "PPPHAMDOACD_BargainCompleteFail" => Some(Self::BargainCompleteFail),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Bndgbmfodde {
    Invalid = 0,
    Start = 1,
    Timeout = 2,
}
impl Bndgbmfodde {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Invalid => "BNDGBMFODDE_Invalid",
            Self::Start => "BNDGBMFODDE_Start",
            Self::Timeout => "BNDGBMFODDE_Timeout",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "BNDGBMFODDE_Invalid" => Some(Self::Invalid),
            "BNDGBMFODDE_Start" => Some(Self::Start),
            "BNDGBMFODDE_Timeout" => Some(Self::Timeout),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Ckleegmpdgn {
    None = 0,
    Dungeon = 1,
    MpPlay = 2,
    Mechanicus = 3,
    General = 4,
    Gcg = 5,
}
impl Ckleegmpdgn {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "CKLEEGMPDGN_None",
            Self::Dungeon => "CKLEEGMPDGN_Dungeon",
            Self::MpPlay => "CKLEEGMPDGN_MpPlay",
            Self::Mechanicus => "CKLEEGMPDGN_Mechanicus",
            Self::General => "CKLEEGMPDGN_General",
            Self::Gcg => "CKLEEGMPDGN_Gcg",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "CKLEEGMPDGN_None" => Some(Self::None),
            "CKLEEGMPDGN_Dungeon" => Some(Self::Dungeon),
            "CKLEEGMPDGN_MpPlay" => Some(Self::MpPlay),
            "CKLEEGMPDGN_Mechanicus" => Some(Self::Mechanicus),
            "CKLEEGMPDGN_General" => Some(Self::General),
            "CKLEEGMPDGN_Gcg" => Some(Self::Gcg),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Hdmdabcdahk {
    MatchNone = 0,
    MatchFinish = 1,
    MatchPlayerCancel = 2,
    MatchTimeout = 3,
    MatchPlayerConfirm = 4,
    MatchFailed = 5,
    MatchSystemError = 6,
    MatchInterrupted = 7,
    MatchMpUnavailable = 8,
    MatchConfirmTimeout = 9,
}
impl Hdmdabcdahk {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::MatchNone => "HDMDABCDAHK_MatchNone",
            Self::MatchFinish => "HDMDABCDAHK_MatchFinish",
            Self::MatchPlayerCancel => "HDMDABCDAHK_MatchPlayerCancel",
            Self::MatchTimeout => "HDMDABCDAHK_MatchTimeout",
            Self::MatchPlayerConfirm => "HDMDABCDAHK_MatchPlayerConfirm",
            Self::MatchFailed => "HDMDABCDAHK_MatchFailed",
            Self::MatchSystemError => "HDMDABCDAHK_MatchSystemError",
            Self::MatchInterrupted => "HDMDABCDAHK_MatchInterrupted",
            Self::MatchMpUnavailable => "HDMDABCDAHK_MatchMpUnavailable",
            Self::MatchConfirmTimeout => "HDMDABCDAHK_MatchConfirmTimeout",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "HDMDABCDAHK_MatchNone" => Some(Self::MatchNone),
            "HDMDABCDAHK_MatchFinish" => Some(Self::MatchFinish),
            "HDMDABCDAHK_MatchPlayerCancel" => Some(Self::MatchPlayerCancel),
            "HDMDABCDAHK_MatchTimeout" => Some(Self::MatchTimeout),
            "HDMDABCDAHK_MatchPlayerConfirm" => Some(Self::MatchPlayerConfirm),
            "HDMDABCDAHK_MatchFailed" => Some(Self::MatchFailed),
            "HDMDABCDAHK_MatchSystemError" => Some(Self::MatchSystemError),
            "HDMDABCDAHK_MatchInterrupted" => Some(Self::MatchInterrupted),
            "HDMDABCDAHK_MatchMpUnavailable" => Some(Self::MatchMpUnavailable),
            "HDMDABCDAHK_MatchConfirmTimeout" => Some(Self::MatchConfirmTimeout),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum ForwardType {
    Local = 0,
    ToAll = 1,
    ToAllExceptCur = 2,
    ToHost = 3,
    ToAllGuest = 4,
    ToPeer = 5,
    ToPeers = 6,
    OnlyServer = 7,
    ToAllExistExceptCur = 8,
}
impl ForwardType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Local => "FORWARD_TYPE_LOCAL",
            Self::ToAll => "FORWARD_TYPE_TO_ALL",
            Self::ToAllExceptCur => "FORWARD_TYPE_TO_ALL_EXCEPT_CUR",
            Self::ToHost => "FORWARD_TYPE_TO_HOST",
            Self::ToAllGuest => "FORWARD_TYPE_TO_ALL_GUEST",
            Self::ToPeer => "FORWARD_TYPE_TO_PEER",
            Self::ToPeers => "FORWARD_TYPE_TO_PEERS",
            Self::OnlyServer => "FORWARD_TYPE_ONLY_SERVER",
            Self::ToAllExistExceptCur => "FORWARD_TYPE_TO_ALL_EXIST_EXCEPT_CUR",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "FORWARD_TYPE_LOCAL" => Some(Self::Local),
            "FORWARD_TYPE_TO_ALL" => Some(Self::ToAll),
            "FORWARD_TYPE_TO_ALL_EXCEPT_CUR" => Some(Self::ToAllExceptCur),
            "FORWARD_TYPE_TO_HOST" => Some(Self::ToHost),
            "FORWARD_TYPE_TO_ALL_GUEST" => Some(Self::ToAllGuest),
            "FORWARD_TYPE_TO_PEER" => Some(Self::ToPeer),
            "FORWARD_TYPE_TO_PEERS" => Some(Self::ToPeers),
            "FORWARD_TYPE_ONLY_SERVER" => Some(Self::OnlyServer),
            "FORWARD_TYPE_TO_ALL_EXIST_EXCEPT_CUR" => Some(Self::ToAllExistExceptCur),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Bonkncpajma {
    ChangeHpNone = 0,
    ChangeHpSubAvatar = 1,
    ChangeHpSubMonster = 2,
    ChangeHpSubGear = 3,
    ChangeHpSubEnvir = 4,
    ChangeHpSubFall = 5,
    ChangeHpSubDrawn = 6,
    ChangeHpSubAbyss = 7,
    ChangeHpSubAbility = 8,
    ChangeHpSubSummon = 9,
    ChangeHpSubScript = 10,
    ChangeHpSubGm = 11,
    ChangeHpSubKillSelf = 12,
    ChangeHpSubClimateCold = 13,
    ChangeHpSubStormLightning = 14,
    ChangeHpSubKillServerGadget = 15,
    ChangeHpSubReplace = 16,
    ChangeHpSubPlayerLeave = 17,
    ChangeHpAttackByEnergy = 18,
    ChangeHpAttackByRecycle = 19,
    ChangeHpSubPlayerBack = 20,
    ChangeHpSubUgc = 21,
    ChangeHpSubDirtyWaterErosion = 22,
    ChangeHpSubDestroySelf = 23,
    ChangeHpSubLiquidPhlogiston = 24,
    ChangeHpByLua = 51,
    ChangeHpAddAbility = 101,
    ChangeHpAddItem = 102,
    ChangeHpAddRevive = 103,
    ChangeHpAddUpgrade = 104,
    ChangeHpAddStatue = 105,
    ChangeHpAddBackground = 106,
    ChangeHpAddGm = 107,
    ChangeHpAddTrialAvatarActivity = 108,
    ChangeHpAddRouguelikeSpring = 109,
    ChangeHpAddEffigyChallengeV5 = 110,
}
impl Bonkncpajma {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::ChangeHpNone => "BONKNCPAJMA_ChangeHpNone",
            Self::ChangeHpSubAvatar => "BONKNCPAJMA_ChangeHpSubAvatar",
            Self::ChangeHpSubMonster => "BONKNCPAJMA_ChangeHpSubMonster",
            Self::ChangeHpSubGear => "BONKNCPAJMA_ChangeHpSubGear",
            Self::ChangeHpSubEnvir => "BONKNCPAJMA_ChangeHpSubEnvir",
            Self::ChangeHpSubFall => "BONKNCPAJMA_ChangeHpSubFall",
            Self::ChangeHpSubDrawn => "BONKNCPAJMA_ChangeHpSubDrawn",
            Self::ChangeHpSubAbyss => "BONKNCPAJMA_ChangeHpSubAbyss",
            Self::ChangeHpSubAbility => "BONKNCPAJMA_ChangeHpSubAbility",
            Self::ChangeHpSubSummon => "BONKNCPAJMA_ChangeHpSubSummon",
            Self::ChangeHpSubScript => "BONKNCPAJMA_ChangeHpSubScript",
            Self::ChangeHpSubGm => "BONKNCPAJMA_ChangeHpSubGm",
            Self::ChangeHpSubKillSelf => "BONKNCPAJMA_ChangeHpSubKillSelf",
            Self::ChangeHpSubClimateCold => "BONKNCPAJMA_ChangeHpSubClimateCold",
            Self::ChangeHpSubStormLightning => "BONKNCPAJMA_ChangeHpSubStormLightning",
            Self::ChangeHpSubKillServerGadget => {
                "BONKNCPAJMA_ChangeHpSubKillServerGadget"
            }
            Self::ChangeHpSubReplace => "BONKNCPAJMA_ChangeHpSubReplace",
            Self::ChangeHpSubPlayerLeave => "BONKNCPAJMA_ChangeHpSubPlayerLeave",
            Self::ChangeHpAttackByEnergy => "BONKNCPAJMA_ChangeHpAttackByEnergy",
            Self::ChangeHpAttackByRecycle => "BONKNCPAJMA_ChangeHpAttackByRecycle",
            Self::ChangeHpSubPlayerBack => "BONKNCPAJMA_ChangeHpSubPlayerBack",
            Self::ChangeHpSubUgc => "BONKNCPAJMA_ChangeHpSubUgc",
            Self::ChangeHpSubDirtyWaterErosion => {
                "BONKNCPAJMA_ChangeHpSubDirtyWaterErosion"
            }
            Self::ChangeHpSubDestroySelf => "BONKNCPAJMA_ChangeHpSubDestroySelf",
            Self::ChangeHpSubLiquidPhlogiston => {
                "BONKNCPAJMA_ChangeHpSubLiquidPhlogiston"
            }
            Self::ChangeHpByLua => "BONKNCPAJMA_ChangeHpByLua",
            Self::ChangeHpAddAbility => "BONKNCPAJMA_ChangeHpAddAbility",
            Self::ChangeHpAddItem => "BONKNCPAJMA_ChangeHpAddItem",
            Self::ChangeHpAddRevive => "BONKNCPAJMA_ChangeHpAddRevive",
            Self::ChangeHpAddUpgrade => "BONKNCPAJMA_ChangeHpAddUpgrade",
            Self::ChangeHpAddStatue => "BONKNCPAJMA_ChangeHpAddStatue",
            Self::ChangeHpAddBackground => "BONKNCPAJMA_ChangeHpAddBackground",
            Self::ChangeHpAddGm => "BONKNCPAJMA_ChangeHpAddGm",
            Self::ChangeHpAddTrialAvatarActivity => {
                "BONKNCPAJMA_ChangeHpAddTrialAvatarActivity"
            }
            Self::ChangeHpAddRouguelikeSpring => {
                "BONKNCPAJMA_ChangeHpAddRouguelikeSpring"
            }
            Self::ChangeHpAddEffigyChallengeV5 => {
                "BONKNCPAJMA_ChangeHpAddEffigyChallengeV5"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "BONKNCPAJMA_ChangeHpNone" => Some(Self::ChangeHpNone),
            "BONKNCPAJMA_ChangeHpSubAvatar" => Some(Self::ChangeHpSubAvatar),
            "BONKNCPAJMA_ChangeHpSubMonster" => Some(Self::ChangeHpSubMonster),
            "BONKNCPAJMA_ChangeHpSubGear" => Some(Self::ChangeHpSubGear),
            "BONKNCPAJMA_ChangeHpSubEnvir" => Some(Self::ChangeHpSubEnvir),
            "BONKNCPAJMA_ChangeHpSubFall" => Some(Self::ChangeHpSubFall),
            "BONKNCPAJMA_ChangeHpSubDrawn" => Some(Self::ChangeHpSubDrawn),
            "BONKNCPAJMA_ChangeHpSubAbyss" => Some(Self::ChangeHpSubAbyss),
            "BONKNCPAJMA_ChangeHpSubAbility" => Some(Self::ChangeHpSubAbility),
            "BONKNCPAJMA_ChangeHpSubSummon" => Some(Self::ChangeHpSubSummon),
            "BONKNCPAJMA_ChangeHpSubScript" => Some(Self::ChangeHpSubScript),
            "BONKNCPAJMA_ChangeHpSubGm" => Some(Self::ChangeHpSubGm),
            "BONKNCPAJMA_ChangeHpSubKillSelf" => Some(Self::ChangeHpSubKillSelf),
            "BONKNCPAJMA_ChangeHpSubClimateCold" => Some(Self::ChangeHpSubClimateCold),
            "BONKNCPAJMA_ChangeHpSubStormLightning" => {
                Some(Self::ChangeHpSubStormLightning)
            }
            "BONKNCPAJMA_ChangeHpSubKillServerGadget" => {
                Some(Self::ChangeHpSubKillServerGadget)
            }
            "BONKNCPAJMA_ChangeHpSubReplace" => Some(Self::ChangeHpSubReplace),
            "BONKNCPAJMA_ChangeHpSubPlayerLeave" => Some(Self::ChangeHpSubPlayerLeave),
            "BONKNCPAJMA_ChangeHpAttackByEnergy" => Some(Self::ChangeHpAttackByEnergy),
            "BONKNCPAJMA_ChangeHpAttackByRecycle" => Some(Self::ChangeHpAttackByRecycle),
            "BONKNCPAJMA_ChangeHpSubPlayerBack" => Some(Self::ChangeHpSubPlayerBack),
            "BONKNCPAJMA_ChangeHpSubUgc" => Some(Self::ChangeHpSubUgc),
            "BONKNCPAJMA_ChangeHpSubDirtyWaterErosion" => {
                Some(Self::ChangeHpSubDirtyWaterErosion)
            }
            "BONKNCPAJMA_ChangeHpSubDestroySelf" => Some(Self::ChangeHpSubDestroySelf),
            "BONKNCPAJMA_ChangeHpSubLiquidPhlogiston" => {
                Some(Self::ChangeHpSubLiquidPhlogiston)
            }
            "BONKNCPAJMA_ChangeHpByLua" => Some(Self::ChangeHpByLua),
            "BONKNCPAJMA_ChangeHpAddAbility" => Some(Self::ChangeHpAddAbility),
            "BONKNCPAJMA_ChangeHpAddItem" => Some(Self::ChangeHpAddItem),
            "BONKNCPAJMA_ChangeHpAddRevive" => Some(Self::ChangeHpAddRevive),
            "BONKNCPAJMA_ChangeHpAddUpgrade" => Some(Self::ChangeHpAddUpgrade),
            "BONKNCPAJMA_ChangeHpAddStatue" => Some(Self::ChangeHpAddStatue),
            "BONKNCPAJMA_ChangeHpAddBackground" => Some(Self::ChangeHpAddBackground),
            "BONKNCPAJMA_ChangeHpAddGm" => Some(Self::ChangeHpAddGm),
            "BONKNCPAJMA_ChangeHpAddTrialAvatarActivity" => {
                Some(Self::ChangeHpAddTrialAvatarActivity)
            }
            "BONKNCPAJMA_ChangeHpAddRouguelikeSpring" => {
                Some(Self::ChangeHpAddRouguelikeSpring)
            }
            "BONKNCPAJMA_ChangeHpAddEffigyChallengeV5" => {
                Some(Self::ChangeHpAddEffigyChallengeV5)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum AvatarExpeditionState {
    AvatarExpeditionNone = 0,
    AvatarExpeditionDoing = 1,
    AvatarExpeditionFinishWaitReward = 2,
    AvatarExpeditionCallbackWaitReward = 3,
    AvatarExpeditionLocked = 4,
}
impl AvatarExpeditionState {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::AvatarExpeditionNone => "AvatarExpeditionState_AvatarExpeditionNone",
            Self::AvatarExpeditionDoing => "AvatarExpeditionState_AvatarExpeditionDoing",
            Self::AvatarExpeditionFinishWaitReward => {
                "AvatarExpeditionState_AvatarExpeditionFinishWaitReward"
            }
            Self::AvatarExpeditionCallbackWaitReward => {
                "AvatarExpeditionState_AvatarExpeditionCallbackWaitReward"
            }
            Self::AvatarExpeditionLocked => {
                "AvatarExpeditionState_AvatarExpeditionLocked"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "AvatarExpeditionState_AvatarExpeditionNone" => {
                Some(Self::AvatarExpeditionNone)
            }
            "AvatarExpeditionState_AvatarExpeditionDoing" => {
                Some(Self::AvatarExpeditionDoing)
            }
            "AvatarExpeditionState_AvatarExpeditionFinishWaitReward" => {
                Some(Self::AvatarExpeditionFinishWaitReward)
            }
            "AvatarExpeditionState_AvatarExpeditionCallbackWaitReward" => {
                Some(Self::AvatarExpeditionCallbackWaitReward)
            }
            "AvatarExpeditionState_AvatarExpeditionLocked" => {
                Some(Self::AvatarExpeditionLocked)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Lngojpfiioo {
    None = 0,
    ESkillShared = 1,
}
impl Lngojpfiioo {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "LNGOJPFIIOO_None",
            Self::ESkillShared => "LNGOJPFIIOO_ESkillShared",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "LNGOJPFIIOO_None" => Some(Self::None),
            "LNGOJPFIIOO_ESkillShared" => Some(Self::ESkillShared),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum MonsterBornType {
    MonsterBornNone = 0,
    MonsterBornDefault = 1,
    MonsterBornRandom = 2,
}
impl MonsterBornType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::MonsterBornNone => "MonsterBornType_MonsterBornNone",
            Self::MonsterBornDefault => "MonsterBornType_MonsterBornDefault",
            Self::MonsterBornRandom => "MonsterBornType_MonsterBornRandom",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "MonsterBornType_MonsterBornNone" => Some(Self::MonsterBornNone),
            "MonsterBornType_MonsterBornDefault" => Some(Self::MonsterBornDefault),
            "MonsterBornType_MonsterBornRandom" => Some(Self::MonsterBornRandom),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Agfcmlmdkfd {
    SalesmanStatusNone = 0,
    SalesmanStatusUnstarted = 1,
    SalesmanStatusStarted = 2,
    SalesmanStatusDelivered = 3,
}
impl Agfcmlmdkfd {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::SalesmanStatusNone => "AGFCMLMDKFD_SalesmanStatusNone",
            Self::SalesmanStatusUnstarted => "AGFCMLMDKFD_SalesmanStatusUnstarted",
            Self::SalesmanStatusStarted => "AGFCMLMDKFD_SalesmanStatusStarted",
            Self::SalesmanStatusDelivered => "AGFCMLMDKFD_SalesmanStatusDelivered",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "AGFCMLMDKFD_SalesmanStatusNone" => Some(Self::SalesmanStatusNone),
            "AGFCMLMDKFD_SalesmanStatusUnstarted" => Some(Self::SalesmanStatusUnstarted),
            "AGFCMLMDKFD_SalesmanStatusStarted" => Some(Self::SalesmanStatusStarted),
            "AGFCMLMDKFD_SalesmanStatusDelivered" => Some(Self::SalesmanStatusDelivered),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Binoocjmlcb {
    LunaRiteHintStatusDefault = 0,
    LunaRiteHintStatusNoCount = 1,
    LunaRiteHintStatusFinish = 2,
}
impl Binoocjmlcb {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::LunaRiteHintStatusDefault => "BINOOCJMLCB_LunaRiteHintStatusDefault",
            Self::LunaRiteHintStatusNoCount => "BINOOCJMLCB_LunaRiteHintStatusNoCount",
            Self::LunaRiteHintStatusFinish => "BINOOCJMLCB_LunaRiteHintStatusFinish",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "BINOOCJMLCB_LunaRiteHintStatusDefault" => {
                Some(Self::LunaRiteHintStatusDefault)
            }
            "BINOOCJMLCB_LunaRiteHintStatusNoCount" => {
                Some(Self::LunaRiteHintStatusNoCount)
            }
            "BINOOCJMLCB_LunaRiteHintStatusFinish" => {
                Some(Self::LunaRiteHintStatusFinish)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Chlphbkbhoa {
    Others = 0,
    LockOrStar = 1,
}
impl Chlphbkbhoa {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Others => "CHLPHBKBHOA_Others",
            Self::LockOrStar => "CHLPHBKBHOA_LockOrStar",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "CHLPHBKBHOA_Others" => Some(Self::Others),
            "CHLPHBKBHOA_LockOrStar" => Some(Self::LockOrStar),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Jfjdmokldbn {
    Invalid = 0,
    KickByHost = 1,
    BackToMyWorld = 2,
    HomeBlocked = 3,
    HomeInEditMode = 4,
    ByMuip = 5,
    CurModuleClosed = 6,
}
impl Jfjdmokldbn {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Invalid => "JFJDMOKLDBN_Invalid",
            Self::KickByHost => "JFJDMOKLDBN_KickByHost",
            Self::BackToMyWorld => "JFJDMOKLDBN_BackToMyWorld",
            Self::HomeBlocked => "JFJDMOKLDBN_HomeBlocked",
            Self::HomeInEditMode => "JFJDMOKLDBN_HomeInEditMode",
            Self::ByMuip => "JFJDMOKLDBN_ByMuip",
            Self::CurModuleClosed => "JFJDMOKLDBN_CurModuleClosed",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "JFJDMOKLDBN_Invalid" => Some(Self::Invalid),
            "JFJDMOKLDBN_KickByHost" => Some(Self::KickByHost),
            "JFJDMOKLDBN_BackToMyWorld" => Some(Self::BackToMyWorld),
            "JFJDMOKLDBN_HomeBlocked" => Some(Self::HomeBlocked),
            "JFJDMOKLDBN_HomeInEditMode" => Some(Self::HomeInEditMode),
            "JFJDMOKLDBN_ByMuip" => Some(Self::ByMuip),
            "JFJDMOKLDBN_CurModuleClosed" => Some(Self::CurModuleClosed),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Deliifbapel {
    None = 0,
    Pack = 1,
    Plant = 2,
}
impl Deliifbapel {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "DELIIFBAPEL_None",
            Self::Pack => "DELIIFBAPEL_Pack",
            Self::Plant => "DELIIFBAPEL_Plant",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "DELIIFBAPEL_None" => Some(Self::None),
            "DELIIFBAPEL_Pack" => Some(Self::Pack),
            "DELIIFBAPEL_Plant" => Some(Self::Plant),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Glnndhihpdf {
    NeedConfirm = 0,
    Refuse = 1,
    Direct = 2,
}
impl Glnndhihpdf {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::NeedConfirm => "GLNNDHIHPDF_NeedConfirm",
            Self::Refuse => "GLNNDHIHPDF_Refuse",
            Self::Direct => "GLNNDHIHPDF_Direct",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "GLNNDHIHPDF_NeedConfirm" => Some(Self::NeedConfirm),
            "GLNNDHIHPDF_Refuse" => Some(Self::Refuse),
            "GLNNDHIHPDF_Direct" => Some(Self::Direct),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Ajlcommpdic {
    ReportReasonSubtypeNone = 0,
    ReportReasonSubtypeInvalidNickname = 1,
    ReportReasonSubtypeInvalidSignature = 2,
    ReportReasonSubtypeInvalidArrangement = 3,
    ReportReasonSubtypeInvalidChat = 4,
    ReportReasonSubtypeInvalidAvatarName = 5,
    ReportReasonSubtypeInvalidOther = 6,
    ReportReasonSubtypeInvalidLittleDrillName = 7,
}
impl Ajlcommpdic {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::ReportReasonSubtypeNone => "AJLCOMMPDIC_ReportReasonSubtypeNone",
            Self::ReportReasonSubtypeInvalidNickname => {
                "AJLCOMMPDIC_ReportReasonSubtypeInvalidNickname"
            }
            Self::ReportReasonSubtypeInvalidSignature => {
                "AJLCOMMPDIC_ReportReasonSubtypeInvalidSignature"
            }
            Self::ReportReasonSubtypeInvalidArrangement => {
                "AJLCOMMPDIC_ReportReasonSubtypeInvalidArrangement"
            }
            Self::ReportReasonSubtypeInvalidChat => {
                "AJLCOMMPDIC_ReportReasonSubtypeInvalidChat"
            }
            Self::ReportReasonSubtypeInvalidAvatarName => {
                "AJLCOMMPDIC_ReportReasonSubtypeInvalidAvatarName"
            }
            Self::ReportReasonSubtypeInvalidOther => {
                "AJLCOMMPDIC_ReportReasonSubtypeInvalidOther"
            }
            Self::ReportReasonSubtypeInvalidLittleDrillName => {
                "AJLCOMMPDIC_ReportReasonSubtypeInvalidLittleDrillName"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "AJLCOMMPDIC_ReportReasonSubtypeNone" => Some(Self::ReportReasonSubtypeNone),
            "AJLCOMMPDIC_ReportReasonSubtypeInvalidNickname" => {
                Some(Self::ReportReasonSubtypeInvalidNickname)
            }
            "AJLCOMMPDIC_ReportReasonSubtypeInvalidSignature" => {
                Some(Self::ReportReasonSubtypeInvalidSignature)
            }
            "AJLCOMMPDIC_ReportReasonSubtypeInvalidArrangement" => {
                Some(Self::ReportReasonSubtypeInvalidArrangement)
            }
            "AJLCOMMPDIC_ReportReasonSubtypeInvalidChat" => {
                Some(Self::ReportReasonSubtypeInvalidChat)
            }
            "AJLCOMMPDIC_ReportReasonSubtypeInvalidAvatarName" => {
                Some(Self::ReportReasonSubtypeInvalidAvatarName)
            }
            "AJLCOMMPDIC_ReportReasonSubtypeInvalidOther" => {
                Some(Self::ReportReasonSubtypeInvalidOther)
            }
            "AJLCOMMPDIC_ReportReasonSubtypeInvalidLittleDrillName" => {
                Some(Self::ReportReasonSubtypeInvalidLittleDrillName)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Mhjjgcmmglo {
    CompoundBoostTakeStatusNone = 0,
    CompoundBoostTakeStatusBoostOnly = 1,
    CompoundBoostTakeStatusBoostAndTake = 2,
    CompoundBoostTakeStatusBagFull = 3,
}
impl Mhjjgcmmglo {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::CompoundBoostTakeStatusNone => {
                "MHJJGCMMGLO_CompoundBoostTakeStatusNone"
            }
            Self::CompoundBoostTakeStatusBoostOnly => {
                "MHJJGCMMGLO_CompoundBoostTakeStatusBoostOnly"
            }
            Self::CompoundBoostTakeStatusBoostAndTake => {
                "MHJJGCMMGLO_CompoundBoostTakeStatusBoostAndTake"
            }
            Self::CompoundBoostTakeStatusBagFull => {
                "MHJJGCMMGLO_CompoundBoostTakeStatusBagFull"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "MHJJGCMMGLO_CompoundBoostTakeStatusNone" => {
                Some(Self::CompoundBoostTakeStatusNone)
            }
            "MHJJGCMMGLO_CompoundBoostTakeStatusBoostOnly" => {
                Some(Self::CompoundBoostTakeStatusBoostOnly)
            }
            "MHJJGCMMGLO_CompoundBoostTakeStatusBoostAndTake" => {
                Some(Self::CompoundBoostTakeStatusBoostAndTake)
            }
            "MHJJGCMMGLO_CompoundBoostTakeStatusBagFull" => {
                Some(Self::CompoundBoostTakeStatusBagFull)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Fmbegbmccbc {
    None = 0,
    Theme = 1,
    Falling = 2,
    Track = 3,
    Connection = 4,
    Fever = 5,
    Background = 6,
    ThemeFollow = 7,
    Instrument = 8,
}
impl Fmbegbmccbc {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "FMBEGBMCCBC_None",
            Self::Theme => "FMBEGBMCCBC_Theme",
            Self::Falling => "FMBEGBMCCBC_Falling",
            Self::Track => "FMBEGBMCCBC_Track",
            Self::Connection => "FMBEGBMCCBC_Connection",
            Self::Fever => "FMBEGBMCCBC_Fever",
            Self::Background => "FMBEGBMCCBC_Background",
            Self::ThemeFollow => "FMBEGBMCCBC_ThemeFollow",
            Self::Instrument => "FMBEGBMCCBC_Instrument",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "FMBEGBMCCBC_None" => Some(Self::None),
            "FMBEGBMCCBC_Theme" => Some(Self::Theme),
            "FMBEGBMCCBC_Falling" => Some(Self::Falling),
            "FMBEGBMCCBC_Track" => Some(Self::Track),
            "FMBEGBMCCBC_Connection" => Some(Self::Connection),
            "FMBEGBMCCBC_Fever" => Some(Self::Fever),
            "FMBEGBMCCBC_Background" => Some(Self::Background),
            "FMBEGBMCCBC_ThemeFollow" => Some(Self::ThemeFollow),
            "FMBEGBMCCBC_Instrument" => Some(Self::Instrument),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Jmbbabgjlam {
    DungeonCandidateTplrNormal = 0,
    DungeonCandidateTplrDie = 1,
    DungeonCandidateTplrBeKick = 2,
    DungeonCandidateDisconnect = 3,
}
impl Jmbbabgjlam {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::DungeonCandidateTplrNormal => "JMBBABGJLAM_DungeonCandidateTplrNormal",
            Self::DungeonCandidateTplrDie => "JMBBABGJLAM_DungeonCandidateTplrDie",
            Self::DungeonCandidateTplrBeKick => "JMBBABGJLAM_DungeonCandidateTplrBeKick",
            Self::DungeonCandidateDisconnect => "JMBBABGJLAM_DungeonCandidateDisconnect",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "JMBBABGJLAM_DungeonCandidateTplrNormal" => {
                Some(Self::DungeonCandidateTplrNormal)
            }
            "JMBBABGJLAM_DungeonCandidateTplrDie" => Some(Self::DungeonCandidateTplrDie),
            "JMBBABGJLAM_DungeonCandidateTplrBeKick" => {
                Some(Self::DungeonCandidateTplrBeKick)
            }
            "JMBBABGJLAM_DungeonCandidateDisconnect" => {
                Some(Self::DungeonCandidateDisconnect)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Bmidafbcomp {
    MsgUnknown = 0,
    MsgBlockRefreshCountdown = 1,
    MsgAvatarReviveByStatue = 2,
    MsgDailyTaskRewardMaxNum = 3,
    MsgRoutineTypeNotOpen = 4,
    MsgRoutineTypeRewardMaxNum = 5,
}
impl Bmidafbcomp {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::MsgUnknown => "BMIDAFBCOMP_MsgUnknown",
            Self::MsgBlockRefreshCountdown => "BMIDAFBCOMP_MsgBlockRefreshCountdown",
            Self::MsgAvatarReviveByStatue => "BMIDAFBCOMP_MsgAvatarReviveByStatue",
            Self::MsgDailyTaskRewardMaxNum => "BMIDAFBCOMP_MsgDailyTaskRewardMaxNum",
            Self::MsgRoutineTypeNotOpen => "BMIDAFBCOMP_MsgRoutineTypeNotOpen",
            Self::MsgRoutineTypeRewardMaxNum => "BMIDAFBCOMP_MsgRoutineTypeRewardMaxNum",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "BMIDAFBCOMP_MsgUnknown" => Some(Self::MsgUnknown),
            "BMIDAFBCOMP_MsgBlockRefreshCountdown" => {
                Some(Self::MsgBlockRefreshCountdown)
            }
            "BMIDAFBCOMP_MsgAvatarReviveByStatue" => Some(Self::MsgAvatarReviveByStatue),
            "BMIDAFBCOMP_MsgDailyTaskRewardMaxNum" => {
                Some(Self::MsgDailyTaskRewardMaxNum)
            }
            "BMIDAFBCOMP_MsgRoutineTypeNotOpen" => Some(Self::MsgRoutineTypeNotOpen),
            "BMIDAFBCOMP_MsgRoutineTypeRewardMaxNum" => {
                Some(Self::MsgRoutineTypeRewardMaxNum)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Pidegnlbonb {
    Unlock = 0,
    Lock = 1,
    Taken = 2,
}
impl Pidegnlbonb {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Unlock => "PIDEGNLBONB_Unlock",
            Self::Lock => "PIDEGNLBONB_Lock",
            Self::Taken => "PIDEGNLBONB_Taken",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "PIDEGNLBONB_Unlock" => Some(Self::Unlock),
            "PIDEGNLBONB_Lock" => Some(Self::Lock),
            "PIDEGNLBONB_Taken" => Some(Self::Taken),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Hcgbofdmmpa {
    KeepRotX = 0,
    KeepRotXy = 1,
}
impl Hcgbofdmmpa {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::KeepRotX => "HCGBOFDMMPA_KeepRotX",
            Self::KeepRotXy => "HCGBOFDMMPA_KeepRotXy",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "HCGBOFDMMPA_KeepRotX" => Some(Self::KeepRotX),
            "HCGBOFDMMPA_KeepRotXy" => Some(Self::KeepRotXy),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Nlobhempbem {
    GcgGameNone = 0,
    GcgGameGm = 1,
    GcgGameMatch = 2,
    GcgGamePvp = 3,
    GcgGameTavernChallenge = 4,
    GcgGameConstChallenge = 5,
    GcgGameWorldChallenge = 6,
    GcgGameBossChallenge = 7,
    GcgGameWeekChallenge = 8,
    GcgGameBreakChallenge = 9,
    GcgGameQuest = 10,
    GcgGameGuideGroup = 11,
    GcgGameOther = 12,
    GcgGameActivityJourney = 13,
    GcgGamePveActivity = 14,
    GcgGameArena = 15,
    GcgGameActivityPveInfinite = 16,
    GcgGameActivityPvePuzzle = 17,
    GcgGameActivityPveAutoBattleCard = 18,
}
impl Nlobhempbem {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::GcgGameNone => "NLOBHEMPBEM_GcgGameNone",
            Self::GcgGameGm => "NLOBHEMPBEM_GcgGameGm",
            Self::GcgGameMatch => "NLOBHEMPBEM_GcgGameMatch",
            Self::GcgGamePvp => "NLOBHEMPBEM_GcgGamePvp",
            Self::GcgGameTavernChallenge => "NLOBHEMPBEM_GcgGameTavernChallenge",
            Self::GcgGameConstChallenge => "NLOBHEMPBEM_GcgGameConstChallenge",
            Self::GcgGameWorldChallenge => "NLOBHEMPBEM_GcgGameWorldChallenge",
            Self::GcgGameBossChallenge => "NLOBHEMPBEM_GcgGameBossChallenge",
            Self::GcgGameWeekChallenge => "NLOBHEMPBEM_GcgGameWeekChallenge",
            Self::GcgGameBreakChallenge => "NLOBHEMPBEM_GcgGameBreakChallenge",
            Self::GcgGameQuest => "NLOBHEMPBEM_GcgGameQuest",
            Self::GcgGameGuideGroup => "NLOBHEMPBEM_GcgGameGuideGroup",
            Self::GcgGameOther => "NLOBHEMPBEM_GcgGameOther",
            Self::GcgGameActivityJourney => "NLOBHEMPBEM_GcgGameActivityJourney",
            Self::GcgGamePveActivity => "NLOBHEMPBEM_GcgGamePveActivity",
            Self::GcgGameArena => "NLOBHEMPBEM_GcgGameArena",
            Self::GcgGameActivityPveInfinite => "NLOBHEMPBEM_GcgGameActivityPveInfinite",
            Self::GcgGameActivityPvePuzzle => "NLOBHEMPBEM_GcgGameActivityPvePuzzle",
            Self::GcgGameActivityPveAutoBattleCard => {
                "NLOBHEMPBEM_GcgGameActivityPveAutoBattleCard"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "NLOBHEMPBEM_GcgGameNone" => Some(Self::GcgGameNone),
            "NLOBHEMPBEM_GcgGameGm" => Some(Self::GcgGameGm),
            "NLOBHEMPBEM_GcgGameMatch" => Some(Self::GcgGameMatch),
            "NLOBHEMPBEM_GcgGamePvp" => Some(Self::GcgGamePvp),
            "NLOBHEMPBEM_GcgGameTavernChallenge" => Some(Self::GcgGameTavernChallenge),
            "NLOBHEMPBEM_GcgGameConstChallenge" => Some(Self::GcgGameConstChallenge),
            "NLOBHEMPBEM_GcgGameWorldChallenge" => Some(Self::GcgGameWorldChallenge),
            "NLOBHEMPBEM_GcgGameBossChallenge" => Some(Self::GcgGameBossChallenge),
            "NLOBHEMPBEM_GcgGameWeekChallenge" => Some(Self::GcgGameWeekChallenge),
            "NLOBHEMPBEM_GcgGameBreakChallenge" => Some(Self::GcgGameBreakChallenge),
            "NLOBHEMPBEM_GcgGameQuest" => Some(Self::GcgGameQuest),
            "NLOBHEMPBEM_GcgGameGuideGroup" => Some(Self::GcgGameGuideGroup),
            "NLOBHEMPBEM_GcgGameOther" => Some(Self::GcgGameOther),
            "NLOBHEMPBEM_GcgGameActivityJourney" => Some(Self::GcgGameActivityJourney),
            "NLOBHEMPBEM_GcgGamePveActivity" => Some(Self::GcgGamePveActivity),
            "NLOBHEMPBEM_GcgGameArena" => Some(Self::GcgGameArena),
            "NLOBHEMPBEM_GcgGameActivityPveInfinite" => {
                Some(Self::GcgGameActivityPveInfinite)
            }
            "NLOBHEMPBEM_GcgGameActivityPvePuzzle" => {
                Some(Self::GcgGameActivityPvePuzzle)
            }
            "NLOBHEMPBEM_GcgGameActivityPveAutoBattleCard" => {
                Some(Self::GcgGameActivityPveAutoBattleCard)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum CombatTypeArgument {
    None = 0,
    EvtBeingHit = 1,
    AnimatorStateChanged = 2,
    FaceToDir = 3,
    SetAttackTarget = 4,
    RushMove = 5,
    AnimatorParameterChanged = 6,
    EntityMove = 7,
    SyncEntityPosition = 8,
    SteerMotionInfo = 9,
    ForceSetPosInfo = 10,
    CompensatePosDiff = 11,
    MonsterDoBlink = 12,
    FixedRushMove = 13,
    SyncTransform = 14,
    LightCoreMove = 15,
    BeingHealedNtf = 16,
    SkillAnchorPositionNtf = 17,
    GrapplingHookMove = 18,
    SpecialMotionInfo = 19,
    FixedAvatarFlashMove = 20,
    MultiOverrideAnim = 21,
    DebugSyncMotion = 22,
}
impl CombatTypeArgument {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "COMBAT_TYPE_ARGUMENT_NONE",
            Self::EvtBeingHit => "COMBAT_TYPE_ARGUMENT_EVT_BEING_HIT",
            Self::AnimatorStateChanged => "COMBAT_TYPE_ARGUMENT_ANIMATOR_STATE_CHANGED",
            Self::FaceToDir => "COMBAT_TYPE_ARGUMENT_FACE_TO_DIR",
            Self::SetAttackTarget => "COMBAT_TYPE_ARGUMENT_SET_ATTACK_TARGET",
            Self::RushMove => "COMBAT_TYPE_ARGUMENT_RUSH_MOVE",
            Self::AnimatorParameterChanged => {
                "COMBAT_TYPE_ARGUMENT_ANIMATOR_PARAMETER_CHANGED"
            }
            Self::EntityMove => "COMBAT_TYPE_ARGUMENT_ENTITY_MOVE",
            Self::SyncEntityPosition => "COMBAT_TYPE_ARGUMENT_SYNC_ENTITY_POSITION",
            Self::SteerMotionInfo => "COMBAT_TYPE_ARGUMENT_STEER_MOTION_INFO",
            Self::ForceSetPosInfo => "COMBAT_TYPE_ARGUMENT_FORCE_SET_POS_INFO",
            Self::CompensatePosDiff => "COMBAT_TYPE_ARGUMENT_COMPENSATE_POS_DIFF",
            Self::MonsterDoBlink => "COMBAT_TYPE_ARGUMENT_MONSTER_DO_BLINK",
            Self::FixedRushMove => "COMBAT_TYPE_ARGUMENT_FIXED_RUSH_MOVE",
            Self::SyncTransform => "COMBAT_TYPE_ARGUMENT_SYNC_TRANSFORM",
            Self::LightCoreMove => "COMBAT_TYPE_ARGUMENT_LIGHT_CORE_MOVE",
            Self::BeingHealedNtf => "COMBAT_TYPE_ARGUMENT_BEING_HEALED_NTF",
            Self::SkillAnchorPositionNtf => {
                "COMBAT_TYPE_ARGUMENT_SKILL_ANCHOR_POSITION_NTF"
            }
            Self::GrapplingHookMove => "COMBAT_TYPE_ARGUMENT_GRAPPLING_HOOK_MOVE",
            Self::SpecialMotionInfo => "COMBAT_TYPE_ARGUMENT_SPECIAL_MOTION_INFO",
            Self::FixedAvatarFlashMove => "COMBAT_TYPE_ARGUMENT_FIXED_AVATAR_FLASH_MOVE",
            Self::MultiOverrideAnim => "COMBAT_TYPE_ARGUMENT_MULTI_OVERRIDE_ANIM",
            Self::DebugSyncMotion => "COMBAT_TYPE_ARGUMENT_DEBUG_SYNC_MOTION",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "COMBAT_TYPE_ARGUMENT_NONE" => Some(Self::None),
            "COMBAT_TYPE_ARGUMENT_EVT_BEING_HIT" => Some(Self::EvtBeingHit),
            "COMBAT_TYPE_ARGUMENT_ANIMATOR_STATE_CHANGED" => {
                Some(Self::AnimatorStateChanged)
            }
            "COMBAT_TYPE_ARGUMENT_FACE_TO_DIR" => Some(Self::FaceToDir),
            "COMBAT_TYPE_ARGUMENT_SET_ATTACK_TARGET" => Some(Self::SetAttackTarget),
            "COMBAT_TYPE_ARGUMENT_RUSH_MOVE" => Some(Self::RushMove),
            "COMBAT_TYPE_ARGUMENT_ANIMATOR_PARAMETER_CHANGED" => {
                Some(Self::AnimatorParameterChanged)
            }
            "COMBAT_TYPE_ARGUMENT_ENTITY_MOVE" => Some(Self::EntityMove),
            "COMBAT_TYPE_ARGUMENT_SYNC_ENTITY_POSITION" => Some(Self::SyncEntityPosition),
            "COMBAT_TYPE_ARGUMENT_STEER_MOTION_INFO" => Some(Self::SteerMotionInfo),
            "COMBAT_TYPE_ARGUMENT_FORCE_SET_POS_INFO" => Some(Self::ForceSetPosInfo),
            "COMBAT_TYPE_ARGUMENT_COMPENSATE_POS_DIFF" => Some(Self::CompensatePosDiff),
            "COMBAT_TYPE_ARGUMENT_MONSTER_DO_BLINK" => Some(Self::MonsterDoBlink),
            "COMBAT_TYPE_ARGUMENT_FIXED_RUSH_MOVE" => Some(Self::FixedRushMove),
            "COMBAT_TYPE_ARGUMENT_SYNC_TRANSFORM" => Some(Self::SyncTransform),
            "COMBAT_TYPE_ARGUMENT_LIGHT_CORE_MOVE" => Some(Self::LightCoreMove),
            "COMBAT_TYPE_ARGUMENT_BEING_HEALED_NTF" => Some(Self::BeingHealedNtf),
            "COMBAT_TYPE_ARGUMENT_SKILL_ANCHOR_POSITION_NTF" => {
                Some(Self::SkillAnchorPositionNtf)
            }
            "COMBAT_TYPE_ARGUMENT_GRAPPLING_HOOK_MOVE" => Some(Self::GrapplingHookMove),
            "COMBAT_TYPE_ARGUMENT_SPECIAL_MOTION_INFO" => Some(Self::SpecialMotionInfo),
            "COMBAT_TYPE_ARGUMENT_FIXED_AVATAR_FLASH_MOVE" => {
                Some(Self::FixedAvatarFlashMove)
            }
            "COMBAT_TYPE_ARGUMENT_MULTI_OVERRIDE_ANIM" => Some(Self::MultiOverrideAnim),
            "COMBAT_TYPE_ARGUMENT_DEBUG_SYNC_MOTION" => Some(Self::DebugSyncMotion),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Dmdininefdg {
    Noe = 0,
    Monster = 1,
    Quest = 2,
}
impl Dmdininefdg {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Noe => "DMDININEFDG_Noe",
            Self::Monster => "DMDININEFDG_Monster",
            Self::Quest => "DMDININEFDG_Quest",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "DMDININEFDG_Noe" => Some(Self::Noe),
            "DMDININEFDG_Monster" => Some(Self::Monster),
            "DMDININEFDG_Quest" => Some(Self::Quest),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Ncoeiphpbbl {
    StatusFail = 0,
    StatusSucc = 1,
    StatusPartial = 2,
}
impl Ncoeiphpbbl {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::StatusFail => "NCOEIPHPBBL_StatusFail",
            Self::StatusSucc => "NCOEIPHPBBL_StatusSucc",
            Self::StatusPartial => "NCOEIPHPBBL_StatusPartial",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "NCOEIPHPBBL_StatusFail" => Some(Self::StatusFail),
            "NCOEIPHPBBL_StatusSucc" => Some(Self::StatusSucc),
            "NCOEIPHPBBL_StatusPartial" => Some(Self::StatusPartial),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Pjahbgicgbp {
    ItemExceedLimitMsgDefault = 0,
    ItemExceedLimitMsgText = 1,
    ItemExceedLimitMsgDialog = 2,
    ItemExceedLimitMsgDialogNonblock = 3,
}
impl Pjahbgicgbp {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::ItemExceedLimitMsgDefault => "PJAHBGICGBP_ItemExceedLimitMsgDefault",
            Self::ItemExceedLimitMsgText => "PJAHBGICGBP_ItemExceedLimitMsgText",
            Self::ItemExceedLimitMsgDialog => "PJAHBGICGBP_ItemExceedLimitMsgDialog",
            Self::ItemExceedLimitMsgDialogNonblock => {
                "PJAHBGICGBP_ItemExceedLimitMsgDialogNonblock"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "PJAHBGICGBP_ItemExceedLimitMsgDefault" => {
                Some(Self::ItemExceedLimitMsgDefault)
            }
            "PJAHBGICGBP_ItemExceedLimitMsgText" => Some(Self::ItemExceedLimitMsgText),
            "PJAHBGICGBP_ItemExceedLimitMsgDialog" => {
                Some(Self::ItemExceedLimitMsgDialog)
            }
            "PJAHBGICGBP_ItemExceedLimitMsgDialogNonblock" => {
                Some(Self::ItemExceedLimitMsgDialogNonblock)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Dafpgobfflb {
    LunaRiteHintTypeNone = 0,
    LunaRiteHintTypeRune = 1,
    LunaRiteHintTypeChest = 2,
}
impl Dafpgobfflb {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::LunaRiteHintTypeNone => "DAFPGOBFFLB_LunaRiteHintTypeNone",
            Self::LunaRiteHintTypeRune => "DAFPGOBFFLB_LunaRiteHintTypeRune",
            Self::LunaRiteHintTypeChest => "DAFPGOBFFLB_LunaRiteHintTypeChest",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "DAFPGOBFFLB_LunaRiteHintTypeNone" => Some(Self::LunaRiteHintTypeNone),
            "DAFPGOBFFLB_LunaRiteHintTypeRune" => Some(Self::LunaRiteHintTypeRune),
            "DAFPGOBFFLB_LunaRiteHintTypeChest" => Some(Self::LunaRiteHintTypeChest),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Dhdebbipiif {
    ClientPlayNoneType = 0,
    ClientPlayFilmfestShootingType = 1,
    ClientPlayCookGameType = 2,
    ClientPlayLanV4PushBoxType = 3,
    ClientPlayCatcafeLayoutType = 4,
    ClientPlayCatcafeCatType = 5,
    ClientPlayGreatFestivalV2SheetRestoreType = 6,
    ClientPlayBirdBallType = 7,
    ClientPlayFairyTalesFlyppyHatToyType = 8,
    ClientPlayNahidaBirthFloatToyType = 9,
    ClientPlayCeremonyDoodleType = 10,
}
impl Dhdebbipiif {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::ClientPlayNoneType => "DHDEBBIPIIF_ClientPlayNoneType",
            Self::ClientPlayFilmfestShootingType => {
                "DHDEBBIPIIF_ClientPlayFilmfestShootingType"
            }
            Self::ClientPlayCookGameType => "DHDEBBIPIIF_ClientPlayCookGameType",
            Self::ClientPlayLanV4PushBoxType => "DHDEBBIPIIF_ClientPlayLanV4PushBoxType",
            Self::ClientPlayCatcafeLayoutType => {
                "DHDEBBIPIIF_ClientPlayCatcafeLayoutType"
            }
            Self::ClientPlayCatcafeCatType => "DHDEBBIPIIF_ClientPlayCatcafeCatType",
            Self::ClientPlayGreatFestivalV2SheetRestoreType => {
                "DHDEBBIPIIF_ClientPlayGreatFestivalV2SheetRestoreType"
            }
            Self::ClientPlayBirdBallType => "DHDEBBIPIIF_ClientPlayBirdBallType",
            Self::ClientPlayFairyTalesFlyppyHatToyType => {
                "DHDEBBIPIIF_ClientPlayFairyTalesFlyppyHatToyType"
            }
            Self::ClientPlayNahidaBirthFloatToyType => {
                "DHDEBBIPIIF_ClientPlayNahidaBirthFloatToyType"
            }
            Self::ClientPlayCeremonyDoodleType => {
                "DHDEBBIPIIF_ClientPlayCeremonyDoodleType"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "DHDEBBIPIIF_ClientPlayNoneType" => Some(Self::ClientPlayNoneType),
            "DHDEBBIPIIF_ClientPlayFilmfestShootingType" => {
                Some(Self::ClientPlayFilmfestShootingType)
            }
            "DHDEBBIPIIF_ClientPlayCookGameType" => Some(Self::ClientPlayCookGameType),
            "DHDEBBIPIIF_ClientPlayLanV4PushBoxType" => {
                Some(Self::ClientPlayLanV4PushBoxType)
            }
            "DHDEBBIPIIF_ClientPlayCatcafeLayoutType" => {
                Some(Self::ClientPlayCatcafeLayoutType)
            }
            "DHDEBBIPIIF_ClientPlayCatcafeCatType" => {
                Some(Self::ClientPlayCatcafeCatType)
            }
            "DHDEBBIPIIF_ClientPlayGreatFestivalV2SheetRestoreType" => {
                Some(Self::ClientPlayGreatFestivalV2SheetRestoreType)
            }
            "DHDEBBIPIIF_ClientPlayBirdBallType" => Some(Self::ClientPlayBirdBallType),
            "DHDEBBIPIIF_ClientPlayFairyTalesFlyppyHatToyType" => {
                Some(Self::ClientPlayFairyTalesFlyppyHatToyType)
            }
            "DHDEBBIPIIF_ClientPlayNahidaBirthFloatToyType" => {
                Some(Self::ClientPlayNahidaBirthFloatToyType)
            }
            "DHDEBBIPIIF_ClientPlayCeremonyDoodleType" => {
                Some(Self::ClientPlayCeremonyDoodleType)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Fjknaamgemm {
    AbilityNone = 0,
    AbilityMetaModifierChange = 1,
    AbilityMetaCommandModifierChangeRequest = 2,
    AbilityMetaSpecialFloatArgument = 3,
    AbilityMetaOverrideParam = 4,
    AbilityMetaClearOverrideParam = 5,
    AbilityMetaReinitOverridemap = 6,
    AbilityMetaGlobalFloatValue = 7,
    AbilityMetaClearGlobalFloatValue = 8,
    AbilityMetaAbilityElementStrength = 9,
    AbilityMetaAddOrGetAbilityAndTrigger = 10,
    AbilityMetaSetKilledSetate = 11,
    AbilityMetaSetAbilityTrigger = 12,
    AbilityMetaAddNewAbility = 13,
    AbilityMetaRemoveAbility = 14,
    AbilityMetaSetModifierApplyEntity = 15,
    AbilityMetaModifierDurabilityChange = 16,
    AbilityMetaElementReactionVisual = 17,
    AbilityMetaSetPoseParameter = 18,
    AbilityMetaUpdateBaseReactionDamage = 19,
    AbilityMetaTriggerElementReaction = 20,
    AbilityMetaLoseHp = 21,
    AbilityMetaDurabilityIsZero = 22,
    AbilityMetaTriggerArkheReaction = 23,
    AbilityMetaChangeNyxValue = 24,
    AbilityActionTriggerAbility = 50,
    AbilityActionSetCrashDamage = 51,
    AbilityActionEffect = 52,
    AbilityActionSummon = 53,
    AbilityActionBlink = 54,
    AbilityActionCreateGadget = 55,
    AbilityActionApplyLevelModifier = 56,
    AbilityActionGenerateElemBall = 57,
    AbilityActionSetRandomOverrideMapValue = 58,
    AbilityActionServerMonsterLog = 59,
    AbilityActionCreateTile = 60,
    AbilityActionDestroyTile = 61,
    AbilityActionFireAfterImage = 62,
    AbilityActionDeductStamina = 63,
    AbilityActionHitEffect = 64,
    AbilityActionSetBulletTrackTarget = 65,
    AbilityActionFireworkEffect = 66,
    AbilityActionLevelBankAddStuff = 67,
    AbilityActionGetMaterialParamFloat = 68,
    AbilityActionGetMaterialParamVector = 69,
    AbilityActionSpectacleBuildRecreateGadget = 70,
    AbilityMixinAvatarSteerByCamera = 100,
    AbilityMixinMonsterDefend = 101,
    AbilityMixinWindZone = 102,
    AbilityMixinCostStamina = 103,
    AbilityMixinEliteShield = 104,
    AbilityMixinElementShield = 105,
    AbilityMixinGlobalShield = 106,
    AbilityMixinShieldBar = 107,
    AbilityMixinWindSeedSpawner = 108,
    AbilityMixinDoActionByElementReaction = 109,
    AbilityMixinFieldEntityCountChange = 110,
    AbilityMixinScenePropSync = 111,
    AbilityMixinWidgetMpSupport = 112,
    AbilityMixinDoActionBySelfModifierElementDurabilityRatio = 113,
    AbilityMixinFireworksLauncher = 114,
    AbilityMixinAttackResultCreateCount = 115,
    AbilityMixinUgcTimeControl = 116,
    AbilityMixinAvatarCombat = 117,
    AbilityMixinDeathZoneRegionalPlayMixin = 118,
    AbilityMixinUiInteract = 119,
    AbilityMixinShootFromCamera = 120,
    AbilityMixinEraseBrickActivity = 121,
    AbilityMixinBreakout = 122,
    AbilityMixinDamageLoan = 123,
    AbilityMixinBroadcastGv = 124,
    AbilityMixinReceiveGv = 125,
    AbilityMixinRaycastSelectTarget = 126,
    AbilityMixinEnergyCrystalTarget = 127,
    AbilityMixinRotationFollowCamera = 128,
    AbilityMixinBuoyantForce = 129,
    AbilityMixinFilmfestBallGame = 130,
    AbilityMixinCheckScanEntity = 131,
    AbilityMixinTimeTrackPlayer = 133,
    AbilityMixinPartFollow = 134,
    AbilityMixinChangePhlogiston = 135,
    AbilityMixinHumanDragonCollabPickPhlogistonBall = 136,
    AbilityMixinFrequencyShieldBar = 137,
    AbilityMixinShamanViewTarget = 138,
    AbilityMixinAttachModifierToGlobalValue = 139,
    AbilityMixinBrickMatrix = 140,
    AbilityMixinVehicleSteerByCamera = 141,
    AbilityMixinAvatarSpecialMove = 143,
}
impl Fjknaamgemm {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::AbilityNone => "FJKNAAMGEMM_AbilityNone",
            Self::AbilityMetaModifierChange => "FJKNAAMGEMM_AbilityMetaModifierChange",
            Self::AbilityMetaCommandModifierChangeRequest => {
                "FJKNAAMGEMM_AbilityMetaCommandModifierChangeRequest"
            }
            Self::AbilityMetaSpecialFloatArgument => {
                "FJKNAAMGEMM_AbilityMetaSpecialFloatArgument"
            }
            Self::AbilityMetaOverrideParam => "FJKNAAMGEMM_AbilityMetaOverrideParam",
            Self::AbilityMetaClearOverrideParam => {
                "FJKNAAMGEMM_AbilityMetaClearOverrideParam"
            }
            Self::AbilityMetaReinitOverridemap => {
                "FJKNAAMGEMM_AbilityMetaReinitOverridemap"
            }
            Self::AbilityMetaGlobalFloatValue => {
                "FJKNAAMGEMM_AbilityMetaGlobalFloatValue"
            }
            Self::AbilityMetaClearGlobalFloatValue => {
                "FJKNAAMGEMM_AbilityMetaClearGlobalFloatValue"
            }
            Self::AbilityMetaAbilityElementStrength => {
                "FJKNAAMGEMM_AbilityMetaAbilityElementStrength"
            }
            Self::AbilityMetaAddOrGetAbilityAndTrigger => {
                "FJKNAAMGEMM_AbilityMetaAddOrGetAbilityAndTrigger"
            }
            Self::AbilityMetaSetKilledSetate => "FJKNAAMGEMM_AbilityMetaSetKilledSetate",
            Self::AbilityMetaSetAbilityTrigger => {
                "FJKNAAMGEMM_AbilityMetaSetAbilityTrigger"
            }
            Self::AbilityMetaAddNewAbility => "FJKNAAMGEMM_AbilityMetaAddNewAbility",
            Self::AbilityMetaRemoveAbility => "FJKNAAMGEMM_AbilityMetaRemoveAbility",
            Self::AbilityMetaSetModifierApplyEntity => {
                "FJKNAAMGEMM_AbilityMetaSetModifierApplyEntity"
            }
            Self::AbilityMetaModifierDurabilityChange => {
                "FJKNAAMGEMM_AbilityMetaModifierDurabilityChange"
            }
            Self::AbilityMetaElementReactionVisual => {
                "FJKNAAMGEMM_AbilityMetaElementReactionVisual"
            }
            Self::AbilityMetaSetPoseParameter => {
                "FJKNAAMGEMM_AbilityMetaSetPoseParameter"
            }
            Self::AbilityMetaUpdateBaseReactionDamage => {
                "FJKNAAMGEMM_AbilityMetaUpdateBaseReactionDamage"
            }
            Self::AbilityMetaTriggerElementReaction => {
                "FJKNAAMGEMM_AbilityMetaTriggerElementReaction"
            }
            Self::AbilityMetaLoseHp => "FJKNAAMGEMM_AbilityMetaLoseHp",
            Self::AbilityMetaDurabilityIsZero => {
                "FJKNAAMGEMM_AbilityMetaDurabilityIsZero"
            }
            Self::AbilityMetaTriggerArkheReaction => {
                "FJKNAAMGEMM_AbilityMetaTriggerArkheReaction"
            }
            Self::AbilityMetaChangeNyxValue => "FJKNAAMGEMM_AbilityMetaChangeNyxValue",
            Self::AbilityActionTriggerAbility => {
                "FJKNAAMGEMM_AbilityActionTriggerAbility"
            }
            Self::AbilityActionSetCrashDamage => {
                "FJKNAAMGEMM_AbilityActionSetCrashDamage"
            }
            Self::AbilityActionEffect => "FJKNAAMGEMM_AbilityActionEffect",
            Self::AbilityActionSummon => "FJKNAAMGEMM_AbilityActionSummon",
            Self::AbilityActionBlink => "FJKNAAMGEMM_AbilityActionBlink",
            Self::AbilityActionCreateGadget => "FJKNAAMGEMM_AbilityActionCreateGadget",
            Self::AbilityActionApplyLevelModifier => {
                "FJKNAAMGEMM_AbilityActionApplyLevelModifier"
            }
            Self::AbilityActionGenerateElemBall => {
                "FJKNAAMGEMM_AbilityActionGenerateElemBall"
            }
            Self::AbilityActionSetRandomOverrideMapValue => {
                "FJKNAAMGEMM_AbilityActionSetRandomOverrideMapValue"
            }
            Self::AbilityActionServerMonsterLog => {
                "FJKNAAMGEMM_AbilityActionServerMonsterLog"
            }
            Self::AbilityActionCreateTile => "FJKNAAMGEMM_AbilityActionCreateTile",
            Self::AbilityActionDestroyTile => "FJKNAAMGEMM_AbilityActionDestroyTile",
            Self::AbilityActionFireAfterImage => {
                "FJKNAAMGEMM_AbilityActionFireAfterImage"
            }
            Self::AbilityActionDeductStamina => "FJKNAAMGEMM_AbilityActionDeductStamina",
            Self::AbilityActionHitEffect => "FJKNAAMGEMM_AbilityActionHitEffect",
            Self::AbilityActionSetBulletTrackTarget => {
                "FJKNAAMGEMM_AbilityActionSetBulletTrackTarget"
            }
            Self::AbilityActionFireworkEffect => {
                "FJKNAAMGEMM_AbilityActionFireworkEffect"
            }
            Self::AbilityActionLevelBankAddStuff => {
                "FJKNAAMGEMM_AbilityActionLevelBankAddStuff"
            }
            Self::AbilityActionGetMaterialParamFloat => {
                "FJKNAAMGEMM_AbilityActionGetMaterialParamFloat"
            }
            Self::AbilityActionGetMaterialParamVector => {
                "FJKNAAMGEMM_AbilityActionGetMaterialParamVector"
            }
            Self::AbilityActionSpectacleBuildRecreateGadget => {
                "FJKNAAMGEMM_AbilityActionSpectacleBuildRecreateGadget"
            }
            Self::AbilityMixinAvatarSteerByCamera => {
                "FJKNAAMGEMM_AbilityMixinAvatarSteerByCamera"
            }
            Self::AbilityMixinMonsterDefend => "FJKNAAMGEMM_AbilityMixinMonsterDefend",
            Self::AbilityMixinWindZone => "FJKNAAMGEMM_AbilityMixinWindZone",
            Self::AbilityMixinCostStamina => "FJKNAAMGEMM_AbilityMixinCostStamina",
            Self::AbilityMixinEliteShield => "FJKNAAMGEMM_AbilityMixinEliteShield",
            Self::AbilityMixinElementShield => "FJKNAAMGEMM_AbilityMixinElementShield",
            Self::AbilityMixinGlobalShield => "FJKNAAMGEMM_AbilityMixinGlobalShield",
            Self::AbilityMixinShieldBar => "FJKNAAMGEMM_AbilityMixinShieldBar",
            Self::AbilityMixinWindSeedSpawner => {
                "FJKNAAMGEMM_AbilityMixinWindSeedSpawner"
            }
            Self::AbilityMixinDoActionByElementReaction => {
                "FJKNAAMGEMM_AbilityMixinDoActionByElementReaction"
            }
            Self::AbilityMixinFieldEntityCountChange => {
                "FJKNAAMGEMM_AbilityMixinFieldEntityCountChange"
            }
            Self::AbilityMixinScenePropSync => "FJKNAAMGEMM_AbilityMixinScenePropSync",
            Self::AbilityMixinWidgetMpSupport => {
                "FJKNAAMGEMM_AbilityMixinWidgetMpSupport"
            }
            Self::AbilityMixinDoActionBySelfModifierElementDurabilityRatio => {
                "FJKNAAMGEMM_AbilityMixinDoActionBySelfModifierElementDurabilityRatio"
            }
            Self::AbilityMixinFireworksLauncher => {
                "FJKNAAMGEMM_AbilityMixinFireworksLauncher"
            }
            Self::AbilityMixinAttackResultCreateCount => {
                "FJKNAAMGEMM_AbilityMixinAttackResultCreateCount"
            }
            Self::AbilityMixinUgcTimeControl => "FJKNAAMGEMM_AbilityMixinUgcTimeControl",
            Self::AbilityMixinAvatarCombat => "FJKNAAMGEMM_AbilityMixinAvatarCombat",
            Self::AbilityMixinDeathZoneRegionalPlayMixin => {
                "FJKNAAMGEMM_AbilityMixinDeathZoneRegionalPlayMixin"
            }
            Self::AbilityMixinUiInteract => "FJKNAAMGEMM_AbilityMixinUiInteract",
            Self::AbilityMixinShootFromCamera => {
                "FJKNAAMGEMM_AbilityMixinShootFromCamera"
            }
            Self::AbilityMixinEraseBrickActivity => {
                "FJKNAAMGEMM_AbilityMixinEraseBrickActivity"
            }
            Self::AbilityMixinBreakout => "FJKNAAMGEMM_AbilityMixinBreakout",
            Self::AbilityMixinDamageLoan => "FJKNAAMGEMM_AbilityMixinDamageLoan",
            Self::AbilityMixinBroadcastGv => "FJKNAAMGEMM_AbilityMixinBroadcastGv",
            Self::AbilityMixinReceiveGv => "FJKNAAMGEMM_AbilityMixinReceiveGv",
            Self::AbilityMixinRaycastSelectTarget => {
                "FJKNAAMGEMM_AbilityMixinRaycastSelectTarget"
            }
            Self::AbilityMixinEnergyCrystalTarget => {
                "FJKNAAMGEMM_AbilityMixinEnergyCrystalTarget"
            }
            Self::AbilityMixinRotationFollowCamera => {
                "FJKNAAMGEMM_AbilityMixinRotationFollowCamera"
            }
            Self::AbilityMixinBuoyantForce => "FJKNAAMGEMM_AbilityMixinBuoyantForce",
            Self::AbilityMixinFilmfestBallGame => {
                "FJKNAAMGEMM_AbilityMixinFilmfestBallGame"
            }
            Self::AbilityMixinCheckScanEntity => {
                "FJKNAAMGEMM_AbilityMixinCheckScanEntity"
            }
            Self::AbilityMixinTimeTrackPlayer => {
                "FJKNAAMGEMM_AbilityMixinTimeTrackPlayer"
            }
            Self::AbilityMixinPartFollow => "FJKNAAMGEMM_AbilityMixinPartFollow",
            Self::AbilityMixinChangePhlogiston => {
                "FJKNAAMGEMM_AbilityMixinChangePhlogiston"
            }
            Self::AbilityMixinHumanDragonCollabPickPhlogistonBall => {
                "FJKNAAMGEMM_AbilityMixinHumanDragonCollabPickPhlogistonBall"
            }
            Self::AbilityMixinFrequencyShieldBar => {
                "FJKNAAMGEMM_AbilityMixinFrequencyShieldBar"
            }
            Self::AbilityMixinShamanViewTarget => {
                "FJKNAAMGEMM_AbilityMixinShamanViewTarget"
            }
            Self::AbilityMixinAttachModifierToGlobalValue => {
                "FJKNAAMGEMM_AbilityMixinAttachModifierToGlobalValue"
            }
            Self::AbilityMixinBrickMatrix => "FJKNAAMGEMM_AbilityMixinBrickMatrix",
            Self::AbilityMixinVehicleSteerByCamera => {
                "FJKNAAMGEMM_AbilityMixinVehicleSteerByCamera"
            }
            Self::AbilityMixinAvatarSpecialMove => {
                "FJKNAAMGEMM_AbilityMixinAvatarSpecialMove"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "FJKNAAMGEMM_AbilityNone" => Some(Self::AbilityNone),
            "FJKNAAMGEMM_AbilityMetaModifierChange" => {
                Some(Self::AbilityMetaModifierChange)
            }
            "FJKNAAMGEMM_AbilityMetaCommandModifierChangeRequest" => {
                Some(Self::AbilityMetaCommandModifierChangeRequest)
            }
            "FJKNAAMGEMM_AbilityMetaSpecialFloatArgument" => {
                Some(Self::AbilityMetaSpecialFloatArgument)
            }
            "FJKNAAMGEMM_AbilityMetaOverrideParam" => {
                Some(Self::AbilityMetaOverrideParam)
            }
            "FJKNAAMGEMM_AbilityMetaClearOverrideParam" => {
                Some(Self::AbilityMetaClearOverrideParam)
            }
            "FJKNAAMGEMM_AbilityMetaReinitOverridemap" => {
                Some(Self::AbilityMetaReinitOverridemap)
            }
            "FJKNAAMGEMM_AbilityMetaGlobalFloatValue" => {
                Some(Self::AbilityMetaGlobalFloatValue)
            }
            "FJKNAAMGEMM_AbilityMetaClearGlobalFloatValue" => {
                Some(Self::AbilityMetaClearGlobalFloatValue)
            }
            "FJKNAAMGEMM_AbilityMetaAbilityElementStrength" => {
                Some(Self::AbilityMetaAbilityElementStrength)
            }
            "FJKNAAMGEMM_AbilityMetaAddOrGetAbilityAndTrigger" => {
                Some(Self::AbilityMetaAddOrGetAbilityAndTrigger)
            }
            "FJKNAAMGEMM_AbilityMetaSetKilledSetate" => {
                Some(Self::AbilityMetaSetKilledSetate)
            }
            "FJKNAAMGEMM_AbilityMetaSetAbilityTrigger" => {
                Some(Self::AbilityMetaSetAbilityTrigger)
            }
            "FJKNAAMGEMM_AbilityMetaAddNewAbility" => {
                Some(Self::AbilityMetaAddNewAbility)
            }
            "FJKNAAMGEMM_AbilityMetaRemoveAbility" => {
                Some(Self::AbilityMetaRemoveAbility)
            }
            "FJKNAAMGEMM_AbilityMetaSetModifierApplyEntity" => {
                Some(Self::AbilityMetaSetModifierApplyEntity)
            }
            "FJKNAAMGEMM_AbilityMetaModifierDurabilityChange" => {
                Some(Self::AbilityMetaModifierDurabilityChange)
            }
            "FJKNAAMGEMM_AbilityMetaElementReactionVisual" => {
                Some(Self::AbilityMetaElementReactionVisual)
            }
            "FJKNAAMGEMM_AbilityMetaSetPoseParameter" => {
                Some(Self::AbilityMetaSetPoseParameter)
            }
            "FJKNAAMGEMM_AbilityMetaUpdateBaseReactionDamage" => {
                Some(Self::AbilityMetaUpdateBaseReactionDamage)
            }
            "FJKNAAMGEMM_AbilityMetaTriggerElementReaction" => {
                Some(Self::AbilityMetaTriggerElementReaction)
            }
            "FJKNAAMGEMM_AbilityMetaLoseHp" => Some(Self::AbilityMetaLoseHp),
            "FJKNAAMGEMM_AbilityMetaDurabilityIsZero" => {
                Some(Self::AbilityMetaDurabilityIsZero)
            }
            "FJKNAAMGEMM_AbilityMetaTriggerArkheReaction" => {
                Some(Self::AbilityMetaTriggerArkheReaction)
            }
            "FJKNAAMGEMM_AbilityMetaChangeNyxValue" => {
                Some(Self::AbilityMetaChangeNyxValue)
            }
            "FJKNAAMGEMM_AbilityActionTriggerAbility" => {
                Some(Self::AbilityActionTriggerAbility)
            }
            "FJKNAAMGEMM_AbilityActionSetCrashDamage" => {
                Some(Self::AbilityActionSetCrashDamage)
            }
            "FJKNAAMGEMM_AbilityActionEffect" => Some(Self::AbilityActionEffect),
            "FJKNAAMGEMM_AbilityActionSummon" => Some(Self::AbilityActionSummon),
            "FJKNAAMGEMM_AbilityActionBlink" => Some(Self::AbilityActionBlink),
            "FJKNAAMGEMM_AbilityActionCreateGadget" => {
                Some(Self::AbilityActionCreateGadget)
            }
            "FJKNAAMGEMM_AbilityActionApplyLevelModifier" => {
                Some(Self::AbilityActionApplyLevelModifier)
            }
            "FJKNAAMGEMM_AbilityActionGenerateElemBall" => {
                Some(Self::AbilityActionGenerateElemBall)
            }
            "FJKNAAMGEMM_AbilityActionSetRandomOverrideMapValue" => {
                Some(Self::AbilityActionSetRandomOverrideMapValue)
            }
            "FJKNAAMGEMM_AbilityActionServerMonsterLog" => {
                Some(Self::AbilityActionServerMonsterLog)
            }
            "FJKNAAMGEMM_AbilityActionCreateTile" => Some(Self::AbilityActionCreateTile),
            "FJKNAAMGEMM_AbilityActionDestroyTile" => {
                Some(Self::AbilityActionDestroyTile)
            }
            "FJKNAAMGEMM_AbilityActionFireAfterImage" => {
                Some(Self::AbilityActionFireAfterImage)
            }
            "FJKNAAMGEMM_AbilityActionDeductStamina" => {
                Some(Self::AbilityActionDeductStamina)
            }
            "FJKNAAMGEMM_AbilityActionHitEffect" => Some(Self::AbilityActionHitEffect),
            "FJKNAAMGEMM_AbilityActionSetBulletTrackTarget" => {
                Some(Self::AbilityActionSetBulletTrackTarget)
            }
            "FJKNAAMGEMM_AbilityActionFireworkEffect" => {
                Some(Self::AbilityActionFireworkEffect)
            }
            "FJKNAAMGEMM_AbilityActionLevelBankAddStuff" => {
                Some(Self::AbilityActionLevelBankAddStuff)
            }
            "FJKNAAMGEMM_AbilityActionGetMaterialParamFloat" => {
                Some(Self::AbilityActionGetMaterialParamFloat)
            }
            "FJKNAAMGEMM_AbilityActionGetMaterialParamVector" => {
                Some(Self::AbilityActionGetMaterialParamVector)
            }
            "FJKNAAMGEMM_AbilityActionSpectacleBuildRecreateGadget" => {
                Some(Self::AbilityActionSpectacleBuildRecreateGadget)
            }
            "FJKNAAMGEMM_AbilityMixinAvatarSteerByCamera" => {
                Some(Self::AbilityMixinAvatarSteerByCamera)
            }
            "FJKNAAMGEMM_AbilityMixinMonsterDefend" => {
                Some(Self::AbilityMixinMonsterDefend)
            }
            "FJKNAAMGEMM_AbilityMixinWindZone" => Some(Self::AbilityMixinWindZone),
            "FJKNAAMGEMM_AbilityMixinCostStamina" => Some(Self::AbilityMixinCostStamina),
            "FJKNAAMGEMM_AbilityMixinEliteShield" => Some(Self::AbilityMixinEliteShield),
            "FJKNAAMGEMM_AbilityMixinElementShield" => {
                Some(Self::AbilityMixinElementShield)
            }
            "FJKNAAMGEMM_AbilityMixinGlobalShield" => {
                Some(Self::AbilityMixinGlobalShield)
            }
            "FJKNAAMGEMM_AbilityMixinShieldBar" => Some(Self::AbilityMixinShieldBar),
            "FJKNAAMGEMM_AbilityMixinWindSeedSpawner" => {
                Some(Self::AbilityMixinWindSeedSpawner)
            }
            "FJKNAAMGEMM_AbilityMixinDoActionByElementReaction" => {
                Some(Self::AbilityMixinDoActionByElementReaction)
            }
            "FJKNAAMGEMM_AbilityMixinFieldEntityCountChange" => {
                Some(Self::AbilityMixinFieldEntityCountChange)
            }
            "FJKNAAMGEMM_AbilityMixinScenePropSync" => {
                Some(Self::AbilityMixinScenePropSync)
            }
            "FJKNAAMGEMM_AbilityMixinWidgetMpSupport" => {
                Some(Self::AbilityMixinWidgetMpSupport)
            }
            "FJKNAAMGEMM_AbilityMixinDoActionBySelfModifierElementDurabilityRatio" => {
                Some(Self::AbilityMixinDoActionBySelfModifierElementDurabilityRatio)
            }
            "FJKNAAMGEMM_AbilityMixinFireworksLauncher" => {
                Some(Self::AbilityMixinFireworksLauncher)
            }
            "FJKNAAMGEMM_AbilityMixinAttackResultCreateCount" => {
                Some(Self::AbilityMixinAttackResultCreateCount)
            }
            "FJKNAAMGEMM_AbilityMixinUgcTimeControl" => {
                Some(Self::AbilityMixinUgcTimeControl)
            }
            "FJKNAAMGEMM_AbilityMixinAvatarCombat" => {
                Some(Self::AbilityMixinAvatarCombat)
            }
            "FJKNAAMGEMM_AbilityMixinDeathZoneRegionalPlayMixin" => {
                Some(Self::AbilityMixinDeathZoneRegionalPlayMixin)
            }
            "FJKNAAMGEMM_AbilityMixinUiInteract" => Some(Self::AbilityMixinUiInteract),
            "FJKNAAMGEMM_AbilityMixinShootFromCamera" => {
                Some(Self::AbilityMixinShootFromCamera)
            }
            "FJKNAAMGEMM_AbilityMixinEraseBrickActivity" => {
                Some(Self::AbilityMixinEraseBrickActivity)
            }
            "FJKNAAMGEMM_AbilityMixinBreakout" => Some(Self::AbilityMixinBreakout),
            "FJKNAAMGEMM_AbilityMixinDamageLoan" => Some(Self::AbilityMixinDamageLoan),
            "FJKNAAMGEMM_AbilityMixinBroadcastGv" => Some(Self::AbilityMixinBroadcastGv),
            "FJKNAAMGEMM_AbilityMixinReceiveGv" => Some(Self::AbilityMixinReceiveGv),
            "FJKNAAMGEMM_AbilityMixinRaycastSelectTarget" => {
                Some(Self::AbilityMixinRaycastSelectTarget)
            }
            "FJKNAAMGEMM_AbilityMixinEnergyCrystalTarget" => {
                Some(Self::AbilityMixinEnergyCrystalTarget)
            }
            "FJKNAAMGEMM_AbilityMixinRotationFollowCamera" => {
                Some(Self::AbilityMixinRotationFollowCamera)
            }
            "FJKNAAMGEMM_AbilityMixinBuoyantForce" => {
                Some(Self::AbilityMixinBuoyantForce)
            }
            "FJKNAAMGEMM_AbilityMixinFilmfestBallGame" => {
                Some(Self::AbilityMixinFilmfestBallGame)
            }
            "FJKNAAMGEMM_AbilityMixinCheckScanEntity" => {
                Some(Self::AbilityMixinCheckScanEntity)
            }
            "FJKNAAMGEMM_AbilityMixinTimeTrackPlayer" => {
                Some(Self::AbilityMixinTimeTrackPlayer)
            }
            "FJKNAAMGEMM_AbilityMixinPartFollow" => Some(Self::AbilityMixinPartFollow),
            "FJKNAAMGEMM_AbilityMixinChangePhlogiston" => {
                Some(Self::AbilityMixinChangePhlogiston)
            }
            "FJKNAAMGEMM_AbilityMixinHumanDragonCollabPickPhlogistonBall" => {
                Some(Self::AbilityMixinHumanDragonCollabPickPhlogistonBall)
            }
            "FJKNAAMGEMM_AbilityMixinFrequencyShieldBar" => {
                Some(Self::AbilityMixinFrequencyShieldBar)
            }
            "FJKNAAMGEMM_AbilityMixinShamanViewTarget" => {
                Some(Self::AbilityMixinShamanViewTarget)
            }
            "FJKNAAMGEMM_AbilityMixinAttachModifierToGlobalValue" => {
                Some(Self::AbilityMixinAttachModifierToGlobalValue)
            }
            "FJKNAAMGEMM_AbilityMixinBrickMatrix" => Some(Self::AbilityMixinBrickMatrix),
            "FJKNAAMGEMM_AbilityMixinVehicleSteerByCamera" => {
                Some(Self::AbilityMixinVehicleSteerByCamera)
            }
            "FJKNAAMGEMM_AbilityMixinAvatarSpecialMove" => {
                Some(Self::AbilityMixinAvatarSpecialMove)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Npaglleibjm {
    None = 0,
    SnapShot = 1,
    Init = 2,
    BallScore = 3,
    Shoot = 4,
    Effect = 5,
}
impl Npaglleibjm {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "NPAGLLEIBJM_None",
            Self::SnapShot => "NPAGLLEIBJM_SnapShot",
            Self::Init => "NPAGLLEIBJM_Init",
            Self::BallScore => "NPAGLLEIBJM_BallScore",
            Self::Shoot => "NPAGLLEIBJM_Shoot",
            Self::Effect => "NPAGLLEIBJM_Effect",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "NPAGLLEIBJM_None" => Some(Self::None),
            "NPAGLLEIBJM_SnapShot" => Some(Self::SnapShot),
            "NPAGLLEIBJM_Init" => Some(Self::Init),
            "NPAGLLEIBJM_BallScore" => Some(Self::BallScore),
            "NPAGLLEIBJM_Shoot" => Some(Self::Shoot),
            "NPAGLLEIBJM_Effect" => Some(Self::Effect),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Bgocfkdgogk {
    RogueCellNone = 0,
    RogueCellBattle = 1,
    RogueCellSuccess = 2,
    RogueCellFinish = 3,
    RogueCellTakenChest = 4,
}
impl Bgocfkdgogk {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::RogueCellNone => "BGOCFKDGOGK_RogueCellNone",
            Self::RogueCellBattle => "BGOCFKDGOGK_RogueCellBattle",
            Self::RogueCellSuccess => "BGOCFKDGOGK_RogueCellSuccess",
            Self::RogueCellFinish => "BGOCFKDGOGK_RogueCellFinish",
            Self::RogueCellTakenChest => "BGOCFKDGOGK_RogueCellTakenChest",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "BGOCFKDGOGK_RogueCellNone" => Some(Self::RogueCellNone),
            "BGOCFKDGOGK_RogueCellBattle" => Some(Self::RogueCellBattle),
            "BGOCFKDGOGK_RogueCellSuccess" => Some(Self::RogueCellSuccess),
            "BGOCFKDGOGK_RogueCellFinish" => Some(Self::RogueCellFinish),
            "BGOCFKDGOGK_RogueCellTakenChest" => Some(Self::RogueCellTakenChest),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Mfmjoemgmcm {
    TimeOut = 0,
    SettlePlayEnd = 1,
    SettlePlayerQuit = 2,
    SettleLifeCount = 3,
}
impl Mfmjoemgmcm {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::TimeOut => "MFMJOEMGMCM_TimeOut",
            Self::SettlePlayEnd => "MFMJOEMGMCM_SettlePlayEnd",
            Self::SettlePlayerQuit => "MFMJOEMGMCM_SettlePlayerQuit",
            Self::SettleLifeCount => "MFMJOEMGMCM_SettleLifeCount",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "MFMJOEMGMCM_TimeOut" => Some(Self::TimeOut),
            "MFMJOEMGMCM_SettlePlayEnd" => Some(Self::SettlePlayEnd),
            "MFMJOEMGMCM_SettlePlayerQuit" => Some(Self::SettlePlayerQuit),
            "MFMJOEMGMCM_SettleLifeCount" => Some(Self::SettleLifeCount),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Kpfoblalblc {
    None = 0,
    MusicGame = 1,
}
impl Kpfoblalblc {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "KPFOBLALBLC_None",
            Self::MusicGame => "KPFOBLALBLC_MusicGame",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "KPFOBLALBLC_None" => Some(Self::None),
            "KPFOBLALBLC_MusicGame" => Some(Self::MusicGame),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Jkeepgbaafh {
    FireworksLaunchParamNone = 0,
    FireworksLaunchParamRepeat = 1,
    FireworksLaunchParamInteval = 2,
    FireworksLaunchParamDelay = 3,
    FireworksLaunchParamRoundInteval = 4,
    FireworksLaunchParamMax = 5,
}
impl Jkeepgbaafh {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::FireworksLaunchParamNone => "JKEEPGBAAFH_FireworksLaunchParamNone",
            Self::FireworksLaunchParamRepeat => "JKEEPGBAAFH_FireworksLaunchParamRepeat",
            Self::FireworksLaunchParamInteval => {
                "JKEEPGBAAFH_FireworksLaunchParamInteval"
            }
            Self::FireworksLaunchParamDelay => "JKEEPGBAAFH_FireworksLaunchParamDelay",
            Self::FireworksLaunchParamRoundInteval => {
                "JKEEPGBAAFH_FireworksLaunchParamRoundInteval"
            }
            Self::FireworksLaunchParamMax => "JKEEPGBAAFH_FireworksLaunchParamMax",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "JKEEPGBAAFH_FireworksLaunchParamNone" => {
                Some(Self::FireworksLaunchParamNone)
            }
            "JKEEPGBAAFH_FireworksLaunchParamRepeat" => {
                Some(Self::FireworksLaunchParamRepeat)
            }
            "JKEEPGBAAFH_FireworksLaunchParamInteval" => {
                Some(Self::FireworksLaunchParamInteval)
            }
            "JKEEPGBAAFH_FireworksLaunchParamDelay" => {
                Some(Self::FireworksLaunchParamDelay)
            }
            "JKEEPGBAAFH_FireworksLaunchParamRoundInteval" => {
                Some(Self::FireworksLaunchParamRoundInteval)
            }
            "JKEEPGBAAFH_FireworksLaunchParamMax" => Some(Self::FireworksLaunchParamMax),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Pljpihnocfc {
    RogueDiaryAvatarDisableNone = 0,
    RogueDiaryAvatarDisableDeath = 1,
    RogueDiaryAvatarDisableTired = 2,
    RogueDiaryAvatarDisableDuplicated = 3,
}
impl Pljpihnocfc {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::RogueDiaryAvatarDisableNone => {
                "PLJPIHNOCFC_RogueDiaryAvatarDisableNone"
            }
            Self::RogueDiaryAvatarDisableDeath => {
                "PLJPIHNOCFC_RogueDiaryAvatarDisableDeath"
            }
            Self::RogueDiaryAvatarDisableTired => {
                "PLJPIHNOCFC_RogueDiaryAvatarDisableTired"
            }
            Self::RogueDiaryAvatarDisableDuplicated => {
                "PLJPIHNOCFC_RogueDiaryAvatarDisableDuplicated"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "PLJPIHNOCFC_RogueDiaryAvatarDisableNone" => {
                Some(Self::RogueDiaryAvatarDisableNone)
            }
            "PLJPIHNOCFC_RogueDiaryAvatarDisableDeath" => {
                Some(Self::RogueDiaryAvatarDisableDeath)
            }
            "PLJPIHNOCFC_RogueDiaryAvatarDisableTired" => {
                Some(Self::RogueDiaryAvatarDisableTired)
            }
            "PLJPIHNOCFC_RogueDiaryAvatarDisableDuplicated" => {
                Some(Self::RogueDiaryAvatarDisableDuplicated)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Bhjbdljakmg {
    None = 0,
    Formal = 1,
    Trial = 2,
    Mirror = 3,
}
impl Bhjbdljakmg {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "BHJBDLJAKMG_None",
            Self::Formal => "BHJBDLJAKMG_Formal",
            Self::Trial => "BHJBDLJAKMG_Trial",
            Self::Mirror => "BHJBDLJAKMG_Mirror",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "BHJBDLJAKMG_None" => Some(Self::None),
            "BHJBDLJAKMG_Formal" => Some(Self::Formal),
            "BHJBDLJAKMG_Trial" => Some(Self::Trial),
            "BHJBDLJAKMG_Mirror" => Some(Self::Mirror),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Ajnljaaekog {
    ReasonNone = 0,
    ReasonGameMax = 1,
    ReasonClientVersionNotLastest = 2,
    ReasonResourceNotComplete = 3,
    ReasonTimeout = 4,
    ReasonOpponentClientVersionNotLastest = 5,
}
impl Ajnljaaekog {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::ReasonNone => "AJNLJAAEKOG_ReasonNone",
            Self::ReasonGameMax => "AJNLJAAEKOG_ReasonGameMax",
            Self::ReasonClientVersionNotLastest => {
                "AJNLJAAEKOG_ReasonClientVersionNotLastest"
            }
            Self::ReasonResourceNotComplete => "AJNLJAAEKOG_ReasonResourceNotComplete",
            Self::ReasonTimeout => "AJNLJAAEKOG_ReasonTimeout",
            Self::ReasonOpponentClientVersionNotLastest => {
                "AJNLJAAEKOG_ReasonOpponentClientVersionNotLastest"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "AJNLJAAEKOG_ReasonNone" => Some(Self::ReasonNone),
            "AJNLJAAEKOG_ReasonGameMax" => Some(Self::ReasonGameMax),
            "AJNLJAAEKOG_ReasonClientVersionNotLastest" => {
                Some(Self::ReasonClientVersionNotLastest)
            }
            "AJNLJAAEKOG_ReasonResourceNotComplete" => {
                Some(Self::ReasonResourceNotComplete)
            }
            "AJNLJAAEKOG_ReasonTimeout" => Some(Self::ReasonTimeout),
            "AJNLJAAEKOG_ReasonOpponentClientVersionNotLastest" => {
                Some(Self::ReasonOpponentClientVersionNotLastest)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Dcdcnnpiffk {
    EnterUgcDungeonNone = 0,
    EnterUgcDungeonTrialInEditDungeon = 1,
    EnterUgcDungeonTrialInWorld = 2,
    EnterUgcDungeonPlay = 3,
    EnterUgcDungeonOfficial = 4,
    EnterUgcDungeonByGm = 5,
    EnterUgcDungeonByEdit = 6,
    EnterUgcDungeonTrialOneRoom = 7,
}
impl Dcdcnnpiffk {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::EnterUgcDungeonNone => "DCDCNNPIFFK_EnterUgcDungeonNone",
            Self::EnterUgcDungeonTrialInEditDungeon => {
                "DCDCNNPIFFK_EnterUgcDungeonTrialInEditDungeon"
            }
            Self::EnterUgcDungeonTrialInWorld => {
                "DCDCNNPIFFK_EnterUgcDungeonTrialInWorld"
            }
            Self::EnterUgcDungeonPlay => "DCDCNNPIFFK_EnterUgcDungeonPlay",
            Self::EnterUgcDungeonOfficial => "DCDCNNPIFFK_EnterUgcDungeonOfficial",
            Self::EnterUgcDungeonByGm => "DCDCNNPIFFK_EnterUgcDungeonByGm",
            Self::EnterUgcDungeonByEdit => "DCDCNNPIFFK_EnterUgcDungeonByEdit",
            Self::EnterUgcDungeonTrialOneRoom => {
                "DCDCNNPIFFK_EnterUgcDungeonTrialOneRoom"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "DCDCNNPIFFK_EnterUgcDungeonNone" => Some(Self::EnterUgcDungeonNone),
            "DCDCNNPIFFK_EnterUgcDungeonTrialInEditDungeon" => {
                Some(Self::EnterUgcDungeonTrialInEditDungeon)
            }
            "DCDCNNPIFFK_EnterUgcDungeonTrialInWorld" => {
                Some(Self::EnterUgcDungeonTrialInWorld)
            }
            "DCDCNNPIFFK_EnterUgcDungeonPlay" => Some(Self::EnterUgcDungeonPlay),
            "DCDCNNPIFFK_EnterUgcDungeonOfficial" => Some(Self::EnterUgcDungeonOfficial),
            "DCDCNNPIFFK_EnterUgcDungeonByGm" => Some(Self::EnterUgcDungeonByGm),
            "DCDCNNPIFFK_EnterUgcDungeonByEdit" => Some(Self::EnterUgcDungeonByEdit),
            "DCDCNNPIFFK_EnterUgcDungeonTrialOneRoom" => {
                Some(Self::EnterUgcDungeonTrialOneRoom)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Aciafkoacao {
    None = 0,
    Starred = 1,
    Official = 2,
    Template = 3,
}
impl Aciafkoacao {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "ACIAFKOACAO_None",
            Self::Starred => "ACIAFKOACAO_Starred",
            Self::Official => "ACIAFKOACAO_Official",
            Self::Template => "ACIAFKOACAO_Template",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "ACIAFKOACAO_None" => Some(Self::None),
            "ACIAFKOACAO_Starred" => Some(Self::Starred),
            "ACIAFKOACAO_Official" => Some(Self::Official),
            "ACIAFKOACAO_Template" => Some(Self::Template),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Lpdkcjcmbfn {
    DungeonEntryReasonNone = 0,
    DungeonEntryReasonLevel = 1,
    DungeonEntryReasonQuest = 2,
    DungeonEntryReasonMuliple = 3,
}
impl Lpdkcjcmbfn {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::DungeonEntryReasonNone => "LPDKCJCMBFN_DungeonEntryReasonNone",
            Self::DungeonEntryReasonLevel => "LPDKCJCMBFN_DungeonEntryReasonLevel",
            Self::DungeonEntryReasonQuest => "LPDKCJCMBFN_DungeonEntryReasonQuest",
            Self::DungeonEntryReasonMuliple => "LPDKCJCMBFN_DungeonEntryReasonMuliple",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "LPDKCJCMBFN_DungeonEntryReasonNone" => Some(Self::DungeonEntryReasonNone),
            "LPDKCJCMBFN_DungeonEntryReasonLevel" => Some(Self::DungeonEntryReasonLevel),
            "LPDKCJCMBFN_DungeonEntryReasonQuest" => Some(Self::DungeonEntryReasonQuest),
            "LPDKCJCMBFN_DungeonEntryReasonMuliple" => {
                Some(Self::DungeonEntryReasonMuliple)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Hgmlodjcjno {
    Invalid = 0,
    Running = 1,
    Finished = 2,
}
impl Hgmlodjcjno {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Invalid => "HGMLODJCJNO_Invalid",
            Self::Running => "HGMLODJCJNO_Running",
            Self::Finished => "HGMLODJCJNO_Finished",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "HGMLODJCJNO_Invalid" => Some(Self::Invalid),
            "HGMLODJCJNO_Running" => Some(Self::Running),
            "HGMLODJCJNO_Finished" => Some(Self::Finished),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Ekdaephbgii {
    None = 0,
    Collectable = 1,
    Collected = 2,
    Finished = 3,
}
impl Ekdaephbgii {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "EKDAEPHBGII_None",
            Self::Collectable => "EKDAEPHBGII_Collectable",
            Self::Collected => "EKDAEPHBGII_Collected",
            Self::Finished => "EKDAEPHBGII_Finished",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "EKDAEPHBGII_None" => Some(Self::None),
            "EKDAEPHBGII_Collectable" => Some(Self::Collectable),
            "EKDAEPHBGII_Collected" => Some(Self::Collected),
            "EKDAEPHBGII_Finished" => Some(Self::Finished),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Khbdllkplfg {
    None = 0,
    FormalMirror = 1,
    TrialMirror = 2,
    RentMirror = 3,
}
impl Khbdllkplfg {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "KHBDLLKPLFG_None",
            Self::FormalMirror => "KHBDLLKPLFG_FormalMirror",
            Self::TrialMirror => "KHBDLLKPLFG_TrialMirror",
            Self::RentMirror => "KHBDLLKPLFG_RentMirror",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "KHBDLLKPLFG_None" => Some(Self::None),
            "KHBDLLKPLFG_FormalMirror" => Some(Self::FormalMirror),
            "KHBDLLKPLFG_TrialMirror" => Some(Self::TrialMirror),
            "KHBDLLKPLFG_RentMirror" => Some(Self::RentMirror),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Jkobefdemme {
    GalleryStartByNone = 0,
    GalleryStartByMatch = 1,
    GalleryStartByDraft = 2,
}
impl Jkobefdemme {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::GalleryStartByNone => "JKOBEFDEMME_GalleryStartByNone",
            Self::GalleryStartByMatch => "JKOBEFDEMME_GalleryStartByMatch",
            Self::GalleryStartByDraft => "JKOBEFDEMME_GalleryStartByDraft",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "JKOBEFDEMME_GalleryStartByNone" => Some(Self::GalleryStartByNone),
            "JKOBEFDEMME_GalleryStartByMatch" => Some(Self::GalleryStartByMatch),
            "JKOBEFDEMME_GalleryStartByDraft" => Some(Self::GalleryStartByDraft),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Ckleejoiffd {
    ObstacleShapeCapsule = 0,
    ObstacleShapeBox = 1,
}
impl Ckleejoiffd {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::ObstacleShapeCapsule => "CKLEEJOIFFD_ObstacleShapeCapsule",
            Self::ObstacleShapeBox => "CKLEEJOIFFD_ObstacleShapeBox",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "CKLEEJOIFFD_ObstacleShapeCapsule" => Some(Self::ObstacleShapeCapsule),
            "CKLEEJOIFFD_ObstacleShapeBox" => Some(Self::ObstacleShapeBox),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Ghjfblobgpa {
    Attach = 0,
    Detach = 1,
}
impl Ghjfblobgpa {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Attach => "GHJFBLOBGPA_Attach",
            Self::Detach => "GHJFBLOBGPA_Detach",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "GHJFBLOBGPA_Attach" => Some(Self::Attach),
            "GHJFBLOBGPA_Detach" => Some(Self::Detach),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Baeckbpljag {
    ObstacleShapeCapsule = 0,
    ObstacleShapeBox = 1,
}
impl Baeckbpljag {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::ObstacleShapeCapsule => "BAECKBPLJAG_ObstacleShapeCapsule",
            Self::ObstacleShapeBox => "BAECKBPLJAG_ObstacleShapeBox",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "BAECKBPLJAG_ObstacleShapeCapsule" => Some(Self::ObstacleShapeCapsule),
            "BAECKBPLJAG_ObstacleShapeBox" => Some(Self::ObstacleShapeBox),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Cnaclmknnlb {
    MonsterChessPhaseNone = 0,
    MonsterChessPhasePrepare = 1,
    MonsterChessPhaseUiShow = 2,
    MonsterChessPhaseFight = 3,
    MonsterChessPhaseSettle = 4,
}
impl Cnaclmknnlb {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::MonsterChessPhaseNone => "CNACLMKNNLB_MonsterChessPhaseNone",
            Self::MonsterChessPhasePrepare => "CNACLMKNNLB_MonsterChessPhasePrepare",
            Self::MonsterChessPhaseUiShow => "CNACLMKNNLB_MonsterChessPhaseUiShow",
            Self::MonsterChessPhaseFight => "CNACLMKNNLB_MonsterChessPhaseFight",
            Self::MonsterChessPhaseSettle => "CNACLMKNNLB_MonsterChessPhaseSettle",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "CNACLMKNNLB_MonsterChessPhaseNone" => Some(Self::MonsterChessPhaseNone),
            "CNACLMKNNLB_MonsterChessPhasePrepare" => {
                Some(Self::MonsterChessPhasePrepare)
            }
            "CNACLMKNNLB_MonsterChessPhaseUiShow" => Some(Self::MonsterChessPhaseUiShow),
            "CNACLMKNNLB_MonsterChessPhaseFight" => Some(Self::MonsterChessPhaseFight),
            "CNACLMKNNLB_MonsterChessPhaseSettle" => Some(Self::MonsterChessPhaseSettle),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Jkbbekkccee {
    None = 0,
    Dungeon = 1,
    Room = 2,
}
impl Jkbbekkccee {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "JKBBEKKCCEE_None",
            Self::Dungeon => "JKBBEKKCCEE_Dungeon",
            Self::Room => "JKBBEKKCCEE_Room",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "JKBBEKKCCEE_None" => Some(Self::None),
            "JKBBEKKCCEE_Dungeon" => Some(Self::Dungeon),
            "JKBBEKKCCEE_Room" => Some(Self::Room),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Opadjpdffbm {
    GcgSettleOptNone = 0,
    GcgSettleOptExit = 1,
    GcgSettleOptContinue = 2,
    GcgSettleOptRestart = 3,
}
impl Opadjpdffbm {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::GcgSettleOptNone => "OPADJPDFFBM_GcgSettleOptNone",
            Self::GcgSettleOptExit => "OPADJPDFFBM_GcgSettleOptExit",
            Self::GcgSettleOptContinue => "OPADJPDFFBM_GcgSettleOptContinue",
            Self::GcgSettleOptRestart => "OPADJPDFFBM_GcgSettleOptRestart",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "OPADJPDFFBM_GcgSettleOptNone" => Some(Self::GcgSettleOptNone),
            "OPADJPDFFBM_GcgSettleOptExit" => Some(Self::GcgSettleOptExit),
            "OPADJPDFFBM_GcgSettleOptContinue" => Some(Self::GcgSettleOptContinue),
            "OPADJPDFFBM_GcgSettleOptRestart" => Some(Self::GcgSettleOptRestart),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Bgidbdgciae {
    GadgetMarkUpdateOpNone = 0,
    GadgetMarkUpdateOpAdd = 1,
    GadgetMarkUpdateOpRemove = 2,
}
impl Bgidbdgciae {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::GadgetMarkUpdateOpNone => "BGIDBDGCIAE_GadgetMarkUpdateOpNone",
            Self::GadgetMarkUpdateOpAdd => "BGIDBDGCIAE_GadgetMarkUpdateOpAdd",
            Self::GadgetMarkUpdateOpRemove => "BGIDBDGCIAE_GadgetMarkUpdateOpRemove",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "BGIDBDGCIAE_GadgetMarkUpdateOpNone" => Some(Self::GadgetMarkUpdateOpNone),
            "BGIDBDGCIAE_GadgetMarkUpdateOpAdd" => Some(Self::GadgetMarkUpdateOpAdd),
            "BGIDBDGCIAE_GadgetMarkUpdateOpRemove" => {
                Some(Self::GadgetMarkUpdateOpRemove)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum StoreType {
    None = 0,
    Pack = 1,
    Depot = 2,
}
impl StoreType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "STORE_TYPE_NONE",
            Self::Pack => "STORE_TYPE_PACK",
            Self::Depot => "STORE_TYPE_DEPOT",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "STORE_TYPE_NONE" => Some(Self::None),
            "STORE_TYPE_PACK" => Some(Self::Pack),
            "STORE_TYPE_DEPOT" => Some(Self::Depot),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Jekgegjbglf {
    AsterLittleStageNone = 0,
    AsterLittleStageUnstarted = 1,
    AsterLittleStageStarted = 2,
    AsterLittleStageFinished = 3,
}
impl Jekgegjbglf {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::AsterLittleStageNone => "JEKGEGJBGLF_AsterLittleStageNone",
            Self::AsterLittleStageUnstarted => "JEKGEGJBGLF_AsterLittleStageUnstarted",
            Self::AsterLittleStageStarted => "JEKGEGJBGLF_AsterLittleStageStarted",
            Self::AsterLittleStageFinished => "JEKGEGJBGLF_AsterLittleStageFinished",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "JEKGEGJBGLF_AsterLittleStageNone" => Some(Self::AsterLittleStageNone),
            "JEKGEGJBGLF_AsterLittleStageUnstarted" => {
                Some(Self::AsterLittleStageUnstarted)
            }
            "JEKGEGJBGLF_AsterLittleStageStarted" => Some(Self::AsterLittleStageStarted),
            "JEKGEGJBGLF_AsterLittleStageFinished" => {
                Some(Self::AsterLittleStageFinished)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Maodfhomkob {
    TransmitNone = 0,
    TransmitQuest = 1,
}
impl Maodfhomkob {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::TransmitNone => "MAODFHOMKOB_TransmitNone",
            Self::TransmitQuest => "MAODFHOMKOB_TransmitQuest",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "MAODFHOMKOB_TransmitNone" => Some(Self::TransmitNone),
            "MAODFHOMKOB_TransmitQuest" => Some(Self::TransmitQuest),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Elehhooedfn {
    None = 0,
    ReachScore = 1,
    TimeUp = 2,
}
impl Elehhooedfn {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "ELEHHOOEDFN_None",
            Self::ReachScore => "ELEHHOOEDFN_ReachScore",
            Self::TimeUp => "ELEHHOOEDFN_TimeUp",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "ELEHHOOEDFN_None" => Some(Self::None),
            "ELEHHOOEDFN_ReachScore" => Some(Self::ReachScore),
            "ELEHHOOEDFN_TimeUp" => Some(Self::TimeUp),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Okdjoojeagf {
    AddServerBuff = 0,
    DelServerBuff = 1,
}
impl Okdjoojeagf {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::AddServerBuff => "OKDJOOJEAGF_AddServerBuff",
            Self::DelServerBuff => "OKDJOOJEAGF_DelServerBuff",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "OKDJOOJEAGF_AddServerBuff" => Some(Self::AddServerBuff),
            "OKDJOOJEAGF_DelServerBuff" => Some(Self::DelServerBuff),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Ioeoeimkmjd {
    PropChangeNone = 0,
    PropChangeStatueRecover = 1,
    PropChangeEnergyBall = 2,
    PropChangeAbility = 3,
    PropChangeLevelup = 4,
    PropChangeItem = 5,
    PropChangeAvatarCard = 6,
    PropChangeCityLevelup = 7,
    PropChangeAvatarUpgrade = 8,
    PropChangeAvatarPromote = 9,
    PropChangePlayerAddExp = 10,
    PropChangeFinishQuest = 11,
    PropChangeGm = 12,
    PropChangeManualAdjustWorldLevel = 13,
}
impl Ioeoeimkmjd {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::PropChangeNone => "IOEOEIMKMJD_PropChangeNone",
            Self::PropChangeStatueRecover => "IOEOEIMKMJD_PropChangeStatueRecover",
            Self::PropChangeEnergyBall => "IOEOEIMKMJD_PropChangeEnergyBall",
            Self::PropChangeAbility => "IOEOEIMKMJD_PropChangeAbility",
            Self::PropChangeLevelup => "IOEOEIMKMJD_PropChangeLevelup",
            Self::PropChangeItem => "IOEOEIMKMJD_PropChangeItem",
            Self::PropChangeAvatarCard => "IOEOEIMKMJD_PropChangeAvatarCard",
            Self::PropChangeCityLevelup => "IOEOEIMKMJD_PropChangeCityLevelup",
            Self::PropChangeAvatarUpgrade => "IOEOEIMKMJD_PropChangeAvatarUpgrade",
            Self::PropChangeAvatarPromote => "IOEOEIMKMJD_PropChangeAvatarPromote",
            Self::PropChangePlayerAddExp => "IOEOEIMKMJD_PropChangePlayerAddExp",
            Self::PropChangeFinishQuest => "IOEOEIMKMJD_PropChangeFinishQuest",
            Self::PropChangeGm => "IOEOEIMKMJD_PropChangeGm",
            Self::PropChangeManualAdjustWorldLevel => {
                "IOEOEIMKMJD_PropChangeManualAdjustWorldLevel"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "IOEOEIMKMJD_PropChangeNone" => Some(Self::PropChangeNone),
            "IOEOEIMKMJD_PropChangeStatueRecover" => Some(Self::PropChangeStatueRecover),
            "IOEOEIMKMJD_PropChangeEnergyBall" => Some(Self::PropChangeEnergyBall),
            "IOEOEIMKMJD_PropChangeAbility" => Some(Self::PropChangeAbility),
            "IOEOEIMKMJD_PropChangeLevelup" => Some(Self::PropChangeLevelup),
            "IOEOEIMKMJD_PropChangeItem" => Some(Self::PropChangeItem),
            "IOEOEIMKMJD_PropChangeAvatarCard" => Some(Self::PropChangeAvatarCard),
            "IOEOEIMKMJD_PropChangeCityLevelup" => Some(Self::PropChangeCityLevelup),
            "IOEOEIMKMJD_PropChangeAvatarUpgrade" => Some(Self::PropChangeAvatarUpgrade),
            "IOEOEIMKMJD_PropChangeAvatarPromote" => Some(Self::PropChangeAvatarPromote),
            "IOEOEIMKMJD_PropChangePlayerAddExp" => Some(Self::PropChangePlayerAddExp),
            "IOEOEIMKMJD_PropChangeFinishQuest" => Some(Self::PropChangeFinishQuest),
            "IOEOEIMKMJD_PropChangeGm" => Some(Self::PropChangeGm),
            "IOEOEIMKMJD_PropChangeManualAdjustWorldLevel" => {
                Some(Self::PropChangeManualAdjustWorldLevel)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Kaapgmmgpof {
    SalvagePreventStopNone = 0,
    SalvagePreventStopSuccess = 1,
    SalvagePreventStopArrival = 2,
    SalvagePreventStopInterrupt = 3,
    SalvagePreventStopLeave = 4,
    SalvagePreventStopFull = 5,
    SalvagePreventStopAway = 6,
}
impl Kaapgmmgpof {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::SalvagePreventStopNone => "KAAPGMMGPOF_SalvagePreventStopNone",
            Self::SalvagePreventStopSuccess => "KAAPGMMGPOF_SalvagePreventStopSuccess",
            Self::SalvagePreventStopArrival => "KAAPGMMGPOF_SalvagePreventStopArrival",
            Self::SalvagePreventStopInterrupt => {
                "KAAPGMMGPOF_SalvagePreventStopInterrupt"
            }
            Self::SalvagePreventStopLeave => "KAAPGMMGPOF_SalvagePreventStopLeave",
            Self::SalvagePreventStopFull => "KAAPGMMGPOF_SalvagePreventStopFull",
            Self::SalvagePreventStopAway => "KAAPGMMGPOF_SalvagePreventStopAway",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "KAAPGMMGPOF_SalvagePreventStopNone" => Some(Self::SalvagePreventStopNone),
            "KAAPGMMGPOF_SalvagePreventStopSuccess" => {
                Some(Self::SalvagePreventStopSuccess)
            }
            "KAAPGMMGPOF_SalvagePreventStopArrival" => {
                Some(Self::SalvagePreventStopArrival)
            }
            "KAAPGMMGPOF_SalvagePreventStopInterrupt" => {
                Some(Self::SalvagePreventStopInterrupt)
            }
            "KAAPGMMGPOF_SalvagePreventStopLeave" => Some(Self::SalvagePreventStopLeave),
            "KAAPGMMGPOF_SalvagePreventStopFull" => Some(Self::SalvagePreventStopFull),
            "KAAPGMMGPOF_SalvagePreventStopAway" => Some(Self::SalvagePreventStopAway),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Dfipjepbgpi {
    Close = 0,
    CondNotMeet = 1,
    CondMeet = 2,
    Accept = 3,
}
impl Dfipjepbgpi {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Close => "DFIPJEPBGPI_Close",
            Self::CondNotMeet => "DFIPJEPBGPI_CondNotMeet",
            Self::CondMeet => "DFIPJEPBGPI_CondMeet",
            Self::Accept => "DFIPJEPBGPI_Accept",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "DFIPJEPBGPI_Close" => Some(Self::Close),
            "DFIPJEPBGPI_CondNotMeet" => Some(Self::CondNotMeet),
            "DFIPJEPBGPI_CondMeet" => Some(Self::CondMeet),
            "DFIPJEPBGPI_Accept" => Some(Self::Accept),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Algfpdoaafa {
    DefaultValue = 0,
    Algfpdoaafa1 = 1,
    Algfpdoaafa2 = 2,
    Algfpdoaafa3 = 3,
}
impl Algfpdoaafa {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::DefaultValue => "ALGFPDOAAFA_DefaultValue",
            Self::Algfpdoaafa1 => "ALGFPDOAAFA__1",
            Self::Algfpdoaafa2 => "ALGFPDOAAFA__2",
            Self::Algfpdoaafa3 => "ALGFPDOAAFA__3",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "ALGFPDOAAFA_DefaultValue" => Some(Self::DefaultValue),
            "ALGFPDOAAFA__1" => Some(Self::Algfpdoaafa1),
            "ALGFPDOAAFA__2" => Some(Self::Algfpdoaafa2),
            "ALGFPDOAAFA__3" => Some(Self::Algfpdoaafa3),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Pmnjncleonj {
    None = 0,
    CreateConnect = 1,
    StartGame = 2,
    Ping = 3,
    FinishGame = 4,
    SnapShot = 5,
    Action = 6,
}
impl Pmnjncleonj {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "PMNJNCLEONJ_None",
            Self::CreateConnect => "PMNJNCLEONJ_CreateConnect",
            Self::StartGame => "PMNJNCLEONJ_StartGame",
            Self::Ping => "PMNJNCLEONJ_Ping",
            Self::FinishGame => "PMNJNCLEONJ_FinishGame",
            Self::SnapShot => "PMNJNCLEONJ_SnapShot",
            Self::Action => "PMNJNCLEONJ_Action",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "PMNJNCLEONJ_None" => Some(Self::None),
            "PMNJNCLEONJ_CreateConnect" => Some(Self::CreateConnect),
            "PMNJNCLEONJ_StartGame" => Some(Self::StartGame),
            "PMNJNCLEONJ_Ping" => Some(Self::Ping),
            "PMNJNCLEONJ_FinishGame" => Some(Self::FinishGame),
            "PMNJNCLEONJ_SnapShot" => Some(Self::SnapShot),
            "PMNJNCLEONJ_Action" => Some(Self::Action),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Cpfpaboolgk {
    None = 0,
    ReadySelectAvatar = 1,
    ReadySelectCard = 2,
    ReadyEnterFight = 3,
    AllFinish = 4,
}
impl Cpfpaboolgk {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "CPFPABOOLGK_None",
            Self::ReadySelectAvatar => "CPFPABOOLGK_ReadySelectAvatar",
            Self::ReadySelectCard => "CPFPABOOLGK_ReadySelectCard",
            Self::ReadyEnterFight => "CPFPABOOLGK_ReadyEnterFight",
            Self::AllFinish => "CPFPABOOLGK_AllFinish",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "CPFPABOOLGK_None" => Some(Self::None),
            "CPFPABOOLGK_ReadySelectAvatar" => Some(Self::ReadySelectAvatar),
            "CPFPABOOLGK_ReadySelectCard" => Some(Self::ReadySelectCard),
            "CPFPABOOLGK_ReadyEnterFight" => Some(Self::ReadyEnterFight),
            "CPFPABOOLGK_AllFinish" => Some(Self::AllFinish),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Pimmbidldcl {
    BrickBreakerStagePrepare = 0,
    BrickBreakerStagePick = 1,
    BrickBreakerStageGame = 2,
    BrickBreakerStagePlay = 3,
    BrickBreakerStageSettle = 4,
}
impl Pimmbidldcl {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::BrickBreakerStagePrepare => "PIMMBIDLDCL_BrickBreakerStagePrepare",
            Self::BrickBreakerStagePick => "PIMMBIDLDCL_BrickBreakerStagePick",
            Self::BrickBreakerStageGame => "PIMMBIDLDCL_BrickBreakerStageGame",
            Self::BrickBreakerStagePlay => "PIMMBIDLDCL_BrickBreakerStagePlay",
            Self::BrickBreakerStageSettle => "PIMMBIDLDCL_BrickBreakerStageSettle",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "PIMMBIDLDCL_BrickBreakerStagePrepare" => {
                Some(Self::BrickBreakerStagePrepare)
            }
            "PIMMBIDLDCL_BrickBreakerStagePick" => Some(Self::BrickBreakerStagePick),
            "PIMMBIDLDCL_BrickBreakerStageGame" => Some(Self::BrickBreakerStageGame),
            "PIMMBIDLDCL_BrickBreakerStagePlay" => Some(Self::BrickBreakerStagePlay),
            "PIMMBIDLDCL_BrickBreakerStageSettle" => Some(Self::BrickBreakerStageSettle),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Mihbpfkemje {
    RegionSearchNone = 0,
    RegionSearchUnstarted = 1,
    RegionSearchStarted = 2,
    RegionSearchWaitReward = 3,
    RegionSearchFinished = 4,
}
impl Mihbpfkemje {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::RegionSearchNone => "MIHBPFKEMJE_RegionSearchNone",
            Self::RegionSearchUnstarted => "MIHBPFKEMJE_RegionSearchUnstarted",
            Self::RegionSearchStarted => "MIHBPFKEMJE_RegionSearchStarted",
            Self::RegionSearchWaitReward => "MIHBPFKEMJE_RegionSearchWaitReward",
            Self::RegionSearchFinished => "MIHBPFKEMJE_RegionSearchFinished",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "MIHBPFKEMJE_RegionSearchNone" => Some(Self::RegionSearchNone),
            "MIHBPFKEMJE_RegionSearchUnstarted" => Some(Self::RegionSearchUnstarted),
            "MIHBPFKEMJE_RegionSearchStarted" => Some(Self::RegionSearchStarted),
            "MIHBPFKEMJE_RegionSearchWaitReward" => Some(Self::RegionSearchWaitReward),
            "MIHBPFKEMJE_RegionSearchFinished" => Some(Self::RegionSearchFinished),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Bblamelipgm {
    QuitFocusDefault = 0,
    QuitFocusMutual = 1,
}
impl Bblamelipgm {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::QuitFocusDefault => "BBLAMELIPGM_QuitFocusDefault",
            Self::QuitFocusMutual => "BBLAMELIPGM_QuitFocusMutual",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "BBLAMELIPGM_QuitFocusDefault" => Some(Self::QuitFocusDefault),
            "BBLAMELIPGM_QuitFocusMutual" => Some(Self::QuitFocusMutual),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Hlplmkkognk {
    UgcRecParamTypeNone = 0,
    UgcRecParamTypeMusicNoteLarge = 1,
    UgcRecParamTypeMusicNoteLessEqual = 2,
    UgcRecParamTypeMusicNoteTag = 3,
    UgcRecParamTypeMusicName = 4,
}
impl Hlplmkkognk {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::UgcRecParamTypeNone => "HLPLMKKOGNK_UgcRecParamTypeNone",
            Self::UgcRecParamTypeMusicNoteLarge => {
                "HLPLMKKOGNK_UgcRecParamTypeMusicNoteLarge"
            }
            Self::UgcRecParamTypeMusicNoteLessEqual => {
                "HLPLMKKOGNK_UgcRecParamTypeMusicNoteLessEqual"
            }
            Self::UgcRecParamTypeMusicNoteTag => {
                "HLPLMKKOGNK_UgcRecParamTypeMusicNoteTag"
            }
            Self::UgcRecParamTypeMusicName => "HLPLMKKOGNK_UgcRecParamTypeMusicName",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "HLPLMKKOGNK_UgcRecParamTypeNone" => Some(Self::UgcRecParamTypeNone),
            "HLPLMKKOGNK_UgcRecParamTypeMusicNoteLarge" => {
                Some(Self::UgcRecParamTypeMusicNoteLarge)
            }
            "HLPLMKKOGNK_UgcRecParamTypeMusicNoteLessEqual" => {
                Some(Self::UgcRecParamTypeMusicNoteLessEqual)
            }
            "HLPLMKKOGNK_UgcRecParamTypeMusicNoteTag" => {
                Some(Self::UgcRecParamTypeMusicNoteTag)
            }
            "HLPLMKKOGNK_UgcRecParamTypeMusicName" => {
                Some(Self::UgcRecParamTypeMusicName)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Nbpleololnc {
    ClientInputNone = 0,
    ClientInputKeybordMouse = 1,
    ClientInputGamepad = 2,
    ClientInputTouchPanel = 3,
}
impl Nbpleololnc {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::ClientInputNone => "NBPLEOLOLNC_ClientInputNone",
            Self::ClientInputKeybordMouse => "NBPLEOLOLNC_ClientInputKeybordMouse",
            Self::ClientInputGamepad => "NBPLEOLOLNC_ClientInputGamepad",
            Self::ClientInputTouchPanel => "NBPLEOLOLNC_ClientInputTouchPanel",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "NBPLEOLOLNC_ClientInputNone" => Some(Self::ClientInputNone),
            "NBPLEOLOLNC_ClientInputKeybordMouse" => Some(Self::ClientInputKeybordMouse),
            "NBPLEOLOLNC_ClientInputGamepad" => Some(Self::ClientInputGamepad),
            "NBPLEOLOLNC_ClientInputTouchPanel" => Some(Self::ClientInputTouchPanel),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Kdpdiddopii {
    None = 0,
    Finish = 1,
    PreStart = 2,
    Start = 3,
}
impl Kdpdiddopii {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "KDPDIDDOPII_None",
            Self::Finish => "KDPDIDDOPII_Finish",
            Self::PreStart => "KDPDIDDOPII_PreStart",
            Self::Start => "KDPDIDDOPII_Start",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "KDPDIDDOPII_None" => Some(Self::None),
            "KDPDIDDOPII_Finish" => Some(Self::Finish),
            "KDPDIDDOPII_PreStart" => Some(Self::PreStart),
            "KDPDIDDOPII_Start" => Some(Self::Start),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Pacjkiolaoh {
    None = 0,
    Transculent = 1,
}
impl Pacjkiolaoh {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "PACJKIOLAOH_None",
            Self::Transculent => "PACJKIOLAOH_Transculent",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "PACJKIOLAOH_None" => Some(Self::None),
            "PACJKIOLAOH_Transculent" => Some(Self::Transculent),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Oamhihbhikn {
    None = 0,
    Init = 1,
    LevelReward = 2,
    CardCost = 3,
    ChanceEffect = 4,
    Gm = 5,
    BonusRebate = 6,
}
impl Oamhihbhikn {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "OAMHIHBHIKN_None",
            Self::Init => "OAMHIHBHIKN_Init",
            Self::LevelReward => "OAMHIHBHIKN_LevelReward",
            Self::CardCost => "OAMHIHBHIKN_CardCost",
            Self::ChanceEffect => "OAMHIHBHIKN_ChanceEffect",
            Self::Gm => "OAMHIHBHIKN_Gm",
            Self::BonusRebate => "OAMHIHBHIKN_BonusRebate",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "OAMHIHBHIKN_None" => Some(Self::None),
            "OAMHIHBHIKN_Init" => Some(Self::Init),
            "OAMHIHBHIKN_LevelReward" => Some(Self::LevelReward),
            "OAMHIHBHIKN_CardCost" => Some(Self::CardCost),
            "OAMHIHBHIKN_ChanceEffect" => Some(Self::ChanceEffect),
            "OAMHIHBHIKN_Gm" => Some(Self::Gm),
            "OAMHIHBHIKN_BonusRebate" => Some(Self::BonusRebate),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Obbkcbakkgh {
    FireworksReformParamNone = 0,
    FireworksReformParamColor = 1,
    FireworksReformParamHeight = 2,
    FireworksReformParamSize = 3,
    FireworksReformParamDensity = 4,
    FireworksReformParamRotation = 5,
}
impl Obbkcbakkgh {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::FireworksReformParamNone => "OBBKCBAKKGH_FireworksReformParamNone",
            Self::FireworksReformParamColor => "OBBKCBAKKGH_FireworksReformParamColor",
            Self::FireworksReformParamHeight => "OBBKCBAKKGH_FireworksReformParamHeight",
            Self::FireworksReformParamSize => "OBBKCBAKKGH_FireworksReformParamSize",
            Self::FireworksReformParamDensity => {
                "OBBKCBAKKGH_FireworksReformParamDensity"
            }
            Self::FireworksReformParamRotation => {
                "OBBKCBAKKGH_FireworksReformParamRotation"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "OBBKCBAKKGH_FireworksReformParamNone" => {
                Some(Self::FireworksReformParamNone)
            }
            "OBBKCBAKKGH_FireworksReformParamColor" => {
                Some(Self::FireworksReformParamColor)
            }
            "OBBKCBAKKGH_FireworksReformParamHeight" => {
                Some(Self::FireworksReformParamHeight)
            }
            "OBBKCBAKKGH_FireworksReformParamSize" => {
                Some(Self::FireworksReformParamSize)
            }
            "OBBKCBAKKGH_FireworksReformParamDensity" => {
                Some(Self::FireworksReformParamDensity)
            }
            "OBBKCBAKKGH_FireworksReformParamRotation" => {
                Some(Self::FireworksReformParamRotation)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Hpiimheogni {
    EffigyChallengeV4RestartEndReasonNone = 0,
    EffigyChallengeV4RestartEndReasonTimeout = 1,
    EffigyChallengeV4RestartEndReasonReject = 2,
}
impl Hpiimheogni {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::EffigyChallengeV4RestartEndReasonNone => {
                "HPIIMHEOGNI_EffigyChallengeV4RestartEndReasonNone"
            }
            Self::EffigyChallengeV4RestartEndReasonTimeout => {
                "HPIIMHEOGNI_EffigyChallengeV4RestartEndReasonTimeout"
            }
            Self::EffigyChallengeV4RestartEndReasonReject => {
                "HPIIMHEOGNI_EffigyChallengeV4RestartEndReasonReject"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "HPIIMHEOGNI_EffigyChallengeV4RestartEndReasonNone" => {
                Some(Self::EffigyChallengeV4RestartEndReasonNone)
            }
            "HPIIMHEOGNI_EffigyChallengeV4RestartEndReasonTimeout" => {
                Some(Self::EffigyChallengeV4RestartEndReasonTimeout)
            }
            "HPIIMHEOGNI_EffigyChallengeV4RestartEndReasonReject" => {
                Some(Self::EffigyChallengeV4RestartEndReasonReject)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Dmajhdnkedi {
    None = 0,
    Success = 1,
    Failed = 2,
    Draw = 3,
}
impl Dmajhdnkedi {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "DMAJHDNKEDI_None",
            Self::Success => "DMAJHDNKEDI_Success",
            Self::Failed => "DMAJHDNKEDI_Failed",
            Self::Draw => "DMAJHDNKEDI_Draw",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "DMAJHDNKEDI_None" => Some(Self::None),
            "DMAJHDNKEDI_Success" => Some(Self::Success),
            "DMAJHDNKEDI_Failed" => Some(Self::Failed),
            "DMAJHDNKEDI_Draw" => Some(Self::Draw),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Fbkkieljbgm {
    Invalid = 0,
    Enter = 1,
    Leave = 2,
}
impl Fbkkieljbgm {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Invalid => "FBKKIELJBGM_Invalid",
            Self::Enter => "FBKKIELJBGM_Enter",
            Self::Leave => "FBKKIELJBGM_Leave",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "FBKKIELJBGM_Invalid" => Some(Self::Invalid),
            "FBKKIELJBGM_Enter" => Some(Self::Enter),
            "FBKKIELJBGM_Leave" => Some(Self::Leave),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Molekljmakd {
    None = 0,
    OceanCurrent = 1,
}
impl Molekljmakd {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::None => "MOLEKLJMAKD_None",
            Self::OceanCurrent => "MOLEKLJMAKD_OceanCurrent",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "MOLEKLJMAKD_None" => Some(Self::None),
            "MOLEKLJMAKD_OceanCurrent" => Some(Self::OceanCurrent),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Jelhpplflpk {
    MarkTipsDungeonElementTrial = 0,
}
impl Jelhpplflpk {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::MarkTipsDungeonElementTrial => {
                "JELHPPLFLPK_MarkTipsDungeonElementTrial"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "JELHPPLFLPK_MarkTipsDungeonElementTrial" => {
                Some(Self::MarkTipsDungeonElementTrial)
            }
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Gflaagcbngm {
    VersionNone = 0,
    V50 = 1,
}
impl Gflaagcbngm {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::VersionNone => "GFLAAGCBNGM_VersionNone",
            Self::V50 => "GFLAAGCBNGM_V50",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "GFLAAGCBNGM_VersionNone" => Some(Self::VersionNone),
            "GFLAAGCBNGM_V50" => Some(Self::V50),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum MovingPlatformType {
    MovingPlatformNone = 0,
    MovingPlatformUseConfig = 1,
    MovingPlatformAbility = 2,
    MovingPlatformRoute = 3,
}
impl MovingPlatformType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::MovingPlatformNone => "MovingPlatformType_MovingPlatformNone",
            Self::MovingPlatformUseConfig => "MovingPlatformType_MovingPlatformUseConfig",
            Self::MovingPlatformAbility => "MovingPlatformType_MovingPlatformAbility",
            Self::MovingPlatformRoute => "MovingPlatformType_MovingPlatformRoute",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "MovingPlatformType_MovingPlatformNone" => Some(Self::MovingPlatformNone),
            "MovingPlatformType_MovingPlatformUseConfig" => {
                Some(Self::MovingPlatformUseConfig)
            }
            "MovingPlatformType_MovingPlatformAbility" => {
                Some(Self::MovingPlatformAbility)
            }
            "MovingPlatformType_MovingPlatformRoute" => Some(Self::MovingPlatformRoute),
            _ => None,
        }
    }
}
#[derive(sakura_proto_derive::CmdID)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Okacifdimde {
    SalvageEscortStopNone = 0,
    SalvageEscortStopSuccess = 1,
    SalvageEscortStopDump = 2,
    SalvageEscortStopTime = 3,
    SalvageEscortStopInterrupt = 4,
    SalvageEscortStopLeave = 5,
    SalvageEscortStopFull = 6,
}
impl Okacifdimde {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::SalvageEscortStopNone => "OKACIFDIMDE_SalvageEscortStopNone",
            Self::SalvageEscortStopSuccess => "OKACIFDIMDE_SalvageEscortStopSuccess",
            Self::SalvageEscortStopDump => "OKACIFDIMDE_SalvageEscortStopDump",
            Self::SalvageEscortStopTime => "OKACIFDIMDE_SalvageEscortStopTime",
            Self::SalvageEscortStopInterrupt => "OKACIFDIMDE_SalvageEscortStopInterrupt",
            Self::SalvageEscortStopLeave => "OKACIFDIMDE_SalvageEscortStopLeave",
            Self::SalvageEscortStopFull => "OKACIFDIMDE_SalvageEscortStopFull",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "OKACIFDIMDE_SalvageEscortStopNone" => Some(Self::SalvageEscortStopNone),
            "OKACIFDIMDE_SalvageEscortStopSuccess" => {
                Some(Self::SalvageEscortStopSuccess)
            }
            "OKACIFDIMDE_SalvageEscortStopDump" => Some(Self::SalvageEscortStopDump),
            "OKACIFDIMDE_SalvageEscortStopTime" => Some(Self::SalvageEscortStopTime),
            "OKACIFDIMDE_SalvageEscortStopInterrupt" => {
                Some(Self::SalvageEscortStopInterrupt)
            }
            "OKACIFDIMDE_SalvageEscortStopLeave" => Some(Self::SalvageEscortStopLeave),
            "OKACIFDIMDE_SalvageEscortStopFull" => Some(Self::SalvageEscortStopFull),
            _ => None,
        }
    }
}